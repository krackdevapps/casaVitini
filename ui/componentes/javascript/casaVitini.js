const casaVitini = {
    shell: {
        navegacion: {
            navegacionInversa: async (e) => {
                let zona = (history.state)?.zona
                const tipoCambio = (history.state)?.tipoCambio || "parcial"
                const urlActual = window.location.pathname;

                if (tipoCambio === "total") {
                    zona = zona ? zona : "portada"
                    const entrada = {
                        vista: zona,
                        tipoOrigen: "historial",
                        controladorHistorial: "origen"
                    }
                    return casaVitini.shell.navegacion.controladorVista(entrada)
                }
                if (tipoCambio === "parcial") {



                    const componenteExistente = history.state?.componenteExistente


                    const funcionPersonalizada = history.state?.funcionPersonalizada
                    const datosPaginacion = history.state?.datosPaginacion
                    const entrada = {
                        zona: zona,
                        componenteExistente: componenteExistente,
                        funcionPersonalizada: funcionPersonalizada,
                        datosPaginacion: datosPaginacion
                    }

                    return casaVitini.shell.navegacion.controladorCambioPersonalizado(entrada)
                }
            },
            cambiarVista: (vistaMenu) => {
                if (vistaMenu.button === 0) { // 0 es el botón izquierdo, 1 es el botón central
                    vistaMenu.preventDefault()
                    vistaMenu.stopPropagation()
                    const vista = vistaMenu.target.closest("[vista]").getAttribute("vista")

                    return casaVitini.shell.navegacion.controladorVista({
                        vista: vista,
                        tipoOrigen: "menuNavegador",
                        objetoOrigen: vistaMenu
                    })
                }
            },
            controladorVista: async (entrada) => {
                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                document.querySelector("main").setAttribute("instanciaUID", instanciaUID)
                const main = document.querySelector("main")
                const objetoOrigen = entrada.objetoOrigen?.target


                if (objetoOrigen?.getAttribute("tipoMenu") === "volatil") {
                    const zonaUI = objetoOrigen.getAttribute("zona")
                    document.querySelectorAll("[tipoMenu=volatil]").forEach((menu) => {
                        menu.removeAttribute("style")
                    })
                    document
                        .querySelector("#navegadorResponsivo")
                        .querySelector(`[zona="${zonaUI}"]`)
                        .style.background = "rgba(0, 0, 0, 0.1)"
                    const selectorMenuGlobalFlotanteRenderizado = document.querySelector("[componente=menuGlobalFlotante]")
                    if (selectorMenuGlobalFlotanteRenderizado) {
                        selectorMenuGlobalFlotanteRenderizado.remove()
                    }
                }
                casaVitini.shell.controladoresUI.ocultaMenuGlobalFlotante(entrada)

                main.style.transition = "opacity 0s linear"
                main.style.opacity = "0"
                main.style.pointerEvents = "none"

                const selectorPantallaCargaRenderizda = document.querySelector("[ui=pantallaDeCarga]")
                if (!selectorPantallaCargaRenderizda) {
                    const pantallaCarga = document.createElement("div")
                    pantallaCarga.setAttribute("ui", "pantallaDeCarga")
                    const spinnerSimple = casaVitini.ui.componentes.spinnerSimple()
                    pantallaCarga.appendChild(spinnerSimple)
                    document.body.appendChild(pantallaCarga)
                }
                await casaVitini.utilidades.ralentizador(500)
                const selectorAdvertenciasInmersivas = document.querySelectorAll("[componente=errorUI], [componente=menuVolatil]")
                selectorAdvertenciasInmersivas.forEach((advertenciaInmersivaRenderizada) => {
                    advertenciaInmersivaRenderizada.remove()
                })
                const selectorCalendarioRenderizados = document.querySelectorAll("[contenedor=calendario]")
                selectorCalendarioRenderizados.forEach((calendarioRenderizado) => {
                    calendarioRenderizado.remove()
                })
                let tipoEntrada = typeof entrada
                let vista
                if (tipoEntrada === "string") {
                    vista = entrada
                }
                let tipoOrigen;
                if (tipoEntrada === "object") {
                    vista = entrada.vista === "/" ? "portada" : entrada.vista
                    tipoOrigen = entrada.tipoOrigen
                    controladorHistorial = entrada.controladorHistorial
                    etapa = entrada.etapa
                    // Zona = Entrada.Zona
                }
                let vistaActual = document.getElementById("uiNavegacion").getAttribute("vistaActual")
                let url = window.location.pathname.split("/");
                delete url[0]
                delete url[1]
                delete url[2]
                url = url.filter((url) => url)
                if (vista === "portada") {
                    document.querySelectorAll("[zona]").forEach(zona => {
                        zona.removeAttribute("style")
                    });
                }
                const controladorResposnivo = window.matchMedia("(max-width: 720px)").matches
                if (controladorResposnivo) {
                    window.removeEventListener("touchstart", casaVitini.shell.controladoresUI.restaurarMenu)
                    window.removeEventListener("click", casaVitini.shell.controladoresUI.restaurarMenu)
                    window.removeEventListener("scroll", casaVitini.shell.controladoresUI.restaurarMenu)
                    document.getElementById("navegadorResponsivo").style.display = ""
                }
                const transaccion = {
                    zona: "componentes/cambiarVista",
                    vista: vista
                }
                const privacidad = casaVitini.componentes.privacidad.arranque(vista)
                if (privacidad) {
                    transaccion.vista = "politicas/privacidad"
                }
                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                const contenedorVista = document.querySelector(`main[instanciaUID="${instanciaUID}"]`)
                if (!contenedorVista || !respuestaServidor) {
                    return
                }
                casaVitini.ui.vistas.conozcanos.instanciasTemporales.parallaxControlador?.destroy()
                window.removeEventListener("resize", casaVitini.ui.vistas.conozcanos.instanciasTemporales.parallaxControlador?.resizeIsDone);
                window.removeEventListener('scroll', casaVitini.ui.vistas.conozcanos.scrollHandler);
                window.removeEventListener('scroll', casaVitini.ui.vistas.conozcanos.controladorIconoMouse);
                window.removeEventListener("resize", casaVitini.shell.controladoresUI.controlHorizotnalVetana)
                screen.orientation?.removeEventListener("change", casaVitini.shell.controladoresUI.ocultarMenusVolatiles);

                const selectorPantallaCargaRenderizdaPostPeticion = document.querySelector("[ui=pantallaDeCarga]")
                main.removeAttribute("rama")
                if (respuestaServidor?.error) {
                    casaVitini.shell.controladoresUI.limpiarMain()
                    contenedorVista.removeAttribute("rama")
                    await casaVitini.shell.controladoresUI.controladorEstadoIDX()
                    contenedorVista.innerHTML = null
                    casaVitini.shell.controladoresUI.eliminarTodasLasPropiedadesCSSMenosUna(["opacity", "transition"])
                    document.querySelectorAll("html, #uiLogo, body, header, [componente=contenedorMenu], #botonMenuResponsivo")
                        .forEach((elementoReseteo) => {
                            elementoReseteo.removeAttribute("style")
                        })
                    main.removeAttribute("zonaCSS")
                    main.removeAttribute("ui")
                    const marcoError = document.createElement("div")
                    marcoError.classList.add("plaza_marcoError_seccion")
                    marcoError.innerText = respuestaServidor.error
                    contenedorVista.appendChild(marcoError)
                    main.removeAttribute("style")

                } else if (respuestaServidor?.ok) {
                    const zona = respuestaServidor?.zona
                    document.querySelectorAll("html, #uiLogo, body, header, [componente=contenedorMenu], #botonMenuResponsivo")
                        .forEach((elementoReseteo) => {
                            elementoReseteo.removeAttribute("style")
                        })

                    document.documentElement.scrollTop = 0;
                    const codigo = respuestaServidor.ok
                    contenedorVista.innerHTML = null
                    contenedorVista.setAttribute("rama", zona)
                    main.removeAttribute("zonaCSS")
                    main.removeAttribute("ui")
                    await casaVitini.shell.controladoresUI.controladorEstadoIDX()
                    casaVitini.shell.controladoresUI.eliminarTodasLasPropiedadesCSSMenosUna(["opacity", "transition"])
                    let urlVista = respuestaServidor.url
                    if (privacidad) {
                        urlVista = vista === "portada" ? "/" : vista;
                    }
                    urlVista = urlVista === "/portada" ? "/" : urlVista;
                    urlVista = decodeURIComponent(urlVista);
                    const titulo = 'Casa Vitini';
                    let controladorUrl;
                    if (vistaActual?.toLowerCase() === vista?.toLowerCase()) {
                        controladorUrl = "soloActualiza"
                    }
                    document.getElementById("uiNavegacion").setAttribute("vistaActual", vista)
                    vistaActual = vista === "portada" ? "" : vista;
                    const estado = {
                        zona: vistaActual,
                        estadoInternoZona: "estado",
                        tipoCambio: "total"
                    }
                    if (tipoOrigen === "menuNavegador" && !controladorUrl) {
                        window.history.pushState(estado, titulo, urlVista);
                    } else if (controladorUrl === "soloActualiza") {
                        window.history.replaceState(estado, titulo, urlVista);
                    } else if (!tipoOrigen && !controladorUrl) {
                        window.history.replaceState(estado, titulo, urlVista);
                    } else if (tipoOrigen === "historial" && !controladorUrl) {
                        //  window.history.replaceState(Estado, Titulo, URLVista);
                        //  
                    }
                    const granuladorURL = casaVitini.utilidades.granuladorURL()
                    const directoriosFusion = granuladorURL.directoriosFusion
                    contenedorVista.setAttribute("zonaCSS", directoriosFusion)
                    document.body.style.transition = "background 500ms linear"
                    contenedorVista.innerHTML = codigo
                    const arranqueVistaPublica = contenedorVista?.querySelector("arranque")?.getAttribute("publico")
                    const arranqueVistaAdministrativa = contenedorVista?.querySelector("arranque")?.getAttribute("administracion")

                    if (arranqueVistaPublica) {
                        const x = "casaVitini.ui.vistas." + arranqueVistaPublica + "()"
                        await eval(x)
                    } else if (arranqueVistaAdministrativa) {
                        const x = "casaVitini?.administracion?." + arranqueVistaAdministrativa + "()"
                        await eval(x)
                    }
                    selectorPantallaCargaRenderizdaPostPeticion?.remove()

                    main.style.transition = "opacity 500ms linear"
                    main.style.opacity = "1"
                }
            },
            controladorCambioPersonalizado: (metadatos) => {


                const componenteExistente = metadatos.componenteExistente


                const componente = document.querySelector(`[componente="${componenteExistente}"]`)

                if (componente) {
                    const funcionPersonalizada = metadatos.funcionPersonalizada
                    if (eval("typeof " + funcionPersonalizada) === "function") {
                        let datosPaginacion = metadatos.datosPaginacion
                        if (datosPaginacion) {
                            // Mucho ojo! Si los datos provienen de paginacion o de otro sitio, como el controlador de categorias globales de los detallesUI de la reserva
                            const instanciaUID = document.querySelector("main").getAttribute("instanciaUID")
                            metadatos.datosPaginacion.instanciaUID = instanciaUID
                            datosPaginacion = JSON.stringify(datosPaginacion)
                            eval(funcionPersonalizada + "(" + datosPaginacion + ");")
                        } else {
                            // Los datos viene sin la llave datosPaginacion por que el objeto no se ha guardado con un paginador.
                            eval(funcionPersonalizada + "();")
                        }

                    }
                } else {
                    const zona = metadatos.zona
                    const entrada = {
                        vista: zona,
                        tipoOrigen: "historial",
                        controladorHistorial: "origen"
                    }
                    return casaVitini.shell.navegacion.controladorVista(entrada)
                }
            },
            sobreControlMenuGlobal: () => {

                const menu = document.querySelector("header").querySelector("[componente=contenedorMenu]")

                const usuarioActual = menu.querySelector("[bloqueID=usuario]").innerHTML.slice(1)
                const menuActual = menu.querySelector("[menuID]")?.getAttribute("menuID")
                const menuFinal = (menuID) => {
                    if (menuID === "panelControl") {
                        menu.setAttribute("sobreControl", "activado")
                        return "publico"
                    } else if (menuID === "publico") {
                        menu.removeAttribute("sobreControl")
                        return "panelControl"
                    }
                }

                casaVitini.shell.navegacion.controladorNavegacion({
                    tipo: menuFinal(menuActual),
                    usuario: usuarioActual,
                    estadoIDV: "conectado",
                    origen: "sobreControl"
                })
            },
            controladorNavegacion: function (navegacion) {
                const panelNavegacion = document.getElementById("navegadorResponsivo")
                const menuRenderizado = panelNavegacion.getAttribute("menuID")
                let tipoBarraNavegacion = navegacion.tipo
                const menu = document.querySelector("header").querySelector("[componente=contenedorMenu]")
                const sobreControlEstado = menu.getAttribute("sobreControl")
                const estadoIDV = navegacion.estadoIDV
                const usuario = navegacion.usuario
                const zonaActual = document.querySelector("main").getAttribute("rama")
                const rolIDV = navegacion.rolIDV
                const origen = navegacion.origen
                const menuActual = menu.querySelector("[menuID]")?.getAttribute("menuID")

                if (estadoIDV === "desconectado" || rolIDV === "cliente") {
                    menu.removeAttribute("sobreControl")
                    menu.querySelector("[componente=iconoSobreControlPublico]")?.remove()
                    menu.querySelector("[componente=sobreControl]")?.remove()

                }

                if (origen === "controlador" && sobreControlEstado === "activado") {
                    tipoBarraNavegacion = menuActual
                }

                const limpiarMenus = () => {
                    document.querySelectorAll("[tipoMenu=volatil]").forEach((menuVolatil) => {
                        menuVolatil.remove()
                    })
                }


                if (tipoBarraNavegacion === "panelControl" && menuRenderizado !== tipoBarraNavegacion) {
                    panelNavegacion.setAttribute("menuID", tipoBarraNavegacion)
                    limpiarMenus();

                    const contenedorEsferaFlotanteUI = document.createElement("a")
                    contenedorEsferaFlotanteUI.classList.add("esferaUI_flotante")
                    contenedorEsferaFlotanteUI.setAttribute("tipoMenu", "volatil")
                    contenedorEsferaFlotanteUI.setAttribute("componente", "sobreControl")
                    contenedorEsferaFlotanteUI.setAttribute("controlFlotante", "cancelar")
                    contenedorEsferaFlotanteUI.addEventListener("click", this.sobreControlMenuGlobal)
                    panelNavegacion.appendChild(contenedorEsferaFlotanteUI);


                    const bloqueAdministracion = document.createElement("a")
                    bloqueAdministracion.setAttribute("href", "/administracion")
                    bloqueAdministracion.setAttribute("class", "uiCategoria")
                    bloqueAdministracion.setAttribute("tipoMenu", "volatil")
                    bloqueAdministracion.setAttribute("vista", "/administracion")
                    bloqueAdministracion.setAttribute("zona", "administracion")
                    bloqueAdministracion.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueAdministracion.innerText = "Administración"
                    const bloqueSituacion = document.createElement("a")
                    bloqueSituacion.setAttribute("href", "/administracion/situacion")
                    bloqueSituacion.setAttribute("class", "uiCategoria")
                    bloqueSituacion.setAttribute("tipoMenu", "volatil")
                    bloqueSituacion.setAttribute("vista", "/administracion/situacion")
                    bloqueSituacion.setAttribute("zona", "situacion")
                    bloqueSituacion.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueSituacion.innerText = "Situación"
                    const bloqueCalendario = document.createElement("a")
                    bloqueCalendario.setAttribute("href", "/administracion/calendario")
                    bloqueCalendario.setAttribute("class", "uiCategoria")
                    bloqueCalendario.setAttribute("tipoMenu", "volatil")
                    bloqueCalendario.setAttribute("vista", "/administracion/calendario")
                    bloqueCalendario.setAttribute("zona", "calendario")
                    bloqueCalendario.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueCalendario.innerText = "Calendario"
                    const bloqueReservas = document.createElement("a")
                    bloqueReservas.setAttribute("href", "/administracion/reservas")
                    bloqueReservas.setAttribute("class", "uiCategoria")
                    bloqueReservas.setAttribute("tipoMenu", "volatil")
                    bloqueReservas.setAttribute("vista", "/administracion/reservas")
                    bloqueReservas.setAttribute("zona", "reservas")
                    bloqueReservas.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueReservas.innerText = "Reservas"
                    const bloqueClientes = document.createElement("a")
                    bloqueClientes.setAttribute("href", "/administracion/clientes")
                    bloqueClientes.setAttribute("class", "uiCategoria")
                    bloqueClientes.setAttribute("tipoMenu", "volatil")
                    bloqueClientes.setAttribute("vista", "/administracion/clientes")
                    bloqueClientes.setAttribute("zona", "clientes")
                    bloqueClientes.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueClientes.innerText = "Clientes"
                    const contenedorEsferaUI = document.createElement("a")
                    contenedorEsferaUI.classList.add("esferaUI")
                    contenedorEsferaUI.setAttribute("tipoMenu", "volatil")
                    contenedorEsferaUI.addEventListener("click", this.sobreControlMenuGlobal)

                    const bloqueusuario = document.createElement("a")
                    bloqueusuario.setAttribute("href", "/micasa")
                    bloqueusuario.classList.add("uiCategoria", "elipsisIDX")
                    bloqueusuario.setAttribute("bloqueID", "usuario")
                    bloqueusuario.setAttribute("tipoMenu", "volatil")
                    bloqueusuario.setAttribute("vista", "/micasa")
                    bloqueusuario.setAttribute("zona", "micasa")
                    bloqueusuario.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueusuario.innerText = "@" + usuario
                    panelNavegacion.appendChild(bloqueAdministracion);
                    panelNavegacion.appendChild(bloqueSituacion);
                    panelNavegacion.appendChild(bloqueCalendario);
                    panelNavegacion.appendChild(bloqueReservas);
                    panelNavegacion.appendChild(bloqueClientes);
                    panelNavegacion.appendChild(contenedorEsferaUI);
                    panelNavegacion.appendChild(bloqueusuario);
                    panelNavegacion.style['-webkit-backdrop-filter'] = 'blur(51px)';
                } else if (tipoBarraNavegacion === "publico" && menuRenderizado !== tipoBarraNavegacion) {
                    panelNavegacion.setAttribute("menuID", tipoBarraNavegacion)
                    limpiarMenus();

                    const contenedorEsferaFlotanteUI = document.createElement("a")
                    contenedorEsferaFlotanteUI.classList.add("esferaUI_flotante")
                    contenedorEsferaFlotanteUI.setAttribute("tipoMenu", "volatil")
                    contenedorEsferaFlotanteUI.setAttribute("componente", "sobreControl")
                    contenedorEsferaFlotanteUI.setAttribute("controlFlotante", "cancelar")
                    contenedorEsferaFlotanteUI.addEventListener("click", this.sobreControlMenuGlobal)
                    if (sobreControlEstado === "activado") {
                        panelNavegacion.appendChild(contenedorEsferaFlotanteUI);
                    }

                    const bloqueAlojamiento = document.createElement("a")
                    bloqueAlojamiento.setAttribute("href", "/alojamiento")
                    bloqueAlojamiento.setAttribute("class", "uiCategoria")
                    bloqueAlojamiento.setAttribute("tipoMenu", "volatil")
                    bloqueAlojamiento.setAttribute("vista", "/alojamiento")
                    bloqueAlojamiento.setAttribute("zona", "alojamiento")
                    bloqueAlojamiento.innerText = "Alojamiento"
                    bloqueAlojamiento.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    const bloqueReservas = document.createElement("a")
                    bloqueReservas.setAttribute("href", "/reservas")
                    bloqueReservas.setAttribute("class", "uiCategoria")
                    bloqueReservas.setAttribute("tipoMenu", "volatil")
                    bloqueReservas.setAttribute("vista", "/reservas")
                    bloqueReservas.setAttribute("zona", "reservas")
                    bloqueReservas.innerText = "Reservas"
                    bloqueReservas.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    const bloqueConozcanos = document.createElement("a")
                    bloqueConozcanos.setAttribute("href", "/conozcanos")
                    bloqueConozcanos.setAttribute("class", "uiCategoria")
                    bloqueConozcanos.setAttribute("tipoMenu", "volatil")
                    bloqueConozcanos.setAttribute("vista", "/conozcanos")
                    bloqueConozcanos.setAttribute("zona", "conozcanos")
                    bloqueConozcanos.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueConozcanos.innerText = "Conózcanos"
                    const bloqueInstalaciones = document.createElement("a")
                    bloqueInstalaciones.setAttribute("href", "/instalaciones")
                    bloqueInstalaciones.setAttribute("class", "uiCategoria")
                    bloqueInstalaciones.setAttribute("tipoMenu", "volatil")
                    bloqueInstalaciones.setAttribute("vista", "/instalaciones")
                    bloqueInstalaciones.setAttribute("zona", "instalaciones")
                    bloqueInstalaciones.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueInstalaciones.innerText = "Instalaciones"
                    const bloqueContacto = document.createElement("a")
                    bloqueContacto.setAttribute("href", "/contacto")
                    bloqueContacto.setAttribute("class", "uiCategoria")
                    bloqueContacto.setAttribute("tipoMenu", "volatil")
                    bloqueContacto.setAttribute("vista", "/contacto")
                    bloqueContacto.setAttribute("zona", "contacto")
                    bloqueContacto.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueContacto.innerText = "Contacto"

                    const contenedorEsferaUI = document.createElement("a")
                    contenedorEsferaUI.classList.add("esferaUI")
                    contenedorEsferaUI.setAttribute("tipoMenu", "volatil")
                    contenedorEsferaUI.setAttribute("controlFlotante", "cancelar")
                    contenedorEsferaUI.setAttribute("componente", "iconoSobreControlPublico")
                    contenedorEsferaUI.addEventListener("click", this.sobreControlMenuGlobal)

                    const bloqueusuario = document.createElement("a")
                    bloqueusuario.setAttribute("href", "/micasa")
                    bloqueusuario.classList.add("uiCategoria", "elipsisIDX")
                    bloqueusuario.setAttribute("bloqueID", "usuario")
                    bloqueusuario.setAttribute("tipoMenu", "volatil")
                    bloqueusuario.setAttribute("vista", "/micasa")
                    bloqueusuario.setAttribute("zona", "micasa")
                    bloqueusuario.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    bloqueusuario.innerText = usuario ? "@" + usuario : "MiCasa"
                    panelNavegacion.appendChild(bloqueAlojamiento);
                    panelNavegacion.appendChild(bloqueConozcanos);
                    panelNavegacion.appendChild(bloqueInstalaciones);
                    panelNavegacion.appendChild(bloqueContacto);
                    if (sobreControlEstado === "activado") {
                        panelNavegacion.appendChild(contenedorEsferaUI);
                    }
                    panelNavegacion.appendChild(bloqueusuario);
                    panelNavegacion.style['-webkit-backdrop-filter'] = 'blur(51px)';
                }
                const menuID = document.querySelector("[bloqueID=usuario]")
                if (estadoIDV === "conectado") {
                    menuID.innerText = "@" + usuario
                }
                if (estadoIDV === "desconectado") {
                    menuID.innerText = "MiCasa"
                }
                document.querySelectorAll("[zona]").forEach(zonaObsoleta => {
                    zonaObsoleta.removeAttribute("style")
                })
                if (zonaActual && document.querySelector("[zona=" + zonaActual + "]")) {

                    document.querySelector("[zona=" + zonaActual + "]").style.background = "rgba(0, 0, 0, 0.6)"
                    document.querySelector("[zona=" + zonaActual + "]").style.color = "white"
                }
            },
        },
        arranque: async () => {

            window.addEventListener("popstate", casaVitini.shell.navegacion.navegacionInversa)
            await casaVitini.shell.controladoresUI.controladorEstadoIDX()
            document.getElementById("botonMenuResponsivo").addEventListener("click", () => {
                casaVitini.shell.controladoresUI.menuResponsivo()
            })
            const vistas = document.querySelectorAll("[vista]")

            for (const vistaMenu of vistas) {
                vistaMenu.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
            }
            document.querySelector("#navegadorResponsivo").classList.remove("ocultoInicial")
            const url = window.location.pathname;
            if (url === "/") {
                return casaVitini.shell.navegacion.controladorVista("portada")
            } else {
                return casaVitini.shell.navegacion.controladorVista(url)
            }
        },
        IDX: {
            iniciarSession: async (IDX) => {
                const usuario = IDX.usuario
                const clave = IDX.clave
                const contenedorBotones = document.querySelector("[componente=contenedorBotones]")
                const bloqueRespuesta = document.querySelector("#bloqueRespuesta")
                const campos = document.querySelectorAll("[componente=campoID]")
                campos.forEach((campo) => {
                    campo.removeAttribute("style")
                })
                const circuloAnimado = document.createElement("span")
                circuloAnimado.classList.add("circuloAnimado")
                const mensajeIniciando = document.createElement("div")
                mensajeIniciando.classList.add("miCasa_portal_mensajeIniciandoSession")
                mensajeIniciando.innerText = "Iniciando session..."
                bloqueRespuesta.appendChild(circuloAnimado)
                bloqueRespuesta.appendChild(mensajeIniciando)
                const transaccion = {
                    zona: "IDX/conectar",
                    usuario: usuario,
                    clave: clave
                };
                bloqueRespuesta.style.visibility = "visible"
                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                if (respuestaServidor?.error) {
                    bloqueRespuesta.innerText = respuestaServidor?.error
                    bloqueRespuesta.style.display = "block"
                    //contenedorBotones.removeAttribute("style")
                    campos.forEach(campo => {
                        campo.style.background = "rgba(255, 0, 0, 0.5)"
                    });
                }
                if (respuestaServidor?.ok) {
                    let tipo;
                    const rolIDV = respuestaServidor?.rolIDV;
                    if (rolIDV === "cliente") {
                        tipo = "publico"
                    }
                    if (rolIDV === "administrador" ||
                        rolIDV === "empleado") {
                        tipo = "panelControl"
                    }
                    const navegacion = {
                        tipo: tipo,
                        usuario: respuestaServidor?.ok,
                        rolIDV: rolIDV
                    }



                    casaVitini.shell.navegacion.controladorNavegacion(navegacion)
                    await casaVitini.shell.controladoresUI.controlCodigoAdministracion()
                    const zonaActual = document.getElementById("uiNavegacion").getAttribute("vistaActual")
                    const entrada = {
                        vista: zonaActual,
                        tipoOrigen: "menuNavegador"
                    }
                    return casaVitini.shell.navegacion.controladorVista(entrada)
                }
            },
            cerrarSession: async () => {
                const transaccion = {
                    zona: "IDX/desconectar",
                };
                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                if (respuestaServidor?.error) {
                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                }
                if (respuestaServidor?.estadoIDV === "desconectado") {
                    await casaVitini.shell.controladoresUI.controlCodigoAdministracion()
                    return respuestaServidor
                }

            },
            estadoSession: async () => {
                const transaccion = {
                    zona: "IDX/estado",
                }
                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                // await casaVitini.shell.controladoresUI.controlCodigoAdministracion()
                return respuestaServidor
            },
        },
        controladoresUI: {
            interrumpitTransicionVistas: () => {
                const main = document.querySelector("main")
                const pantallaCarga = document.querySelector("[ui=pantallaDeCarga]")
                main.removeAttribute("style")
                pantallaCarga?.remove()

            },
            eliminarTodasLasPropiedadesCSSMenosUna: (propiedadesArray) => {
                const elemento = document.querySelector("main");

                // Obtener las propiedades inline actuales
                const propiedadesInline = elemento.style.cssText;


                // Filtrar las propiedades que están en el array
                const propiedadesFiltradas = propiedadesInline
                    .split(";")
                    .filter(propiedad => {
                        const [nombre] = propiedad.split(":");
                        return propiedadesArray.includes(nombre.trim());
                    })
                    .join(";");



                // Asignar solo las propiedades filtradas al elemento
                elemento.style.cssText = propiedadesFiltradas;
            },

            controlHorizotnalVetana: () => {
                const currentWidth = window.innerWidth;
                const previousWidth = casaVitini.componentes.controladores.anchoActualVentanad
                // Verificar si el ancho ha cambiado
                if (currentWidth !== previousWidth) {

                    // Aquí puedes colocar el código que deseas ejecutar cuando el ancho cambia
                    // Actualizar el valor del ancho anterior
                    casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                } else {

                }
            },
            menuResponsivo: function () {
                const selectorMenuFlotanteRenderizado = document.querySelector("[componente=menuGlobalFlotante]")
                if (selectorMenuFlotanteRenderizado) {
                    selectorMenuFlotanteRenderizado.remove()
                } else {
                    this.tranformaMenuARespontivo()
                    window.addEventListener("click", casaVitini.shell.controladoresUI.ocultaMenuGlobalFlotante)
                    window.addEventListener("resize", casaVitini.shell.controladoresUI.ocultaMenuGlobalFlotante)
                    window.addEventListener("scroll", casaVitini.shell.controladoresUI.ocultaMenuGlobalFlotante)
                }
            },
            tranformaMenuARespontivo: function () {
                const codigoMenuGlobal = document.querySelector("#navegadorResponsivo").innerHTML
                const selectorMenuFlotanteRenderizado = document.querySelector("[componente=menuGlobalFlotante]")
                if (selectorMenuFlotanteRenderizado) {
                    selectorMenuFlotanteRenderizado.innerHTML = null
                } else {
                    const menuGlobalFlotante = document.createElement("div")
                    menuGlobalFlotante.classList.add("uiNavegacion")
                    menuGlobalFlotante.setAttribute("componente", "menuGlobalFlotante")
                    menuGlobalFlotante.classList.add("uiMenuGlobalResponsivo")
                    document.body.appendChild(menuGlobalFlotante)
                }
                const selectorMenuFlotanteSelector = document.querySelector("[componente=menuGlobalFlotante]")

                selectorMenuFlotanteSelector.innerHTML = codigoMenuGlobal
                selectorMenuFlotanteSelector.querySelectorAll("[vista]").forEach((menu) => {
                    menu.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                })
                selectorMenuFlotanteSelector.querySelector("[componente=sobreControl]")?.addEventListener("click", () => {
                    casaVitini.shell.navegacion.sobreControlMenuGlobal()
                    this.tranformaMenuARespontivo()
                })
            },
            controladorEstadoIDX: async () => {


                const IDX = await casaVitini.shell.IDX.estadoSession()
                const estadoIDV = IDX?.estadoIDV || null
                const rolIDV = IDX?.rolIDV
                if (estadoIDV === "desconectado" || !estadoIDV) {
                    const navegacion = {
                        tipo: "publico",
                        estadoIDV: "desconectado",
                        origen: "controlador"
                    }

                    casaVitini.shell.navegacion.controladorNavegacion(navegacion)
                    delete casaVitini.administracion
                } else if (estadoIDV === "conectado" && (rolIDV === "administrador" || rolIDV === "empleado")) {
                    const navegacion = {
                        tipo: "panelControl",
                        usuario: IDX.usuario,
                        rolIDV: rolIDV,
                        estadoIDV: estadoIDV,
                        origen: "controlador"
                    }

                    casaVitini.shell.navegacion.controladorNavegacion(navegacion)
                    await casaVitini.shell.controladoresUI.controlCodigoAdministracion()
                } else if (estadoIDV === "conectado" && rolIDV === "cliente") {
                    const navegacion = {
                        tipo: "publico",
                        usuario: IDX.usuario,
                        rolIDV: rolIDV,
                        estadoIDV: estadoIDV,
                        origen: "controlador"
                    }

                    casaVitini.shell.navegacion.controladorNavegacion(navegacion)
                    delete casaVitini.administracion
                }
            },
            controlLogoScroll: (metadatos) => {
                const sectionUID = metadatos.sectionUID
                const elementoScroll = metadatos.elementoScroll
                if (!sectionUID) {
                    const mensaje = "Falta el sectionUID para determinar si el evento debe de crearse o eliminarse"
                    return casaVitini.ui.componentes.advertenciaInmersiva(mensaje)
                }
                const elemento = document.querySelector(`[instanciaUID="${sectionUID}"] ${elementoScroll}`)
                if (!elemento) {
                    document.querySelector(`[instanciaUID="${sectionUID}"] ${elementoScroll}`).removeEventListener("scroll", controladorEvento)
                    return
                }
                const logo = document.querySelector("[componente=logoCasaVitini]")
                const controladorEvento = (e) => {
                    e.stopPropagation()
                    const alturaScroll = e.target.scrollTop
                    if (alturaScroll > 10) {
                        logo.style.opacity = "0"
                        logo.style.pointerEvents = "none"
                    } else {
                        logo.style.opacity = "1"
                        logo.style.pointerEvents = "all"
                    }
                }
                elemento.addEventListener("scroll", controladorEvento)
            },
            restaurarMenu: (componente) => {
                componente.stopPropagation()
                //componente.preventDefault();
                let componenteID = componente.target
                if (componenteID.id !== "navegadorResponsivo" && componenteID.id !== "botonMenuResponsivo" && !componenteID.getAttribute("vista") && componenteID?.getAttribute("class") !== "contenedorMenu") {
                    casaVitini.shell.controladoresUI.menuResponsivo()
                }
            },
            ocultarMenusVolatiles: (menuVolatil) => {

                window.removeEventListener("resize", casaVitini.shell.controladoresUI.controlHorizotnalVetana)
                window.removeEventListener("resize", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)
                screen.orientation?.removeEventListener("change", casaVitini.shell.controladoresUI.ocultarMenusVolatiles);

                const componente = menuVolatil?.target?.getAttribute("componente") || null
                if (componente === "menuDesplegable") {
                    return
                }
                window.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)

                if (componente !== "menuVolatil") {
                    window.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)
                    const selectorMenusVolatiles = document.querySelectorAll("[componente=menuVolatil]")
                    selectorMenusVolatiles.forEach(menuVolatil => {
                        menuVolatil.remove()
                    })
                }
                const selectoresErrorUI = document.querySelectorAll("[componente=errorUI]")
                selectoresErrorUI.forEach((errorUI) => {
                    errorUI.remove()
                })

            },
            ocultarMenusVolatilesSimple: () => {
                window.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)
                window.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatilesSimple)
                window.removeEventListener("resize", casaVitini.shell.controladoresUI.ocultarMenusVolatilesSimple)

                const selectorMenusVolatiles = document.querySelectorAll("[componente=menuVolatil]")
                selectorMenusVolatiles.forEach(menuVolatil => {
                    menuVolatil.remove()
                })
            },
            limpiarAdvertenciasInmersivas: () => {
                document.body.style.removeProperty("overflow")
                document.querySelectorAll("[componente=bloqueCalendario]").forEach((calendarioRenderizado) => {
                    calendarioRenderizado.remove()
                })
                document.querySelectorAll("[componente=advertenciaInmersiva]").forEach((advertenciaInmersiva) => {
                    advertenciaInmersiva.remove()
                })
            },
            limpiarTodoElementoFlotante: () => {
                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                document.querySelectorAll("[componente=menuVolatil]").forEach((menuVolatil) => {
                    menuVolatil.remove()
                })
                document.querySelectorAll("[componente=advertenciaIntegrada]").forEach((menuVolatil) => {
                    menuVolatil.remove()
                })
                window.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)
                window.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatilesSimple)
                window.removeEventListener("resize", casaVitini.shell.controladoresUI.controlHorizotnalVetana)
                window.removeEventListener("resize", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)
                document.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)



            },
            ocultarElementos: (e) => {
                if (e?.target) {
                    const botonDesplegarCalendario = e.target.closest("[boton=desplegarCalendario]")
                    if (botonDesplegarCalendario) {
                        return
                    }
                    const selectorFlotante = e.target.closest("[elemento]")?.getAttribute("elemento")
                    if (selectorFlotante === "flotante") {
                        return
                    }
                    const selectorParalizador = e.target.closest("[paralizadorEvento]")?.getAttribute("paralizadorEvento")
                    if (selectorParalizador === "ocultadorCalendarios") {
                        return
                    }
                }
                const bloqueCalendario = document.querySelectorAll("[componente=bloqueCalendario]")
                bloqueCalendario.forEach(calendarioRenderizado => {
                    calendarioRenderizado.remove()
                });
                document.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarElementos)
            },
            controlGlobalScroll: () => {

                const selectorBloqueMenusGlobales = document.querySelector("[componente=marcoNavegacion]")
                const selectorLogo = document.querySelector("[componente=logoCasaVitini]")
                document.addEventListener('scroll', () => {
                    const selectorStyle = selectorLogo.style.filter
                    const mediaQuery = window.matchMedia('(max-width: 850px)');
                    document.querySelector("#navegadorResponsivo").style.removeProperty("display")
                    if (window.scrollY === 0) {
                        selectorBloqueMenusGlobales.classList.remove('globa_marcoNavegacion_desenfoque');
                        if (mediaQuery.matches && selectorStyle === "invert(0)") {
                            selectorLogo.style.filter = "invert(1)"
                        }
                    } else {
                        if (mediaQuery.matches && selectorStyle === "invert(1)") {
                            selectorLogo.style.filter = "invert(0)"
                        }
                        selectorBloqueMenusGlobales.classList.add('globa_marcoNavegacion_desenfoque');
                    }
                })
            },
            controlCodigoAdministracion: async () => {

                const convertirCadenasEnFunciones = (objeto) => {
                    for (const clave in objeto) {
                        if (typeof objeto[clave] === "string") {
                            try {
                                const functionConstructor = new Function(`return ${objeto[clave]}`);
                                objeto[clave] = functionConstructor();
                            } catch (errorCapturado) {
                                // Si no se puede analizar como una función, deja la cadena tal como está
                            }
                        } else if (typeof objeto[clave] === "object") {
                            // Si la propiedad es un objeto, llama recursivamente a la función
                            convertirCadenasEnFunciones(objeto[clave]);
                        }
                    }
                }
                if (!casaVitini.administracion) {
                    const transaccion = {
                        zona: "administracion/componentes/administracionUI"
                    }
                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                    if (respuestaServidor?.error) {
                        casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                    }
                    if (respuestaServidor?.tipo === "IDX") {
                        delete casaVitini["administracion"]
                    }
                    if (respuestaServidor?.ok) {
                        const JS = JSON.parse(respuestaServidor.ok)
                        convertirCadenasEnFunciones(JS);
                        casaVitini["administracion"] = JS
                    }
                }
            },
            ocultaMenuGlobalFlotante: (e) => {
                const controlFlotante = e.type === "click" ?
                    e?.target?.getAttribute("controlFlotante") : null
                if (controlFlotante !== "cancelar") {
                    const selectorMenuFlotanteRenderizado = document.querySelector("[componente=menuGlobalFlotante]")
                    selectorMenuFlotanteRenderizado?.remove()
                    window.removeEventListener("click", casaVitini.shell.controladoresUI.ocultaMenuGlobalFlotante)
                    window.removeEventListener("resize", casaVitini.shell.controladoresUI.ocultaMenuGlobalFlotante)
                    window.removeEventListener("scroll", casaVitini.shell.controladoresUI.ocultaMenuGlobalFlotante)
                }
            },
            limpiarMain: () => {

                const selectorPantallaCargaRenderizdaPostPeticion = document.querySelector("[ui=pantallaDeCarga]")
                selectorPantallaCargaRenderizdaPostPeticion?.remove()
                const main = document.querySelector("main")
                document.querySelectorAll("html, #uiLogo, body, header, [componente=contenedorMenu], #botonMenuResponsivo")
                    .forEach((elementoReseteo) => {
                        elementoReseteo.removeAttribute("style")
                    })
                main.innerHTML = null
                main.removeAttribute("rama")
                main.removeAttribute("zonaCSS")
                main.removeAttribute("ui")
                casaVitini.shell.controladoresUI.eliminarTodasLasPropiedadesCSSMenosUna("opacity")
                main.style.transition = "opacity 250ms linear"
                main.style.opacity = "1"


            }
        },
        servidor: async function (transaccion) {
            const puerto = '/puerto';
            const peticion = {
                method: 'POST',
                headers: {
                    'Content-type': 'application/json'
                },
                body: JSON.stringify(transaccion)
            };
            try {

                const servidor = await fetch(puerto, peticion);
                const respuestaServidor = await servidor.json();
                if (!respuestaServidor) {
                    this.controladoresUI.interrumpitTransicionVistas()
                    return casaVitini.ui.componentes.errorUI()
                } else if (respuestaServidor.tipo === "IDX") {
                    return casaVitini.componentes.loginUI()
                } else if (respuestaServidor.tipo === "ROL") {
                    this.controladoresUI.interrumpitTransicionVistas()
                    const mensaje = "Tu VitiniID no esta autorizado a realizar esta operación."
                    casaVitini.ui.componentes.advertenciaInmersiva(mensaje)
                    return
                } else if (respuestaServidor.codigo === "mantenimiento") {
                    casaVitini.shell.controladoresUI.limpiarMain()
                    this.controladoresUI.interrumpitTransicionVistas()
                    const mensaje = respuestaServidor.error
                    casaVitini.ui.componentes.mensajeSimple({
                        titulo: "No se ha procesado la peticion",
                        descripcion: mensaje
                    })
                    return
                } else if (respuestaServidor?.error === "noExisteLaVista") {
                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                    casaVitini.shell.controladoresUI.limpiarMain()
                    return casaVitini.ui.componentes.urlDesconocida()
                } else {
                    return respuestaServidor
                }


            } catch (errorCapturado) {
                this.controladoresUI.interrumpitTransicionVistas()

                if (errorCapturado.name === 'AbortError') {
                }
                if (errorCapturado instanceof TypeError) {
                    return casaVitini.ui.componentes.errorUI()
                }
            }
        },
    },
    ui: {
        vistas: {
            portada: {
                arranque: async () => {
                    document.querySelector("[componente=botonCambiaVistaEnSection]").addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    const video = document.querySelector("[componente=video]")
                    video.addEventListener('loadedmetadata', () => {
                        // Obtener la duración del video
                        const duration = video.duration;

                        // Generar un tiempo aleatorio entre 0 y la duración del video
                        const randomTime = Math.random() * duration;

                        // Establecer el tiempo de inicio del video
                        video.currentTime = randomTime;

                        // Reproducir el video
                        video.play();
                    });


                    const instanciaUID = document.querySelector("main[instanciaUID]").getAttribute("instanciaUID")
                    const transacccion = {
                        zona: "plaza/portada/obtenerMensajes"
                    }
                    const respuestaServidor = await casaVitini.shell.servidor(transacccion)
                    const seccionRenderizada = document.querySelector(`main[instanciaUID="${instanciaUID}"]`)
                    if (!seccionRenderizada) return
                    if (respuestaServidor?.ok) {
                        const mensajes = respuestaServidor.ok
                        const titulo = seccionRenderizada.querySelector("[componente=titulo]")
                        for (const detallesDelMensaje of mensajes) {
                            const mensaje = detallesDelMensaje.mensaje

                            const tituloUI = document.createElement("div")
                            tituloUI.classList.add("tituloUI")
                            tituloUI.innerText = mensaje
                            titulo.insertAdjacentElement("afterend", tituloUI);
                        }
                    }
                },
            },
            alojamiento: {
                portada: {
                    arranque: async () => {
                        document.body.style.backgroundImage = 'url("/componentes/imagenes/test/image00061.jpeg")';
                        const granuladoURL = casaVitini.utilidades.granuladorURL()
                        const directorios = granuladoURL.directorios[granuladoURL.directorios.length - 1]

                        if (directorios === "alojamiento") {
                            return casaVitini.ui.vistas.alojamiento.portada.buscarAlojamientoUI()
                        } else if (directorios === "reserva_confirmada") {
                            const reservaConfirmada = JSON.parse(localStorage.getItem("reservaConfirmada")) || null
                            if (reservaConfirmada) {
                                casaVitini.ui.vistas.alojamiento.reservaConfirmada.ui()
                            } else {
                                const entrada = {
                                    vista: "/alojamiento",
                                    tipoOrigen: "menuNavegador"
                                }
                                return casaVitini.shell.navegacion.controladorVista(entrada)
                            }
                        }
                    },
                    buscarAlojamientoUI: async () => {
                        try {
                            const instanciaUID_contenedorFechas = casaVitini.utilidades.codigoFechaInstancia()
                            const reservaLocal = JSON.parse(sessionStorage.getItem("reserva"))
                            const reservaEnCache = localStorage.getItem("reservaConfirmada");
                            const reservaConfirmadaLocal = reservaEnCache ? JSON.parse(reservaEnCache) : null;
                            const main = document.querySelector("main")
                            const metodoSelectorPasarela = "casaVitini.ui.vistas.alojamiento.portada.metodoSelectorPasarela"
                            const tituloUI = document.createElement("p")
                            tituloUI.classList.add("titulo")
                            tituloUI.innerText = "Alojamiento"

                            const marcoElasticoRelativo = document.createElement('div');
                            marcoElasticoRelativo.classList.add('marcoElasticoRelativo');
                            marcoElasticoRelativo.style.height = "100%"
                            main.appendChild(marcoElasticoRelativo);

                            const bloquePasosReservaNuevo = document.createElement('div');
                            bloquePasosReservaNuevo.setAttribute('class', 'bloquePasosReservaNuevo');
                            bloquePasosReservaNuevo.setAttribute('contenedor', 'busquedaAlojamiento');
                            marcoElasticoRelativo.appendChild(bloquePasosReservaNuevo);

                            const mensajeErrorCompartido = "Ha ocurrido un error y no se han podido obtener ciertos datos. Por favor, actualiza la página."

                            const transaccion = {
                                zona: "componentes/horaLimiteDelMismoDia",
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                            if (respuestaServidor?.error) {
                                // Container info tiempo restante para el dia de hoy
                                const contenedorBanner = document.createElement("div")
                                contenedorBanner.classList.add("plaza_reservas_reservaConfirmada_banner")
                                contenedorBanner.innerText = mensajeErrorCompartido
                                bloquePasosReservaNuevo.appendChild(contenedorBanner)
                            } else if (respuestaServidor.ok) {

                                const mismoDiaAceptable = respuestaServidor.mismoDiaAceptable
                                const estadoAceptacion = respuestaServidor.estadoAceptacion
                                const horaLimiteDelMismoDia = respuestaServidor.horaLimiteDelMismoDia
                                const zonaHoraria = respuestaServidor.zonaHoraria

                                if (mismoDiaAceptable === "si" && estadoAceptacion === "no") {

                                    const contenedorBanner = document.createElement("div")
                                    contenedorBanner.classList.add("bannerTiempoRestante")
                                    contenedorBanner.innerText = casaVitini.ui.vistas.alojamiento.componentes.mensajeNoAceptacion({
                                        horaLimite: horaLimiteDelMismoDia,
                                        zonaHoraria: zonaHoraria
                                    })
                                    bloquePasosReservaNuevo.appendChild(contenedorBanner)

                                } else if (mismoDiaAceptable === "si" && estadoAceptacion === "si") {
                                    const cuentaAtras = respuestaServidor.cuentaAtras
                                    const dias = cuentaAtras.dias
                                    const horas = cuentaAtras.horas
                                    const minutos = cuentaAtras.minutos
                                    const segundos = cuentaAtras.segundos


                                    const totalCuentaAtrasEnReseugnos =
                                        (dias * 24 * 60 * 60) +  // Convertir días a segundos
                                        (horas * 60 * 60) +      // Convertir horas a segundos
                                        (minutos * 60) +         // Convertir minutos a segundos
                                        segundos;                // Segundos ya en segundos


                                    const instanciaUID_cuentaAttras = casaVitini.utilidades.codigoFechaInstancia()

                                    // Container info tiempo restante para el dia de hoy
                                    const contenedorBanner = document.createElement("div")
                                    contenedorBanner.classList.add("bannerTiempoRestante")
                                    contenedorBanner.setAttribute("instanciaUID", instanciaUID_cuentaAttras)


                                    const info = document.createElement("p")
                                    info.innerText = `Si quieres hacer una reserva con fecha de entrada para hoy mismo, tienes que hacerlo antes de la ${horaLimiteDelMismoDia}. Esta hora límite para hacer la reserva con fecha de entrada para hoy está en formato 24 H en hora local de ${zonaHoraria}. Pasada esta hora, para realizar una reserva con fecha de entrada para el día de hoy, por favor, ponte en contacto con nuestro equipo. Dirígete a la sección de Contacto donde encontrarás distintas formas de comunicarte con nosotros.`
                                    contenedorBanner.appendChild(info)

                                    const cuentaAtrasUI = document.createElement("p")
                                    cuentaAtrasUI.setAttribute("contenedor", "cuentaAtras")
                                    cuentaAtrasUI.classList.add(
                                        "negrita"
                                    )
                                    contenedorBanner.appendChild(cuentaAtrasUI)

                                    bloquePasosReservaNuevo.appendChild(contenedorBanner)

                                    casaVitini.ui.vistas.alojamiento.componentes.controladorCuentaAtras({
                                        instanciaUID: instanciaUID_cuentaAttras,
                                        segundosDeLaCuentaAtras: totalCuentaAtrasEnReseugnos,
                                        zonaHoraria,
                                        horaLimiteDelMismoDia
                                    })
                                }
                            }



                            if (reservaConfirmadaLocal) {
                                // Añadir banner informativo
                                const contenedorBanner = document.createElement("a")
                                contenedorBanner.classList.add("plaza_reservas_reservaConfirmada_banner")
                                contenedorBanner.innerText = "Tienes una reserva guardada en la cache de tu navegador. Esta reserva se ha guardado tras confirmar tu reserva. Para ver los detalles de la confirmación, pulsa aquí. Si borras la cache de tu navegador esta información desaparecerá. Si quieres un acceso persistente puedes crear un VitiniID desde MiCasa."
                                contenedorBanner.setAttribute("href", "/alojamiento/reserva_confirmada")
                                contenedorBanner.setAttribute("vista", "/alojamiento/reserva_confirmada")
                                contenedorBanner.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                bloquePasosReservaNuevo.appendChild(contenedorBanner)
                            }
                            // Bloque de selección de días
                            const bloqueSelecionDias = document.createElement('div');
                            bloqueSelecionDias.setAttribute('class', 'bloqueSelecionDias');
                            // Contenedor de alojamiento
                            const plazaAlojamientoContenedor = document.createElement('div');
                            plazaAlojamientoContenedor.setAttribute('class', 'plaza_alojamiento_contenedor');
                            plazaAlojamientoContenedor.setAttribute('contenedor', 'alojamiento');
                            plazaAlojamientoContenedor.setAttribute("instanciaUID_contenedorFechas", instanciaUID_contenedorFechas)
                            // Bloque de día de entrada
                            const diaEntradaNuevo = document.createElement('div');
                            diaEntradaNuevo.setAttribute('class', 'diaEntradaNuevo plaza_alojamiento_marcoFechaCompartido');
                            diaEntradaNuevo.setAttribute('calendario', 'entrada');
                            diaEntradaNuevo.setAttribute('boton', 'desplegarCalendario');
                            if (reservaLocal?.entrada) {
                                diaEntradaNuevo.setAttribute("memoriaVolatil", reservaLocal.entrada)
                            } else {
                                diaEntradaNuevo.classList.add("parpadeaFondo")
                            }
                            diaEntradaNuevo.addEventListener("click", async () => {
                                await casaVitini.ui.componentes.calendario.configurarCalendario({
                                    perfilMes: "calendario_entrada_publico_sinPasado",
                                    contenedorOrigenIDV: "[calendario=entrada]",
                                    instanciaUID_contenedorFechas,
                                    rangoIDV: "inicioRango",
                                    metodoSelectorDia: metodoSelectorPasarela,
                                    tituloCalendario: "Selecciona una fecha de entrada por favor"
                                })
                            })
                            const textoDiaEntrada = document.createElement('div');
                            textoDiaEntrada.setAttribute('class', 'textoDiaNuevo');
                            textoDiaEntrada.textContent = 'Fecha de entrada';
                            diaEntradaNuevo.appendChild(textoDiaEntrada);
                            const plazaAlojamientoMarcoFechaEntrada = document.createElement('div');
                            plazaAlojamientoMarcoFechaEntrada.setAttribute('class', 'plaza_alojamiento_marcoFechaCompartido_contenedorFecha');
                            plazaAlojamientoMarcoFechaEntrada.setAttribute('fechaUI', 'fechaInicio');
                            if (reservaLocal?.entrada) {
                                plazaAlojamientoMarcoFechaEntrada.textContent = reservaLocal.entrada
                            } else {
                                plazaAlojamientoMarcoFechaEntrada.textContent = '(Seleccionar)';
                            }
                            diaEntradaNuevo.appendChild(plazaAlojamientoMarcoFechaEntrada);
                            // Bloque de día de salida
                            const diaSalidaNuevo = document.createElement('div');
                            diaSalidaNuevo.setAttribute('class', 'diaSalidaNuevo plaza_alojamiento_marcoFechaCompartido');
                            diaSalidaNuevo.setAttribute('calendario', 'salida');
                            diaSalidaNuevo.setAttribute('boton', 'desplegarCalendario');
                            if (reservaLocal?.salida) {
                                diaSalidaNuevo.setAttribute("memoriaVolatil", reservaLocal.salida)
                            } else {
                                // diaSalidaNuevo.classList.add("parpadeaFondo")
                            }
                            diaSalidaNuevo.addEventListener("click", async () => {

                                await casaVitini.ui.componentes.calendario.configurarCalendario({
                                    perfilMes: "calendario_salida_publico_sinPasado",
                                    contenedorOrigenIDV: "[calendario=salida]",
                                    instanciaUID_contenedorFechas,
                                    rangoIDV: "finalRango",
                                    metodoSelectorDia: metodoSelectorPasarela,
                                    tituloCalendario: "Selecciona una fecha de salida por favor"

                                })
                            })
                            const textoDiaSalida = document.createElement('div');
                            textoDiaSalida.setAttribute('class', 'textoDiaNuevo');
                            textoDiaSalida.textContent = 'Fecha de Salida';
                            diaSalidaNuevo.appendChild(textoDiaSalida);
                            const plazaAlojamientoMarcoFechaSalida = document.createElement('div');
                            plazaAlojamientoMarcoFechaSalida.setAttribute('class', 'plaza_alojamiento_marcoFechaCompartido_contenedorFecha');
                            plazaAlojamientoMarcoFechaSalida.setAttribute('fechaUI', 'fechaFin');
                            if (reservaLocal?.salida) {
                                plazaAlojamientoMarcoFechaSalida.innerText = reservaLocal.salida
                            } else {
                                plazaAlojamientoMarcoFechaSalida.textContent = '(Seleccionar)';
                            }
                            diaSalidaNuevo.appendChild(plazaAlojamientoMarcoFechaSalida);
                            // Botón de mostrar disponibilidad
                            const botonMostrarDisponibilidad = document.createElement('div');
                            botonMostrarDisponibilidad.setAttribute('class', 'botonMostrarDisponibilidad');
                            botonMostrarDisponibilidad.setAttribute('componente', 'botonDisponibilidad');
                            botonMostrarDisponibilidad.setAttribute('boton', 'mostrarDisponibilidad');
                            botonMostrarDisponibilidad.textContent = 'Mostrar disponibilidad';
                            botonMostrarDisponibilidad.addEventListener("click", casaVitini.ui.vistas.alojamiento.portada.buscarApartamentosDisponibles)
                            // Agregar elementos al DOM
                            plazaAlojamientoContenedor.appendChild(diaEntradaNuevo);
                            plazaAlojamientoContenedor.appendChild(diaSalidaNuevo);
                            plazaAlojamientoContenedor.appendChild(botonMostrarDisponibilidad);
                            bloqueSelecionDias.appendChild(plazaAlojamientoContenedor);
                            const botonBorrarBusquedaAlojamiento = document.createElement("div")
                            botonBorrarBusquedaAlojamiento.classList.add("plaza_alojamiento_botonBorrarBusquedaAlojamiento")
                            botonBorrarBusquedaAlojamiento.setAttribute("componente", "botonBorrarBusquedaAlojamiento")
                            botonBorrarBusquedaAlojamiento.innerText = "Borrar búsqueda de alojamiento "
                            botonBorrarBusquedaAlojamiento.addEventListener("click", (e) => {
                                document.body.style.backgroundImage = 'url("/componentes/imagenes/test/image00061.jpeg")';
                                document.body.removeAttribute("class")
                                document.querySelector("[calendario=entrada]").classList.add("parpadeaFondo")
                                document.querySelector("[calendario=salida]").classList.remove("parpadeaFondo")
                                document.querySelector("[componente=botonDisponibilidad]").classList.remove("parpadeaFondo")
                                const selectorCalendarios = document.querySelectorAll("[calendario]")
                                selectorCalendarios.forEach((memoriaVolatil) => {
                                    memoriaVolatil.removeAttribute("memoriaVolatil")
                                })
                                const fechaEntradaUI = document.querySelector("[fechaUI=fechaInicio]")
                                fechaEntradaUI.innerText = "(Seleccionar)"
                                const fechaSalidaUI = document.querySelector("[fechaUI=fechaFin]")
                                fechaSalidaUI.innerText = "(Seleccionar)"
                                sessionStorage.removeItem("reserva")
                                const selectorSuperBloque = document.querySelector("[componente=superBloque]")
                                selectorSuperBloque?.remove()
                                e.target.removeAttribute("style")
                            })
                            bloqueSelecionDias.appendChild(botonBorrarBusquedaAlojamiento);
                            bloquePasosReservaNuevo.appendChild(bloqueSelecionDias);
                            if (reservaLocal?.entrada && reservaLocal?.salida) {
                                await casaVitini.ui.vistas.alojamiento.portada.buscarApartamentosDisponibles("botonDisponibilidad")
                            }
                            if (reservaLocal?.alojamiento) {
                                const alojamiento = reservaLocal.alojamiento
                                for (const apartamento in alojamiento) {
                                    // recuperar reserva en alojamiento
                                    const habitacionesPorApartamento = alojamiento[apartamento]["habitaciones"]
                                    for (const habitacion in habitacionesPorApartamento) {
                                        const camaIDV = habitacionesPorApartamento[habitacion]["camaIDV"]
                                        const constructorSelector = `[apartamentoIDV='${apartamento}'][habitacionIDV='${habitacion}'][camaIDV='${camaIDV}']`
                                        document.querySelector(constructorSelector)?.click()
                                        // const pernoctantes = habitacionesPorApartamento[habitacion]["pernoctantes"]
                                        // pernoctantes.forEach((pernoctante, ciclo) => {
                                        //     const selectorCampoNombre = document.querySelectorAll(`[zona=apartamentoPernoctacion][apartamentoIDV='${apartamento}'] [habitacionidv='${habitacion}'] > [bloquepernoctante=bloquePernoctante] [pernoctante=nombre]`)
                                        //     const selectorCampoPasaporte = document.querySelectorAll(`[zona=apartamentoPernoctacion][apartamentoIDV='${apartamento}'] [habitacionidv='${habitacion}'] > [bloquepernoctante=bloquePernoctante] [pernoctante=pasaporte]`)
                                        //     if (selectorCampoNombre[ciclo]) {
                                        //         selectorCampoNombre[ciclo].value = pernoctante?.nombre
                                        //     }
                                        //     if (selectorCampoPasaporte[ciclo]) {
                                        //         selectorCampoPasaporte[ciclo].value = pernoctante?.pasaporte
                                        //     }
                                        // })

                                    }
                                }
                            }
                        } catch (error) {

                            casaVitini.ui.componentes.errorRenderizacionVista()
                        }

                    },
                    metodoSelectorPasarela: (e) => {
                        casaVitini.ui.componentes.calendario.calendarioCompartido.seleccionarDia(e)
                        casaVitini.ui.vistas.alojamiento.portada.asistenteCalendarios()
                    },
                    asistenteCalendarios: async () => {
                        const contenedorAlojamiento = document.querySelector("[contenedor=alojamiento]")
                        const contenedorEntrada = contenedorAlojamiento.querySelector("[calendario=entrada]")
                        const contenedorSalida = contenedorAlojamiento.querySelector("[calendario=salida]")
                        const fechaEntrada = contenedorEntrada.getAttribute("memoriaVolatil")
                        const fechaSalida = contenedorSalida.getAttribute("memoriaVolatil")
                        const botonDisponibilidad = contenedorAlojamiento.querySelector("[boton=mostrarDisponibilidad]")
                        const metodoSelectorPasarela = "casaVitini.ui.vistas.alojamiento.portada.metodoSelectorPasarela"
                        const instanciaUID_contenedorFechas = contenedorAlojamiento.getAttribute("instanciaUID_contenedorFechas")

                        const contenedores = contenedorAlojamiento.querySelectorAll("[boton]")
                        contenedores.forEach((contenedor) => {
                            contenedor.classList.remove("parpadeaFondo")
                        })
                        casaVitini.shell.controladoresUI.ocultarElementos()
                        if (fechaEntrada && fechaSalida) {
                            //botonDisponibilidad.classList.add("parpadeaFondo")
                            return casaVitini.ui.vistas.alojamiento.portada.buscarApartamentosDisponibles()
                        } else if (fechaEntrada) {
                            contenedorSalida.classList.add("parpadeaFondo")
                            await casaVitini.ui.componentes.calendario.configurarCalendario({
                                perfilMes: "calendario_salida_publico_sinPasado",
                                contenedorOrigenIDV: "[calendario=salida]",
                                instanciaUID_contenedorFechas,
                                rangoIDV: "finalRango",
                                metodoSelectorDia: metodoSelectorPasarela
                            })
                        } else if (fechaSalida) {
                            contenedorEntrada.classList.add("parpadeaFondo")
                            await casaVitini.ui.componentes.calendario.configurarCalendario({
                                perfilMes: "calendario_entrada_publico_sinPasado",
                                contenedorOrigenIDV: "[calendario=entrada]",
                                instanciaUID_contenedorFechas,
                                rangoIDV: "inicioRango",
                                metodoSelectorDia: metodoSelectorPasarela
                            })
                        }
                    },
                    buscarApartamentosDisponibles: async () => {

                        document.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarElementos)
                        const fechaEntradaVolatil_Humana = document.querySelector("[calendario=entrada]").getAttribute("memoriaVolatil")
                        const fechaSalidaVolatil_Humana = document.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")
                        casaVitini.shell.controladoresUI.ocultarElementos()

                        const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                        const bloqueCalendario = document.createElement("div")
                        bloqueCalendario.setAttribute("class", "bloqueCalendarioNuevo")
                        const cartelInfoCalendarioEstado = document.createElement("div")
                        cartelInfoCalendarioEstado.setAttribute("class", "cartelInfoCalendarioEstado")
                        cartelInfoCalendarioEstado.setAttribute("componente", "infoCalendario")
                        if (!fechaEntradaVolatil_Humana) {
                            const error = "Por favor, selecciona la fecha de entrada haciendo clic en el recuadro correspondiente y elige la fecha deseada en el calendario desplegable."
                            return casaVitini.ui.componentes.advertenciaInmersiva(error)
                        }
                        if (!fechaSalidaVolatil_Humana) {
                            const error = "Selecciona una fecha de salida pulsando en el cuadro de fecha de salida y seleccionando la fecha en el calendario flotante"
                            return casaVitini.ui.componentes.advertenciaInmersiva(error)
                        }
                        document.body.removeAttribute("style")
                        document.body.style.backgroundColor = "rgb(214, 192, 157)"
                        document.querySelector(".bloquePernoctacion")?.remove()
                        document.querySelector(".bloqueBotonResumenReserva")?.remove()
                        document.querySelectorAll("[componente=superBloque]").forEach((contenedorAlojamientoRenderizado) => {
                            contenedorAlojamientoRenderizado.remove()
                        })
                        const contenedorBusquedaAlojamiento = document.querySelector("[contenedor=busquedaAlojamiento]")
                        const superBloqueReserva = document.createElement("div")
                        superBloqueReserva.classList.add("plaza_alojamiento_superBloque")
                        superBloqueReserva.setAttribute("componente", "superBloque")
                        superBloqueReserva.setAttribute("instanciaUID", instanciaUID)
                        const contenedorEstadoBusqueda = document.createElement("div")
                        contenedorEstadoBusqueda.classList.add("plaza_alojamiento_contenedorEsperaAlojamiento")
                        const spinnerContainer = document.createElement('div');
                        spinnerContainer.setAttribute("componente", "iconoCargaEnlace");
                        spinnerContainer.classList.add("lds-spinner");
                        for (let i = 0; i < 12; i++) {
                            const div = document.createElement('div');
                            spinnerContainer.appendChild(div);
                        }
                        contenedorEstadoBusqueda.appendChild(spinnerContainer)
                        const info = document.createElement("div")
                        info.setAttribute("class", "advertenciaInfoFlujoPago")
                        info.setAttribute("componente", "mensajeFlujoPasarela")
                        info.innerText = "Buscando alojamiento..."
                        contenedorEstadoBusqueda.appendChild(info)
                        const boton = document.createElement("div")
                        boton.setAttribute("class", "errorBoton")
                        boton.classList.add("blur")
                        boton.innerText = "Cancelar"
                        boton.addEventListener("click", () => {
                            document.querySelector(`[instanciaUID="${instanciaUID}"]`).remove()
                            document.body.removeAttribute("class")
                        })
                        contenedorEstadoBusqueda.appendChild(boton)
                        superBloqueReserva.appendChild(contenedorEstadoBusqueda)
                        contenedorBusquedaAlojamiento.appendChild(superBloqueReserva)
                        const botonBorrarBusquedaAlojamiento = document.querySelector("[componente=botonBorrarBusquedaAlojamiento]")
                        botonBorrarBusquedaAlojamiento.style.display = "flex"

                        // const fechaEntrada = casaVitini.utilidades.conversor.fecha_humana_hacia_ISO(fechaEntradaVolatil_Humana)
                        // const fechaSalida = casaVitini.utilidades.conversor.fecha_humana_hacia_ISO(fechaSalidaVolatil_Humana)

                        document.querySelector("[componente=botonDisponibilidad]").classList.remove("parpadeaFondo")
                        const transaccion = {
                            zona: "plaza/reservas/apartamentosDisponiblesPublico",
                            fechaEntrada: fechaEntradaVolatil_Humana,
                            fechaSalida: fechaSalidaVolatil_Humana
                        }

                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                        if (!document.querySelector(`[instanciaUID="${instanciaUID}"]`)) {
                            return
                        }
                        if (respuestaServidor?.error) {
                            document.querySelector(`[instanciaUID="${instanciaUID}"]`).remove()
                            return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                        }
                        if (respuestaServidor.ok) {
                            const apartamentosDisponibles = respuestaServidor?.ok.apartamentosDisponibles
                            const contenedorFinanciero = respuestaServidor?.ok.contenedorFinanciero

                            const superBloqueReservaRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            superBloqueReservaRenderizado.innerHTML = null
                            if (!superBloqueReservaRenderizado) {
                                return
                            }
                            if (Object.keys(apartamentosDisponibles).length === 0) {
                                const infoSinAlojamiento = document.createElement("p")
                                infoSinAlojamiento.setAttribute("class", "plaza_alojamiento_infoSinAlojamientoDisponible")
                                infoSinAlojamiento.innerText = "No hay níngun alojamiento dispopnible para las fechas seleccionadas."
                                superBloqueReservaRenderizado.appendChild(infoSinAlojamiento);
                                return
                            }

                            const tituloBloqueAlojamiento = document.createElement("p")
                            tituloBloqueAlojamiento.setAttribute("class", "tituloBloqueAlojamiento parpadeaFondoTransparente")
                            tituloBloqueAlojamiento.setAttribute("componente", "tituloInfoSeleccionar")
                            tituloBloqueAlojamiento.innerText = "Aquí tienes el alojamiento disponible para seleccionar. A medida que elijas los apartamentos, los precios se actualizarán y se aplicarán las ofertas correspondientes en función de tu selección. Las ofertas que aparecen bajo el precio son las que se han aplicado. Puedes hacer clic en la oferta para ver sus detalles. En el siguiente paso, se te mostrará un resumen de tu reserva con toda la información detallada."
                            superBloqueReservaRenderizado.appendChild(tituloBloqueAlojamiento);
                            const bloqueAlojamientoUI = document.createElement("div")
                            bloqueAlojamientoUI.classList.add("bloqueAlojamiento")
                            bloqueAlojamientoUI.setAttribute("contenedor", "alojamiento")
                            superBloqueReservaRenderizado.appendChild(bloqueAlojamientoUI)
                            // const desgloseTotalesFormateado = {}
                            // for (const [apartamentoIDV, desgloseDelApartamento] of Object.entries(desglosePorApartamento)) {
                            //     desgloseTotalesFormateado[apartamentoIDV] = desgloseDelApartamento
                            // }

                            for (const apartamento of Object.entries(apartamentosDisponibles)) {
                                const apartamentoIDV = apartamento[0]
                                const apartamentoUI = apartamento[1].apartamentoUI
                                const habitaciones = apartamento[1].habitaciones
                                const caracteristicas = apartamento[1].caracteristicas
                                const totalInicial = contenedorFinanciero[apartamentoIDV].global.totales.totalFinal
                                const contenedorOFertasPorCondicion = contenedorFinanciero[apartamentoIDV].contenedorOfertas.entidades.reserva.ofertas.porCondicion

                                // let precioBrutoPorDia = apartamento[1].preciosTotales.totalBrutoPordia
                                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                const bloqueApartamento = document.createElement("div")
                                bloqueApartamento.setAttribute("class", "plaza_alojamiento_contenedorApartamento")
                                bloqueApartamento.setAttribute("apartamentoIDV", apartamentoIDV)
                                bloqueApartamento.setAttribute("apartamentoUI", apartamentoUI)
                                bloqueApartamento.setAttribute("instanciaUID", instanciaUID)
                                bloqueApartamento.setAttribute("habitaciones", JSON.stringify(habitaciones))
                                bloqueApartamento.addEventListener("click", () => {


                                    const selectorApartamento = document.querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)
                                    const selectorSelectorApartamento = selectorApartamento.querySelector("[componente=selectorApartamento]")

                                    if (selectorApartamento.getAttribute("estadoApartamento") !== "seleccionado") {
                                        selectorApartamento.setAttribute("estadoApartamento", "seleccionado")
                                        selectorSelectorApartamento.style.opacity = "1"
                                    } else {
                                        selectorApartamento.removeAttribute("estadoApartamento")
                                        selectorSelectorApartamento.removeAttribute("style")
                                    }
                                    const numeroApartamentosSeleccionado = document.querySelectorAll("[apartamentoIDV][estadoApartamento=seleccionado]").length
                                    const selectorApartamentosSeleccionados = document.querySelectorAll("[estadoApartamento=seleccionado]")
                                    const marcoFlotante = document.querySelector("[componente=marcoFlotanteIrAResumen]")
                                    const selectorInfoTextoParpadeo = document.querySelector("[componente=tituloInfoSeleccionar]")
                                    const selectorBotonIrAlResumen = marcoFlotante.querySelector("[componente=botonIrAResumenReserva]")
                                    const selectorEstadoSeleccion = selectorBotonIrAlResumen.querySelector("[contenedor=estadoSeleccion]")
                                    selectorEstadoSeleccion.innerHTML = null
                                    if (selectorApartamentosSeleccionados.length > 0) {
                                        selectorInfoTextoParpadeo.classList.remove("parpadeaFondoTransparente")
                                        marcoFlotante.style.opacity = "1"
                                        marcoFlotante.querySelector("[componente=botonIrAResumenReserva]")
                                            .style.pointerEvents = "all"

                                        if (numeroApartamentosSeleccionado === 1) {
                                            selectorEstadoSeleccion.innerText = `1 Apartamento seleccionado`
                                        } else if (numeroApartamentosSeleccionado > 1) {
                                            selectorEstadoSeleccion.innerText = `${numeroApartamentosSeleccionado} Apartamentos seleccionados`
                                        }

                                    } else {
                                        selectorInfoTextoParpadeo.classList.add("parpadeaFondoTransparente")
                                        marcoFlotante.removeAttribute("style")



                                        // marcoFlotante.querySelector("[componente=botonIrAResumenReserva]")
                                        //     .removeAttribute("style")
                                    }

                                    casaVitini.ui.vistas.alojamiento.portada.actualizarPreciosPorSeleccion()
                                })
                                bloqueAlojamientoUI.appendChild(bloqueApartamento)
                                const bloqueImagen = document.createElement("div")
                                bloqueImagen.setAttribute("class", "bloqueImagen")

                                const contenedorTitulo = document.createElement("div")
                                contenedorTitulo.classList.add("plaza_alojamiento_contenedorApartamento_contenedorTitulo")
                                const bloqueVerticalTitulo = document.createElement("div")
                                bloqueVerticalTitulo.setAttribute("class", "bloqueVerticalTitulo")
                                const elementoTituloNombre = document.createElement("div")
                                elementoTituloNombre.setAttribute("class", "elementoTituloPrincipal")
                                elementoTituloNombre.innerText = apartamentoUI + "test_nuevoSistema"
                                bloqueVerticalTitulo.appendChild(elementoTituloNombre)
                                const bloqueTituloApartamentoComponenteUI = document.createElement("div")
                                bloqueTituloApartamentoComponenteUI.setAttribute("class", "tituloApartamentoComponenteUI")
                                bloqueVerticalTitulo.appendChild(bloqueTituloApartamentoComponenteUI)
                                contenedorTitulo.appendChild(bloqueVerticalTitulo)
                                const bloqueCaracteristicas = document.createElement("div")
                                bloqueCaracteristicas.classList.add("plaza_alojamiento_contenedorApartmento_contenedorCaracteristicas")
                                for (const caracteristica of caracteristicas) {
                                    const caracteristicaUI = document.createElement("div")
                                    caracteristicaUI.classList.add("plaza_alojamiento_contenedorCaracteristicas_caracteristicas")
                                    caracteristicaUI.innerText = caracteristica.caracteristicaUI
                                    bloqueCaracteristicas.appendChild(caracteristicaUI)
                                }
                                if (caracteristicas.length > 0) {
                                    contenedorTitulo.appendChild(bloqueCaracteristicas)
                                }

                                bloqueApartamento.appendChild(contenedorTitulo)

                                const contenedorTotalYOfertas = document.createElement("div")
                                contenedorTotalYOfertas.classList.add(
                                    "flexVertical",
                                    "gap6"

                                )
                                contenedorTotalYOfertas.setAttribute("contenedor", "totalYOfertas")
                                bloqueTituloApartamentoComponenteUI.appendChild(contenedorTotalYOfertas)

                                const totaUI = document.createElement("div")
                                totaUI.setAttribute("class", "elementoTitulo")
                                totaUI.setAttribute("totalInicial", totalInicial)
                                totaUI.setAttribute("contenedorOfertasInicial", JSON.stringify(contenedorOFertasPorCondicion))
                                totaUI.setAttribute("componente", "valorTotal")
                                contenedorTotalYOfertas.appendChild(totaUI)

                                const contenedorOfertasUI = document.createElement("div")
                                contenedorOfertasUI.classList.add(
                                    "flexVertical",
                                    "gap6"
                                )
                                contenedorOfertasUI.setAttribute("contenedor", "ofertas")
                                contenedorTotalYOfertas.appendChild(contenedorOfertasUI)


                                casaVitini.ui.vistas.alojamiento.portada.aplicaPrecioAlApartamento({
                                    apartamentoIDV: apartamentoIDV,
                                    contenedorOfertas: contenedorOFertasPorCondicion,
                                    total: totalInicial
                                })

                                const bloqueHabitaciones = document.createElement("div")
                                bloqueHabitaciones.classList.add("plaza_alojamiento_contenedorApartmento_contenedorHabitaciones")
                                bloqueHabitaciones.setAttribute("componente", "bloqueHabitaciones")
                                const checkUI = document.createElement("div")
                                checkUI.classList.add("plaza_alojamiento_contenedorApartmento_check")
                                checkUI.setAttribute("componente", "selectorApartamento")
                                checkUI.innerText = "Seleccionado"
                                bloqueApartamento.appendChild(checkUI)
                                for (const habitacion of Object.entries(habitaciones)) {
                                    const habitacionIDV = habitacion[0]
                                    const habitacionUI = habitacion[1].habitacionUI
                                    const configuracionesHabitacion = habitacion[1].configuraciones
                                    const numeroDeCamasPorHabitacion = Object.keys(configuracionesHabitacion).length
                                    const habitacionBloque = document.createElement("div")
                                    habitacionBloque.setAttribute("class", "habitacion")
                                    habitacionBloque.setAttribute("componente", "habitacacionContenedor")
                                    habitacionBloque.setAttribute("habitacionIDV", habitacionIDV)
                                    habitacionBloque.addEventListener("click", (e) => {
                                        // e.stopPropagation()
                                    })
                                    const habitacionNombre = document.createElement("div")
                                    habitacionNombre.setAttribute("class", "habitacionNombre")
                                    habitacionNombre.innerText = habitacionUI
                                    habitacionBloque.appendChild(habitacionNombre)
                                    if (numeroDeCamasPorHabitacion > 1) {
                                        const infoHabitacion = document.createElement("div")
                                        infoHabitacion.classList.add("plaza_alojamiento_contenedorHabitacion_infoSeleccionTipoCama")
                                        infoHabitacion.setAttribute("componente", "infoSeleccionCama")
                                        infoHabitacion.innerText = "Selecciona el tipo de cama para la habitación."
                                        habitacionBloque.appendChild(infoHabitacion)
                                    }
                                    if (numeroDeCamasPorHabitacion === 1) {
                                        const infoHabitacion = document.createElement("div")
                                        infoHabitacion.classList.add("plaza_alojamiento_contenedorHabitacion_infoSeleccionTipoCama")
                                        infoHabitacion.innerText = "Esta habitación solo dispone de este tipo de cama. Al seleccionar este apartamento, se selecciona esta cama para esta habitación"
                                        habitacionBloque.appendChild(infoHabitacion)
                                    }
                                    const bloqueHabitacionCamas = document.createElement("div")
                                    bloqueHabitacionCamas.setAttribute("class", "bloqueHabitacion")
                                    // 
                                    for (const configuracionHabitacion of Object.entries(configuracionesHabitacion)) {
                                        const camaIDV = configuracionHabitacion[1].camaIDV
                                        const camaUI = configuracionHabitacion[1].camaUI
                                        const capacidad = configuracionHabitacion[1].capacidad
                                        const bloqueCama = document.createElement("div")
                                        bloqueCama.setAttribute("class", "habitacionCamas")
                                        bloqueCama.setAttribute("camaIDV", camaIDV)
                                        bloqueCama.setAttribute("capacidadPernoctativa", capacidad)
                                        bloqueCama.setAttribute("componente", "botonSelectorCama")
                                        bloqueCama.innerText = camaUI
                                        if (numeroDeCamasPorHabitacion > 1) {
                                            bloqueCama.addEventListener("click", (e) => {
                                                e.stopPropagation()
                                                const datosCama = {
                                                    apartamentoIDV: apartamentoIDV,
                                                    habitacionIDV: habitacionIDV,
                                                    camaIDV: camaIDV
                                                }
                                                casaVitini.ui.vistas.alojamiento.seleccionarCama(datosCama)
                                            })
                                        }
                                        bloqueHabitacionCamas.appendChild(bloqueCama)
                                        habitacionBloque.appendChild(bloqueCama)
                                    }
                                    //   bloqueHabitacionCamas.appendChild(habitacionNombre)
                                    bloqueHabitaciones.appendChild(habitacionBloque)
                                }
                                // bloqueTituloImagen.appendChild(bloqueHabitaciones)
                                const metadatos = {
                                    apartamentoIDV: apartamentoIDV,
                                    instanciaUID: instanciaUID,
                                }
                                casaVitini.ui.vistas.alojamiento.portada.obtenerImagenApartamento(metadatos)
                                // Imagen apartamento aqui
                            }

                            const marcoBotonFlotanteIrAResumenReserva = document.createElement("div")
                            marcoBotonFlotanteIrAResumenReserva.classList.add("plaza_alojamiento_marcoBotonIreAResumenReserva")
                            marcoBotonFlotanteIrAResumenReserva.setAttribute("componente", "marcoFlotanteIrAResumen")
                            const marcoIntermedio = document.createElement("div")
                            marcoIntermedio.classList.add("plaza_alojamiento_marcoIntermedioBotonIrResumenReserva")
                            const botonResumenReserva = document.createElement("div")
                            botonResumenReserva.classList.add("plaza_alojamiento_boronResumenReservaEnMarcoFlotante")
                            botonResumenReserva.classList.add("parpadeaFondoSemiBlanco")
                            botonResumenReserva.setAttribute("componente", "botonIrAResumenReserva")
                            //botonResumenReserva.innerText = "Ir al resumen de mi reserva"
                            botonResumenReserva.addEventListener("click", casaVitini.ui.vistas.alojamiento.portada.iraResumenReserva)
                            marcoIntermedio.append(botonResumenReserva)

                            const contenedorEstadoSeleccion = document.createElement("div")
                            contenedorEstadoSeleccion.setAttribute("contenedor", "estadoSeleccion")
                            botonResumenReserva.appendChild(contenedorEstadoSeleccion)

                            const info = document.createElement("div")
                            info.classList.add(
                                "negrita"
                            )
                            info.innerText = "Ir al resumen de mi reserva"
                            botonResumenReserva.appendChild(info)

                            marcoBotonFlotanteIrAResumenReserva.append(marcoIntermedio)
                            superBloqueReservaRenderizado.appendChild(marcoBotonFlotanteIrAResumenReserva)
                        }

                    },
                    obtenerImagenApartamento: async (metadatos) => {
                        const apartamentoIDV = metadatos.apartamentoIDV
                        const instanciaUIDDestino = metadatos.instanciaUID
                        const transacccion = {
                            zona: "componentes/imagenDelApartamento",
                            apartamentoIDV: apartamentoIDV
                        }
                        const respuestaServidor = await casaVitini.shell.servidor(transacccion)
                        if (respuestaServidor?.error) {
                            return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                        }
                        if (respuestaServidor?.ok) {
                            const contenedorApartamentoRenderizado = document.querySelector(`[apartamentoIDV=${apartamentoIDV}][instanciaUID="${instanciaUIDDestino}"]`)
                            if (contenedorApartamentoRenderizado) {
                                const imagen = respuestaServidor.imagen
                                const detectarTipoDeImagen = (base64String) => {
                                    const binarioMagicoPNG = new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]);
                                    const binarioMagicoJPEG = new Uint8Array([255, 216, 255]);
                                    const binarioMagicoTIFF = new Uint8Array([73, 73, 42]);
                                    const arrayBuffer = Uint8Array.from(atob(base64String), c => c.charCodeAt(0));
                                    const buffer = new Uint8Array(arrayBuffer);
                                    if (buffer.subarray(0, 8).every((value, index) => value === binarioMagicoPNG[index])) {
                                        return "PNG";
                                    } else if (buffer.subarray(0, 3).every((value, index) => value === binarioMagicoJPEG[index])) {
                                        return "JPEG";
                                    } else if (buffer.subarray(0, 3).every((value, index) => value === binarioMagicoTIFF[index])) {
                                        return "TIFF";
                                    } else {
                                        return "Tipo de imagen desconocido";
                                    }
                                };
                                const tipoDeImagen = detectarTipoDeImagen(imagen);
                                contenedorApartamentoRenderizado.style.backgroundImage = `url(data:image/${tipoDeImagen.toLowerCase()};base64,${imagen})`;
                                contenedorApartamentoRenderizado.style.backgroundSize = "cover";
                                contenedorApartamentoRenderizado.style.backgroundPosition = "center";
                                contenedorApartamentoRenderizado.style.backgroundRepeat = "no-repeat";
                            }
                        }
                    },
                    iraResumenReserva: function () {
                        const reservaLocal = {}
                        const fechaEntradaVolatil_ISO = document.querySelector("[calendario=entrada]").getAttribute("memoriaVolatil")
                        const fechaSalidaVolatil_ISO = document.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")

                        reservaLocal.fechaEntrada = fechaEntradaVolatil_ISO
                        reservaLocal.fechaSalida = fechaSalidaVolatil_ISO
                        reservaLocal.alojamiento = {}
                        const apartamentosSeleccionados = document.querySelectorAll("[estadoApartamento=seleccionado]")
                        apartamentosSeleccionados.forEach((apartamento) => {
                            const apartamentoIDV = apartamento.getAttribute("apartamentoIDV")
                            const apartamentoUI = apartamento.getAttribute("apartamentoUI")
                            const habitaciones = JSON.parse(apartamento.getAttribute("habitaciones"))
                            reservaLocal.alojamiento[apartamentoIDV] = {
                                apartamentoUI: apartamentoUI,
                                habitaciones: habitaciones
                            }
                        })
                        sessionStorage.setItem("reservaNoConfirmada", JSON.stringify(reservaLocal))
                        const entrada = {
                            vista: "/alojamiento/resumen",
                            tipoOrigen: "menuNavegador"
                        }
                        return casaVitini.shell.navegacion.controladorVista(entrada)
                    },
                    componenteSelectorCamas: (metadatos) => {
                        let capacidadPernoctativa = metadatos.getAttribute("capacidadPernoctativa")
                        let habitacionIDV = metadatos.getAttribute("habitacionIDV")
                        let habitacionUI = metadatos.getAttribute("habitacionUI")
                        let camaNombre = metadatos.getAttribute("camaUI")
                        let camaIDV = metadatos.getAttribute("camaIDV")
                        let camaUI = metadatos.getAttribute("camaUI")
                        let camaSeleccionada = metadatos
                        let apartamentoIDV = metadatos.getAttribute("apartamentoIDV")
                        let apartamentoUI = metadatos.getAttribute("apartamentoUI")
                        let selectorHabitacion = document.querySelector(`.bloquePernoctacion .bloqueInquilino[apartamentoIDV='${apartamentoIDV}']  .bloqueHabitacionInquilino[bloqueHabitacionID_Compartido='${habitacionIDV}']`)
                        let bloqueInquilinoSelector = document.querySelector(`.bloquePernoctacion .bloqueInquilino[apartamentoIDV='${apartamentoIDV}']`)
                        let selectorBotonResumenReserva = document.querySelector(".bloquePasosReservaNuevo .bloqueBotonResumenReserva")
                        if (selectorHabitacion) {
                            selectorHabitacion.remove()
                        }
                        camaSeleccionada.style.background = "red"
                        camaSeleccionada.style.color = "white"
                        camaSeleccionada.setAttribute("estadoCama", "camaSeleccionada")
                        // Aqui hay que borrar las camas
                        let bloqueInquilino = document.createElement("div")
                        bloqueInquilino.setAttribute("class", "bloqueInquilino")
                        bloqueInquilino.setAttribute("apartamentoIDV", apartamentoIDV)
                        bloqueInquilino.setAttribute("apartamentoUI", apartamentoUI)
                        bloqueInquilino.setAttribute("componente", "habitacionPernoctantes")
                        bloqueInquilino.setAttribute("zona", "apartamentoPernoctacion")
                        let tituloInquilino = document.createElement("p")
                        tituloInquilino.setAttribute("class", "tituloInquilino")
                        tituloInquilino.innerText = "Anadir pernoctantes en " + apartamentoUI
                        bloqueInquilino.appendChild(tituloInquilino)
                        let bloqueHabitacion = document.createElement("div")
                        bloqueHabitacion.setAttribute("class", "bloqueHabitacionInquilino")
                        bloqueHabitacion.setAttribute("habitacionIDV", habitacionIDV)
                        bloqueHabitacion.setAttribute("habitacionUI", habitacionUI)
                        let bloqueTituloHabitacion = document.createElement("div")
                        bloqueTituloHabitacion.setAttribute("class", "bloqueTituloHabitacion")
                        bloqueTituloHabitacion.setAttribute("camaIDV", camaIDV)
                        bloqueTituloHabitacion.setAttribute("camaUI", camaUI)
                        bloqueTituloHabitacion.innerText = habitacionUI + " - " + camaUI
                        bloqueHabitacion.appendChild(bloqueTituloHabitacion)
                        if (!bloqueInquilinoSelector) {
                            bloqueInquilino.appendChild(bloqueHabitacion)
                        } else {
                            bloqueInquilinoSelector.appendChild(bloqueHabitacion)
                        }
                        for (let ciclo = 0; ciclo < capacidadPernoctativa; ciclo++) {
                            let bloqueNombrePasaporte = document.createElement("div")
                            bloqueNombrePasaporte.setAttribute("class", "bloqueNombrePasaporte")
                            bloqueNombrePasaporte.setAttribute("bloquePernoctante", "bloquePernoctante")
                            let campoNombreInquilino = document.createElement("input")
                            campoNombreInquilino.setAttribute("class", "campoNombreInquilino campoSuperior")
                            campoNombreInquilino.setAttribute("pernoctante", "nombre")
                            campoNombreInquilino.setAttribute("placeholder", "Nombre y apellidos")
                            bloqueNombrePasaporte.appendChild(campoNombreInquilino)
                            let campoPasaporte = document.createElement("input")
                            campoPasaporte.setAttribute("class", "campoNombreInquilino campoInferior")
                            campoPasaporte.setAttribute("pernoctante", "pasaporte")
                            campoPasaporte.setAttribute("placeholder", "Documento de identificación")
                            bloqueNombrePasaporte.appendChild(campoPasaporte)
                            bloqueHabitacion.appendChild(bloqueNombrePasaporte)
                        }
                        let bloquePernoctacion = document.querySelector(".bloquePernoctacion")
                        if (!bloqueInquilinoSelector) {
                            bloquePernoctacion.appendChild(bloqueInquilino)
                        }
                        if (!selectorBotonResumenReserva) {
                            let bloqueBotonResumenReserva = document.createElement("div")
                            bloqueBotonResumenReserva.setAttribute("class", "bloqueBotonResumenReserva")
                            let BotonResumenReserva = document.createElement("div")
                            BotonResumenReserva.setAttribute("class", "botonResumenReserva")
                            BotonResumenReserva.innerText = "Ir al resumen de la reserva"
                            BotonResumenReserva.addEventListener("click", casaVitini.ui.vistas.alojamiento.iraResumenReserva)
                            bloqueBotonResumenReserva.appendChild(BotonResumenReserva)
                            let bloquePasosReserva = document.querySelector(".bloquePasosReservaNuevo")
                            bloquePasosReserva.appendChild(bloqueBotonResumenReserva)
                        }
                    },
                    actualizarPreciosPorSeleccion: async () => {
                        const fechaEntrada = document.querySelector("[calendario=entrada]").getAttribute("memoriaVolatil")
                        const fechaSalida = document.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")

                        const contenedorSobreBloque = document.querySelector("[componente=superBloque]")
                        const selectorTodosApartamentos = contenedorSobreBloque.querySelectorAll("[apartamentoIDV]")
                        const selectorApartamentosSiSeleccionados = contenedorSobreBloque.querySelectorAll("[estadoApartamento=seleccionado]")
                        const selectorApartamentosNoSeleccionados = contenedorSobreBloque.querySelectorAll("[apartamentoIDV]:not([estadoApartamento=seleccionado])")

                        const apartamentosSeleccionados = []
                        selectorApartamentosSiSeleccionados.forEach((apartamento) => {
                            const apartamentoIDV = apartamento.getAttribute("apartamentoIDV")
                            apartamentosSeleccionados.push(apartamentoIDV)
                        })
                        if (apartamentosSeleccionados.length === 1) {
                            selectorTodosApartamentos.forEach((apartamento) => {
                                const apartamentoIDV = apartamento.getAttribute("apartamentoIDV")
                                const totalInicial = apartamento.querySelector("[componente=valorTotal]").getAttribute("totalInicial")
                                const contenedorOfertasInicial = JSON.parse(apartamento.querySelector("[componente=valorTotal]").getAttribute("contenedorOfertasInicial")) || []
                                casaVitini.ui.vistas.alojamiento.portada.aplicaPrecioAlApartamento({
                                    apartamentoIDV: apartamentoIDV,
                                    contenedorOfertas: contenedorOfertasInicial,
                                    total: totalInicial
                                })
                            })

                        } else if (apartamentosSeleccionados.length > 1) {
                            selectorApartamentosNoSeleccionados.forEach((apartamento) => {
                                const apartamentoIDV = apartamento.getAttribute("apartamentoIDV")
                                const totalInicial = apartamento.querySelector("[componente=valorTotal]").getAttribute("totalInicial")
                                const contenedorOfertasInicial = JSON.parse(apartamento.querySelector("[componente=valorTotal]").getAttribute("contenedorOfertasInicial")) || []
                                casaVitini.ui.vistas.alojamiento.portada.aplicaPrecioAlApartamento({
                                    apartamentoIDV: apartamentoIDV,
                                    contenedorOfertas: contenedorOfertasInicial,
                                    total: totalInicial
                                })
                            })

                            const contenedorInstanciasUID = {}
                            apartamentosSeleccionados.forEach((apartamentoIDV) => {
                                const contenedorApartamento = contenedorSobreBloque.querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)
                                const instanciaUID_proceso = casaVitini.utilidades.codigoFechaInstancia()
                                contenedorInstanciasUID[apartamentoIDV] = instanciaUID_proceso
                                contenedorApartamento.setAttribute("instanciaUID", instanciaUID_proceso)
                                const selectorTotalUI = contenedorApartamento.querySelector(`[componente=valorTotal]`)
                                selectorTotalUI.innerText = "Calculando precio..."
                                const selectorContenedorOfertas = contenedorApartamento.querySelector("[contenedor=ofertas]")
                                selectorContenedorOfertas.innerHTML = null

                            })

                            const respuestaServidor = await casaVitini.shell.servidor({
                                zona: "plaza/reservas/preciosPorSeleccion",
                                fechaEntrada: fechaEntrada,
                                fechaSalida: fechaSalida,
                                apartamentosIDVARRAY: apartamentosSeleccionados
                            })


                            if (respuestaServidor?.error) {
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor.error)
                            }
                            if (respuestaServidor.ok) {
                                const preciosPorSeleccion = respuestaServidor.preciosPorSeleccion
                                const desgloseFinanciero = respuestaServidor.desgloseFinanciero
                                const contenedorOFertasPorCondicion = desgloseFinanciero.contenedorOfertas.entidades.reserva.ofertas.porCondicion



                                const contenedorSimplificadoOfertas = []
                                contenedorOFertasPorCondicion.forEach((contenedorOferta, i) => {
                                    if (i < 2) {
                                        const nombreOferta = contenedorOferta.oferta.nombreOferta
                                        const estructura = {
                                            nombreOferta,
                                            contenedorOferta
                                        }
                                        contenedorSimplificadoOfertas.push(estructura)
                                    }
                                })


                                apartamentosSeleccionados.forEach((apartamentoIDV) => {
                                    const instanciaUID = contenedorInstanciasUID[apartamentoIDV]
                                    const selectorContenedorApartamento = document.querySelector(`[apartamentoIDV="${apartamentoIDV}"][instanciaUID="${instanciaUID}"]`)
                                    if (selectorContenedorApartamento) {
                                        const valorFinalUI = preciosPorSeleccion[apartamentoIDV].precioEnBaseASeleccion
                                        casaVitini.ui.vistas.alojamiento.portada.aplicaPrecioAlApartamento({
                                            apartamentoIDV,
                                            contenedorOfertas: contenedorOFertasPorCondicion,
                                            total: valorFinalUI
                                        })
                                    }
                                })
                            }
                        }
                    },
                    aplicaPrecioAlApartamento: (data) => {
                        const apartamentoIDV = data.apartamentoIDV
                        const total = data.total
                        const contenedorOfertas = data.contenedorOfertas


                        const selectorApartamento = document.querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)
                        const selectorTotalUI = selectorApartamento.querySelector(`[componente=valorTotal]`)
                        const selectorContenedorOfertas = selectorApartamento.querySelector(`[contenedor=ofertas]`)
                        selectorContenedorOfertas.innerHTML = null
                        selectorTotalUI.innerText = `${total}$ Total`

                        const contenedorSimplificadoOfertas = []
                        contenedorOfertas.forEach((contenedorOferta, i) => {
                            // if (i < 2) {
                            const nombreOferta = contenedorOferta.oferta.nombreOferta
                            const estructura = {
                                nombreOferta,
                                contenedorOferta
                            }
                            contenedorSimplificadoOfertas.push(estructura)
                            // }
                        })

                        contenedorSimplificadoOfertas.forEach((contenedorOferta) => {
                            const nombreOferta = contenedorOferta.nombreOferta
                            const contenedorOfertaIndividual = document.createElement("a")
                            contenedorOfertaIndividual.setAttribute("contenedor", "ofertaIndividual")
                            contenedorOfertaIndividual.classList.add(
                                "botonOfertaEnApartamento",
                            )
                            contenedorOfertaIndividual.innerText = nombreOferta
                            contenedorOfertaIndividual.addEventListener("click", (e) => {
                                e.preventDefault()
                                e.stopPropagation()
                                e.stopImmediatePropagation()
                                const main = document.querySelector("main")
                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                ui.style.zIndex = "300"
                                const contenedor = ui.querySelector("[componente=contenedor]")
                                main.appendChild(ui)


                                const tituloUI = document.createElement("p")
                                tituloUI.classList.add("titulo")
                                tituloUI.setAttribute("componente", "titulo")
                                tituloUI.innerText = "Detalles de la oferta seleccionada"
                                contenedor.appendChild(tituloUI)

                                const botonCancelar1 = document.createElement("div")
                                botonCancelar1.classList.add("boton")
                                botonCancelar1.style.borderRadius = "100px"
                                botonCancelar1.setAttribute("boton", "cancelar")
                                botonCancelar1.innerText = "Volver a la selección de apartamentos"
                                botonCancelar1.addEventListener("click", () => {
                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                })
                                contenedor.appendChild(botonCancelar1)

                                const ofertaUI = casaVitini.ui.vistas.alojamiento.portada.ofertas.ofertaUI({
                                    contenedorOferta: contenedorOferta.contenedorOferta.oferta
                                })
                                contenedor.appendChild(ofertaUI)

                                const botonCancelar = document.createElement("div")
                                botonCancelar.classList.add("boton")
                                botonCancelar.setAttribute("boton", "cancelar")
                                botonCancelar.style.borderRadius = "100px"
                                botonCancelar.innerText = "Volver a la selección de apartamentos"
                                botonCancelar.addEventListener("click", () => {
                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                })
                                contenedor.appendChild(botonCancelar)

                            })
                            selectorContenedorOfertas.appendChild(contenedorOfertaIndividual)
                        })


                        // if (contenedorOfertas.length > 2) {
                        //     const contenedorVerResto = document.createElement("a")
                        //     contenedorVerResto.innerText = "Ver el resto de ofertas aplicadas"
                        //     selectorContenedorOfertas.appendChild(contenedorVerResto)
                        // }


                    },
                    ofertas: {
                        ofertaUI: function (data) {

                            const contenedorOferta = data.contenedorOferta
                            const nombreOferta = contenedorOferta.nombreOferta
                            const fechaInicio = contenedorOferta.fechaInicio
                            const fechaFinal = contenedorOferta.fechaFinal
                            const entidadIDV = contenedorOferta.entidadIDV
                            const estadoIDV = contenedorOferta.estadoIDV
                            const zonaIDV = contenedorOferta.zonaIDV
                            const condicionesArray = contenedorOferta.condicionesArray
                            const descuentosJSON = contenedorOferta.descuentosJSON
                            const estadoUI = {
                                activado: "Activada",
                                desactivado: "Desactivada"
                            }
                            const entidadUI = {
                                reserva: "Reserva"
                            }
                            const zonaUI = {
                                global: "Global",
                                privado: "privado",
                                publico: "publica"
                            }
                            const ofertaUI = document.createElement("a")
                            ofertaUI.classList.add("ofertaUI")
                            const tituloOferta = document.createElement("p")
                            tituloOferta.classList.add(
                                "ofertaUITituloOferta",
                                "negrita"
                            )
                            tituloOferta.innerText = nombreOferta
                            ofertaUI.appendChild(tituloOferta)
                            const contenedorGlobalOferta = document.createElement("div")
                            contenedorGlobalOferta.classList.add("ofertaUIContenedorGlobalOferta")
                            //-------------------------------------
                            const contenedorDetalleOferta = document.createElement("div")
                            contenedorDetalleOferta.classList.add("ofertaUIContenedorDetalles")
                            //-------------------------------------
                            const fechaInicioContenedor = document.createElement("div")
                            fechaInicioContenedor.classList.add("ofertaUIFechaContenedor")
                            const tituloFechaInicio = document.createElement("div")
                            tituloFechaInicio.classList.add("ofertaUITituloFecha")
                            tituloFechaInicio.innerText = "Fecha de inicio"
                            fechaInicioContenedor.appendChild(tituloFechaInicio)
                            const datoFechaInicio = document.createElement("div")
                            datoFechaInicio.classList.add("ofertaUIDatoFecha")
                            datoFechaInicio.innerText = fechaInicio
                            fechaInicioContenedor.appendChild(datoFechaInicio)
                            contenedorDetalleOferta.appendChild(fechaInicioContenedor)
                            const fechaFinContenedor = document.createElement("div")
                            fechaFinContenedor.classList.add("ofertaUIFechaContenedor")
                            const tituloFechaFin = document.createElement("div")
                            tituloFechaFin.classList.add("ofertaUITituloFecha")
                            tituloFechaFin.innerText = "Fecha de fin"
                            fechaFinContenedor.appendChild(tituloFechaFin)
                            const datoFechaFin = document.createElement("div")
                            datoFechaFin.classList.add("ofertaUIDatoFecha")
                            datoFechaFin.innerText = fechaFinal
                            fechaFinContenedor.appendChild(datoFechaFin)
                            contenedorDetalleOferta.appendChild(fechaFinContenedor)
                            contenedorGlobalOferta.appendChild(contenedorDetalleOferta)
                            ofertaUI.appendChild(contenedorGlobalOferta)

                            const contenedorCYD = document.createElement("div")
                            contenedorCYD.classList.add(
                                "flexVertical",
                                "gap6"
                            )
                            contenedorCYD.setAttribute("contenedor", "condicionesDescuentos")

                            const condicionesUI = this.condicionesUI({
                                condicionesArray
                            })
                            contenedorCYD.appendChild(condicionesUI)

                            const descuentoUI = this.descuentosUI({
                                descuentosJSON
                            })
                            contenedorCYD.appendChild(descuentoUI)

                            contenedorGlobalOferta.appendChild(contenedorCYD)
                            return ofertaUI
                        },
                        condicionesUI: (data) => {
                            const condicionesArray = data.condicionesArray
                            const contenedorCondiciones = document.createElement("div")
                            contenedorCondiciones.setAttribute("contenedor", "condiciones")
                            contenedorCondiciones.classList.add(
                                "flexVertical",
                                "gap6",
                                "backgroundGrey1",
                                "padding6",
                                "borderRadius14"
                            )
                            const tituloContendor = document.createElement("div")
                            tituloContendor.classList.add(
                                "negrita",
                                "padding6",

                            )
                            tituloContendor.innerText = "Condiciones de la oferta"
                            contenedorCondiciones.appendChild(tituloContendor)

                            condicionesArray.forEach((condicion) => {
                                const tipoCondicion = condicion.tipoCondicion

                                const contenedorCondicion = document.createElement("div")
                                contenedorCondicion.classList.add("contenedorCondicion")
                                contenedorCondicion.setAttribute("tipoCondicion", tipoCondicion)
                                contenedorCondicion.classList.add(
                                    "flexVertical",
                                    "padding6",
                                )
                                const definicionCondicion = casaVitini
                                    .ui
                                    .componentes
                                    .contenedorFinanciero
                                    .componentesUI
                                    .ofertas
                                    .componentesUI
                                    .definicionCondiciones({
                                        tipoCondicion,
                                        condicion
                                    })
                                contenedorCondicion.appendChild(definicionCondicion)
                                contenedorCondiciones.appendChild(contenedorCondicion)
                            })
                            return contenedorCondiciones

                        },
                        descuentosUI: (data) => {
                            const descuentosJSON = data.descuentosJSON
                            const tipoDescuento = descuentosJSON?.tipoDescuento
                            const subTipoDescuento = descuentosJSON?.subTipoDescuento

                            const contenedorDescuentos = document.createElement("div")
                            contenedorDescuentos.setAttribute("contenedor", "descuentos")
                            contenedorDescuentos.classList.add(
                                "flexVertical",
                                "backgroundGrey1",
                                "padding6",
                                "borderRadius14",
                                "gap6"
                            )
                            const tituloContendor = document.createElement("div")
                            tituloContendor.classList.add(
                                "negrita",
                                "padding6",

                            )
                            tituloContendor.innerText = "Descuentos de la oferta"
                            contenedorDescuentos.appendChild(tituloContendor)

                            const desfinicionDescuento = casaVitini
                                .ui
                                .componentes
                                .contenedorFinanciero
                                .componentesUI
                                .ofertas
                                .componentesUI.definicionDescuentos({
                                    tipoDescuento,
                                    subTipoDescuento,
                                    descuentosJSON
                                })
                            contenedorDescuentos.appendChild(desfinicionDescuento)

                            return contenedorDescuentos
                        },
                    }
                },
                resumen: {
                    arranque: async function () {
                        try {
                            document.body.style.background = "rgb(214 192 157)"
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/alojamiento/resumen")
                            const reservaLocal = JSON.parse(sessionStorage.getItem("reservaNoConfirmada"))
                            const espacioConfirmarReserva = document.querySelector("[componente=espacioConfirmarReserva]")
                            if (!reservaLocal) {
                                espacioConfirmarReserva.innerHTML = null
                                // Añadir banner informativo
                                const botonIrAReservaConfirmada = document.createElement("a")
                                botonIrAReservaConfirmada.classList.add("plaza_reservas_reservaConfirmada_banner")
                                botonIrAReservaConfirmada.innerText = "Tienes una reserva guardada en la cache de tu navegador. Esta reserva se ha guardado tras confirmar tu reserva. Para ver los detalles de la confirmación pulsa aquí. Si borras la cache de tu navegador esta información desaparecerá. Si quieres un acceso persistente puedes crear un VitiniID desde MiCasa."
                                botonIrAReservaConfirmada.setAttribute("href", "/alojamiento/reserva_confirmada")
                                botonIrAReservaConfirmada.setAttribute("vista", "/alojamiento/reserva_confirmada")
                                botonIrAReservaConfirmada.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                espacioConfirmarReserva.appendChild(botonIrAReservaConfirmada)
                                // Añadir banner informativo
                                const botonIrAlInicioDelProcesoDeReserva = document.createElement("a")
                                botonIrAlInicioDelProcesoDeReserva.classList.add("plaza_reservas_reservaConfirmada_banner")
                                botonIrAlInicioDelProcesoDeReserva.innerText = "Ir al incio del proceso de la reserva"
                                botonIrAlInicioDelProcesoDeReserva.setAttribute("href", "/alojamiento")
                                botonIrAlInicioDelProcesoDeReserva.setAttribute("vista", "/alojamiento")
                                botonIrAlInicioDelProcesoDeReserva.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                espacioConfirmarReserva.appendChild(botonIrAlInicioDelProcesoDeReserva)
                                return
                            } else {
                                const fechaEntrada = reservaLocal.fechaEntrada
                                const fechaSalida = reservaLocal.fechaSalida
                                const alojamiento = reservaLocal.alojamiento
                                const codigoDescuentoPorComprobar = reservaLocal.codigosDescuento

                                const fechaEntrada_Humana = casaVitini.utilidades.conversor.fecha_ISO_hacia_humana(fechaEntrada)
                                const fechaSalida_Humana = casaVitini.utilidades.conversor.fecha_ISO_hacia_humana(fechaSalida)

                                const ui = this.ui()
                                main.appendChild(ui)

                                const selectorFechaEntrada = ui.querySelector("[data=fechaEntrada]")
                                const selectorFechaSalida = ui.querySelector("[data=fechaSalida]")
                                selectorFechaEntrada.innerText = fechaEntrada_Humana
                                selectorFechaSalida.innerText = fechaSalida_Humana

                                const selectorAlojamiento = ui.querySelector("[data=alojamiento")
                                const contenedorApartamentos = this.bloqueAlojamientoUI(alojamiento)
                                selectorAlojamiento.appendChild(contenedorApartamentos)

                                await this.tiempoRestanteUI({
                                    selectorDestino: "[contenedor=tiempoRestante]",
                                    fechaEntrada
                                })

                                await this.renderizarServiciosPublicos()

                                if (codigoDescuentoPorComprobar) {
                                    const selectorOfertasComprobadas = document.querySelector("[contenedor=ofertasComprobadas]")
                                    const spinner = casaVitini.ui.componentes.spinnerSimple()
                                    selectorOfertasComprobadas.appendChild(spinner)
                                    await casaVitini.utilidades.ralentizador(3000)
                                    await this.contenedorCodigoDescuentos.recuperarOfertasPorArrayDeCodigos()
                                }
                                const selectorTotalFinal = ui.querySelector("[data=totalFinal]")
                                const desgloseFinanciero = await this.obtenerPrecioReserva()
                                const totalFinal = desgloseFinanciero.global.totales.totalFinal
                                selectorTotalFinal.innerText = totalFinal
                            }
                        } catch (error) {

                            casaVitini.ui.componentes.errorRenderizacionVista()
                        }
                    },
                    tiempoRestanteUI: async (data) => {

                        const selectorDestino = data.selectorDestino
                        const fechaEntrada = data.fechaEntrada
                        const selectorContenedor = document.querySelector(selectorDestino)
                        const mensajeErrorCompartido = "Ha ocurrido un error y no se han podido obtener ciertos datos. Por favor, actualiza la página."

                        const transaccion = {
                            zona: "componentes/horaLimiteDelMismoDia",
                        }
                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                        if (respuestaServidor?.error) {
                            selectorContenedor.removeAttribute("style")
                            // Container info tiempo restante para el dia de hoy
                            const contenedorBanner = document.createElement("div")
                            contenedorBanner.classList.add("plaza_reservas_reservaConfirmada_banner")
                            contenedorBanner.innerText = mensajeErrorCompartido
                            selectorContenedor.appendChild(contenedorBanner)
                        } else if (respuestaServidor.ok) {

                            const mismoDiaAceptable = respuestaServidor.mismoDiaAceptable
                            const estadoAceptacion = respuestaServidor.estadoAceptacion
                            const horaLimiteDelMismoDia = respuestaServidor.horaLimiteDelMismoDia
                            const zonaHoraria = respuestaServidor.zonaHoraria
                            const fechaActual = respuestaServidor.fechaActual

                            const mismoDia = fechaActual === fechaEntrada

                            if (mismoDia && estadoAceptacion === "no") {
                                selectorContenedor.removeAttribute("style")

                                const contenedorBanner = document.createElement("div")
                                contenedorBanner.classList.add("bannerTiempoRestante")

                                const info = document.createElement("p")
                                info.innerText = casaVitini.ui.vistas.alojamiento.componentes.mensajeNoAceptacion({
                                    horaLimite: horaLimiteDelMismoDia,
                                    zonaHoraria: zonaHoraria
                                });
                                contenedorBanner.appendChild(info)


                                selectorContenedor.appendChild(contenedorBanner)
                            } else if (mismoDia && estadoAceptacion === "si") {
                                selectorContenedor.removeAttribute("style")

                                const cuentaAtras = respuestaServidor.cuentaAtras
                                const dias = cuentaAtras.dias
                                const horas = cuentaAtras.horas
                                const minutos = cuentaAtras.minutos
                                const segundos = cuentaAtras.segundos

                                const totalCuentaAtrasEnReseugnos =
                                    (dias * 24 * 60 * 60) +  // Convertir días a segundos
                                    (horas * 60 * 60) +      // Convertir horas a segundos
                                    (minutos * 60) +         // Convertir minutos a segundos
                                    segundos;                // Segundos ya en segundos
                                const instanciaUID_cuentaAttras = casaVitini.utilidades.codigoFechaInstancia()

                                // Container info tiempo restante para el dia de hoy
                                const contenedorBanner = document.createElement("div")
                                contenedorBanner.classList.add("bannerTiempoRestante")
                                contenedorBanner.setAttribute("instanciaUID", instanciaUID_cuentaAttras)

                                const info = document.createElement("p")
                                info.innerText = `Esta reserva tiene una fecha de entrada para hoy mismo. Si deseas confirmar esta reserva tienes que confirmarla antes de ${horaLimiteDelMismoDia}. Esta hora límite para hacer la reserva con fecha de entrada para hoy está en formato 24 H en hora local de ${zonaHoraria}. Pasada esta hora, para realizar una reserva con fecha de entrada para el día de hoy, por favor, ponte en contacto con nuestro equipo. Dirígete a la sección de Contacto donde encontrarás distintas formas de comunicarte con nosotros.`
                                contenedorBanner.appendChild(info)

                                const cuentaAtrasUI = document.createElement("p")
                                cuentaAtrasUI.setAttribute("contenedor", "cuentaAtras")
                                cuentaAtrasUI.classList.add(
                                    "negrita"
                                )
                                contenedorBanner.appendChild(cuentaAtrasUI)
                                selectorContenedor.appendChild(contenedorBanner)

                                casaVitini.ui.vistas.alojamiento.componentes.controladorCuentaAtras({
                                    instanciaUID: instanciaUID_cuentaAttras,
                                    segundosDeLaCuentaAtras: totalCuentaAtrasEnReseugnos,
                                    zonaHoraria,
                                    horaLimiteDelMismoDia
                                })
                            }
                        }
                    },
                    ui: function () {

                        const main = document.querySelector("main")
                        const squareCSS = document.createElement("link")
                        squareCSS.setAttribute("rel", "stylesheet")
                        squareCSS.setAttribute("href", "/componentes/css/square.css")
                        //main.appendChild(squareCSS)

                        const contenedor = document.createElement("div")
                        contenedor.classList.add(
                            "flexVertical",
                            "gap14",
                            "padding14"
                        )
                        contenedor.setAttribute("componente", "espacioConfirmarReserva")
                        main.appendChild(contenedor)

                        const titulo = document.createElement("p")
                        titulo.classList.add(
                            "tituloBloque"
                        )
                        titulo.innerText = "Resumen de la reserva"
                        contenedor.appendChild(titulo)

                        const infoTiempoRestante = document.createElement("div")
                        infoTiempoRestante.setAttribute("contenedor", "tiempoRestante")
                        infoTiempoRestante.style.display = "none"
                        contenedor.appendChild(infoTiempoRestante)

                        const infoResumenReserva = document.createElement("p")
                        infoResumenReserva.classList.add(
                            "padding6"
                        )
                        infoResumenReserva.innerText = "Aquí tienes el resumen de tu reserva. Es importante para nosotros que tus fechas de entrada y salida sean exactamente como las planeaste, así que tómate un momento para verificarlas. Además, te recomendaría revisar los detalles del alojamiento. Queremos asegurarnos de que estés completamente satisfecho con tu elección, así que asegúrate de que los apartamentos estén especificados  correctamente. Si hay algo más en lo que podamos ayudarte o si tienes alguna pregunta, no dudes en ponerte en contacto con nosotros."
                        contenedor.appendChild(infoResumenReserva)

                        const contenedorFechas = document.createElement("div")
                        contenedorFechas.classList.add(
                            "blackgroundWhite30O",
                            "flexHorizontal",
                            "borderRadius14",
                            "padding14",
                            "flexJustificacion_spacearound"
                        )
                        contenedorFechas.setAttribute("contenedor", "fechas")
                        contenedor.appendChild(contenedorFechas)

                        const fechaEntradaContenedor = document.createElement("div")
                        fechaEntradaContenedor.classList.add(
                            "bloqueResumenDia",
                        )
                        contenedorFechas.appendChild(fechaEntradaContenedor)

                        const fechaEntradaTitulo = document.createElement("p")
                        fechaEntradaTitulo.classList.add(
                            "negrita",
                            "textoCentrado"
                        )
                        fechaEntradaTitulo.innerText = "Fecha de entrada"
                        fechaEntradaContenedor.appendChild(fechaEntradaTitulo)

                        const fechaEntradaUI = document.createElement("p")
                        fechaEntradaUI.setAttribute("data", "fechaEntrada")
                        fechaEntradaUI.classList.add(
                            "negrita",
                            "textoCentrado"
                        )
                        fechaEntradaUI.innerText = "data"
                        fechaEntradaContenedor.appendChild(fechaEntradaUI)

                        const fechaSalidaContenedor = document.createElement("div")
                        fechaSalidaContenedor.classList.add(
                            "bloqueResumenDia",
                        )
                        contenedorFechas.appendChild(fechaSalidaContenedor)

                        const fechaSalidaTitulo = document.createElement("p")
                        fechaSalidaTitulo.classList.add(
                            "negrita",
                            "textoCentrado"
                        )
                        fechaSalidaTitulo.innerText = "Fecha de salida"
                        fechaSalidaContenedor.appendChild(fechaSalidaTitulo)

                        const fechaSalidaUI = document.createElement("p")
                        fechaSalidaUI.setAttribute("data", "fechaSalida")
                        fechaSalidaUI.classList.add(
                            "negrita",
                            "textoCentrado"
                        )
                        fechaSalidaUI.innerText = "data"
                        fechaSalidaContenedor.appendChild(fechaSalidaUI)


                        const contenedorAlojamiento = document.createElement("div")
                        contenedorAlojamiento.setAttribute("data", "alojamiento")
                        contenedor.appendChild(contenedorAlojamiento)

                        const tituloAlojamiento = document.createElement("p")
                        tituloAlojamiento.classList.add(
                            "tituloBloqueSeccion"
                        )
                        tituloAlojamiento.innerText = "Alojamiento"
                        contenedor.appendChild(contenedorAlojamiento)


                        const contenedorServicios = () => {
                            const contenedor = document.createElement("div")
                            contenedor.classList.add(
                                "flexVertical",
                                // "padding6",
                                "gap6"
                            )

                            const titulo = document.createElement("p")
                            titulo.classList.add(
                                "negrita",
                                "textoCentrado"
                            )
                            titulo.innerText = "Servicios selecionables"
                            contenedor.appendChild(titulo)

                            const info = document.createElement("p")
                            info.classList.add(
                                "padding6"
                            )
                            info.innerText = "Para garantizar una experiencia inolvidable en Casa Vitini, le ofrecemos la opción de añadir paquetes de servicios exclusivos a su reserva. Estos servicios adicionales están diseñados para mejorar y personalizar su estancia, proporcionando un nivel superior de comodidad y entretenimiento. Puede elegir entre una variedad de opciones, que incluyen desde tratamientos de spa relajantes, sesiones de pilates entre otras actividades hasta experiencias gastronómicas únicas, actividades al aire libre, y servicios personalizados como transporte privado o asistencia en la planificación de eventos especiales. Cada paquete ha sido cuidadosamente seleccionado para complementar su estadía, asegurando que disfrute al máximo de todo lo que Casa Vitini tiene para ofrecer. Con estos servicios, su visita no solo será una estancia, sino una experiencia completa llena de satisfacción."
                            contenedor.appendChild(info)


                            const contenedorServicios = document.createElement("div")
                            contenedorServicios.setAttribute("contenedor", "servicios")
                            contenedorServicios.classList.add(
                                "flexVertical",
                                "gap6",
                                "padding6",
                                "borderRadius16",
                                "borderGrey1"
                            )
                            contenedor.appendChild(contenedorServicios)

                            return contenedor
                        }

                        contenedor.appendChild(contenedorServicios())

                        const contenedorTitular = document.createElement("div")
                        contenedorTitular.classList.add(
                            "flexVertical",
                            "gap14",

                        )
                        contenedor.appendChild(contenedorTitular)

                        const tituloTitular = document.createElement("p")
                        tituloTitular.classList.add(
                            "textoCentrado",
                            "negrita"
                        )
                        contenedorTitular.appendChild(tituloTitular)

                        const infoTitular = document.createElement("p")
                        infoTitular.classList.add(
                            "padding6"
                        )
                        infoTitular.innerText = "Para garantizar una reserva exitosa, por favor sigue las siguientes instrucciones: Ingresa los datos del titular de la reserva. Si estás viajando desde fuera de Nicaragua, proporciona los detalles de tu pasaporte. Si eres residente de Nicaragua, proporciona tu número de identificación nacional. Es crucial asegurar la precisión de esta información para confirmar tu reserva de manera eficiente y proporcionarte una experiencia fluida. Agradecemos tu atención a estos detalles. ¡Gracias!"
                        contenedorTitular.appendChild(infoTitular)

                        const tituloTitularInfo = document.createElement("p")
                        tituloTitularInfo.innerText = "Nombre completo del titular de la reserva"
                        tituloTitularInfo.classList.add(
                            "paddinHorizontal6"
                        )
                        contenedorTitular.appendChild(tituloTitularInfo)

                        const campoNombreTitular = document.createElement("input")
                        campoNombreTitular.classList.add(
                            "campoTitular"
                        )
                        campoNombreTitular.placeholder = "Nombre del titular de la reserva"
                        campoNombreTitular.setAttribute("campo", "nombreTitular")
                        contenedorTitular.appendChild(campoNombreTitular)

                        const tituloPasaporteInfo = document.createElement("p")
                        tituloPasaporteInfo.innerText = "Pasaporte o documento nacional de identificación del titular de la reserva"
                        tituloPasaporteInfo.classList.add(
                            "paddinHorizontal6"
                        )
                        contenedorTitular.appendChild(tituloPasaporteInfo)


                        const campoPasaporteTitular = document.createElement("input")
                        campoPasaporteTitular.classList.add(
                            "campoTitular"
                        )
                        campoPasaporteTitular.placeholder = "Pasaporte del titular de la reserva"
                        campoPasaporteTitular.setAttribute("campo", "pasaporteTitular")
                        contenedorTitular.appendChild(campoPasaporteTitular)

                        const tituloTelefonoInfo = document.createElement("p")
                        tituloTelefonoInfo.innerText = "Telefono del titular de la reserva"
                        tituloTelefonoInfo.classList.add(
                            "paddinHorizontal6"
                        )
                        contenedorTitular.appendChild(tituloTelefonoInfo)


                        const campoTelefonoTitular = document.createElement("input")
                        campoTelefonoTitular.classList.add(
                            "campoTitular"
                        )
                        campoTelefonoTitular.placeholder = "Teléfono del titular de la reserva"
                        campoTelefonoTitular.setAttribute("campo", "telefonoTitular")
                        contenedorTitular.appendChild(campoTelefonoTitular)

                        const tituloMailInfo = document.createElement("p")
                        tituloMailInfo.innerText = "Correo electrónico titular de la reserva"
                        tituloMailInfo.classList.add(
                            "paddinHorizontal6"
                        )
                        contenedorTitular.appendChild(tituloMailInfo)

                        const campoMailTitular = document.createElement("input")
                        campoMailTitular.classList.add(
                            "campoTitular"
                        )
                        campoMailTitular.placeholder = "Correo del titular de la reserva"
                        campoMailTitular.setAttribute("campo", "correoTitular")
                        contenedorTitular.appendChild(campoMailTitular)

                        contenedor.appendChild(this.contenedorCodigoDescuentos.ui())

                        const contenedorTotal = document.createElement("div")
                        contenedorTotal.classList.add(
                            "flexVertical",
                            "gap14"
                        )
                        contenedor.appendChild(contenedorTotal)


                        const infoTotal = document.createElement("p")
                        infoTotal.classList.add(
                            "textoCentrado"
                        )
                        infoTotal.innerText = "Total a pagar:"
                        contenedorTotal.appendChild(infoTotal)


                        const totalData = document.createElement("p")
                        totalData.setAttribute("data", "totalFinal")
                        totalData.classList.add(
                            "textoCentrado",
                            "negrita",
                            "textSize16"
                        )
                        totalData.innerText = "Calculando..."
                        contenedorTotal.appendChild(totalData)

                        const botonDesplegarDesglose = document.createElement("p")
                        botonDesplegarDesglose.classList.add(
                            "textoCentrado",
                            "botonV1",
                            "comportamientoBoton"
                        )

                        botonDesplegarDesglose.innerText = "Ver el desglose detallado del total"
                        botonDesplegarDesglose.addEventListener("click", this.desplegarDesgloseFinancieroBajoDemanda)
                        contenedorTotal.appendChild(botonDesplegarDesglose)

                        const infoPreConfirmar = document.createElement("p")
                        infoPreConfirmar.classList.add(
                            "padding14"
                        )
                        infoPreConfirmar.innerText = "Para confirmar la reserva, haz clic en el botón de abajo. Una vez confirmada la reserva, los apartamentos quedarán bloqueados y tendrás 48 horas para realizar la transferencia bancaria. Si no realizas la transferencia bancaria en ese plazo, los apartamentos volverán a estar disponibles para reservar."
                        contenedor.appendChild(infoPreConfirmar)

                        const infoAceptacion = document.createElement("p")
                        infoAceptacion.classList.add(
                            "padding14"
                        )
                        infoAceptacion.innerText = "Confirmar esta reserva implica la aceptación de nuestras políticas de privacidad y el consentimiento para su aplicación, así como nuestras políticas de cancelación de la reserva. Por favor, lea detenidamente toda la información sobre nuestras políticas de privacidad, el uso de cookies y las condiciones de uso haciendo clic aquí."
                        contenedor.appendChild(infoAceptacion)

                        const portilicasCancelacion = document.createElement("a")
                        portilicasCancelacion.classList.add(
                            "areaSinDecoracionPredeterminada",
                            "padding14"
                        )
                        portilicasCancelacion.href = "/politicas/cancelacion"
                        portilicasCancelacion.target = "_blank"
                        portilicasCancelacion.innerText = "Ver políticas de cancelación de la reserva. (Se abrirá otra ventana del navegador.)"
                        contenedor.appendChild(portilicasCancelacion)

                        const portilicasPrivacida = document.createElement("a")
                        portilicasPrivacida.classList.add(
                            "areaSinDecoracionPredeterminada",
                            "padding14"
                        )
                        portilicasPrivacida.href = "/politicas/privacidad"
                        portilicasPrivacida.target = "_blank"
                        portilicasPrivacida.innerText = "Ver políticas de privacidad, condiciones de uso y gestión de cookies. (Se abrirá otra ventana del navegador.)"
                        contenedor.appendChild(portilicasPrivacida)

                        const botonConfirmar = document.createElement("div")
                        botonConfirmar.classList.add(
                            "blackgroundWhite30O",
                            "textoCentrado",
                            "borderRadius14",
                            "padding14",
                            "comportamientoBoton",
                            "negrita",
                            "noSelecionable",
                            "retonDefault"
                        )
                        botonConfirmar.setAttribute("boton", "preConfirmar")
                        botonConfirmar.innerText = "Confirmar reserva"
                        botonConfirmar.addEventListener("click", this.preConfirmar)
                        contenedor.appendChild(botonConfirmar)
                        return contenedor

                    },
                    bloqueAlojamientoUI: function (alojamiento) {
                        const contenedor = document.createElement("div")
                        contenedor.classList.add(
                            "flexVertical",
                            "gap14",

                        )

                        for (const apartamento of Object.entries(alojamiento)) {
                            const apartamentoIDV = apartamento[0]
                            const apartamentoUI = apartamento[1].apartamentoUI
                            const habitaciones = apartamento[1].habitaciones
                            const bloqueApartamento = document.createElement("div")


                            bloqueApartamento.setAttribute("class", "bloqueApartamenteo")
                            bloqueApartamento.setAttribute("apartamentoIDV", apartamentoIDV)
                            const tituloApartamentoComponenteUI = document.createElement("p")
                            tituloApartamentoComponenteUI.setAttribute("class", "tituloMedia")
                            tituloApartamentoComponenteUI.setAttribute("apartamentoUI", apartamentoUI)
                            tituloApartamentoComponenteUI.innerText = apartamentoUI
                            bloqueApartamento.appendChild(tituloApartamentoComponenteUI)
                            const contenedorHabitaciones = document.createElement("div")
                            contenedorHabitaciones.classList.add("plaza_alojamiento_resumenReserva_contenedorHabitacaciones")
                            for (const habitacion of Object.entries(habitaciones)) {
                                const habitacionIDV = habitacion[0]
                                const habitacionUI = habitacion[1].habitacionUI
                                const configuracionesCama = habitacion[1].configuraciones
                                const bloqueHabitaciones = document.createElement("div")
                                bloqueHabitaciones.classList.add("plaza_alojamiento_resumenReserva_bloqueHabitaciones")
                                const bloqueHabitacion = document.createElement("div")
                                bloqueHabitacion.setAttribute("class", "plaza_alojamiento_resumenReserva_bloqueHabitacion")
                                bloqueHabitacion.setAttribute("habitacionIDV", habitacionIDV)
                                bloqueApartamento.appendChild(bloqueHabitacion)
                                const tituloHabitacion = document.createElement("p")
                                tituloHabitacion.setAttribute("class", "tituloBloqueHabitacion")
                                tituloHabitacion.setAttribute("habitacionUI", habitacionUI)
                                tituloHabitacion.innerText = habitacionUI
                                bloqueHabitacion.appendChild(tituloHabitacion)
                                if (Object.entries(configuracionesCama).length > 1) {
                                    const selectorCama = document.createElement("select")
                                    selectorCama.classList.add("selectorCama")
                                    selectorCama.setAttribute("componente", "selectorCama")
                                    selectorCama.addEventListener("change", (e) => {
                                        const apartamentoIDV = e.target.closest("[apartamentoIDV]").getAttribute("apartamentoIDV")
                                        const habitacionIDV = e.target.closest("[habitacionIDV]").getAttribute("habitacionIDV")
                                        const camaIDV = e.target.value
                                        const camaUI = e.target.options[e.target.selectedIndex].getAttribute("camaUI");
                                        const reservaIN = JSON.parse(sessionStorage.getItem("reservaNoConfirmada"))

                                        reservaIN.alojamiento[apartamentoIDV].habitaciones[habitacionIDV].camaSeleccionada = {
                                            camaIDV: camaIDV,
                                            camaUI: camaUI
                                        }
                                        const reservaOUT = JSON.stringify(reservaIN)
                                        sessionStorage.setItem("reservaNoConfirmada", reservaOUT)
                                    })
                                    const opcionPreterminada = document.createElement("option");
                                    opcionPreterminada.value = "";
                                    opcionPreterminada.selected = "true"
                                    opcionPreterminada.disabled = "true"
                                    opcionPreterminada.text = "Seleccionar tipo de cama";
                                    selectorCama.add(opcionPreterminada);
                                    for (const configuracionCama of Object.entries(configuracionesCama)) {
                                        const camaIDV = configuracionCama[1].camaIDV
                                        const camaUI = configuracionCama[1].camaUI
                                        const capacidad = configuracionCama[1].capacidad
                                        const opcion = document.createElement("option");
                                        opcion.value = camaIDV;
                                        opcion.setAttribute("camaUI", camaUI)
                                        opcion.text = camaUI + ` (Capacidad: ${capacidad})`;
                                        selectorCama.add(opcion);
                                    }
                                    bloqueHabitacion.appendChild(selectorCama)
                                } else {
                                    const configuracionUnica = Object.entries(configuracionesCama)
                                    const camaUI = configuracionUnica[0][1].camaUI
                                    const camaIDV = configuracionUnica[0][1].camaIDV
                                    const camaUnica = document.createElement("div")
                                    camaUnica.classList.add("plaza_alojamiento_resumenReserva_camaUnicaInfo")
                                    camaUnica.innerText = camaUI //+" (Unica cama disponible para esta habitación)"
                                    bloqueHabitacion.appendChild(camaUnica)
                                    const reservaIN = JSON.parse(sessionStorage.getItem("reservaNoConfirmada"))
                                    reservaIN.alojamiento[apartamentoIDV].habitaciones[habitacionIDV].camaSeleccionada = {
                                        camaIDV: camaIDV,
                                        camaUI: camaUI
                                    }
                                    const reservaOUT = JSON.stringify(reservaIN)
                                    sessionStorage.setItem("reservaNoConfirmada", reservaOUT)
                                }
                            }
                            bloqueApartamento.appendChild(contenedorHabitaciones)
                            contenedor.appendChild(bloqueApartamento)

                        }
                        return contenedor
                    },
                    preConfirmar: async () => {
                        const main = document.querySelector("main")
                        const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                        const contenedor = ui.querySelector("[componente=contenedor]")
                        main.appendChild(ui)

                        const spinner = casaVitini.ui.componentes.spinner({
                            mensaje: "Confirmando la reserva..."
                        })
                        spinner.querySelector("[boton=cancelar]").remove()
                        contenedor.appendChild(spinner)

                        const reservaLocal = JSON.parse(sessionStorage.getItem("reservaNoConfirmada"))
                        const nombreTitular = document.querySelector("[campo=nombreTitular]").value
                        const pasaporteTitular = document.querySelector("[campo=pasaporteTitular]").value
                        const correoTitular = document.querySelector("[campo=correoTitular]").value
                        const telefonoTitular = document.querySelector("[campo=telefonoTitular]").value
                        reservaLocal.datosTitular = {
                            nombreTitular: nombreTitular,
                            pasaporteTitular: pasaporteTitular,
                            correoTitular: correoTitular,
                            telefonoTitular: telefonoTitular
                        }

                        const respuestaServidor = await casaVitini.shell.servidor({
                            zona: "plaza/reservas/preConfirmarReserva",
                            reserva: reservaLocal
                        })
                        if (respuestaServidor?.error) {
                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                            return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor.error)
                        }
                        if (respuestaServidor.ok) {
                            const reservaConfirmada = respuestaServidor.detalles
                            reservaConfirmada.pdf = respuestaServidor.pdf
                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                            sessionStorage.removeItem("reservaNoConfirmada");
                            localStorage.setItem("reservaConfirmada", JSON.stringify(reservaConfirmada))
                            document.documentElement.scrollTop = 0;
                            document.body.scrollTop = 0;
                            const url = "/alojamiento/reserva_confirmada"
                            const estado = {
                                zona: url,
                                estadoInternoZona: "estado",
                                tipoCambio: "total"
                            }
                            const titulo = "Casa Vitini"
                            window.history.replaceState(estado, titulo, url);
                            return casaVitini.ui.vistas.alojamiento.reservaConfirmada.ui()
                        }
                    },
                    confirmarReserva: async () => {
                        const reservaLocal = JSON.parse(sessionStorage.getItem("reserva"))
                        const Peticion = {
                            zona: "plaza/reservas/confirmarReserva",
                            reserva: reservaLocal
                        };
                        const respuestaServidor = await casaVitini.shell.servidor(Peticion)
                        if (respuestaServidor?.OK) {
                            window.location.href = respuestaServidor?.temaPago;
                        }
                    },
                    seleccionarCama: (datosCama) => {
                        const apartamentoIDV = datosCama.apartamentoIDV
                        const habitacionIDV = datosCama.habitacionIDV
                        const camaIDV = datosCama.camaIDV
                        const selectorApartamento = document.querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)
                        selectorApartamento.setAttribute("estadoApartamento", "seleccionado")
                        const selectorSelectorApartamento = selectorApartamento.querySelector("[componente=selectorApartamento]")
                        selectorSelectorApartamento.innerText = "Apartamento seleccionado"
                        const selectorInfoHabitacion = selectorApartamento
                            .querySelector(`[habitacionIDV='${habitacionIDV}']`)
                            .querySelector("[componente=infoSeleccionCama]")
                        const botonesCamasPorHabitacion = selectorApartamento
                            .querySelector(`[habitacionIDV='${habitacionIDV}']`)
                            .querySelectorAll("[componente=botonSelectorCama]")
                        const botonCama = selectorApartamento
                            .querySelector(`[habitacionIDV="${habitacionIDV}"]`)
                            .querySelector(`[camaIDV="${camaIDV}"]`)
                        const estadoCama = selectorApartamento
                            .querySelector(`[habitacionIDV="${habitacionIDV}"]`)
                            .querySelector(`[camaIDV="${camaIDV}"]`)
                            ?.getAttribute("estadoCama")
                        if (estadoCama === "camaSeleccionada") {
                            botonCama.removeAttribute("style")
                            botonCama.removeAttribute("estadoCama")
                            selectorInfoHabitacion.classList.add("parpadea")
                        } else {
                            botonesCamasPorHabitacion.forEach((botonCamaEnHabitacion) => {
                                botonCamaEnHabitacion.removeAttribute("style")
                                botonCamaEnHabitacion.removeAttribute("estadoCAma")
                            })
                            botonCama.style.background = "green"
                            botonCama.setAttribute("estadoCama", "camaSeleccionada")
                            selectorInfoHabitacion.classList.remove("parpadea")
                        }
                    },
                    obtenerPrecioReserva: async () => {
                        const reservaNoConfirmada = sessionStorage.getItem("reservaNoConfirmada") ? JSON.parse(sessionStorage.getItem("reservaNoConfirmada")) : null;
                        if (reservaNoConfirmada) {
                            const transaccion = {
                                zona: "componentes/precioReservaPublica",
                                reserva: reservaNoConfirmada
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {
                                return respuestaServidor?.ok
                            }
                        }

                    },
                    actualizarPrecioEnUI: async () => {
                        const selectorTotalFinal = document.querySelector("[data=totalFinal]")
                        selectorTotalFinal.innerText = "Actualizando el total..."
                        const desgloseFinanciero = await casaVitini.ui.vistas.alojamiento.resumen.obtenerPrecioReserva()
                        const totalFinal = desgloseFinanciero.global.totales.totalFinal
                        selectorTotalFinal.innerText = totalFinal

                    },
                    controlPrevioEnvioDatos: () => {
                        try {
                            // Que todas las camas esten seleccionadas
                            const selectoresCamas = document.querySelectorAll("[componente=selectorCama]")
                            selectoresCamas.forEach((selectorCama) => {
                                if (!selectorCama.value) {
                                    const apartamentoUI = selectorCama.closest("[apartamentoIDV]")
                                        .querySelector("[apartamentoUI]")
                                        .getAttribute("apartamentoUI")
                                    const habitacionUI = selectorCama.closest("[habitacionIDV]")
                                        .querySelector("[habitacionUI]")
                                        .getAttribute("habitacionUI")
                                    const errorCamas = `Atención, es necesario que seleccione qué tipo de cama quiere para la ${habitacionUI} del ${apartamentoUI}.`
                                    throw new Error(errorCamas)
                                }
                            })
                            // Que esten los datos del titular correctamente escritos
                            const nombreTitular = document.querySelector("[campo=nombreTitular]").value
                            const pasaporteTitular = document.querySelector("[campo=pasaporteTitular]").value
                            const telefonoTitular = document.querySelector("[campo=telefonoTitular]").value
                            let correoTitular = document.querySelector("[campo=correoTitular]").value
                            const filtroCorreoElectronico = /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\.[a-zA-Z0-9]+$/;
                            correoTitular = correoTitular
                                .trim()
                                .toLowerCase()
                            const filtroTelefono = /[^0-9+\s]/
                            if (!nombreTitular) {
                                const errorCamas = `Por favor escriba el nombre completo del titular de la reserva`
                                throw new Error(errorCamas)
                            } else if (!pasaporteTitular) {
                                const errorCamas = `Por favor escriba el pasaporte completo del titular de la reserva`
                                throw new Error(errorCamas)
                            }
                            else if (!telefonoTitular || filtroTelefono.test(telefonoTitular)) {
                                const errorTelefono = "En el campo teléfono solo pueden contener números y el símbolo + para el código internacional. Revisa el campo teléfono por favor.";
                                throw new Error(errorTelefono);
                            }
                            else if (!correoTitular || !filtroCorreoElectronico.test(correoTitular)) {
                                const error = "El campo de correo electrónico no cumple con el formato esperado, se espera un formato tal que así: ejemplo@servidor.com"
                                throw new Error(error)
                            }
                        } catch (errorCapturado) {
                            throw errorCapturado
                        }
                    },
                    contenedorCodigoDescuentosV2: {
                        ui: () => {
                            const contenedor = document.createElement("div")
                            contenedor.classList.add(
                                "flexVertical",
                                "gap6"

                            )
                            const areaCampos = document.createElement("div")
                            areaCampos.setAttribute("area", "campos")
                            areaCampos.classList.add(
                                "flexVertical",
                                "gap6",
                            )
                            contenedor.appendChild(areaCampos)

                            const botonInsertarCodigo = document.createElement("div")
                            botonInsertarCodigo.classList.add(
                                "botonV1",
                                "comportamientoBoton"
                            )
                            botonInsertarCodigo.innerText = "Insertar código de descuento"
                            botonInsertarCodigo.addEventListener("click", () => {

                                const ui = document.createElement("div")
                                ui.style.background = "rgba(255, 255, 255, 0.3)"
                                ui.setAttribute("area", "campoIndividual")
                                ui.classList.add(
                                    "flexVertical",
                                    "gap6",
                                    "padding6",
                                    "borderRadius10"

                                )

                                const campoUI = document.createElement("input")
                                campoUI.classList.add(
                                    "padding10",
                                    "borderRadius10",
                                )
                                campoUI.placeholder = "Insertar código de descuento"
                                ui.appendChild(campoUI)

                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add(
                                    "flexHorizontal",
                                    "gap6"
                                )
                                ui.appendChild(contenedorBotones)

                                const botonUsar = document.createElement("div")
                                botonUsar.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonUsar.innerText = "Usar código de descuento"
                                botonUsar.addEventListener("click", (e) => {
                                    const boton = e.target.closest("[area=campoIndividual]")
                                    boton.remove()
                                })
                                contenedorBotones.appendChild(botonUsar)


                                const botonInsertarCodigo = document.createElement("div")
                                botonInsertarCodigo.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonInsertarCodigo.innerText = "Eliminar campo de descuento"
                                botonInsertarCodigo.addEventListener("click", (e) => {
                                    const boton = e.target.closest("[area=campoIndividual]")
                                    boton.remove()
                                })
                                contenedorBotones.appendChild(botonInsertarCodigo)

                                const selectorContenedor = document.querySelector("[contenedor=codigoDescuentos]")
                                    .querySelector("[area=campos]")
                                selectorContenedor.appendChild(ui)

                            })
                            contenedor.appendChild(botonInsertarCodigo)
                            return contenedor
                        }
                    },
                    contenedorCodigoDescuentos: {
                        ui: function () {
                            const contenedor = document.createElement("div")
                            contenedor.setAttribute("area", "codigosDescuentos")
                            contenedor.classList.add(
                                "flexVertical",
                                "gap6",
                                "borderGrey1",
                                "padding6",
                                "borderRadius10"
                            )
                            const ofertasComprobadas = document.createElement("div")
                            ofertasComprobadas.setAttribute("contenedor", "ofertasComprobadas")
                            ofertasComprobadas.classList.add(
                                "flexVertical"
                            )
                            contenedor.appendChild(ofertasComprobadas)
                            const campos = document.createElement("div")
                            campos.setAttribute("contenedor", "camposDescuentos")
                            campos.classList.add(
                                "flexVertical",
                                "gap6"
                            )
                            campos.appendChild(this.estadoInicial())
                            contenedor.appendChild(campos)
                            return contenedor
                        },
                        estadoInicial: function () {
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()

                            const contenedor = document.createElement("div")
                            contenedor.setAttribute("instanciaUID", instanciaUID)
                            contenedor.classList.add(
                                "flexVertical",
                                "gap6"
                            )

                            const info = document.createElement("div")
                            info.classList.add(
                                "padding6",
                                "textoCentrado"
                            )
                            info.innerText = "Si tienes un código de descuento, insértalo aquí para agregar el descuento a tu reserva. Una vez comprobado el código, confirma tu reserva."
                            contenedor.appendChild(info)

                            const campoUI = document.createElement("input")
                            campoUI.setAttribute("campo", "codigoDescuento")
                            campoUI.classList.add(
                                "padding12",
                                "borderRadius10",
                            )
                            campoUI.placeholder = "Inserta tu código de descuento"
                            contenedor.appendChild(campoUI)

                            const botonUsar = document.createElement("div")
                            botonUsar.classList.add(
                                "botonV1",
                                "comportamientoBoton"
                            )
                            botonUsar.innerText = "Usar código de descuento"
                            botonUsar.addEventListener("click", (e) => {
                                const instanciaUID = e.target.closest("[instanciaUID]").getAttribute("instanciaUID")
                                this.compobrobarCodigo({
                                    codigo: campoUI.value,
                                    instanciaUID: instanciaUID
                                })

                            })
                            contenedor.appendChild(botonUsar)
                            return contenedor
                        },
                        compobrobarCodigo: async function (data) {
                            const codigo = data.codigo
                            const instanciaUID_formularioOrigen = data.instanciaUID
                            const instanciaUID_vistaOrigen = document.querySelector("main").getAttribute("instanciaUID")
                            const reservaLocal = JSON.parse(sessionStorage.getItem("reservaNoConfirmada"))

                            const codigosActuales = reservaLocal?.codigosDescuento || []
                            if (codigosActuales.includes(codigo)) {
                                const m = "El código insertado ya esta aderido a la reserva"
                                return casaVitini.ui.componentes.advertenciaInmersiva(m)
                            }

                            const instanciaUID_pantallDeCargaSuperPuesta = casaVitini.utilidades.codigoFechaInstancia()
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID_pantallDeCargaSuperPuesta,
                                mensaje: "Comprobando el código de descuento",
                                botonCancelar: "ocultar"
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)

                            const controlDiasCompletos = {
                                zona: "plaza/reservas/preComprobarCodigoDescuento",
                                reserva: reservaLocal,
                                tipoContenedorCodigo: "cadena",
                                codigoDescuento: codigo
                            }

                            const respuestaServidor = await casaVitini.shell.servidor(controlDiasCompletos)

                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_pantallDeCargaSuperPuesta}"]`)
                            pantallaDeCargaRenderizada?.remove()

                            const instanciaRenderizda = document.querySelector(`[instanciaUID="${instanciaUID_vistaOrigen}"]`)
                            if (!instanciaRenderizda) { return }

                            if (respuestaServidor?.error) {
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                if (respuestaServidor.hasOwnProperty("ofertas")) {
                                    return this.errorUICondiciones(respuestaServidor)
                                } else {
                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor.error)
                                }
                            }
                            if (respuestaServidor.ok) {
                                const ofertas = respuestaServidor.ofertas

                                const formularioOrigen = document.querySelector(`[instanciaUID="${instanciaUID_formularioOrigen}"`)
                                const selectorCampo = formularioOrigen.querySelector("[campo=codigoDescuento]")
                                selectorCampo.value = null

                                if (!reservaLocal.hasOwnProperty("codigosDescuento")) {
                                    reservaLocal.codigosDescuento = []
                                }
                                reservaLocal.codigosDescuento.push(codigo)
                                sessionStorage.setItem("reservaNoConfirmada", JSON.stringify(reservaLocal))

                                const selectorContenedorOfertas = document.querySelector(`[contenedor=ofertasComprobadas]`)

                                ofertas.forEach((oferta) => {
                                    const nombreOferta = oferta.oferta.nombreOferta
                                    const descuentosJSON = oferta.oferta.descuentosJSON
                                    const condicionesArray = oferta.oferta.condicionesArray

                                    const ofertaUI = this.ofertaUI({
                                        nombreOferta,
                                        descuentosJSON,
                                        condicionesArray,
                                        codigo,
                                        botonEliminar: "activado"

                                    })
                                    selectorContenedorOfertas.appendChild(ofertaUI)
                                })
                            }
                            await casaVitini.ui.vistas.alojamiento.resumen.actualizarPrecioEnUI()
                        },
                        recuperarOfertasPorArrayDeCodigos: async function () {
                            const reservaLocal = JSON.parse(sessionStorage.getItem("reservaNoConfirmada"))
                            const codigosArray = reservaLocal.codigosDescuento
                            const controlDiasCompletos = {
                                zona: "plaza/reservas/preComprobarCodigoDescuento",
                                reserva: reservaLocal,
                                tipoContenedorCodigo: "array",
                                codigoDescuento: codigosArray
                            }

                            const respuestaServidor = await casaVitini.shell.servidor(controlDiasCompletos)
                            if (respuestaServidor?.error) {
                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor.error)
                            }
                            if (respuestaServidor.ok) {
                                const ofertas = respuestaServidor.ofertas
                                const selectorContenedorOfertas = document.querySelector(`[contenedor=ofertasComprobadas]`)
                                selectorContenedorOfertas.innerHTML = null

                                const condigosArrayBase64 = codigosArray.map((codigoAsci) => {
                                    return btoa(codigoAsci);
                                })
                                const codigosValidados = []
                                ofertas.forEach((oferta) => {
                                    const nombreOferta = oferta.oferta.nombreOferta
                                    const descuentosJSON = oferta.oferta.descuentosJSON
                                    const condicionesArray = oferta.oferta.condicionesArray

                                    let codigo
                                    for (const condicion of condicionesArray) {
                                        const tipoCondicion = condicion.tipoCondicion
                                        if (tipoCondicion === "porCodigoDescuento") {
                                            const codigoDescuento = condicion.codigoDescuento
                                            if (condigosArrayBase64.includes(codigoDescuento)) {
                                                codigo = atob(codigoDescuento)
                                                codigosValidados.push(codigo)
                                            }
                                        }
                                    }
                                    const ofertaUI = this.ofertaUI({
                                        nombreOferta,
                                        descuentosJSON,
                                        condicionesArray,
                                        codigo,
                                        botonEliminar: "activado"
                                    })
                                    selectorContenedorOfertas.appendChild(ofertaUI)
                                })
                                reservaLocal.codigosDescuento = codigosValidados
                                sessionStorage.setItem("reservaNoConfirmada", JSON.stringify(reservaLocal))
                            }


                        },
                        borrarCodigo: async (codigo) => {
                            const reservaLocal = JSON.parse(sessionStorage.getItem("reservaNoConfirmada"))
                            const codigosActuales = reservaLocal?.codigosDescuento || []
                            casaVitini.utilidades.borrarPosicionDeArrayPorCandena({
                                array: codigosActuales,
                                cadenaParaBorrar: codigo,
                            })
                            if (codigosActuales.length === 0) {
                                delete reservaLocal?.codigosDescuento
                            }
                            sessionStorage.setItem("reservaNoConfirmada", JSON.stringify(reservaLocal))
                            await casaVitini.ui.vistas.alojamiento.resumen.actualizarPrecioEnUI()

                        },
                        ofertaUI: function (data) {

                            const nombreOferta = data.nombreOferta
                            const descuentosJSON = data.descuentosJSON
                            const condicionesArray = data.condicionesArray
                            const codigo = data.codigo
                            const botonEliminar = data.botonEliminar


                            const contenedorOfertaComprobada = document.createElement("div")
                            contenedorOfertaComprobada.setAttribute("codigoUID", codigo)
                            contenedorOfertaComprobada.classList.add(
                                "flexVertical",
                                "gap6"
                            )

                            const tituloOferta = document.createElement("div")
                            tituloOferta.classList.add(
                                "padding6",
                                "negrita"
                            )
                            tituloOferta.innerHTML = nombreOferta
                            contenedorOfertaComprobada.appendChild(tituloOferta)

                            const info = document.createElement("div")
                            info.classList.add(
                                "padding6"
                            )
                            info.innerHTML = "Oferta adherida a tu reserva. Ahora puedes confirmar la reserva y la oferta ser adherida"
                            // contenedorOfertaComprobada.appendChild(info)


                            if (botonEliminar === "activado") {
                                const botonDesaderir = document.createElement("div")
                                botonDesaderir.classList.add(
                                    "botonV1",
                                    "comportameintoBoton"
                                )
                                botonDesaderir.innerText = "Eliminar codigo de descuento"
                                botonDesaderir.addEventListener("click", async (e) => {
                                    e.target.closest("[codigoUID]").remove()
                                    await this.borrarCodigo(codigo)
                                })
                                contenedorOfertaComprobada.appendChild(botonDesaderir)
                            }


                            const contenedorCondiciones = document.createElement("div")
                            contenedorCondiciones.classList.add(
                                "flexVertical"
                            )
                            contenedorCondiciones.appendChild(this.condicionesUI({ condicionesArray }))
                            contenedorOfertaComprobada.appendChild(contenedorCondiciones)

                            const contenedorDescuentos = document.createElement("div")
                            contenedorDescuentos.classList.add(
                                "flexVertical"
                            )
                            contenedorDescuentos.appendChild(this.descuentosUI({
                                descuentosJSON
                            }))
                            contenedorOfertaComprobada.appendChild(contenedorDescuentos)
                            return contenedorOfertaComprobada
                        },
                        descuentosUI: (data) => {
                            const descuentosJSON = data.descuentosJSON
                            const tipoDescuento = descuentosJSON?.tipoDescuento
                            const subTipoDescuento = descuentosJSON?.subTipoDescuento

                            const contenedorDescuentos = document.createElement("div")
                            contenedorDescuentos.setAttribute("contenedor", "descuentos")
                            contenedorDescuentos.classList.add(
                                "flexVertical",
                                "backgroundGrey1",
                                "padding6",
                                "borderRadius14"
                            )
                            const tituloContendor = document.createElement("div")
                            tituloContendor.classList.add(
                                "negrita",
                                "padding6",
                            )
                            tituloContendor.innerText = "Descuentos de la oferta"
                            contenedorDescuentos.appendChild(tituloContendor)

                            const desfinicionDescuento = casaVitini
                                .ui
                                .componentes
                                .contenedorFinanciero
                                .componentesUI
                                .ofertas
                                .componentesUI.definicionDescuentos({
                                    tipoDescuento,
                                    subTipoDescuento,
                                    descuentosJSON
                                })
                            contenedorDescuentos.appendChild(desfinicionDescuento)

                            return contenedorDescuentos
                        },
                        condicionesUI: (data) => {
                            const condicionesArray = data.condicionesArray

                            const contenedorCondiciones = document.createElement("div")
                            contenedorCondiciones.setAttribute("contenedor", "condiciones")
                            contenedorCondiciones.classList.add(
                                "flexVertical",
                                "gap6",
                                "backgroundGrey1",
                                "padding6",
                                "borderRadius8"
                            )

                            const tituloContendor = document.createElement("div")
                            tituloContendor.classList.add(
                                "negrita",
                                "padding6",

                            )
                            tituloContendor.innerText = "Condiciones de la oferta"
                            contenedorCondiciones.appendChild(tituloContendor)

                            contenedorCondiciones.querySelectorAll("[tipoCondicion]").forEach((contenedorTipoCondicion) => {
                                contenedorTipoCondicion.remove()
                            })

                            condicionesArray.forEach((condicion) => {
                                const tipoCondicion = condicion.tipoCondicion

                                const contenedorCondicion = document.createElement("div")
                                contenedorCondicion.classList.add("contenedorCondicion")
                                contenedorCondicion.setAttribute("tipoCondicion", tipoCondicion)
                                contenedorCondicion.classList.add(
                                    "flexVertical",
                                    "padding6",
                                )
                                const definicionCondicion = casaVitini
                                    .ui
                                    .componentes
                                    .contenedorFinanciero
                                    .componentesUI
                                    .ofertas
                                    .componentesUI
                                    .definicionCondiciones({
                                        tipoCondicion,
                                        condicion
                                    })
                                contenedorCondicion.appendChild(definicionCondicion)
                                contenedorCondiciones.appendChild(contenedorCondicion)
                            })
                            return contenedorCondiciones
                        },
                        errorUICondiciones: function (data) {

                            const mensajeError = data.error
                            const ofertas = data.ofertas

                            const main = document.querySelector("main")
                            const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                            const instanciaUID = ui.getAttribute("instanciaUID")
                            const contenedor = ui.querySelector("[componente=contenedor]")
                            main.appendChild(ui)


                            const info = document.createElement("div")
                            info.classList.add(
                                "textoCentrado"
                            )
                            info.innerText = mensajeError
                            contenedor.appendChild(info)

                            const botonCerrarInferior = document.createElement("div")
                            botonCerrarInferior.classList.add("boton")
                            botonCerrarInferior.innerText = "Cerrar y volver"
                            botonCerrarInferior.setAttribute("boton", "cancelar")
                            botonCerrarInferior.addEventListener("click", () => {
                                return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                            })
                            contenedor.appendChild(botonCerrarInferior)

                            ofertas.forEach((oferta) => {
                                const nombreOferta = oferta.oferta.nombreOferta
                                const descuentosJSON = oferta.oferta.descuentosJSON
                                const condicionesArray = oferta.oferta.condicionesArray

                                // let codigo
                                // for (const condicion of condicionesArray) {
                                //     const tipoCondicion = condicion.tipoCondicion
                                //     if (tipoCondicion === "porCodigoDescuento") {
                                //         const codigoDescuento = condicion.codigoDescuento
                                //         if (condigosArrayBase64.includes(codigoDescuento)) {
                                //             codigo = atob(codigoDescuento)
                                //             codigosValidados.push(codigo)
                                //         }
                                //     }
                                // }
                                const ofertaUI = this.ofertaUI({
                                    nombreOferta,
                                    descuentosJSON,
                                    condicionesArray,
                                    codigo: null,
                                })
                                contenedor.appendChild(ofertaUI)
                            })

                        }
                    },
                    desplegarDesgloseFinancieroBajoDemanda: async () => {
                        const main = document.querySelector("main")
                        const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                        const instanciaUID = ui.getAttribute("instanciaUID")
                        const contenedor = ui.querySelector("[componente=contenedor]")
                        main.appendChild(ui)

                        const spinner = casaVitini.ui.componentes.spinnerSimple()
                        contenedor.appendChild(spinner)

                        const desgloseFinanciero = await casaVitini.ui.vistas.alojamiento.resumen.obtenerPrecioReserva()

                        contenedor.innerHTML = null

                        const titulo = document.createElement("div")
                        titulo.classList.add("titulo")
                        titulo.innerText = "Desglose de la reserva"
                        contenedor.appendChild(titulo)


                        const testInfo = document.createElement("div")
                        testInfo.classList.add(
                            "textoJustificado", "padding10"
                        )
                        testInfo.innerText = "A continuación, se presentan los detalles del desglose completo del importe total de la reserva. Aquí encontrarás una explicación detallada de cada componente que contribuye al costo total. Este desglose incluye los diversos cargos, impuestos u otros conceptos asociados con tu reserva. Revisar estos detalles te proporcionará una comprensión transparente de los costos involucrados en tu elección de alojamiento. ¡Estamos comprometidos a brindarte la información necesaria para que tu experiencia de reserva sea clara, transparente y sin sorpresas!"
                        contenedor.appendChild(testInfo)

                        const botonCerrar = document.createElement("div")
                        botonCerrar.classList.add("boton")
                        botonCerrar.innerText = "Cerrar y volver"
                        botonCerrar.setAttribute("boton", "cancelar")
                        botonCerrar.addEventListener("click", () => {
                            return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                        })
                        contenedor.appendChild(botonCerrar)

                        casaVitini.ui.componentes.contenedorFinanciero.constructor({
                            destino: `[instanciaUID="${instanciaUID}"] [componente=contenedor]`,
                            contenedorFinanciero: { desgloseFinanciero: desgloseFinanciero },
                            modoUI: "plaza"
                        })
                        const contenedorFinancieroUI = ui.querySelector("[contenedor=financiero]")
                        contenedorFinancieroUI.classList.add(
                            "backgroundGrey1",
                            "borderRadius10"
                        )

                        const botonCerrarInferior = document.createElement("div")
                        botonCerrarInferior.classList.add("boton")
                        botonCerrarInferior.innerText = "Cerrar y volver"
                        botonCerrarInferior.setAttribute("boton", "cancelar")
                        botonCerrarInferior.addEventListener("click", () => {
                            return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                        })
                        contenedor.appendChild(botonCerrarInferior)
                    },
                    obtenerServiciosPublicos: async () => {
                        const main = document.querySelector("main")
                        const instanciaUID = main.getAttribute("instanciaUID")
                        const selectorContenedorServicios = main.querySelector("[contenedor=servicios]")
                        const transaccion = {
                            zona: "plaza/reservas/obtenerServiciosPublicos",
                        }
                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                        const instanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                        if (!instanciaRenderizada) {
                            return
                        }
                        if (respuestaServidor?.error) {
                            selectorContenedorServicios.innerHTML = null
                            selectorContenedorServicios.innerText = "Ha ocurrido un error al obtener los servicios publicos, por favor recarga la pagina"
                            return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                        }
                        if (respuestaServidor?.ok) {
                            return respuestaServidor
                        }



                    },
                    controladorSelectorServicios: (e) => {
                        const servicioUI = e.target.closest("[servicioUID]")
                        const servicioUID = servicioUI.getAttribute("servicioUID")

                        const selectorIndicador = servicioUI.querySelector("[componente=indicadorSelecion]")

                        const estadoActual = selectorIndicador.getAttribute("estado")

                        if (estadoActual === "activado") {
                            selectorIndicador.removeAttribute("estado")
                            selectorIndicador.removeAttribute("style")

                        } else {
                            selectorIndicador.setAttribute("estado", "activado")
                            selectorIndicador.style.background = "#00ff00"
                        }

                        // Añadir servicios al array
                        // Verificar cada servicios del array
                        // En la respuesta tiene que haber un array con los servicios verificados
                        //

                        // eN la respuesta tienen que venir todos los servicios validados de array

                        // Insertar el servicioUID en el obejto 
                        // Actualizar precio
                        // Si da error, se borra del array el actualServicioUID y se


                    },
                    renderizarServiciosPublicos: async () => {
                        const selectorContenedorServicios = document.querySelector("[contenedor=servicios]")
                        selectorContenedorServicios.innerHTML = null
                        selectorContenedorServicios.innerText = "Obteniendo servicios..."

                        const serviciosPublicos = await casaVitini.ui.vistas.alojamiento.resumen.obtenerServiciosPublicos()

                        const listaServiciosPublicos = serviciosPublicos.servicios
                        selectorContenedorServicios.innerHTML = null
                        listaServiciosPublicos.forEach(servicio => {
                            const servicioUID = servicio.servicioUID
                            const contenedor = servicio.contenedor
                            const precio = contenedor.precio
                            const definicion = contenedor.definicion
                            const fechaFinal = contenedor.fechaFinal
                            const duracionIDV = contenedor.duracionIDV
                            const fechaInicio = contenedor.fechaInicio
                            const tituloPublico = contenedor.tituloPublico
                            const disponibilidadIDV = contenedor.disponibilidadIDV

                            const diccionario = {
                                disponibilidad: {
                                    constante: "Disponible",
                                    variable: "Disponibilidad variable"
                                }
                            }

                            const servicioUI = document.createElement("div")
                            servicioUI.setAttribute("servicioUID", servicioUID)
                            servicioUI.classList.add(
                                "flexVertical",
                                "padding14",
                                "backgroundGrey1",
                                "borderRadius14"

                            )
                            servicioUI.addEventListener("click", this.controladorSelectorServicios)

                            selectorContenedorServicios.appendChild(servicioUI)

                            const contenedorGlobal = document.createElement("div")
                            contenedorGlobal.classList.add(
                                "contenedorGlobal"
                            )
                            servicioUI.appendChild(contenedorGlobal)

                            const esferaSeleccionable = document.createElement("div")
                            esferaSeleccionable.classList.add(
                                "esferaSeleccionable"
                            )
                            contenedorGlobal.appendChild(esferaSeleccionable)

                            const indicadorDeSeleccion = document.createElement("div")
                            indicadorDeSeleccion.setAttribute("componente", "indicadorSelecion")
                            indicadorDeSeleccion.classList.add(
                                "indicadorDeSeleccion"
                            )
                            esferaSeleccionable.appendChild(indicadorDeSeleccion)

                            const titulo = document.createElement("p")
                            titulo.classList.add(
                                "padding6",
                                "negrita"
                            )
                            titulo.innerText = tituloPublico
                            contenedorGlobal.appendChild(titulo)


                            const disponibilidadUI = document.createElement("p")
                            disponibilidadUI.classList.add(
                                "padding6"
                            )
                            disponibilidadUI.innerText = diccionario.disponibilidad[disponibilidadIDV]
                            servicioUI.appendChild(disponibilidadUI)


                            if (disponibilidadIDV === "variable") {

                                const info = document.createElement("p")
                                info.classList.add(
                                    "padding6"
                                )
                                info.innerText = `Este servicio tiene una disponibilidad limitada. Es por eso que si selecciona este servicio, nos pondremos en contacto con el titular de la reserva en las próximas horas para confirmarle la disponibilidad del servicio para su reserva.`
                                servicioUI.appendChild(info)
                            }

                            const precioUI = document.createElement("p")
                            precioUI.classList.add(
                                "padding6",
                                "negrita"
                            )
                            precioUI.innerText = precio + "$"
                            servicioUI.appendChild(precioUI)


                            if (duracionIDV === "rango") {
                                const contenedorDuracion = document.createElement("div")
                                contenedorDuracion.classList.add(
                                    "flexVertical",
                                    "padding6"

                                )
                                servicioUI.appendChild(contenedorDuracion)

                                const info = document.createElement("p")
                                info.classList.add("negrita")
                                info.innerText = `Servicio disponible solo desde ${fechaInicio} hata ${fechaFinal}. Ambas fechas incluidas.`
                                contenedorDuracion.appendChild(info)

                            }
                            const definicionUI = document.createElement("p")
                            definicionUI.classList.add(
                                "padding6"
                            )
                            definicionUI.innerText = definicion
                            servicioUI.appendChild(definicionUI)
                        })

                    }
                },
                reservaConfirmada: {
                    ui: async () => {
                        const reservaConfirmada = JSON.parse(localStorage.getItem("reservaConfirmada"))
                        if (reservaConfirmada) {
                            document.body.style.background = "rgb(214 192 157)"
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/alojamiento/reserva_confirmada")
                            // const obtenerPDF = async (enlaceUID) => {
                            //     const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            //     const advertenciaInmersivaIU = document.createElement("div")
                            //     advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                            //     advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                            //     advertenciaInmersivaIU.setAttribute("instanciaUID", instanciaUID)
                            //     const contenedorAdvertenciaInmersiva = document.createElement("div")
                            //     contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                            //     const contenidoAdvertenciaInmersiva = document.createElement("div")
                            //     contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                            //     contenidoAdvertenciaInmersiva.setAttribute("espacio", "gestionPDF")
                            //     const mensajeSpinner = "Generando PDF...."
                            //     const spinner = casaVitini.ui.componentes.spinner(mensajeSpinner)
                            //     contenidoAdvertenciaInmersiva.appendChild(spinner)
                            //     contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                            //     advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                            //     document.querySelector("main").appendChild(advertenciaInmersivaIU)
                            //     const advertenciaInmersivaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            //     try {
                            //         const metadatospdf = {
                            //             zona: "componentes/pdf",
                            //             enlace: enlaceUID
                            //         }
                            //         const puerto = '/puerto';
                            //         const peticion = {
                            //             method: 'POST',
                            //             headers: {
                            //                 'Content-Type': 'application/json'
                            //             },
                            //             body: JSON.stringify(metadatospdf)
                            //         };
                            //         const respuestaServidor = await fetch(puerto, peticion);
                            //         const contentType = respuestaServidor.headers.get('content-type');
                            //         if (contentType === "application/json; charset=utf-8") {
                            //             const respuestaServidorJSON = await respuestaServidor.json() || {};
                            //             advertenciaInmersivaRenderizada?.remove()
                            //             return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidorJSON.error)
                            //         }
                            //         if (contentType === "application/pdf" && advertenciaInmersivaRenderizada) {
                            //             const BLOB = await respuestaServidor.blob();
                            //             const selectorZonaGestion = advertenciaInmersivaRenderizada.querySelector("[espacio=gestionPDF]");
                            //             selectorZonaGestion.innerHTML = null;
                            //             selectorZonaGestion.style.alignItems = "center"
                            //             selectorZonaGestion.innerText = "Se ha generado el archivo PDF con el resumen de su reserva. Para descargar el pdf pulse en el boton desde mi reserva en PDF, el enlace de descarga estara vigente durante 48 horas";
                            //             const PDFGenerado = new Blob([BLOB], { type: 'application/pdf' });
                            //             const pdfGenerado = document.createElement('a');
                            //             pdfGenerado.href = window.URL.createObjectURL(PDFGenerado);
                            //             pdfGenerado.classList.add("plaza_alojamiento_reservaConfirmada_botoDescargaPDF")
                            //             pdfGenerado.download = 'Reserva.pdf';
                            //             pdfGenerado.innerText = "Descargar mi reserva en PDF";
                            //             selectorZonaGestion.appendChild(pdfGenerado)
                            //             const botonCancelarProcesoCancelacion = document.createElement("div")
                            //             botonCancelarProcesoCancelacion.classList.add("plaza_alojamiento_reservaConfirmada_botoDescargaPDF")
                            //             botonCancelarProcesoCancelacion.innerText = "Cancelar y volver al resumen de mi reserva"
                            //             botonCancelarProcesoCancelacion.addEventListener("click", (e) => {
                            //                 return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                            //             })
                            //             selectorZonaGestion.appendChild(botonCancelarProcesoCancelacion)
                            //         }
                            //     } catch (errorCapturado) {
                            //         advertenciaInmersivaRenderizada?.remove()
                            //         if (errorCapturado instanceof TypeError && errorCapturado.message === 'Failed to fetch') {
                            //             const mensaje = "No se ha podido contactar con el servidor, revisa tu conexión y reintentalo."
                            //             casaVitini.ui.componentes.advertenciaInmersiva(mensaje)
                            //         } else {
                            //             casaVitini.ui.componentes.advertenciaInmersiva(errorCapturado.message)
                            //         }
                            //     }
                            // }
                            // Codigo enlaces PDF
                            const pdfCodificado = reservaConfirmada.pdf
                            // Datos globales
                            const reservaUID = reservaConfirmada.global.reservaUID
                            const fechaEntrada = reservaConfirmada.global.fechaEntrada
                            const fechaSalida = reservaConfirmada.global.fechaSalida

                            const fechaEntrada_Humana = casaVitini.utilidades.conversor.fecha_ISO_hacia_humana(fechaEntrada)
                            const fechaSalida_Humana = casaVitini.utilidades.conversor.fecha_ISO_hacia_humana(fechaSalida)

                            const estadoReserva = reservaConfirmada.global.estadoReservaIDV
                            const estadoPago = reservaConfirmada.global.estadoPagoIDV
                            const creacion = reservaConfirmada.global.fechaCreacion_simple
                            // Datos titular
                            const titular = reservaConfirmada.titular

                            const nombreTitular = titular.nombreTitular
                            const pasaporteTitular = titular.pasaporteTitular
                            const mailTitular = titular.mailTitular
                            const telefonoTitular = titular.telefonoTitular
                            // Datos financieros
                            const contenedorFinanciero = reservaConfirmada.contenedorFinanciero
                            const totalFinal = contenedorFinanciero.desgloseFinanciero.global.totales.totalFinal
                            //Parsea los bloques de los detalles reservas
                            // Imprimir detalles reserva
                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add("marcoElasticoRelativo")

                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            marcoElastico.setAttribute("contenedor", "reservaConfiramda")

                            const titulo = document.createElement("div")
                            titulo.classList.add("titulo")
                            titulo.innerText = "Reserva confirmada"
                            marcoElastico.appendChild(titulo)

                            const infoGlobal = document.createElement("div")
                            infoGlobal.classList.add("plaza_reservas_reservaConfirmada_infoGlobal")
                            infoGlobal.innerText = "Su reserva está confirmada y le estamos esperando. Aquí tiene los detalles de su reserva. Puede descargar un resumen de su reserva en formato de documento PDF. Su reserva se ha registrado junto a su correo electrónico. Si desea ver con más detalle su reserva puede crear una cuenta en MiCasa para poder ver todos los detalles de su reserva. Si necesita contactar con Casa Vitini puede encontrar toda la información de contacto en la sección Contacto. Se ha enviado una copia del resumen de su reserva a su dirección de correo electrónico."
                            marcoElastico.appendChild(infoGlobal)

                            const infoIngreso = document.createElement("div")
                            infoIngreso.classList.add("plaza_reservas_reservaConfirmada_infoIngreso")
                            infoIngreso.innerHTML = `
                                   Por favor, para pagar esta reserva, realiza el ingreso por transferencia bancaria en el número de cuenta de abajo. Una vez hecho el pago, envía un comprobante de la transferencia a casavitini@casavitini.com indicando el número de la reserva. Queremos recordarte que el plazo máximo para recibir el pago y mantener tu reserva activa es de siete días a partir de la fecha de la reserva.
                                   <br>
                                   Este plazo nos permite garantizar tu espacio y asegurarnos de que todo esté listo para tu llegada. Entendemos que a veces pueden surgir imprevistos, por lo que estamos aquí para ayudarte en caso de que necesites alguna asistencia adicional o tengas alguna pregunta sobre el proceso de pago. Nuestro objetivo es brindarte la mejor experiencia posible y asegurarnos de que disfrutes al máximo tu próxima estancia con nosotros.
                                   Sea tan amable de poner el número de la reserva en el concepto de la transferencia.<br>Cuenta bancaria para realizar el ingreso:
                                   <br>Cuenta: 365712660
                                   <br>Swift: BAMCNIMAXXX / BAMCNIMA
                                   <br>Código portal: 11185`

                            marcoElastico.appendChild(infoIngreso)
                            const contenedor = document.createElement("div")
                            contenedor.classList.add("plaza_reservas_reservaConfirmada_contenedor")
                            const espacioDatosGlobalesReserva = document.createElement("div")
                            espacioDatosGlobalesReserva.classList.add("administracion_reservas_detallesReservas_contenedorTotales")
                            espacioDatosGlobalesReserva.setAttribute("contenedor", "espacioDatosGlobalesReserva")
                            const reversaUI = document.createElement("div")
                            reversaUI.classList.add("administracion_reservas_detallesReservas_contenedorReservaUID")
                            const nombreReserva = document.createElement("div")
                            nombreReserva.innerText = "Reserva"
                            reversaUI.appendChild(nombreReserva)
                            const numeroReservaUID = document.createElement("div")
                            numeroReservaUID.classList.add("administracion_reservas_detallesReservas_contenedorResevaUID_UID")
                            numeroReservaUID.classList.add("negrita")
                            numeroReservaUID.innerText = reservaUID
                            reversaUI.appendChild(numeroReservaUID)
                            espacioDatosGlobalesReserva.appendChild(reversaUI)
                            const botonDescargarPDF = document.createElement("a")
                            botonDescargarPDF.classList.add(
                                "plaza_reservas_reservaConfirmada_botonV1",
                                "areaSinDecoracionPredeterminada")
                            botonDescargarPDF.innerText = "Descargar un resumen de la reserva en PDF"
                            botonDescargarPDF.download = "Reserva.pdf"
                            botonDescargarPDF.href = `data:application/pdf;base64,${pdfCodificado}`
                            // botonDescargarPDF.addEventListener("click", () => {
                            //     obtenerPDF(codigoEnlacePDF)
                            // })
                            espacioDatosGlobalesReserva.appendChild(botonDescargarPDF)
                            // Contenedor datos titular
                            const contenedorTitular = document.createElement("div")
                            contenedorTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular")
                            const infoTitular = document.createElement("div")
                            infoTitular.classList.add("plaza_reservas_reservaConfirmada_infoTitular")
                            infoTitular.innerText = "Datos del titular de la reserva"
                            //contenedorTitular.appendChild(infoTitular)
                            const contenedorDatosDelTitular = document.createElement("div")
                            contenedorDatosDelTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular")
                            let bloqueDatoTitular = document.createElement("div")
                            bloqueDatoTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloque")
                            let bloqueTituloTitular = document.createElement("div")
                            bloqueTituloTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloqueTitulo")
                            bloqueTituloTitular.innerText = "Nombre y apellidos"
                            bloqueDatoTitular.appendChild(bloqueTituloTitular)
                            const nombreTitularUI = document.createElement("div")
                            nombreTitularUI.classList.add("negrita")
                            nombreTitularUI.innerText = nombreTitular
                            bloqueDatoTitular.appendChild(nombreTitularUI)
                            contenedorDatosDelTitular.appendChild(bloqueDatoTitular)
                            bloqueDatoTitular = document.createElement("div")
                            bloqueDatoTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloque")
                            bloqueTituloTitular = document.createElement("div")
                            bloqueTituloTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloqueTitulo")
                            bloqueTituloTitular.innerText = "Pasaporte"
                            bloqueDatoTitular.appendChild(bloqueTituloTitular)
                            const pasaporteTitularUI = document.createElement("div")
                            pasaporteTitularUI.classList.add("negrita")
                            pasaporteTitularUI.innerText = pasaporteTitular
                            bloqueDatoTitular.appendChild(pasaporteTitularUI)
                            contenedorDatosDelTitular.appendChild(bloqueDatoTitular)
                            bloqueDatoTitular = document.createElement("div")
                            bloqueDatoTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloque")
                            bloqueTituloTitular = document.createElement("div")
                            bloqueTituloTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloqueTitulo")
                            bloqueTituloTitular.innerText = "Correo electroníco"
                            bloqueDatoTitular.appendChild(bloqueTituloTitular)
                            const mailTitularUI = document.createElement("div")
                            mailTitularUI.classList.add("negrita")
                            mailTitularUI.innerText = mailTitular
                            bloqueDatoTitular.appendChild(mailTitularUI)
                            contenedorDatosDelTitular.appendChild(bloqueDatoTitular)
                            bloqueDatoTitular = document.createElement("div")
                            bloqueDatoTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloque")
                            bloqueTituloTitular = document.createElement("div")
                            bloqueTituloTitular.classList.add("plaza_reservas_reservaConfirmada_contenedorTitular_contenedorDatosDelTitular_bloqueTitulo")
                            bloqueTituloTitular.innerText = "Teléfono"
                            bloqueDatoTitular.appendChild(bloqueTituloTitular)
                            const telefonoTitularUI = document.createElement("div")
                            telefonoTitularUI.classList.add("negrita")
                            telefonoTitularUI.innerText = telefonoTitular
                            bloqueDatoTitular.appendChild(telefonoTitularUI)
                            contenedorDatosDelTitular.appendChild(bloqueDatoTitular)
                            contenedorTitular.appendChild(contenedorDatosDelTitular)
                            espacioDatosGlobalesReserva.appendChild(contenedorTitular)
                            // Contenedor de las fechas
                            const contenedorFechas = document.createElement("div")
                            contenedorFechas.classList.add("plaza_reservas_reservaConfirmada_contenedorFechas")
                            // Fecha entrada
                            const contenedorFechaEntrada = document.createElement("div")
                            contenedorFechaEntrada.classList.add("plaza_reservas_reservaConfirmada_contenedorFechas_contenedorFecha")
                            const tituloFechaEntrada = document.createElement("div")
                            tituloFechaEntrada.classList.add("plaza_reservas_reservaConfirmada_contenedorFechas_contenedorFecha_titulo")
                            tituloFechaEntrada.innerText = "Fecha de entrada"
                            contenedorFechaEntrada.appendChild(tituloFechaEntrada)
                            const fechaEntradaUI = document.createElement("div")
                            fechaEntradaUI.classList.add("plaza_reservas_reservaConfirmada_contenedorFechas_contenedorFecha_fecha")
                            fechaEntradaUI.classList.add("negrita")
                            fechaEntradaUI.innerText = fechaEntrada_Humana
                            contenedorFechaEntrada.appendChild(fechaEntradaUI)
                            contenedorFechas.appendChild(contenedorFechaEntrada)
                            // Fecha salida
                            const contenedorFechaSalida = document.createElement("div")
                            contenedorFechaSalida.classList.add("plaza_reservas_reservaConfirmada_contenedorFechas_contenedorFecha")
                            const tituloFechaSalida = document.createElement("div")
                            tituloFechaSalida.classList.add("plaza_reservas_reservaConfirmada_contenedorFechas_contenedorFecha_titulo")
                            tituloFechaSalida.innerText = "Fecha de salida"
                            contenedorFechaSalida.appendChild(tituloFechaSalida)
                            const fechaSalidaUI = document.createElement("div")
                            fechaSalidaUI.classList.add("plaza_reservas_reservaConfirmada_contenedorFechas_contenedorFecha_fecha")
                            fechaSalidaUI.classList.add("negrita")
                            fechaSalidaUI.innerText = fechaSalida_Humana
                            contenedorFechaSalida.appendChild(fechaSalidaUI)
                            contenedorFechas.appendChild(contenedorFechaSalida)
                            espacioDatosGlobalesReserva.appendChild(contenedorFechas)

                            contenedor.appendChild(espacioDatosGlobalesReserva)
                            marcoElastico.appendChild(contenedor)
                            const infoGlobal2 = document.createElement("div")
                            infoGlobal2.classList.add("plaza_reservas_reservaConfirmada_infoGlobal")
                            infoGlobal2.innerText = `La información de esta reserva se ha almacenado en el almacenamiento local de su navegador. Mientras no borre la cache del navegador o pulse en el botón de eliminar mi reserva, la reserva se mantendrá en el navegador. Esto está hecho así para su comodidad. Así, cuando entra en Casa Vitini puede acceder a su reserva confirmada fácilmente. Igualmente, es posible que le interese saber que, si se registra y crea una cuenta en MiCasa puedes acceder a todos los detalles de sus reservas.

                            Si se encuentra en un ordenador o dispositivo público, por favor, borre su reserva de la caché local del navegador. Para ello, puede pulsar aquí mismo en el botón de abajo.
                                
                                Cree su propio VitiniID y acceda a los detalles de su reserva de manera persistente y desde cualquier lugar. Recuerde registrarse con la misma cuenta de correo electrónico con la que realizó la reserva. Puedes cambiar su cuenta de correo electrónico en cualquier momento desde su cuenta con su VitiniID. Registrar su propio VitiniID es gratuito.`
                            marcoElastico.appendChild(infoGlobal2)
                            const infoGlobal3 = document.createElement("div")
                            infoGlobal3.classList.add("plaza_reservas_reservaConfirmada_infoGlobal")
                            infoGlobal3.innerText = "Cree su propio VitiniID y acceda a los detalles de su reserva de manera persistente y desde cualquier lugar. Recuerde registrarse con la misma cuenta de correo electrónico con la que realizó la reserva. Puedes cambiar su cuenta de correo electrónico en cualquier momento desde su cuenta con su VitiniID. Registrar su propio VitiniID es gratuito."
                            //  marcoElastico.appendChild(infoGlobal3)
                            const botonBorrarReserva = document.createElement("div")
                            botonBorrarReserva.classList.add("plaza_reservas_reservaConfirmada_botonV1")
                            botonBorrarReserva.innerText = "Borrar la información de esta reserva de la cache de mi navegador "
                            botonBorrarReserva.addEventListener("click", casaVitini.ui.vistas.alojamiento.reservaConfirmada.borrarReservaLocal)
                            marcoElastico.appendChild(botonBorrarReserva)
                            marcoElasticoRelatico.appendChild(marcoElastico)
                            const seccion = document.querySelector("main")
                            seccion.removeAttribute("instanciaUID")
                            seccion.innerHTML = null
                            seccion.appendChild(marcoElasticoRelatico)
                            // const desgloseTotales = {
                            //     totalesPorApartamento: totalesPorApartamento,
                            //     totalesPorNoche: totalesPorNoche,
                            //     totales: totales,
                            //     impuestos: impuestos,
                            //     ofertas: ofertas,
                            //     destino: "[contenedor=espacioDatosGlobalesReserva]"
                            // }
                            //casaVitini.ui.componentes.totales(desgloseTotales)
                            const contenedorTotal = document.createElement("div")
                            contenedorTotal.classList.add("contenedorTotal")
                            const tituloTotal = document.createElement("p")
                            tituloTotal.classList.add("tituloContenedor")
                            tituloTotal.innerText = "Total de la reserva"
                            contenedorTotal.appendChild(tituloTotal)
                            const totalReserva = document.createElement("p")
                            totalReserva.classList.add("totalReserva")
                            totalReserva.innerText = totalFinal + "$"
                            contenedorTotal.appendChild(totalReserva)
                            const masInfo = document.createElement("p")
                            masInfo.classList.add("info")
                            masInfo.innerText = "Si desea ver el detalle del total pulse aquí"
                            masInfo.addEventListener("click", () => {
                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                const instanciaUID = ui.getAttribute("instanciaUID")
                                const contenedor = ui.querySelector("[componente=contenedor]")
                                main.appendChild(ui)

                                const titulo = document.createElement("div")
                                titulo.classList.add("titulo")
                                titulo.innerText = "Desglose de la reserva"
                                contenedor.appendChild(titulo)


                                const testInfo = document.createElement("div")
                                testInfo.classList.add(
                                    "textoJustificado", "padding10"
                                )
                                testInfo.innerText = "A continuación, se presentan los detalles del desglose completo del importe total de la reserva. Aquí encontrarás una explicación detallada de cada componente que contribuye al costo total. Este desglose incluye los diversos cargos, impuestos u otros conceptos asociados con tu reserva. Revisar estos detalles te proporcionará una comprensión transparente de los costos involucrados en tu elección de alojamiento. ¡Estamos comprometidos a brindarte la información necesaria para que tu experiencia de reserva sea clara, transparente y sin sorpresas!"
                                contenedor.appendChild(testInfo)

                                const botonCerrar = document.createElement("div")
                                botonCerrar.classList.add("boton")
                                botonCerrar.innerText = "Cerrar y volver"
                                botonCerrar.setAttribute("boton", "cancelar")
                                botonCerrar.addEventListener("click", () => {
                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                })
                                contenedor.appendChild(botonCerrar)

                                casaVitini.ui.componentes.contenedorFinanciero.constructor({
                                    destino: `[instanciaUID="${instanciaUID}"] [componente=contenedor]`,
                                    contenedorFinanciero: contenedorFinanciero,
                                    modoUI: "plaza"
                                })
                                const contenedorFinancieroUI = ui.querySelector("[contenedor=financiero]")
                                contenedorFinancieroUI.classList.add(
                                    "backgroundGrey1",
                                    "borderRadius10"
                                )

                                const botonCerrarInferior = document.createElement("div")
                                botonCerrarInferior.classList.add("boton")
                                botonCerrarInferior.innerText = "Cerrar y volver"
                                botonCerrarInferior.setAttribute("boton", "cancelar")
                                botonCerrarInferior.addEventListener("click", () => {
                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                })
                                contenedor.appendChild(botonCerrarInferior)
                            })
                            contenedorTotal.appendChild(masInfo)
                            espacioDatosGlobalesReserva.appendChild(contenedorTotal)
                        } else {
                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add("marcoElasticoRelativo")
                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            marcoElastico.style.alignItems = "stretch"
                            marcoElastico.style.gap = "4px"
                            const titulo = document.createElement("div")
                            titulo.classList.add("titulo")
                            titulo.innerText = "Nínguna reserva que mostrar"
                            marcoElastico.appendChild(titulo)
                            // Añadir banner informativo
                            const contenedorBanner = document.createElement("a")
                            contenedorBanner.classList.add("plaza_reservas_reservaConfirmada_bannerV2")
                            contenedorBanner.innerText = "Esta página muestra el resumen de tu reserva confirmada, pero no encuentra ninguna reserva guardada en la caché local de tu navegador. Cuando haces una reserva, los datos de la reserva, luego de guardarse en el servidor de Casa Vitini, se guarda una copia local en tu navegador. Esto se hace para la comodidad del usuario. Para que pueda acceder al resumen de su reserva confirmada cómodamente. Pero si el usuario borra la caché de navegador o esta se borra por la configuración del navegador, ya no se puede acceder a la reserva porque ya no existe en la caché del navegador. Si quieres volver a ver el resumen de tu reserva, tienes varias opciones. La más cómoda e inmediata es registrar una nueva cuenta en Mi Casa para obtener tu VitiniID y poder acceder a tu cuenta de usuario donde podrá ver tus reservas. Otra opción es ponerte en contacto con nosotros. Para ellos ves al apartado Contacto, donde podrás obtener las distintas formas de contacto con nosotros y te responderemos lo antes posible. Ten en cuenta que, debido a las zonas horarias, si cuando nos llamas no estamos disponibles por la diferencia horaria, puedes enviarnos un correo o un mensaje instantáneo. La primera opción, registrar una cuenta, es una opción instantánea y es la que te recomendamos."
                            marcoElastico.appendChild(contenedorBanner)
                            const botonIniciarReserva = document.createElement("a")
                            botonIrARegistrarse.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIrARegistrarse.innerText = "Iniciar una nueva reserva"
                            botonIrARegistrarse.setAttribute("href", "/alojamiento")
                            botonIrARegistrarse.setAttribute("vista", "/alojamiento")
                            botonIrARegistrarse.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonIniciarReserva)
                            const botonIrARegistrarse = document.createElement("a")
                            botonIrARegistrarse.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIrARegistrarse.innerText = "Ir a crear una cuenta a MiCasa"
                            botonIrARegistrarse.setAttribute("href", "/micasa/crear_nueva_cuenta")
                            botonIrARegistrarse.setAttribute("vista", "/micasa/crear_nueva_cuenta")
                            botonIrARegistrarse.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonIrARegistrarse)
                            const botonInciarSession = document.createElement("a")
                            botonInciarSession.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonInciarSession.innerText = "Iniciar session con mi VitiniID en MiCasa"
                            botonInciarSession.setAttribute("href", "/micasa")
                            botonInciarSession.setAttribute("vista", "/micasa")
                            botonInciarSession.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonInciarSession)
                            marcoElasticoRelatico.appendChild(marcoElastico)
                            const seccion = document.querySelector("main")
                            seccion.innerHTML = null
                            seccion.appendChild(marcoElasticoRelatico)
                        }

                    },
                    borrarReservaLocal: () => {
                        document.body.style.overflow = 'hidden';
                        const advertenciaInmersivaIU = document.createElement("div")
                        advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                        advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                        advertenciaInmersivaIU.setAttribute("contenedor", "opcionesCancelacion")
                        const contenedorAdvertenciaInmersiva = document.createElement("div")
                        contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                        const contenidoAdvertenciaInmersiva = document.createElement("div")
                        contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                        contenidoAdvertenciaInmersiva.setAttribute("contenedor", "contenidoAdvertenciaInmersiva")
                        const contenedorCancelacion = document.createElement("div")
                        contenedorCancelacion.classList.add("administracion_reservas_detallesReservas_cancelarReserva_contenedorCancelacion")
                        const tituloCancelarReserva = document.createElement("p")
                        tituloCancelarReserva.classList.add("detallesReservaTituloCancelarReserva")
                        tituloCancelarReserva.innerText = "Borrar esta copia de mi reserva"
                        contenedorCancelacion.appendChild(tituloCancelarReserva)
                        const infoEliminarReserva = document.createElement("div")
                        infoEliminarReserva.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                        infoEliminarReserva.style.marginTop = "0px"
                        infoEliminarReserva.innerText = "Cuando realizas una reserva y la confirmas. Una copia de la reserva se guarda en tu navegador en el almacén de memoria local que tiene el navegador. Esta copia de la reserva está para su comodidad. Para que pueda regresar a los datos de su reserva, sí visita Casa Vitini desde el mismo navegador donde realizó la reserva. Si desea borrar esta copia almacenada en la memoria local de su navegador, puede hacerlo pulsando el botón de abajo para eliminar o eliminando la cache de su navegador. Recuerde que si se registra y obtiene su VitiniID puede acceder a una copia de su reserva siempre que quiera. Para ello, debe de registrarse con la misma dirección de correo electrónico con la que confirmó la reserva."
                        contenedorCancelacion.appendChild(infoEliminarReserva)
                        const botonEliminarReserva = document.createElement("div")
                        botonEliminarReserva.classList.add("administracion_reservas_detallesReserva_cancelarReserva_botonV1")
                        botonEliminarReserva.setAttribute("componente", "botonConfirmarCancelarReserva")
                        botonEliminarReserva.innerText = "Eliminar esta copia de la reserva almacenada localmente en mi navegador"
                        botonEliminarReserva.addEventListener("click", () => {
                            localStorage.removeItem("reservaConfirmada")
                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                            const navegacion = {
                                vista: "/alojamiento",
                                tipoOrigen: "menuNavegador"
                            }
                            return casaVitini.shell.navegacion.controladorVista(navegacion)
                        }
                        )
                        contenedorCancelacion.appendChild(botonEliminarReserva)
                        const botonCancelarProcesoCancelacion = document.createElement("div")
                        botonCancelarProcesoCancelacion.classList.add("detallesReservaCancelarBoton")
                        botonCancelarProcesoCancelacion.innerText = "Cancelar, no eliminar y volver atras"
                        botonCancelarProcesoCancelacion.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                        contenedorCancelacion.appendChild(botonCancelarProcesoCancelacion)
                        contenidoAdvertenciaInmersiva.appendChild(contenedorCancelacion)
                        contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                        advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                        document.querySelector("main").appendChild(advertenciaInmersivaIU)
                    },

                    reservaConfirmadaUI: async () => {
                    },
                },
                componentes: {
                    controladorCuentaAtras: function (data) {

                        let segundosDeLaCuentaAtras = data.segundosDeLaCuentaAtras
                        const zonaHoraria = data.zonaHoraria
                        const horaLimiteDelMismoDia = data.horaLimiteDelMismoDia
                        const instanciaUID = data.instanciaUID
                        const selectorDestino = `[instanciaUID="${instanciaUID}"] [contenedor=cuentaAtras]`
                        // Encuentra el elemento en el DOM donde se mostrará la cuenta atrás
                        const selector = document.querySelector(selectorDestino);

                        // Función para actualizar la cuenta atrás cada segundo
                        const actualizarCuenta = () => {


                            const selectorRenderizado = document.querySelector(selectorDestino);


                            if (!selectorRenderizado) {

                                clearInterval(countdownInterval);
                            }
                            // Calcular días, horas, minutos y segundos
                            const days = Math.floor(segundosDeLaCuentaAtras / (24 * 60 * 60));
                            const hours = Math.floor((segundosDeLaCuentaAtras % (24 * 60 * 60)) / (60 * 60));
                            const minutes = Math.floor((segundosDeLaCuentaAtras % (60 * 60)) / 60);
                            const seconds = segundosDeLaCuentaAtras % 60;
                            let cuentraAtrasFormateadaUI
                            // Formatea el tiempo para que siempre muestre dos dígitos
                            if (days > 0) {
                                cuentraAtrasFormateadaUI = `${days} Días ${hours} Horas ${minutes} Minutos ${seconds < 10 ? '0' : ''}${seconds} Segundos`;
                            } else if (hours > 0) {
                                cuentraAtrasFormateadaUI = `${hours} Horas ${minutes} Minutos ${seconds < 10 ? '0' : ''}${seconds} Segundos`;
                            } else if (minutes > 0) {
                                cuentraAtrasFormateadaUI = `${minutes} Minutos ${seconds < 10 ? '0' : ''}${seconds} Segundos`;
                            } else if (seconds > 0) {
                                cuentraAtrasFormateadaUI = `${seconds < 10 ? '0' : ''}${seconds} Segundos`;
                            }

                            // Muestra el tiempo en el DOM
                            selector.innerText = `Tiempo restante ${cuentraAtrasFormateadaUI}`;

                            // Resta un segundo del tiempo
                            segundosDeLaCuentaAtras--;

                            // Si el tiempo se acaba, se detiene el intervalo
                            if (segundosDeLaCuentaAtras < 0) {
                                clearInterval(countdownInterval);
                                const selectorContenedor = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                if (selectorContenedor) {
                                    selectorContenedor.innerHTML = null
                                    selectorContenedor.innerText = this.mensajeNoAceptacion({
                                        horaLimite: horaLimiteDelMismoDia,
                                        zonaHoraria: zonaHoraria
                                    });
                                }

                            }
                        }

                        // Llama a la función actualizarCuenta cada segundo
                        const countdownInterval = setInterval(actualizarCuenta, 1000);

                        // Llama a la función una vez para inicializar la cuenta atrás inmediatamente
                        actualizarCuenta();
                    },
                    mensajeNoAceptacion: (data) => {
                        const horaLimite = data.horaLimite
                        const zonaHoraria = data.zonaHoraria
                        return `¡Ya no aceptamos reservas con fecha de entrada para hoy online pasadas las ${horaLimite} (Hora local en zona horaria de ${zonaHoraria} en formato 24H). Póngase en contacto con nosotros si desea hacer su reserva con fecha de entrada para hoy. Si desea realizar una reserva con fecha de entrada para mañana o más adelante, puede seguir realizándola online. Gracias.`
                    }
                }
            },
            qr: {
                portada: {
                    arranque: async function () {

                        const granuladoURL = casaVitini.utilidades.granuladorURL()
                        const parametros = granuladoURL.parametros

                        if (Object.keys(parametros).length === 1 && parametros.hasOwnProperty("reserva")) {


                            const preconfirmarReserva = {
                                zona: "componentes/resolverQR",
                                codigoIDV: "reserva",
                                reservaUID: parametros.reserva
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(preconfirmarReserva)


                            if (respuestaServidor?.error) {
                                return this.errorUI(respuestaServidor.error)
                            } else if (respuestaServidor.ok) {

                                const url = respuestaServidor.url
                                return casaVitini.shell.navegacion.controladorVista({
                                    vista: url
                                })
                            }
                        } else {
                            this.campoUI()
                        }
                    },
                    parametroNoReconocido: () => {


                        const main = document.querySelector("main")
                        main.innerHTML = null

                        const info = document.createElement("div")
                        info.classList.add(
                            "textoCentrado",
                            "negrita",
                            "padding12"

                        )
                        info.innerText = "No existe nada en esta dirección :)"
                        main.appendChild(info)

                        const boton = document.createElement("a")
                        boton.classList.add(
                            "botonV1",
                            "comportamientoBoton",
                            "areaSinDecoracionPredeterminada",
                            "margin10"
                        )
                        boton.innerText = "Ir a Administración"
                        boton.setAttribute("href", "/administracion")
                        boton.setAttribute("vista", "/administracion")
                        boton.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                        main.appendChild(boton)

                    },
                    campoUI: () => {
                        // Crear elementos
                        const titulo = document.createElement('p');
                        titulo.className = 'titulo';
                        titulo.textContent = 'Escanea el codigo QR';
                        const marcoElasticoRelativo = document.createElement('div');
                        marcoElasticoRelativo.className = 'marcoElasticoRelativo';
                        const marcoElastico = document.createElement('div');
                        marcoElastico.className = 'marcoElastico';
                        const contenedorCrearCuenta = document.createElement('form');
                        contenedorCrearCuenta.className = 'miCasa_crearCuenta_contenedorCrearCuenta';
                        const texto = document.createElement('p');
                        texto.className = 'texto padding6';
                        texto.textContent = 'Casa Vitini puede proporcionar documentos como resguardos de reservas con códigos QR. Estos códigos están situados en la parte superior derecha de los documentos y son cuadrados compuestos por cuadrados internos. Estos códigos pueden ser leídos por teléfonos móviles, entre otros dispositivos. Para leer estos códigos, puedes usar la aplicación de cámara de tu teléfono. Si al abrir la cámara y escanear el código QR no aparece ninguna información, entra en los ajustes de la app de cámara y asegúrate de que esté activada la función de escanear códigos QR. Si aun así no consigues escanear el código QR, busca en la tienda de aplicaciones de tu teléfono aplicaciones para escanear códigos QR.';

                        // Adjuntar elementos al DOM
                        const secction = document.querySelector("main")
                        secction.appendChild(titulo);
                        contenedorCrearCuenta.appendChild(texto);
                        marcoElastico.appendChild(contenedorCrearCuenta);
                        marcoElasticoRelativo.appendChild(marcoElastico);
                        secction.appendChild(marcoElasticoRelativo);
                    },
                    errorUI: (mensaje) => {
                        // Crear elementos
                        const titulo = document.createElement('p');
                        titulo.className = 'titulo';
                        titulo.textContent = 'Tu codigo qr ha producido un error';
                        const marcoElasticoRelativo = document.createElement('div');
                        marcoElasticoRelativo.className = 'marcoElasticoRelativo';
                        const marcoElastico = document.createElement('div');
                        marcoElastico.className = 'marcoElastico';
                        const contenedorCrearCuenta = document.createElement('form');
                        contenedorCrearCuenta.className = 'miCasa_crearCuenta_contenedorCrearCuenta';
                        const texto = document.createElement('p');
                        texto.classList.add(
                            "texto", "padding6",
                            "textoCentrado"
                        )
                        texto.textContent = mensaje

                        // Adjuntar elementos al DOM
                        const secction = document.querySelector("main")
                        secction.appendChild(titulo);
                        contenedorCrearCuenta.appendChild(texto);
                        marcoElastico.appendChild(contenedorCrearCuenta);
                        marcoElasticoRelativo.appendChild(marcoElastico);
                        secction.appendChild(marcoElasticoRelativo);
                    },
                },

            },
            miCasa: {
                cuenta: {
                    portada: {
                        arranque: async () => {
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/micasa")
                            const marcoCuenta = document.querySelector("[componente=marcoCuenta]")
                            const metadatos = {
                                zona: "IDX/estado"
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(metadatos)
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.usuario) {

                                const usuarioIDX = respuestaServidor?.usuario
                                const rolIDV = respuestaServidor?.rolIDV
                                const cuentaVerificadaIDV = respuestaServidor?.cuentaVerificadaIDV
                                const metadatosBanner = {
                                    usuarioIDX: usuarioIDX,
                                    rolIDV: rolIDV
                                }
                                let rolUI
                                if (rolIDV === "empleado") {
                                    rolUI = "empleado"
                                }
                                if (rolIDV === "cliente") {
                                    rolUI = "usuario"
                                }
                                if (cuentaVerificadaIDV === "no" && rolIDV !== "administrador") {
                                    const infoCuentaNoVerificada = document.createElement("p")
                                    infoCuentaNoVerificada.classList.add("infoCuenta")
                                    infoCuentaNoVerificada.innerHTML = `Tu cuenta de ${rolUI} no está verificada. Para verificar tu cuenta, valida tu correo electrónico. Si no verificas tu cuenta de ${rolUI}, no podrás acceder a tus reservas, no podras recuperar tu cuenta en caso de olvido de la contraseña y la cuenta se eliminará pasadas 24h. Si necesitas que te reenviemos otra vez el mail de verificación, entra en la sección de recuperación de cuentas yendo a Mi Casa > <a href="/micasa/recuperar_cuenta" class="enlace">Recuperar mi cuenta</a>`
                                    marcoCuenta.appendChild(infoCuentaNoVerificada)
                                }
                                if (cuentaVerificadaIDV === "no" && rolIDV === "administrador") {
                                    const infoCuentaNoVerificada = document.createElement("p")
                                    infoCuentaNoVerificada.classList.add("infoCuenta")
                                    infoCuentaNoVerificada.innerHTML = `Tu cuenta administrativa no está verificada. Para verificar tu cuenta, valida tu correo electrónico. Si no verificas tu cuenta administrativa, aunque podrás usar el panel de administración, no podrás acceder a tus reservas personales y si olvidas tu contraseña, no podrás recuperar tu cuenta a menos que te pongas en contacto con otro administrador. Las cuentas administrativas no verificadas no caducan con el tiempo. Si necesitas que te reenviemos otra vez el mail de verificación, entra en la sección de recuperación de cuentas yendo a Mi Casa > <a href="/micasa/recuperar_cuenta" class="enlace">Recuperar mi cuenta</a>`
                                    marcoCuenta.appendChild(infoCuentaNoVerificada)
                                }
                                const contenedorBanner = document.createElement("div")
                                contenedorBanner.classList.add("miCasa_marcoIDX_contenedor")
                                const bannerIDX = casaVitini.ui.vistas.miCasa.componentes.bannerIDX(metadatosBanner)
                                contenedorBanner.appendChild(bannerIDX)
                                marcoCuenta.appendChild(contenedorBanner)
                                const botonReservas = document.createElement("a")
                                botonReservas.setAttribute("class", "botonUsuario")
                                botonReservas.setAttribute("href", "/micasa/reservas")
                                botonReservas.setAttribute("vista", "/micasa/reservas")
                                botonReservas.classList.add("miCasa_marcoUsuario_opcion")
                                botonReservas.innerText = "Mis Reservas"
                                botonReservas.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                const botonModificarIDX = document.createElement("a")
                                botonModificarIDX.setAttribute("class", "botonUsuario")
                                botonModificarIDX.setAttribute("href", "/micasa/modificar_nombre_de_usuario")
                                botonModificarIDX.setAttribute("vista", "/micasa/modificar_nombre_de_usuario")
                                botonModificarIDX.classList.add("miCasa_marcoUsuario_opcion")
                                botonModificarIDX.innerText = "Modificar nombre de usuario"
                                botonModificarIDX.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                const botonDatosPersonales = document.createElement("a")
                                botonDatosPersonales.setAttribute("class", "botonUsuario")
                                botonDatosPersonales.setAttribute("href", "/micasa/mis_datos_personales")
                                botonDatosPersonales.setAttribute("vista", "/micasa/mis_datos_personales")
                                botonDatosPersonales.classList.add("miCasa_marcoUsuario_opcion")
                                botonDatosPersonales.innerText = "Mis datos personales"
                                botonDatosPersonales.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                const botonCambiarContrasena = document.createElement("a")
                                botonCambiarContrasena.setAttribute("class", "botonUsuario")
                                botonCambiarContrasena.setAttribute("href", "/micasa/cambiar_clave")
                                botonCambiarContrasena.setAttribute("vista", "/micasa/cambiar_clave")
                                botonCambiarContrasena.classList.add("miCasa_marcoUsuario_opcion")
                                botonCambiarContrasena.innerText = "Cambiar contrasena"
                                botonCambiarContrasena.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                const botonSessionesActivas = document.createElement("a")
                                botonSessionesActivas.setAttribute("class", "botonUsuario")
                                botonSessionesActivas.setAttribute("href", "/micasa/sessiones")
                                botonSessionesActivas.setAttribute("vista", "/micasa/sessiones")
                                botonSessionesActivas.classList.add("miCasa_marcoUsuario_opcion")
                                botonSessionesActivas.innerText = "Sessiones activas"
                                botonSessionesActivas.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                const botonZonaHoraria = document.createElement("a")
                                botonZonaHoraria.setAttribute("class", "botonUsuario")
                                botonZonaHoraria.setAttribute("href", "/micasa/zona_horaria")
                                botonZonaHoraria.setAttribute("vista", "/micasa/zona_horaria")
                                botonZonaHoraria.classList.add("miCasa_marcoUsuario_opcion")
                                botonZonaHoraria.innerText = "Configuración de la zona horaria"
                                botonZonaHoraria.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                const botonCerrarSession = document.createElement("a")
                                botonCerrarSession.setAttribute("class", "botonUsuario")
                                botonCerrarSession.setAttribute("componente", "botonCerrarSession")
                                botonCerrarSession.classList.add("miCasa_marcoUsuario_opcion")
                                botonCerrarSession.innerText = "Cerrar session"
                                botonCerrarSession.addEventListener("click", casaVitini.ui.vistas.miCasa.cerrarSession)
                                const botonEliminarCuenta = document.createElement("a")
                                botonEliminarCuenta.setAttribute("class", "botonUsuario")
                                botonEliminarCuenta.setAttribute("href", "/micasa/eliminar_cuenta")
                                botonEliminarCuenta.setAttribute("vista", "/micasa/eliminar_cuenta")
                                botonEliminarCuenta.setAttribute("componente", "botonEliminarCuenta")
                                botonEliminarCuenta.classList.add("miCasa_marcoUsuario_opcion")
                                botonEliminarCuenta.innerText = "Eliminar cuenta"
                                botonEliminarCuenta.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                //const marcoUsuario = document.querySelector("[componente=marcoUsuario]")
                                const marcoUsuario = document.createElement("div")
                                marcoUsuario.classList.add("miCasa_marcoUsuario")
                                marcoUsuario.setAttribute("componente", "marcoUsuario")
                                if (rolIDV === "cliente") {
                                    marcoUsuario.appendChild(botonReservas)
                                    marcoUsuario.appendChild(botonModificarIDX)
                                    marcoUsuario.appendChild(botonDatosPersonales)
                                    marcoUsuario.appendChild(botonSessionesActivas)
                                    marcoUsuario.appendChild(botonCambiarContrasena)
                                    marcoUsuario.appendChild(botonEliminarCuenta)
                                    marcoUsuario.appendChild(botonCerrarSession)
                                }
                                if (rolIDV === "administrador" || rolIDV === "empleado") {
                                    marcoUsuario.appendChild(botonReservas)
                                    marcoUsuario.appendChild(botonModificarIDX)
                                    marcoUsuario.appendChild(botonDatosPersonales)
                                    marcoUsuario.appendChild(botonSessionesActivas)
                                    //marcoUsuario.appendChild(botonZonaHoraria)
                                    marcoUsuario.appendChild(botonCambiarContrasena)
                                    marcoUsuario.appendChild(botonEliminarCuenta)
                                    marcoUsuario.appendChild(botonCerrarSession)
                                }
                                marcoCuenta.appendChild(marcoUsuario)
                            }
                        },
                    },
                    datosPersonales: {
                        arranque: async () => {
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/micasa")
                            const contenedorDatosPersonales = document.querySelector("[componente=marcoCuenta]")
                            const transaccion = {
                                zona: "/miCasa/datosPersonalesDesdeMiCasa"
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {

                                const detallesUsuario = respuestaServidor?.ok
                                const usuarioIDX = detallesUsuario.usuarioIDX
                                const rolIDV = detallesUsuario.rolIDV
                                const nombre = detallesUsuario.nombre || ""
                                const primerApellido = detallesUsuario.primerApellido || ""
                                const segundoApellido = detallesUsuario.segundoApellido || ""
                                const pasaporte = detallesUsuario.pasaporte || ""
                                const telefono = detallesUsuario.telefono || ""
                                const mail = detallesUsuario.mail || ""
                                const datosBanner = {
                                    usuarioIDX: usuarioIDX,
                                    rolIDV: rolIDV
                                }

                                const contenedorBanner = document.createElement("div")
                                contenedorBanner.classList.add("miCasa_marcoIDX_contenedor")
                                const contenedorUsuarioIDX = casaVitini.ui.vistas.miCasa.componentes.bannerIDX(datosBanner)
                                contenedorBanner.appendChild(contenedorUsuarioIDX)
                                contenedorDatosPersonales.appendChild(contenedorBanner)
                                const contenedorDatosUsuario = document.createElement("div")
                                contenedorDatosUsuario.classList.add("detallesUsuario_contenedorDatosUsuario")
                                const nombreUI = document.createElement("a")
                                nombreUI.classList.add("detallesUsuario_contenedorCampoEInfo")
                                let titulo = document.createElement("p")
                                titulo.classList.add("tituloDato")
                                titulo.innerText = "Nombre"
                                nombreUI.appendChild(titulo)
                                const campoNombre = document.createElement("input")
                                campoNombre.classList.add("detallesUsuario_campoDatosUsuario")
                                campoNombre.setAttribute("campo", "nombre")
                                campoNombre.setAttribute("valorInicial", nombre)
                                campoNombre.value = nombre
                                nombreUI.appendChild(campoNombre)
                                contenedorDatosUsuario.appendChild(nombreUI)
                                const primerApellidoUI = document.createElement("a")
                                primerApellidoUI.classList.add("detallesUsuario_contenedorCampoEInfo")
                                titulo = document.createElement("p")
                                titulo.classList.add("tituloDato")
                                titulo.innerText = "Primero apellido"
                                primerApellidoUI.appendChild(titulo)
                                const campoPrimerApellido = document.createElement("input")
                                campoPrimerApellido.classList.add("detallesUsuario_campoDatosUsuario")
                                campoPrimerApellido.setAttribute("campo", "primerApellido")
                                campoPrimerApellido.setAttribute("valorInicial", primerApellido)
                                campoPrimerApellido.value = primerApellido
                                primerApellidoUI.appendChild(campoPrimerApellido)
                                contenedorDatosUsuario.appendChild(primerApellidoUI)
                                const segundoApellidoUI = document.createElement("a")
                                segundoApellidoUI.classList.add("detallesUsuario_contenedorCampoEInfo")
                                titulo = document.createElement("p")
                                titulo.classList.add("tituloDato")
                                titulo.innerText = "Segundo apellido"
                                segundoApellidoUI.appendChild(titulo)
                                const campoSegundoApellido = document.createElement("input")
                                campoSegundoApellido.classList.add("detallesUsuario_campoDatosUsuario")
                                campoSegundoApellido.setAttribute("campo", "segundoApellido")
                                campoSegundoApellido.setAttribute("valorInicial", segundoApellido)
                                campoSegundoApellido.value = segundoApellido
                                segundoApellidoUI.appendChild(campoSegundoApellido)
                                contenedorDatosUsuario.appendChild(segundoApellidoUI)
                                const pasaporteUI = document.createElement("a")
                                pasaporteUI.classList.add("detallesUsuario_contenedorCampoEInfo")
                                titulo = document.createElement("p")
                                titulo.classList.add("tituloDato")

                                titulo.innerText = "Pasaporte"
                                pasaporteUI.appendChild(titulo)
                                const campoPasaporte = document.createElement("input")
                                campoPasaporte.classList.add("detallesUsuario_campoDatosUsuario")
                                campoPasaporte.setAttribute("campo", "pasaporte")
                                campoPasaporte.setAttribute("valorInicial", pasaporte)
                                campoPasaporte.value = pasaporte
                                pasaporteUI.appendChild(campoPasaporte)
                                contenedorDatosUsuario.appendChild(pasaporteUI)
                                const telefonoUI = document.createElement("a")
                                telefonoUI.classList.add("detallesUsuario_contenedorCampoEInfo")
                                titulo = document.createElement("p")
                                titulo.classList.add("tituloDato")
                                titulo.innerText = "Teléfono"
                                telefonoUI.appendChild(titulo)
                                const campoTelefono = document.createElement("input")
                                campoTelefono.classList.add("detallesUsuario_campoDatosUsuario")
                                campoTelefono.setAttribute("campo", "telefono")
                                campoTelefono.setAttribute("valorInicial", telefono)
                                campoTelefono.value = telefono
                                telefonoUI.appendChild(campoTelefono)
                                contenedorDatosUsuario.appendChild(telefonoUI)
                                const mailUI = document.createElement("a")
                                mailUI.classList.add("detallesUsuario_contenedorCampoEInfo")
                                titulo = document.createElement("p")
                                titulo.classList.add("tituloDato")
                                titulo.innerText = "Correo electroníco"
                                mailUI.appendChild(titulo)
                                const campomail = document.createElement("input")
                                campomail.classList.add("detallesUsuario_campoDatosUsuario")
                                campomail.setAttribute("campo", "mail")
                                campomail.setAttribute("valorInicial", mail)
                                campomail.value = mail
                                mailUI.appendChild(campomail)
                                contenedorDatosUsuario.appendChild(mailUI)
                                contenedorDatosPersonales.appendChild(contenedorDatosUsuario)
                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add("detallesUsuario_contenedorBotones")
                                contenedorBotones.setAttribute("componente", "contenedorBotones")
                                const botonGuardarCambios = document.createElement("div")
                                botonGuardarCambios.classList.add("detallesUsuario_botonV1")
                                botonGuardarCambios.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.datosPersonales.guardarCambios)
                                botonGuardarCambios.innerText = "Guardar cambios"
                                contenedorBotones.appendChild(botonGuardarCambios)
                                const botonCancelarCambios = document.createElement("div")
                                botonCancelarCambios.classList.add("detallesUsuario_botonV1")
                                botonCancelarCambios.innerText = "Cancelar cambios"
                                botonCancelarCambios.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.datosPersonales.cancelarCambios)
                                contenedorBotones.appendChild(botonCancelarCambios)
                                contenedorDatosPersonales.appendChild(contenedorBotones)
                                const campos = document.querySelectorAll("[campo]")
                                const selectorContenedorBotones = document.querySelector("[componente=contenedorBotones]")

                                const controladorCampos = () => {
                                    let estadoUI = "ocultar"
                                    campos.forEach((campo) => {
                                        const campoValor = campo.value
                                        const valorInicial = campo.getAttribute("valorInicial")

                                        if (campoValor !== valorInicial) {
                                            selectorContenedorBotones.style.display = "flex"
                                            estadoUI = "activado"
                                        }
                                        if (estadoUI === "ocultar") {
                                            selectorContenedorBotones.removeAttribute("style")
                                        }

                                    })
                                }
                                campos.forEach((campo) => {
                                    campo.addEventListener("input", controladorCampos)
                                })
                            }
                        },
                        cancelarCambios: () => {
                            const campos = document.querySelectorAll("[campo]")
                            campos.forEach((campo) => {
                                const valorInicial = campo.getAttribute("valorInicial")
                                campo.value = valorInicial
                            })
                            const selectorContenedorBotones = document.querySelector("[componente=contenedorBotones]")
                            selectorContenedorBotones.removeAttribute("style")
                        },
                        guardarCambios: async () => {
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Actualizando tu datos..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje,
                                botonCancelar: "ocultar"
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const campos = document.querySelectorAll("[campo]")
                            const datosParaActualizar = {
                                zona: "miCasa/actualizarDatosUsuarioDesdeMiCasa",
                            }
                            campos.forEach((campo) => {
                                const campoID = campo.getAttribute("campo")
                                const campoDato = campo.value
                                datosParaActualizar[campoID] = campoDato
                            })
                            const respuestaServidor = await casaVitini.shell.servidor(datosParaActualizar)

                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            if (!pantallaDeCargaRenderizada) { return }
                            pantallaDeCargaRenderizada.remove()
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {
                                const detallesUsuario = respuestaServidor?.datosActualizados
                                const nombre = detallesUsuario.nombre
                                const primerApellido = detallesUsuario.primerApellido
                                const segundoApellido = detallesUsuario.segundoApellido
                                const pasaporte = detallesUsuario.pasaporte
                                const telefono = detallesUsuario.telefono
                                const mail = detallesUsuario.mail
                                campos.forEach((campo) => {
                                    const campoID = campo.getAttribute("campo")
                                    campo.value = detallesUsuario[campoID]
                                    campo.setAttribute("valorInicial", detallesUsuario[campoID])
                                })
                                const selectorContenedorBotones = document.querySelector("[componente=contenedorBotones]")
                                selectorContenedorBotones.removeAttribute("style")
                            }
                        }
                    },
                    sessionesActivas: {
                        arranque: async () => {
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/micasa")
                            const espacioBotones = document.querySelector("[componente=espacioBotones]")
                            const espacioSessiones = document.querySelector("[componente=espacioSessiones]")
                            const botonCerrarRestoSessiones = document.createElement("div")
                            botonCerrarRestoSessiones.classList.add("miCasa_sessiones_botonV2")
                            botonCerrarRestoSessiones.innerText = "Cerrar el resto de sessiones menos esta"
                            botonCerrarRestoSessiones.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.sessionesActivas.cerrarTodasSessioneMenosUna)
                            espacioBotones.appendChild(botonCerrarRestoSessiones)
                            const transaccion = {
                                zona: "miCasa/obtenerSessionesActivasDesdeMiCasa"
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {
                                const sessionesActivas = respuestaServidor?.sessionesActivas

                                if (sessionesActivas.length === 0) {
                                    // no hay sessiones
                                } else {
                                    const sessionIDX = respuestaServidor?.sessionIDX
                                    sessionesActivas.forEach((detallesSession) => {
                                        const sessionIDX_detallesSession = detallesSession.sessionIDX
                                        const caducidadUTC = detallesSession.caducidadUTC
                                        const tiempoRestante = detallesSession.tiempoRestante
                                        const ip = detallesSession.ip
                                        const userAgent = detallesSession.userAgent
                                        let sessionActual_UI = "(En otro equipo)"
                                        if (sessionIDX_detallesSession === sessionIDX) {
                                            sessionActual_UI = "(Session actual)"
                                        }
                                        const contenedorSession = document.createElement("div")
                                        contenedorSession.classList.add("miCasa_sessiones_contenedorSession")
                                        contenedorSession.setAttribute("componente", "contenedorSession")
                                        contenedorSession.setAttribute("sessionIDX", sessionIDX_detallesSession)
                                        contenedorSession.setAttribute("sessionActual", sessionIDX)
                                        const contenedorSessionID = document.createElement("div")
                                        contenedorSessionID.classList.add("miCasa_sessiones_contenedorBloque")
                                        const sessionInfo = document.createElement("div")
                                        sessionInfo.classList.add("miCasa_sessiones_texto")
                                        sessionInfo.classList.add("negrita")
                                        sessionInfo.innerText = "Vitini IDX " + sessionActual_UI
                                        contenedorSessionID.appendChild(sessionInfo)
                                        const sessionIDX_UI = document.createElement("div")
                                        sessionIDX_UI.classList.add("miCasa_sessiones_texto")
                                        sessionIDX_UI.innerText = sessionIDX_detallesSession
                                        contenedorSessionID.appendChild(sessionIDX_UI)
                                        contenedorSession.appendChild(contenedorSessionID)
                                        const ipSessionUI = document.createElement("div")
                                        ipSessionUI.classList.add("miCasa_sessiones_textoIP")
                                        ipSessionUI.innerText = ip
                                        contenedorSession.appendChild(ipSessionUI)
                                        const userAgentUI = document.createElement("div")
                                        userAgentUI.classList.add("miCasa_sessiones_textoIP")
                                        userAgentUI.innerText = userAgent
                                        contenedorSession.appendChild(userAgentUI)
                                        const contenedorCaducidad = document.createElement("div")
                                        contenedorCaducidad.classList.add("miCasa_sessiones_contenedorBloque")
                                        const caducidadInfo = document.createElement("div")
                                        caducidadInfo.classList.add("miCasa_sessiones_texto")
                                        caducidadInfo.innerText = "Caducidad de la información de sesión local en hora UTC si no se produce una nueva petición:"
                                        contenedorCaducidad.appendChild(caducidadInfo)
                                        const caducidadESP_UI = document.createElement("div")
                                        caducidadESP_UI.classList.add("miCasa_sessiones_texto")
                                        caducidadESP_UI.classList.add("negrita")
                                        caducidadESP_UI.innerText = caducidadUTC
                                        contenedorCaducidad.appendChild(caducidadESP_UI)
                                        const tiempoRestante_UI = document.createElement("div")
                                        tiempoRestante_UI.classList.add("miCasa_sessiones_texto")
                                        tiempoRestante_UI.classList.add("negrita")
                                        tiempoRestante_UI.innerText = tiempoRestante
                                        contenedorCaducidad.appendChild(tiempoRestante_UI)
                                        contenedorSession.appendChild(contenedorCaducidad)
                                        const botonCerrarSession = document.createElement("div")
                                        botonCerrarSession.classList.add("miCasa_sessiones_botonCerrarSession")
                                        botonCerrarSession.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.sessionesActivas.cerraSessionUnica)
                                        botonCerrarSession.innerText = "Cerrar session"
                                        contenedorSession.appendChild(botonCerrarSession)
                                        espacioSessiones.appendChild(contenedorSession)
                                    })
                                }
                            }
                        },
                        cerraSessionUnica: async (sessions) => {
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Cerrando la session seleccionada..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje,
                                botonCancelar: "ocultar"
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const sessionIDX = sessions.target.closest("[sessionIDX]")
                            const transaccion = {
                                zona: "miCasa/cerrarSessionSelectivamenteDesdeMiCasa",
                                tipoOperacion: "cerrarUna",
                                sessionIDX: sessionIDX.getAttribute("sessionIDX")
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            if (!pantallaDeCargaRenderizada) { return }
                            pantallaDeCargaRenderizada.remove()
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {
                                const sessionActual = sessionIDX.getAttribute("sessionActual")
                                const sessionIDX_ = sessionIDX.getAttribute("sessionIDX")
                                sessionIDX.remove()
                                if (sessionActual === sessionIDX_) {
                                    const navegacion = {
                                        "vista": "/miCasa/sessiones",
                                        "tipoOrigen": "menuNavegador"
                                    }
                                    return casaVitini.shell.navegacion.controladorVista(navegacion)
                                }
                            }
                        },
                        cerrarTodasSessioneMenosUna: async () => {
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Cerrando todas la sessiones menos esta..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje,
                                botonCancelar: "ocultar"
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const transaccion = {
                                zona: "miCasa/cerrarSessionSelectivamenteDesdeMiCasa",
                                tipoOperacion: "todasMenosActual",
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            if (!pantallaDeCargaRenderizada) { return }
                            pantallaDeCargaRenderizada.remove()
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {
                                const sessionActual = document.querySelectorAll("[sessionIDX]")
                                sessionActual.forEach((sessionRenderizada) => {
                                    const sessionIDXActual = sessionRenderizada.getAttribute("sessionActual")
                                    const sessionIDXBloque = sessionRenderizada.getAttribute("sessionIDX")
                                    if (sessionIDXActual !== sessionIDXBloque) {
                                        sessionRenderizada.remove()
                                    }
                                })
                            }
                        }
                    },
                    cambiarClave: {
                        portada: {
                            arranque: () => {
                                const main = document.querySelector("main")
                                main.setAttribute("zonaCSS", "/micasa")
                                const botonCambiarClave = document.querySelector("[componente=botonCambiarClave]")
                                botonCambiarClave.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.cambiarClave.portada.cambiarClaveTransactor)
                            },
                            cambiarClaveTransactor: async () => {
                                const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                const instanciaUID = document.querySelector("main").getAttribute("instanciaUID")

                                const mensaje = "Actualizando contraseña del usuario..."
                                const datosPantallaSuperpuesta = {
                                    instanciaUID: instanciaUIDPantallaDeCarga,
                                    mensaje: mensaje
                                }
                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)

                                const claveActual = document.querySelector("[campo=claveActual]").value
                                const claveNueva = document.querySelector("[campo=claveNueva]").value
                                const claveConfirmada = document.querySelector("[campo=claveConfirmada]").value
                                const transaccion = {
                                    zona: "miCasa/actualizarClaveUsuarioDesdeMicasa",
                                    claveActual: claveActual,
                                    claveNueva: claveNueva,
                                    claveConfirmada: claveConfirmada
                                }
                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                const instanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                if (!pantallaDeCargaRenderizada) { return }
                                pantallaDeCargaRenderizada.remove()

                                if (respuestaServidor?.error) {
                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                }
                                if (respuestaServidor?.ok) {

                                    instanciaRenderizada.querySelector("[componente=formulario]").remove()
                                    const marcoCuenta = instanciaRenderizada.querySelector("[componente=marcoCuenta]")

                                    const info = document.createElement("div")
                                    info.classList.add("miCuenta_cambiarClave_testo")
                                    info.classList.add("negrita")
                                    info.innerText = "Se ha cambiado la clave correctamente, ya puede usarla. También se recomienda que revise las sesiones abiertas. Diríjase a Mi Casa > Sesiones"
                                    marcoCuenta.appendChild(info)

                                }
                            }
                        }
                    },
                    eliminarCuenta: {
                        portada: {
                            arranque: () => {
                                const main = document.querySelector("main")
                                main.setAttribute("zonaCSS", "/micasa")
                                const botonCambiarClave = document.querySelector("[componente=botonEliminarCuenta]")
                                botonCambiarClave.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.eliminarCuenta.portada.transactor)
                            },
                            transactor: async () => {
                                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                const mensaje = "Eliminando tu VitiniID..."
                                const datosPantallaSuperpuesta = {
                                    instanciaUID: instanciaUID,
                                    mensaje: mensaje,
                                    botonCancelar: "ocultar"
                                }
                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                                const clave = document.querySelector("[campo=clave]").value
                                const transaccion = {
                                    zona: "miCasa/eliminarCuentaDesdeMiCasa",
                                    clave: clave
                                }

                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                if (!pantallaDeCargaRenderizada) { return }
                                pantallaDeCargaRenderizada.remove()
                                if (respuestaServidor?.error) {
                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                }
                                if (respuestaServidor?.ok) {


                                    await casaVitini.shell.controladoresUI.controladorEstadoIDX()

                                    const main = document.querySelector("main")
                                    main.innerHTML = null

                                    const informacion = "Se ha elegido tu cuenta correctamente. Sentimos que te vayas vuelve cuando quieras."
                                    const info = document.createElement("div")
                                    info.classList.add(
                                        "margin10",
                                        "textoCentrado",
                                        "negritas"
                                    )
                                    info.innerText = informacion
                                    main.appendChild(info)

                                }
                            }
                        }
                    },
                    modificarIDX: {
                        arranque: async () => {
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/micasa")
                            const botonActualizarIDX = document.querySelector("[componente=botonCambiarIDX]")
                            botonActualizarIDX.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.modificarIDX.guardarCambios)
                        },
                        guardarCambios: async () => {
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Actualizando tu VitiniID..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje,
                                botonCancelar: "ocultar"
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const nuevoIDX = document.querySelector("[campo=nuevoIDX]")
                            const datosParaActualizar = {
                                zona: "miCasa/actualizarIDX",
                                nuevoIDX: nuevoIDX.value
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(datosParaActualizar)
                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            if (!pantallaDeCargaRenderizada) { return }
                            pantallaDeCargaRenderizada.remove()
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {
                                nuevoIDX.value = null
                                casaVitini.shell.controladoresUI.controladorEstadoIDX()
                            }
                        },
                    },
                    reservas: {
                        arranque: async function () {
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/micasa")
                            const granuladoURL = casaVitini.utilidades.granuladorURL()
                            const comandoInicial = granuladoURL.directorios[granuladoURL.directorios.length - 1]
                            const parametros = granuladoURL.parametros
                            const directorios = granuladoURL.directorios


                            if (comandoInicial === "reservas" && Object.keys(parametros).length === 0) {
                                this.marcoUI()
                                const transaccion = {
                                    zona: "miCasa/misReservas/listarMisReservas",
                                    pagina: 1,
                                    origen: "url",
                                    tipoConstruccionGrid: "total"
                                }
                                return casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.mostrarReservasResueltas(transaccion)
                            } else if (Object.keys(parametros).length > 0) {
                                this.marcoUI()
                                const transaccion = {
                                    zona: "miCasa/misReservas/listarMisReservas",
                                    origen: "url",
                                    tipoConstruccionGrid: "total",
                                    ...granuladoURL.parametros,
                                }
                                transaccion.pagina = transaccion.pagina ? Number(transaccion.pagina) : 1
                                if (transaccion.nombre_columna) {
                                    transaccion.nombreColumna = transaccion.nombre_columna.replace(/_([a-z])/g, (_, group1) => group1.toUpperCase());
                                    const nombreColumna = transaccion.nombreColumna
                                    delete transaccion.nombre_columna
                                }
                                if (transaccion.sentido_columna) {
                                    transaccion.sentidoColumna = transaccion.sentido_columna
                                    delete transaccion.sentido_columna
                                }
                                return casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.mostrarReservasResueltas(transaccion)
                            } else if (directorios[1] === "reservas") {

                                const reservaUID = directorios[2]
                                return casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.ui({
                                    reservaUID: reservaUID
                                })
                            } else {
                                casaVitini.ui.componentes.urlDesconocida()
                            }
                        },
                        marcoUI: () => {
                            const main = document.querySelector("main")

                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add(
                                "marcoElasticoRelativo"
                            )

                            const espacioMisReservas = document.createElement("div")
                            espacioMisReservas.classList.add("marocCuenta")
                            espacioMisReservas.setAttribute("componente", "espacioMisReservas")
                            marcoElasticoRelatico.appendChild(espacioMisReservas)
                            const contenedorResultados = document.createElement("div")
                            contenedorResultados.classList.add(
                                "flexVertical"
                            )
                            contenedorResultados.setAttribute("contenedor", "resultados")
                            marcoElasticoRelatico.appendChild(contenedorResultados)
                            main.appendChild(marcoElasticoRelatico)
                        },
                        listaReservas: {
                            mostrarReservasResueltas: async function (transaccion) {
                                const main = document.querySelector("main")

                                const instanciaUID = main.getAttribute("instanciaUID")
                                const origen = transaccion.origen
                                delete transaccion.origen
                                const tipoConstruccionGrid = transaccion.tipoConstruccionGrid
                                delete transaccion.tipoConstruccionGrid
                                const granuladoURL = casaVitini.utilidades.granuladorURL()
                                const paginaTipo = transaccion.paginaTipo
                                delete transaccion.paginaTipo
                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                const instanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                if (!instanciaRenderizada) { return }









                                if (respuestaServidor?.error) {
                                    const espacioClientes = document.querySelector("[componente=espacioMisReservas]")
                                    document.querySelector("[gridUID=gridMisReservas]")?.remove()
                                    document.querySelector("[componente=estadoBusqueda]")?.remove()
                                    const estadoBusquedaUI = document.createElement("div")
                                    estadoBusquedaUI.classList.add("infoCuenta")
                                    estadoBusquedaUI.setAttribute("componente", "estadoBusqueda")
                                    estadoBusquedaUI.innerText = respuestaServidor.error
                                    espacioClientes.appendChild(estadoBusquedaUI)
                                    return
                                    //return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                }
                                if (respuestaServidor.totalReservas === 0) {
                                    const espacioClientes = document.querySelector("[componente=espacioMisReservas]")
                                    document.querySelector("[gridUID=gridMisReservas]")?.remove()
                                    document.querySelector("[componente=estadoBusqueda]")?.remove()
                                    const estadoBusquedaUI = document.createElement("div")
                                    estadoBusquedaUI.classList.add("infoCuenta")
                                    estadoBusquedaUI.setAttribute("componente", "estadoBusqueda")
                                    estadoBusquedaUI.innerText = "No se han encontrado clientes"
                                    espacioClientes.appendChild(estadoBusquedaUI)
                                    return
                                } else if (respuestaServidor.totalReservas === 1) {
                                    const reservaUID = respuestaServidor.reservas[0].reservaUID
                                    return casaVitini.shell.navegacion.controladorVista({
                                        vista: "/micasa/reservas/" + reservaUID,
                                        //tipoOrigen: "menuNavegador"
                                    })
                                }
                                document.querySelector("[componente=estadoBusqueda]")?.remove()
                                const misReservas = respuestaServidor.reservas
                                const paginasTotales = respuestaServidor.paginasTotales
                                const paginaActual = respuestaServidor.pagina
                                const nombreColumna = respuestaServidor.nombreColumna
                                const sentidoColumna = respuestaServidor.sentidoColumna
                                /*
                            {
                            "reserva": 1048,
                            "entrada": "06/10/2023",
                            "salida": "15/02/2024",
                            "estadoReserva": "confirmada",
                            "estadoPago": "noPagado",
                            "creacion": null
                            },
                                */
                                const columnasGrid = [
                                    {
                                        columnaUI: "Reserva",
                                        columnaIDV: "reserva",
                                        columnaClase: "idColumna"
                                    },
                                    {
                                        columnaUI: "Fecha de entrada",
                                        columnaIDV: "fechaEntrada",
                                        columnaClase: "entradaColumna"
                                    },
                                    {
                                        columnaUI: "Fecha de salida",
                                        columnaIDV: "fechaSalida",
                                        columnaClase: "salidaColuma"
                                    },
                                    {
                                        columnaUI: "Estado de la reserva",
                                        columnaIDV: "estadoReserva",
                                        columnaClase: "estadoColumna"
                                    },
                                    {
                                        columnaUI: "Estado del pago",
                                        columnaIDV: "estadoPago",
                                        columnaClase: "pagoColumna"
                                    },
                                    {
                                        columnaUI: "Fecha de la reserva",
                                        columnaIDV: "fechaCreacion",
                                        columnaClase: "pagoColumna"
                                    },
                                ]
                                const parametrosFinales = {
                                }
                                if (paginaActual > 1 && paginasTotales > 1) {
                                    parametrosFinales.pagina = paginaActual
                                }
                                if (nombreColumna) {
                                    parametrosFinales.pagina = paginaActual
                                    parametrosFinales.nombre_columna = nombreColumna.replace(/([a-z])([A-Z])/g, '$1_$2').toLowerCase();
                                    parametrosFinales.sentido_columna = sentidoColumna
                                }
                                const estructuraParametrosFinales = []
                                for (const [parametroFinal, valorFinal] of Object.entries(parametrosFinales)) {
                                    const estructura = `${parametroFinal}:${valorFinal}`
                                    estructuraParametrosFinales.push(estructura)
                                }
                                let parametrosURLFInal = ""
                                if (estructuraParametrosFinales.length > 0) {
                                    parametrosURLFInal = "/" + estructuraParametrosFinales.join("/")
                                }


                                this.selectorFiltro.ui({
                                    columnas: columnasGrid,
                                    columnaSeleccioanda: nombreColumna,
                                    sentidoSeleccionado: sentidoColumna,
                                    destino: "[contenedor=resultados]"
                                })

                                this.constructorTarjetas({
                                    tarjetas: misReservas,
                                    destino: "[contenedor=resultados]"

                                })


                                const constructorURLFinal = granuladoURL.directoriosFusion + parametrosURLFInal
                                const metadatosGrid = {
                                    filas: misReservas,
                                    sentidoColumna: sentidoColumna,
                                    nombreColumna: nombreColumna,
                                    tipoConstruccionGrid: tipoConstruccionGrid,
                                    //buscar: buscar,
                                    pagina: paginaActual,
                                    destino: "[contenedor=resultados]",
                                    columnasGrid: columnasGrid,
                                    gridUID: "gridMisReservas",
                                    numeroColumnas: 6,
                                    metodoColumna: "casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.ordenarPorColumna",
                                    metodoFila: "casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.resolverFila",
                                    mascaraHref: {
                                        urlStatica: "/micasa/reservas/",
                                        parametro: "reservaUID"
                                    },
                                    mascaraURL: constructorURLFinal
                                }
                                casaVitini.ui.componentes.grid(metadatosGrid)
                                const metadatosPaginador = {
                                    paginaActual: paginaActual,
                                    paginasTotales: paginasTotales,
                                    destino: "[componente=espacioMisReservas]",
                                    metodoBoton: "casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.cambiarPagina",
                                    gridUID: "gridMisReservas",
                                    granuladoURL: {
                                        parametros: parametrosFinales,
                                        directoriosFusion: granuladoURL.directoriosFusion
                                    }
                                }
                                casaVitini.ui.componentes.paginador(metadatosPaginador)
                                transaccion.tipoConstruccionGrid = "soloLista"
                                const titulo = "ADminstar reservas"
                                const estado = {
                                    zona: constructorURLFinal,
                                    EstadoInternoZona: "estado",
                                    tipoCambio: "parcial",
                                    componenteExistente: "zonaNavegacionPaginadaClientes",
                                    funcionPersonalizada: "casaVitini.ui.vistar.miCasa.reservas.listaReservas.mostrarReservasResuelstas",
                                    datosPaginacion: transaccion
                                }
                                if (origen === "url" || origen === "botonMostrarClientes") {
                                    window.history.replaceState(estado, titulo, constructorURLFinal);
                                }
                                if ((origen === "botonNumeroPagina" && paginaTipo === "otra") || origen === "tituloColumna") {
                                    window.history.pushState(estado, titulo, constructorURLFinal);
                                }
                                if (origen === "botonNumeroPagina" && paginaTipo === "actual") {
                                    window.history.replaceState(estado, titulo, constructorURLFinal);
                                }
                            },
                            guardarCambios: async () => {
                                const nuevoIDX = document.querySelector("[campo=nuevoIDX]")
                                const datosParaActualizar = {
                                    zona: "miCasa/actualizarIDX",
                                    nuevoIDX: nuevoIDX.value
                                }
                                const respuestaServidor = await casaVitini.shell.servidor(datosParaActualizar)
                                if (respuestaServidor?.error) {
                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                }
                                if (respuestaServidor?.ok) {
                                    nuevoIDX.value = null


                                    casaVitini.shell.controladoresUI.controladorEstadoIDX()
                                }
                            },
                            ordenarPorColumna: async (columna) => {
                                const nombreColumna = columna.target.closest("[componenteGrid=celdaTituloColumna]").getAttribute("nombreColumna")
                                const selectorColumnasentido = columna.target.closest("[componenteGrid=celdaTituloColumna]").getAttribute("sentidoColumna")
                                const numeroPagina = columna.target.closest("[gridUID]").getAttribute("numeroPagina")
                                const terminoBusqueda = columna.target.closest("[gridUID]").getAttribute("terminoBusqueda")
                                let sentidoColumna
                                const transaccion = {
                                    zona: "miCasa/misReservas/listarMisReservas",
                                    pagina: Number(numeroPagina),
                                    tipoConstruccionGrid: "soloLista",
                                    origen: "tituloColumna"
                                }
                                if (selectorColumnasentido === "ascendente") {
                                    transaccion.sentidoColumna = "descendente"
                                    transaccion.nombreColumna = nombreColumna
                                }
                                if (!selectorColumnasentido) {
                                    transaccion.sentidoColumna = "ascendente"
                                    transaccion.nombreColumna = nombreColumna
                                }
                                casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.mostrarReservasResueltas(transaccion)
                            },
                            cambiarPagina: async (entradaNumeroPagina) => {
                                entradaNumeroPagina.preventDefault()
                                entradaNumeroPagina.preventDefault()
                                const gridUID = entradaNumeroPagina.target.closest("[gridUID_enlazado]").getAttribute("gridUID_enlazado")
                                const gridEnlazado = document.querySelector(`[gridUID=${gridUID}]`)
                                const tipoBoton = entradaNumeroPagina.target.getAttribute("componenteID")
                                const nombreColumna = gridEnlazado.getAttribute("nombreColumnaSeleccionada")
                                const sentidoColumna = gridEnlazado.getAttribute("sentidoColumna")
                                const terminoBusqueda = gridEnlazado.getAttribute("terminoBusqueda")
                                const paginaActual = Number(gridEnlazado.getAttribute("numeroPagina"))
                                const paginaTipo = cambiarPagina.paginaTipo
                                const transacccion = {
                                    nombreColumna: nombreColumna,
                                    sentidoColumna: sentidoColumna,
                                    paginaTipo: paginaTipo,
                                }
                                if (tipoBoton === "numeroPagina") {
                                    const numeroPagina = entradaNumeroPagina.target.getAttribute("numeroPagina")
                                    transacccion.pagina = Number(numeroPagina)
                                    transacccion.origen = "botonNumeroPagina"
                                }
                                if (tipoBoton === "botonAdelantePaginacion") {
                                    const posicionRelativa = document.querySelector("[paginaTipo=actual]").getAttribute("posicionRelativa")
                                    let mueveNavegadorHaciaAdelante = "Desactivado";
                                    if (Number(posicionRelativa) === 10) {
                                        mueveNavegadorHaciaAdelante = "Activado"
                                    }
                                    transacccion.pagina = paginaActual + 1
                                    transacccion.origen = "botonNumeroPagina"
                                    transacccion.moverHaciaAdelanteNavegacion = mueveNavegadorHaciaAdelante
                                    transacccion.sentidoNavegacion = "Adelante"
                                }
                                if (tipoBoton === "botonAtrasPaginacion") {
                                    const posicionRelativa = document.querySelector("[paginaTipo=actual]").getAttribute("posicionRelativa")
                                    let mueveNavegadorHaciaAtras = "Desactivado";
                                    if (Number(posicionRelativa) === 1) {
                                        mueveNavegadorHaciaAtras = "Activado"
                                    }
                                    transacccion.pagina = paginaActual - 1
                                    transacccion.origen = "botonNumeroPagina"
                                    transacccion.mueveNavegadorHaciaAtras = mueveNavegadorHaciaAtras
                                    transacccion.sentidoNavegacion = "Atras"
                                }
                                transacccion.tipoConstruccionGrid = "soloLista"
                                transacccion.zona = "miCasa/misReservas/listarMisReservas"
                                return casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.mostrarReservasResueltas(transacccion)
                            },
                            resolverFila: (transaccion) => {
                                transaccion.preventDefault()
                                transaccion.stopPropagation()
                                const href = transaccion.target.closest("[href]").getAttribute("href")
                                const navegacion = {
                                    vista: href,
                                    tipoOrigen: "menuNavegador"
                                }
                                return casaVitini.shell.navegacion.controladorVista(navegacion)
                            },
                            constructorTarjetas: (data) => {
                                const reservas = data.tarjetas
                                const destino = data.destino

                                const contenedorTarjetas = document.querySelector("[contenedor=tarjetas]")
                                contenedorTarjetas?.remove()

                                const contenedor = document.createElement("div")
                                contenedor.setAttribute("contenedor", "tarjetas")
                                contenedor.classList.add(
                                    "flexVertical",
                                    "gap6"
                                )


                                reservas.forEach(r => {
                                    const reservaUID = r.reservaUID
                                    const fechaEntrada = r.fechaEntrada
                                    const fechaSalida = r.fechaSalida
                                    const estadoReservaIDV = r.estadoReservaIDV
                                    const estadoPagoIDV = r.estadoPagoIDV
                                    const fechaCreacion = r.fechaCreacion


                                    const tarjeta = document.createElement("a")
                                    tarjeta.setAttribute("componente", "tarjeta")
                                    tarjeta.classList.add(
                                        "flexVertical",
                                        "gap6",
                                        "tarjeta",
                                        "borderRadius10",
                                        "backgroundGrey1",
                                        "padding10",
                                        "areaSinDecoracionPredeterminada",
                                        "ratonDefault",
                                        "comportamientoBoton"
                                    )
                                    tarjeta.href = `/micasa/reservas/${reservaUID}`
                                    tarjeta.setAttribute("vista", `/micasa/reservas/${reservaUID}`)
                                    tarjeta.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                    contenedor.appendChild(tarjeta)

                                    const datosPar = {
                                        "Reserva": reservaUID,
                                        "Fecha de entrada": fechaEntrada,
                                        "Fecha de salida": fechaSalida,
                                        "Estado de la reserva": estadoReservaIDV,
                                        "Estado del pago": estadoPagoIDV,
                                        "Fecha de creacion": fechaCreacion

                                    }

                                    Object.entries(datosPar).forEach(([datoUI, data]) => {

                                        const contenedor = document.createElement("div")
                                        contenedor.classList.add(
                                            "flexVertical"
                                        )
                                        if (data) {
                                            tarjeta.appendChild(contenedor)
                                        }
                                        const titulo = document.createElement("div")
                                        titulo.innerHTML = datoUI
                                        contenedor.appendChild(titulo)

                                        const dataUI = document.createElement("div")
                                        dataUI.classList.add(
                                            "negrita",
                                            "textoElipsis"
                                        )
                                        dataUI.innerText = data
                                        contenedor.appendChild(dataUI)

                                    })






                                })
                                document.querySelector(destino).appendChild(contenedor)
                            },
                            selectorFiltro: {
                                ui: function (data) {
                                    const destino = data.destino
                                    const columnas = data.columnas

                                    const columnaSeleccioanda = data?.columnaSeleccioanda || null
                                    const sentidoSeleccionado = data?.sentidoSeleccionado || null
                                    const selectorFiltroOrden = document.querySelector("[contenedor=filtrosOrden]")
                                    if (selectorFiltroOrden) {
                                        const selectorOrdenPorColumna = selectorFiltroOrden.querySelector("[selector=ordenPorColumna]")
                                        const selectorSentido = selectorFiltroOrden.querySelector("[selector=sentido]")

                                        if (columnaSeleccioanda) {
                                            selectorOrdenPorColumna.value = columnaSeleccioanda

                                        } else {
                                            selectorOrdenPorColumna.selectedIndex = 0
                                        }
                                        if (sentidoSeleccionado) {
                                            selectorSentido.value = sentidoSeleccionado
                                        } else {
                                            selectorSentido.selectedIndex = 0
                                        }
                                        return
                                    }

                                    const contenedorFiltrosOrden = document.createElement("div")
                                    contenedorFiltrosOrden.classList.add(
                                        "gap6",
                                        "flexDerecha"
                                    )
                                    contenedorFiltrosOrden.setAttribute("contenedor", "filtrosOrden")

                                    const botonReseteo = document.createElement("div")
                                    botonReseteo.classList.add(
                                        "selector",
                                        "textoCentrado",
                                        "comportamientoBoton",
                                        "noSelecionable",
                                        "ratonDefault"
                                    )
                                    botonReseteo.innerText = "Resetear filtros"
                                    botonReseteo.addEventListener("click", (e) => {
                                        const contenedor = e.target.closest("[contenedor=filtrosOrden]")
                                        const selectorColumna = contenedor.querySelector("[selector=ordenPorColumna]")
                                        const selectorSentido = contenedor.querySelector("[selector=sentido]")
                                        selectorColumna.selectedIndex = 0
                                        selectorSentido.selectedIndex = 0
                                        this.pasarela(e)
                                    })
                                    contenedorFiltrosOrden.appendChild(botonReseteo)

                                    const selectorColumna = document.createElement("select")
                                    selectorColumna.setAttribute("selector", "ordenPorColumna")
                                    selectorColumna.addEventListener("change", this.pasarela)
                                    selectorColumna.classList.add(
                                        "selector",
                                        "textoCentrado"
                                    )
                                    contenedorFiltrosOrden.appendChild(selectorColumna)
                                    const opcionPreterminada = document.createElement("option");
                                    opcionPreterminada.disabled = "true"
                                    opcionPreterminada.value = ""
                                    opcionPreterminada.text = "Ordenar por columna";
                                    if (!columnaSeleccioanda) {
                                        opcionPreterminada.selected = "true"
                                    }

                                    selectorColumna.add(opcionPreterminada)

                                    columnas.forEach((columna) => {
                                        const columnaUI = columna.columnaUI
                                        const columnaIDV = columna.columnaIDV
                                        const opcion = document.createElement("option");
                                        opcion.value = columnaIDV;
                                        opcion.text = columnaUI;
                                        if (columnaSeleccioanda === columnaIDV) {
                                            opcion.selected = "true"
                                        }
                                        selectorColumna.add(opcion);
                                    })

                                    const selectorSentido = document.createElement("select")
                                    selectorSentido.setAttribute("selector", "sentido")
                                    selectorSentido.addEventListener("change", this.pasarela)

                                    selectorSentido.classList.add(
                                        "selector",
                                        "textoCentrado"
                                    )
                                    contenedorFiltrosOrden.appendChild(selectorSentido)
                                    const opcionSentido = document.createElement("option");
                                    opcionSentido.disabled = "true"
                                    opcionSentido.text = "Sentido";
                                    opcionSentido.value = ""
                                    if (!sentidoSeleccionado) {
                                        opcionSentido.selected = "true"
                                    }
                                    selectorSentido.add(opcionSentido)

                                    const sentidos = [
                                        {
                                            sentidoUI: "Ascendente",
                                            sentidoIDV: "ascendente"
                                        },
                                        {
                                            sentidoUI: "Descendente",
                                            sentidoIDV: "descendente"
                                        }
                                    ]

                                    sentidos.forEach((sentido) => {
                                        const sentidoUI = sentido.sentidoUI
                                        const sentidoIDV = sentido.sentidoIDV
                                        const opcion = document.createElement("option");
                                        opcion.value = sentidoIDV;
                                        opcion.text = sentidoUI;
                                        if (sentidoSeleccionado === sentidoIDV) {
                                            opcion.selected = "true"
                                        }
                                        selectorSentido.add(opcion);
                                    })
                                    document.querySelector(destino).appendChild(contenedorFiltrosOrden)
                                },
                                pasarela: (e) => {
                                    const contenedor = e.target.closest("[contenedor=filtrosOrden]")
                                    const instanciaUID = document.querySelector("main[instanciaUID]").getAttribute("instanciaUID")
                                    const selectorColumna = contenedor.querySelector("[selector=ordenPorColumna]").value
                                    const selectorSentido = contenedor.querySelector("[selector=sentido]").value
                                    const ui = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                    const numeroPagina = ui.querySelector("[gridUID]").getAttribute("numeroPagina")

                                    const transaccion = {
                                        zona: "miCasa/misReservas/listarMisReservas",
                                        pagina: Number(numeroPagina),
                                        tipoConstruccionGrid: "soloLista",
                                        origen: "tituloColumna"
                                    }
                                    transaccion.sentidoColumna = selectorSentido
                                    transaccion.nombreColumna = selectorColumna
                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.listaReservas.mostrarReservasResueltas(transaccion)
                                }
                            },

                        },
                        detallesReserva: {
                            reservaUI: {
                                ui: async function (data) {
                                    const main = document.querySelector("main")
                                    main.setAttribute("ui", "reservaUI")
                                    const reservaUID = data.reservaUID
                                    const granuladoURL = casaVitini.utilidades.granuladorURL()
                                    const posicionReservaUID = granuladoURL.directorios.findIndex(directorio => directorio === "reservas") + 1;
                                    const categoriaGlobalInicial = granuladoURL.rawArray[3]

                                    const transaccion = {
                                        zona: "miCasa/misReservas/detallesReserva",
                                        reservaUID: reservaUID,

                                    }
                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                    if (respuestaServidor?.error) {
                                        return casaVitini.ui.componentes.mensajeSimple({
                                            titulo: respuestaServidor?.error,
                                        })
                                    }

                                    if (respuestaServidor?.ok) {


                                        const detallesReserva = respuestaServidor.reserva
                                        const global = detallesReserva.global
                                        const detallesTitular = detallesReserva?.titular
                                        const contenedorFinanciero = detallesReserva.contenedorFinanciero
                                        const reservaUID = global.reservaUID

                                        const porcentajeTranscurrido = global.porcentajeTranscurrido

                                        const estadoReservaIDV = global.estadoReservaIDV
                                        const estadoPagoIDV = global.estadoPagoIDV
                                        const fechaCreacion = global.fechaCreacion
                                        const origenIDV = global.origenIDV
                                        const fechaEntrada = global.fechaEntrada
                                        const fechaSalida = global.fechaSalida
                                        const totalReserva = contenedorFinanciero?.desgloseFinanciero?.global?.totales?.totalFinal ?? "Sin información"

                                        const fechaInicio_humana = casaVitini.utilidades.conversor.fecha_ISO_hacia_humana(fechaEntrada)
                                        const fechaFinal_humana = casaVitini.utilidades.conversor.fecha_ISO_hacia_humana(fechaSalida)

                                        const titulo = document.querySelector(".titulo")
                                        //titulo.innerText = "Reserva"
                                        titulo?.remove()
                                        let estadoReservaUI
                                        if (estadoReservaIDV === "cancelada") {
                                            estadoReservaUI = "Cancelada"
                                        }
                                        if (estadoReservaIDV === "confirmada") {
                                            estadoReservaUI = "Confirmada"
                                        }
                                        if (estadoReservaIDV === "pendiente") {
                                            estadoReservaUI = "Pendiente"
                                        }
                                        let estadoPagoUI
                                        if (estadoPagoIDV === "pagado") {
                                            estadoPagoUI = "Pagado"
                                        }
                                        if (estadoPagoIDV === "noPagado") {
                                            estadoPagoUI = "No pagado"
                                        }
                                        if (estadoPagoIDV === "pagadoParcialmente") {
                                            estadoPagoUI = "Pagado parcialmente"
                                        }
                                        if (estadoPagoIDV === "pagadoSuperadamente") {
                                            estadoPagoUI = "Pagado superadamente"
                                        }
                                        let nombreCompletoTitular = "(Níngun titular asignado)"

                                        if (detallesTitular.nombreTitular) {
                                            nombreCompletoTitular = detallesTitular.nombreTitular
                                        }
                                        let origenUI
                                        if (origenIDV === "cliente") {
                                            origenUI = "Cliente"
                                        }
                                        if (origenIDV === "administracion") {
                                            origenUI = "Adminitración"
                                        }
                                        const marcoElastico = document.createElement("div")
                                        marcoElastico.classList.add("marcoElasticoRelativo")
                                        marcoElastico.setAttribute("componente", "marcoElastico")
                                        // Crear el elemento div principal
                                        const divPrincipal = document.createElement('div');
                                        divPrincipal.setAttribute("reservaUID", reservaUID)
                                        divPrincipal.setAttribute("ui", "reservaUI")
                                        divPrincipal.setAttribute('componente', 'detalleReserva');
                                        divPrincipal.classList.add(
                                            "flexVertical",
                                            "gap6"
                                        )

                                        marcoElastico.appendChild(divPrincipal);

                                        // Crear el elemento div.reservaDetallesBloqueGeneral
                                        const divBloqueGeneral = document.createElement('div');
                                        divBloqueGeneral.setAttribute('class', 'reservaDetallesBloqueGeneral');
                                        const divInformacionGeneral = document.createElement('div');
                                        divInformacionGeneral.setAttribute('class', 'administracionReservasDetalesMarcoEnvolventeInformacionGeneral');
                                        const contenedorReseervaUID = document.createElement('div');
                                        contenedorReseervaUID.setAttribute('class', 'administracion_reservas_detallesReserva_contenedorReservaUID');
                                        const pTitulo1 = document.createElement('p');
                                        pTitulo1.setAttribute('class', 'adminsitracionReservasTituloNombre marginCeroparaP');
                                        pTitulo1.textContent = 'Reserva';
                                        const pDato1 = document.createElement('p');
                                        pDato1.classList.add(
                                            "contenedroTextoEspansivo"
                                        );
                                        pDato1.setAttribute('dataReserva', 'reservaID');
                                        pDato1.setAttribute("componente", "reservaUID_miCasa_" + reservaUID)
                                        pDato1.textContent = reservaUID;
                                        contenedorReseervaUID.appendChild(pTitulo1);
                                        contenedorReseervaUID.appendChild(pDato1);
                                        const contenedorRestoGlobal = document.createElement("div")
                                        contenedorRestoGlobal.classList.add("contenedorInternoGlobal")
                                        const bloqueTitular = document.createElement('div');
                                        bloqueTitular.setAttribute('class', 'bloqueGlobalInerte');
                                        bloqueTitular.setAttribute("contenedor", "titularUID")
                                        if (detallesTitular?.tipoTitularIDV === "titularCliente") {
                                            bloqueTitular.setAttribute("titularUID", detallesTitular.clienteUID)
                                        }
                                        if (detallesTitular) {
                                            bloqueTitular.setAttribute("tipoTitular", detallesTitular.tipoTitularIDV)
                                        }
                                        const tituloTitular = document.createElement('p');
                                        tituloTitular.setAttribute('class', 'adminsitracionReservasTituloNombre marginCeroparaP');
                                        tituloTitular.textContent = 'Titular de la reserva';
                                        const nombreTitular = document.createElement('p');
                                        nombreTitular.setAttribute('class', 'marginCeroparaP');
                                        nombreTitular.classList.add('contenedroTextoEspansivo');
                                        nombreTitular.setAttribute('dataReserva', 'nombreTitular');
                                        nombreTitular.textContent = nombreCompletoTitular;
                                        bloqueTitular.appendChild(tituloTitular);
                                        bloqueTitular.appendChild(nombreTitular);
                                        const divBloqueDual2 = document.createElement('div');
                                        divBloqueDual2.setAttribute('class', 'administracionReservaBloqueDual');
                                        const pTitulo2 = document.createElement('p');
                                        pTitulo2.setAttribute('class', 'adminsitracionReservasTituloNombre marginCeroparaP');
                                        pTitulo2.textContent = 'Fecha de creación UTC';
                                        const pDato2 = document.createElement('p');
                                        pDato2.setAttribute('class', 'marginCeroparaP');
                                        pDato2.setAttribute('dataReserva', 'nada');
                                        pDato2.classList.add('adminsitracion_reservas_detallesReserva_contenedorDatoGlobal');
                                        pDato2.textContent = fechaCreacion;
                                        divBloqueDual2.appendChild(pTitulo2);
                                        divBloqueDual2.appendChild(pDato2);
                                        const divBloqueDual3 = document.createElement('div');
                                        divBloqueDual3.setAttribute('class', 'administracionReservaBloqueDual');
                                        const pTitulo3 = document.createElement('p');
                                        pTitulo3.setAttribute('class', 'adminsitracionReservasTituloNombre marginCeroparaP');
                                        pTitulo3.textContent = 'Origen de la reserva';
                                        const pDato3 = document.createElement('p');
                                        pDato3.setAttribute('class', 'marginCeroparaP');
                                        pDato3.setAttribute('dataReserva', 'origen');
                                        pDato3.classList.add('adminsitracion_reservas_detallesReserva_contenedorDatoGlobal');
                                        pDato3.textContent = origenUI;
                                        divBloqueDual3.appendChild(pTitulo3);
                                        divBloqueDual3.appendChild(pDato3);
                                        const divBloqueDual4 = document.createElement('div');
                                        divBloqueDual4.setAttribute('class', 'bloqueGlobalInerte');
                                        divBloqueDual4.setAttribute("contenedor", "estadoReservaIDV")
                                        const pTitulo4 = document.createElement('p');
                                        pTitulo4.setAttribute('class', 'adminsitracionReservasTituloNombre marginCeroparaP');
                                        pTitulo4.textContent = 'Estado de la reserva';
                                        const pDato4 = document.createElement('p');
                                        pDato4.setAttribute('class', 'marginCeroparaP');
                                        pDato4.setAttribute('dataReserva', 'estado');
                                        pDato4.setAttribute('estadoReservaIDV', estadoReservaIDV);
                                        pDato4.classList.add('adminsitracion_reservas_detallesReserva_contenedorDatoGlobal');
                                        pDato4.textContent = estadoReservaUI;

                                        divBloqueDual4.appendChild(pTitulo4);

                                        divBloqueDual4.appendChild(pDato4);
                                        const divBloqueDual5 = document.createElement('div');
                                        divBloqueDual5.setAttribute('class', 'administracionReservaBloqueDual');
                                        const pTitulo5 = document.createElement('p');
                                        pTitulo5.setAttribute('class', 'adminsitracionReservasTituloNombre marginCeroparaP');
                                        pTitulo5.textContent = 'Estado del pago';
                                        const pDato5 = document.createElement('p');
                                        pDato5.setAttribute('class', 'marginCeroparaP');
                                        pDato5.setAttribute('dataReserva', 'estadoPago');
                                        pDato5.classList.add('adminsitracion_reservas_detallesReserva_contenedorDatoGlobal');
                                        pDato5.textContent = estadoPagoUI;
                                        divBloqueDual5.appendChild(pTitulo5);
                                        divBloqueDual5.appendChild(pDato5);
                                        const divBloqueDual6 = document.createElement('div');
                                        divBloqueDual6.setAttribute('class', 'administracionReservaBloqueDual');
                                        const pTitulo6 = document.createElement('p');
                                        pTitulo6.setAttribute('class', 'adminsitracionReservasTituloNombre marginCeroparaP');
                                        pTitulo6.textContent = 'Total';
                                        const pDato6 = document.createElement('p');
                                        pDato6.setAttribute('class', 'marginCeroparaP');
                                        pDato6.setAttribute('dataReserva', 'totalReservaConImpuestos');
                                        pDato6.classList.add('adminsitracion_reservas_detallesReserva_contenedorDatoGlobal');
                                        pDato6.textContent = totalReserva;
                                        divBloqueDual6.appendChild(pTitulo6);
                                        divBloqueDual6.appendChild(pDato6);
                                        divInformacionGeneral.appendChild(contenedorReseervaUID);
                                        contenedorRestoGlobal.appendChild(bloqueTitular);
                                        contenedorRestoGlobal.appendChild(divBloqueDual2);
                                        //contenedorRestoGlobal.appendChild(divBloqueDual3);
                                        contenedorRestoGlobal.appendChild(divBloqueDual4);
                                        contenedorRestoGlobal.appendChild(divBloqueDual5);
                                        contenedorRestoGlobal.appendChild(divBloqueDual6);
                                        // Anadir divInformacionGeneral a divBloqueGeneral
                                        divInformacionGeneral.appendChild(contenedorRestoGlobal);
                                        divBloqueGeneral.appendChild(divInformacionGeneral);
                                        divPrincipal.appendChild(divBloqueGeneral);

                                        const contenedorProgreso = document.createElement("div")
                                        contenedorProgreso.classList.add(
                                            "backgroundGrey1",
                                            "borderRadius8",
                                        )
                                        contenedorProgreso.style.height = "20px"
                                        contenedorProgreso.style.overflow = "hidden"
                                        divPrincipal.appendChild(contenedorProgreso);
                                        const barraProgresso = document.createElement("div")
                                        barraProgresso.style.height = "100%"
                                        barraProgresso.style.background = "grey"
                                        barraProgresso.style.width = porcentajeTranscurrido + "%"
                                        contenedorProgreso.appendChild(barraProgresso);
                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.fechas.seleccionarDia
                                        const contenedorFechasUI = casaVitini.ui.componentes.componentesComplejos.contenedorFechasUI({
                                            nombreContenedor: "rangoReserva",
                                            nombreFechaEntrada: "Fecha entrada",
                                            nombreSalidaEntrada: "Fecha salida",
                                            modo: "vision"
                                        })

                                        divPrincipal.appendChild(contenedorFechasUI);

                                        const selectorEntrada = contenedorFechasUI.querySelector("[calendario=entrada]")
                                        const selectorSalida = contenedorFechasUI.querySelector("[calendario=salida]")

                                        selectorEntrada.setAttribute("memoriaVolatil", fechaEntrada)
                                        selectorSalida.setAttribute("memoriaVolatil", fechaSalida)

                                        const fechaEntradaUI = selectorEntrada.querySelector("[fechaUI=fechaInicio]")
                                        const fechaSalidaUI = selectorSalida.querySelector("[fechaUI=fechaFin]")

                                        fechaEntradaUI.innerText = fechaInicio_humana
                                        fechaSalidaUI.innerText = fechaFinal_humana

                                        // Crear el elemento div.resertaDetallesPropuestaCambioFechaReserva
                                        const divPropuestaCambioFecha = document.createElement('div');
                                        divPropuestaCambioFecha.setAttribute('class', 'resertaDetallesPropuestaCambioFechaReserva');
                                        divPropuestaCambioFecha.setAttribute('componente', 'espacioPropuestaCambioFechaReserva');
                                        // Anadir divPropuestaCambioFecha al div principal
                                        divPrincipal.appendChild(divPropuestaCambioFecha);
                                        const contenedorCategoriasGlobales = document.createElement("div")
                                        contenedorCategoriasGlobales.classList.add("administracion_reservas_detallesReserva_contenedorCategoriasGlobales")
                                        const contenedorMenuExpandido = document.createElement("div")
                                        contenedorMenuExpandido.classList.add("administracion_reservas_detallesReserva_contenedorMenuExpandido")

                                        const contenedorBotones = this.categorias.categoriasGlobalesBotonesUI({
                                            rectangularidad: "horizontal",
                                            reservaUID: reservaUID
                                        })
                                        contenedorMenuExpandido.appendChild(contenedorBotones);
                                        // Menu categorias reserva responsiba
                                        const marcoMenuResponsivo = document.createElement('div');
                                        marcoMenuResponsivo.setAttribute('class', 'administracion_reserva_detallesReserva_marcoMenuResponsivo');
                                        marcoMenuResponsivo.innerText = "Menu reserva"
                                        marcoMenuResponsivo.addEventListener("click", () => {
                                            document.body.style.overflow = "hidden";
                                            this.categorias.desplegarMenuResponsivo(reservaUID)
                                        })
                                        contenedorCategoriasGlobales.appendChild(marcoMenuResponsivo);
                                        contenedorCategoriasGlobales.appendChild(contenedorMenuExpandido);
                                        divPrincipal.appendChild(contenedorCategoriasGlobales);
                                        const contenedorDinamico = document.createElement("div")
                                        contenedorDinamico.classList.add("administracion_reservas_detallesReserva_contenedorDinamico")
                                        contenedorDinamico.setAttribute("componente", "contenedorDinamico")
                                        divPrincipal.appendChild(contenedorDinamico)
                                        const reservaDetallesBloqueAlojamineto = document.createElement('div');
                                        reservaDetallesBloqueAlojamineto.setAttribute('class', 'reservaDetallesBloqueAlojamineto');
                                        reservaDetallesBloqueAlojamineto.setAttribute('componente', 'marcoAlojamiento');
                                        //divPrincipal.appendChild(reservaDetallesBloqueAlojamineto);
                                        // Crear el elemento div.resertaDetallesEspacioTotales
                                        const divEspacioTotales = document.createElement('div');
                                        divEspacioTotales.setAttribute('class', 'resertaDtallesEspacioTotales');
                                        divEspacioTotales.setAttribute('componente', 'espacioTotalesReserva');
                                        // Anadir divEspacioTotales al div principal
                                        // divPrincipal.appendChild(divEspacioTotales);
                                        // Anadir el div principal al contenedor
                                        //marcoElastico.style.marginTop = "100px"
                                        const seccion = document.querySelector("main:not([estado=obsoleto])")
                                        seccion.appendChild(marcoElastico)
                                        if (categoriaGlobalInicial) {

                                            const categoriaCammelCase = categoriaGlobalInicial.replace(/_([a-z])/g, (match, group) => group.toUpperCase());
                                            const metadatos = {
                                                categoria: categoriaCammelCase,
                                                origen: "url",
                                                reservaUID: reservaUID
                                            }
                                            await this.categorias.controladorCategorias(metadatos)
                                        } else {

                                            const directoriosFusionLimpios = []
                                            granuladoURL.directorios.forEach((directorio, indice) => {
                                                if (indice <= posicionReservaUID) {
                                                    directoriosFusionLimpios.push(directorio)
                                                }
                                            })
                                            // const directoriosFusion = "/" + directoriosFusionLimpios.join("/") + "/reserva:" + reservaUID
                                            const categoriaAGuardarURL = (categoriaGlobalInicial) => {
                                                if (categoriaGlobalInicial) {
                                                    return "/" + categoriaGlobalInicial
                                                } else {
                                                    return ""
                                                }
                                            }

                                            const directoriosFusion = "/micasa/reservas/" + reservaUID + categoriaAGuardarURL(categoriaGlobalInicial)

                                            const componentesExistenteUID = "reservaUID_miCasa_" + reservaUID
                                            const titulo = "Casa Vitini"
                                            const estado = {
                                                zona: directoriosFusion,
                                                EstadoInternoZona: "estado",
                                                tipoCambio: "parcial",
                                                componenteExistente: componentesExistenteUID,
                                                funcionPersonalizada: "casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias"
                                            }
                                            window.history.replaceState(estado, titulo, directoriosFusion);
                                        }
                                    }
                                },
                                fechas: {
                                    seleccionarDia: (dia_) => {
                                        const diaSeleccionado = dia_.target.getAttribute("dia").padStart(2, "0")
                                        const diaSeleccionadoComoElemento = dia_.target;
                                        const calendario = diaSeleccionadoComoElemento.closest("[componente=marcoCalendario]")
                                        const calendarioIO = calendario.getAttribute("calendarioIO")
                                        if (diaSeleccionadoComoElemento.getAttribute("estadoDia") === "seleccionado") {
                                            diaSeleccionadoComoElemento.classList.remove("calendarioDiaSeleccionado")
                                            if (calendarioIO === "entrada") {
                                                //   diaSeleccionadoComoElemento.removeAttribute("style")
                                                document.querySelector("[componente=bloquePropuestaNuevaFechaEntrada]")?.remove()
                                                diaSeleccionadoComoElemento.style.background = ""
                                                diaSeleccionadoComoElemento.style.color = ""
                                            }
                                            if (calendarioIO === "salida") {
                                                document.querySelector("[componente=bloquePropuestaNuevaFechaSalida]")?.remove()
                                                diaSeleccionadoComoElemento.style.background = ""
                                                diaSeleccionadoComoElemento.style.color = ""
                                            }
                                            diaSeleccionadoComoElemento.removeAttribute("estadoDia")
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.fechas.controladorZonaPropuestasCambioFechas()

                                        }
                                        document.querySelectorAll("[estado=disponible]").forEach(diaDisponible => {
                                            //  diaDisponible.removeAttribute("style")
                                            diaDisponible.removeAttribute("estadoDia")
                                            diaDisponible.style.background = ""
                                            diaDisponible.style.color = ""
                                        });
                                        diaSeleccionadoComoElemento.style.background = "red"
                                        diaSeleccionadoComoElemento.style.color = "white"
                                        diaSeleccionadoComoElemento.setAttribute("estadoDia", "seleccionado")
                                        const anoSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("ano").padStart(4, "0")
                                        const mesSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("mes").padStart(2, "0")
                                        const selectorPropuestaCambioFecha = document.querySelector("[componente=espacioPropuestaCambioFechaReserva]")
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        if (calendarioIO === "entrada") {

                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            const contenedorPropuesta = document.createElement("div")
                                            contenedorPropuesta.classList.add(
                                                "contenedorPropuesta",
                                                "flexVertical",
                                                "gap6"
                                            )
                                            const tituloPropuesta = document.createElement("p")
                                            tituloPropuesta.classList.add("detallesReservaTituloCancelarReserva")
                                            tituloPropuesta.innerText = "Propuesta de cambio de la fecha de entrada de la reserva " + reservaUID
                                            tituloPropuesta.style.color = "black"
                                            contenedorPropuesta.appendChild(tituloPropuesta)
                                            const botonCancelar = document.createElement("div")
                                            botonCancelar.classList.add("detallesReservaCancelarBoton")
                                            botonCancelar.innerText = "Cerrar propuesta y volver atras"
                                            botonCancelar.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                            contenedorPropuesta.appendChild(botonCancelar)
                                            const infoPropuesta = document.createElement("div")
                                            infoPropuesta.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                            infoPropuesta.innerText = `Has propuesto cambiar la fecha de entrada de esta reserva a ${diaSeleccionado}/${mesSeleccionado}/${anoSeleccionado}. Si quieres confirmar la propuesta y cambiar la reserva pulsa en el botón de confirmar de abajo. Si deseas cancelar, pulsa en el botón cancelar de arriba. Cuando puedes el botón confirmar, se realizará una última verificación para comprobar que los días siguen disponibles.`
                                            contenedorPropuesta.appendChild(infoPropuesta)

                                            const informacionImplicacion = document.createElement("div")
                                            informacionImplicacion.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                            informacionImplicacion.innerText = `Aviso importante: Cuando se quitan días a una reserva, si luego se vuelven a añadir esos días, los precios se insertan al precio actual del mercado establecido en el hub de precios base y de comportamientos. Siempre puede alterar los precios de la reserva mediante el sistema de sobre control.`
                                            contenedorPropuesta.appendChild(informacionImplicacion)

                                            const botonAceptarPropuesta = document.createElement("div")
                                            botonAceptarPropuesta.classList.add("detallesReservaCancelarBoton")
                                            botonAceptarPropuesta.setAttribute("componente", "botonConfirmarCancelarReserva")
                                            botonAceptarPropuesta.innerText = "Confirmar propuesta y aplicar nueva fecha de entrada a la reserva"
                                            botonAceptarPropuesta.addEventListener("click", () => {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                const nuevaFecha = {
                                                    fechaSolicitada_ISO: `${anoSeleccionado}-${mesSeleccionado}-${diaSeleccionado}`,
                                                    reservaUID: reservaUID,
                                                    sentidoRango: "pasado"
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.fechas.confirmarCambioFecha(nuevaFecha)
                                            })
                                            contenedorPropuesta.appendChild(botonAceptarPropuesta)
                                            const propuestaUI = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                            propuestaUI.querySelector("[contenedor=contenidoAdvertenciaInmersiva]").appendChild(contenedorPropuesta)
                                            document.querySelector("main").appendChild(propuestaUI)
                                        }
                                        if (calendarioIO === "salida") {

                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            const contenedorPropuesta = document.createElement("div")
                                            contenedorPropuesta.classList.add(
                                                "contenedorPropuesta",
                                                "flexVertical",
                                                "gap6"
                                            )
                                            const tituloPropuesta = document.createElement("p")
                                            tituloPropuesta.classList.add("detallesReservaTituloCancelarReserva")
                                            tituloPropuesta.innerText = "Propuesta de cambio de la fecha de salida de la reserva " + reservaUID
                                            tituloPropuesta.style.color = "black"
                                            contenedorPropuesta.appendChild(tituloPropuesta)
                                            const botonCancelar = document.createElement("div")
                                            botonCancelar.classList.add("detallesReservaCancelarBoton")
                                            botonCancelar.innerText = "Cerrar propuesta y volver atras"
                                            botonCancelar.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                            contenedorPropuesta.appendChild(botonCancelar)
                                            const infoPropuesta = document.createElement("div")
                                            infoPropuesta.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                            infoPropuesta.innerText = `Has propuesto cambiar la fecha de salida de la reserva a ${diaSeleccionado}/${mesSeleccionado}/${anoSeleccionado}. Si quieres confirmar la propuesta y cambiar la reserva, pulsa en el botón de confirmar de abajo. Si deseas cancelar, pulsa en el botón cancelar de arriba. Cuando puedes el botón confirmar, se realizará una última verificación para comprobar que los días siguen disponibles.`
                                            contenedorPropuesta.appendChild(infoPropuesta)

                                            const informacionImplicacion = document.createElement("div")
                                            informacionImplicacion.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                            informacionImplicacion.innerText = `Aviso importante: Cuando se quitan días a una reserva, si luego se vuelven a añadir esos días, los precios se insertan al precio actual del mercado establecido en el hub de precios base y de comportamientos. Siempre puede alterar los precios de la reserva mediante el sistema de sobre control.`
                                            contenedorPropuesta.appendChild(informacionImplicacion)


                                            const botonAceptarPropuesta = document.createElement("div")
                                            botonAceptarPropuesta.classList.add("detallesReservaCancelarBoton")
                                            botonAceptarPropuesta.setAttribute("componente", "botonConfirmarCancelarReserva")
                                            botonAceptarPropuesta.innerText = "Confirmar propuesta y aplicar nueva fecha de salida a la reserva"
                                            botonAceptarPropuesta.addEventListener("click", () => {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                const nuevaFecha = {
                                                    fechaSolicitada_ISO: `${anoSeleccionado}-${mesSeleccionado}-${diaSeleccionado}`,
                                                    reservaUID: reservaUID,
                                                    sentidoRango: "futuro"
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.fechas.confirmarCambioFecha(nuevaFecha)
                                            })
                                            contenedorPropuesta.appendChild(botonAceptarPropuesta)
                                            const propuestaUI = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                            propuestaUI.querySelector("[contenedor=contenidoAdvertenciaInmersiva]").appendChild(contenedorPropuesta)
                                            document.querySelector("main").appendChild(propuestaUI)
                                        }
                                    },
                                    confirmarCambioFecha: async (propuesta) => {
                                        const instanciaUID_pantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                        const sentidoRango = propuesta.sentidoRango
                                        const reservaUID = propuesta.reservaUID
                                        const fechaSolicitada_ISO = propuesta.fechaSolicitada_ISO
                                        const transaccion = {
                                            zona: "administracion/reservas/detallesReserva/global/confirmarModificarFechaReserva",
                                            reservaUID: String(reservaUID),
                                            sentidoRango: sentidoRango,
                                            fechaSolicitada_ISO: fechaSolicitada_ISO
                                        }

                                        const mensajes = {
                                            pasado: [
                                                "Confirmando la nueva fecha de entrada, por favor espere...",
                                                "No se puede establecer la fecha de entrada porque los apartamentos de esta reserva están en otro evento que ocurren al mismo tiempo. A continuación tienes una lista de los eventos que entran en conflicto.",
                                            ],
                                            futuro: [
                                                "Confirmando la nueva fecha de salida, por favor espere...",
                                                "No se puede establecer la fecha de salida porque los apartamentos de esta reserva están en otro evento que ocurre al mismo tiempo. A continuación tienes una lista de los eventos que entran en conflicto."
                                            ]
                                        }
                                        const datosPantallaSuperpuesta = {
                                            instanciaUID: instanciaUID_pantallaDeCarga,
                                            mensaje: mensajes[sentidoRango][0]
                                        }
                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                        const pantallaDeCargaRenderizada = document.querySelector(`[componente=advertenciaInmersiva][instanciaUID="${instanciaUID_pantallaDeCarga}"]`)

                                        if (!pantallaDeCargaRenderizada) {
                                            return
                                        }
                                        if (respuestaServidor?.error) {
                                            const detallesError = respuestaServidor?.error

                                            const eventos = detallesError.eventos
                                            if (eventos) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                const contenedorError = document.createElement("div")
                                                contenedorError.classList.add("contenedorErrorPropuesta")
                                                const tituloPropuesta = document.createElement("p")
                                                tituloPropuesta.classList.add("detallesReservaTituloCancelarReserva")
                                                tituloPropuesta.innerText = "No se puede cambiar la fecha debido a otro eventos ya existentes"
                                                tituloPropuesta.style.color = "black"
                                                contenedorError.appendChild(tituloPropuesta)
                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("detallesReservaCancelarBoton")
                                                botonCancelar.innerText = "Cerrar y volver a la reserva"
                                                botonCancelar.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                contenedorError.appendChild(botonCancelar)
                                                const infoPropuesta = document.createElement("div")
                                                infoPropuesta.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                                infoPropuesta.innerText = mensajes[sentidoRango][1]
                                                contenedorError.appendChild(infoPropuesta)
                                                for (const detallesDelEvento of eventos) {
                                                    const fechaEntrada = detallesDelEvento.fechaEntrada
                                                    const fechaSalida = detallesDelEvento.fechaSalida
                                                    const fechaEntrada_array = fechaEntrada.split("-")
                                                    const fechaSalida_array = fechaSalida.split("-")
                                                    const fechaEntrada_Humana = `${fechaEntrada_array[2]}/${fechaEntrada_array[1]}/${fechaEntrada_array[0]}`
                                                    const fechaSalida_Humana = `${fechaSalida_array[2]}/${fechaSalida_array[1]}/${fechaSalida_array[0]}`
                                                    const eventoUID = detallesDelEvento.uid
                                                    const tipoElemento = detallesDelEvento.tipoElemento
                                                    const descripcion = detallesDelEvento.descripcion
                                                    const contenedorEvento = document.createElement("div")
                                                    contenedorEvento.classList.add("contenedorEvento")
                                                    const tipoEvento = document.createElement("div")
                                                    tipoEvento.classList.add("negrita")
                                                    tipoEvento.innerText = tipoElemento.toUpperCase()
                                                    contenedorEvento.appendChild(tipoEvento)
                                                    const nombreDato = document.createElement("div")
                                                    nombreDato.innerText = "Rango del evento"
                                                    contenedorEvento.appendChild(nombreDato)
                                                    const fechaEvento = document.createElement("div")
                                                    // fechaEvento.classList.add()
                                                    fechaEvento.innerText = `${fechaEntrada_Humana} >>> ${fechaSalida_Humana}`
                                                    contenedorEvento.appendChild(fechaEvento)
                                                    if (tipoElemento === "reserva") {
                                                        const botonIrAlEvento = document.createElement("a")
                                                        botonIrAlEvento.classList.add("botonIrAlEvento")
                                                        botonIrAlEvento.innerText = "Ir a los detalles de la reserva"
                                                        botonIrAlEvento.setAttribute("href", "/administracion/reservas/" + eventoUID)
                                                        botonIrAlEvento.setAttribute("vista", "/administracion/reservas/" + eventoUID)
                                                        botonIrAlEvento.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                        contenedorEvento.appendChild(botonIrAlEvento)
                                                    }
                                                    if (tipoElemento === "bloqueo") {
                                                        const apartamentoIDV = detallesDelEvento.apartamentoIDV
                                                        const botonIrAlEvento = document.createElement("a")
                                                        botonIrAlEvento.classList.add("botonIrAlEvento")
                                                        botonIrAlEvento.innerText = "Ir a los detalles del bloqueo"
                                                        botonIrAlEvento.setAttribute("href", "/administracion/bloqueos/" + apartamentoIDV + "/" + eventoUID)
                                                        botonIrAlEvento.setAttribute("vista", "/administracion/bloqueos/" + apartamentoIDV + "/" + eventoUID)
                                                        botonIrAlEvento.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                        contenedorEvento.appendChild(botonIrAlEvento)
                                                    }
                                                    if (tipoElemento === "eventoCalendarioSincronizado" && descripcion) {
                                                        const regex = /Reservation URL: (https:\/\/www\.airbnb\.com\/hosting\/reservations\/details\/[A-Za-z0-9]+)/;
                                                        const match = descripcion.match(regex);
                                                        const urlEvento = match?.[1] ?? "No se encontró la URL en el texto proporcionado.";
                                                        const botonIrAlEvento = document.createElement("a")
                                                        botonIrAlEvento.classList.add("botonIrAlEvento")
                                                        botonIrAlEvento.innerText = "Ir a los detalles del calendario sincronizado"
                                                        botonIrAlEvento.setAttribute("href", urlEvento)
                                                        botonIrAlEvento.setAttribute("vista", urlEvento)
                                                        contenedorEvento.appendChild(botonIrAlEvento)
                                                    }
                                                    if (tipoElemento === "eventoCalendarioSincronizado" && !descripcion) {
                                                        const botonIrAlEvento = document.createElement("a")
                                                        botonIrAlEvento.classList.add("infoEventoSinDetalles")
                                                        botonIrAlEvento.innerText = "Este evento es de un calendario externo sincronizado y no ofrece detalles del mismo"
                                                        contenedorEvento.appendChild(botonIrAlEvento)
                                                    }
                                                    contenedorError.appendChild(contenedorEvento)
                                                }
                                                const mensajeError = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                mensajeError.querySelector("[contenedor=contenidoAdvertenciaInmersiva]").appendChild(contenedorError)
                                                document.querySelector("main").appendChild(mensajeError)
                                                pantallaDeCargaRenderizada.remove()
                                                // falta la pantalla de error con los elementos
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            } else {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor.error)
                                            }


                                        }
                                        if (respuestaServidor?.ok) {

                                            pantallaDeCargaRenderizada?.remove()
                                            const sentidoRangoRespueata = respuestaServidor.sentidoRango
                                            const fecha_ISO = respuestaServidor.fecha_ISO
                                            const fechaArray_ISO = fecha_ISO.split("-")
                                            const fecha_Humano = `${fechaArray_ISO[2]}/${fechaArray_ISO[1]}/${fechaArray_ISO[0]}`
                                            // const totalFinal = respuestaServidor.desgloseFinanciero.global.totales.totalFinal
                                            // const selectorTotalFinal = document.querySelector(`[reservaUID="${reservaUID}"]`).querySelector("[dataReserva=totalReservaConImpuestos]")
                                            // selectorTotalFinal.innerText = totalFinal

                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.calcularPrecioReserva()
                                            if (sentidoRangoRespueata === "pasado" && pantallaDeCargaRenderizada) {
                                                const selectorFechaEntrada = document.querySelector("[calendario=entrada]")
                                                const selectorFechaEntradaUI = document.querySelector("[fechaUI=fechaInicio]")
                                                selectorFechaEntrada.setAttribute("memoriaVolatil", fecha_ISO)
                                                selectorFechaEntradaUI.innerText = fecha_Humano
                                            }
                                            if (sentidoRangoRespueata === "futuro" && pantallaDeCargaRenderizada) {
                                                const selectorFechaSalida = document.querySelector("[calendario=salida]")
                                                const selectorFechaSalidaUI = document.querySelector("[fechaUI=fechaFin]")
                                                selectorFechaSalida.setAttribute("memoriaVolatil", fecha_ISO)
                                                selectorFechaSalidaUI.innerText = fecha_Humano
                                            }
                                        }
                                    },
                                    controladorZonaPropuestasCambioFechas: () => {
                                        const selectorZonaPropuestas = document.querySelector("[componente=espacioPropuestaCambioFechaReserva]").childElementCount
                                        if (selectorZonaPropuestas > 0) {
                                            document.querySelector("[componente=espacioPropuestaCambioFechaReserva]").style.display = "grid"
                                        } else {
                                            document.querySelector("[componente=espacioPropuestaCambioFechaReserva]").style.display = "none"
                                        }
                                    },
                                    cancelarPropuestaCambioFecha: (propuesta) => {
                                        propuesta.target.parentNode.remove()
                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.fechas.controladorZonaPropuestasCambioFechas()
                                    },

                                },
                                titular: {
                                    desplegarUI: async () => {
                                        document.body.style.overflow = 'hidden';
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                        const advertenciaInmersivaIU = document.createElement("div")
                                        advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                        advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                        advertenciaInmersivaIU.setAttribute("instanciaUID", instanciaUID)
                                        const contenedorAdvertenciaInmersiva = document.createElement("div")
                                        contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                                        const contenidoAdvertenciaInmersiva = document.createElement("div")
                                        contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                                        contenidoAdvertenciaInmersiva.setAttribute("espacio", "gestionTitular")
                                        const mensajeSpinner = "Esperando al servidor...."
                                        const spinner = casaVitini.ui.componentes.spinner(mensajeSpinner)
                                        contenidoAdvertenciaInmersiva.appendChild(spinner)
                                        contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                        advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                                        document.querySelector("main").appendChild(advertenciaInmersivaIU)
                                        const transaccion = {
                                            zona: "miCasa/misReservas/detallesReserva",
                                            reservaUID: reservaUID,

                                        }
                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                        if (respuestaServidor?.error) {
                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                        }
                                        if (respuestaServidor?.ok) {
                                            const detallesTitular = respuestaServidor.ok.titular

                                            const tipoTitularIDV = detallesTitular?.tipoTitularIDV
                                            const seleccionarInstanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                            if (seleccionarInstanciaRenderizada) {
                                                seleccionarInstanciaRenderizada.querySelector("[contenedor=spinner]")?.remove()
                                                seleccionarInstanciaRenderizada.style.justifyContent = "flex-start";
                                                const destinoRenderizado = seleccionarInstanciaRenderizada.querySelector("[espacio=gestionTitular]")
                                                if (!tipoTitularIDV) {
                                                    const titulo = "Añadir titular a la reserva"
                                                    const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titulo(titulo)
                                                    destinoRenderizado.appendChild(tituloUI)
                                                    const info = "Esta reserva ahora mismo no tiene ningún titular asignado. Para añadir un titular a la reserva, puedes buscar con el campo de búsqueda inferior un cliente existente para asociarlo como titular. También puedes crear un cliente nuevo rellenando el formulario para crear un cliente y añadirlo como titular a esta reserva."
                                                    const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info)
                                                    destinoRenderizado.appendChild(infoUI)

                                                    const buscadorUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI({
                                                        instanciaUID
                                                    })
                                                    destinoRenderizado.appendChild(buscadorUI)

                                                    const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.UI({
                                                        instanciaUID
                                                    })
                                                    destinoRenderizado.appendChild(nuevoClienteUI)
                                                    const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                    destinoRenderizado.appendChild(botonCerrar)
                                                } else if (tipoTitularIDV === "titularCliente") {
                                                    const metadatosRespuestaUnificada = {
                                                        clienteUID: detallesTitular.clienteUID,
                                                        nombreCompleto: detallesTitular.nombreTitular,
                                                        pasaporte: detallesTitular.pasaporteTitular,
                                                        mail: detallesTitular.mailTitular,
                                                        telefono: detallesTitular.telefonoTitular,
                                                        instanciaUID: instanciaUID,
                                                        reservaUID: reservaUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                } else if (tipoTitularIDV === "titularPool") {
                                                    const metadatosTitualPool = {
                                                        nombreTitular: detallesTitular.nombreTitular,
                                                        pasaporteTitular: detallesTitular.pasaporteTitular,
                                                        mailTitular: detallesTitular.mailTitular,
                                                        telefonoTitular: detallesTitular.telefonoTitular,
                                                        instanciaUID: instanciaUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titularPool.UI(metadatosTitualPool)
                                                }
                                            }
                                        }
                                    },
                                    componentes: {
                                        buscadorRapido: {
                                            UI: function (data) {
                                                const instanciaUID = data.instanciaUID

                                                if (!instanciaUID) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    const error = "El componente buscador en casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI necesita la instancia que la invoca"
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(error)
                                                }
                                                const contenedor = document.createElement("div")
                                                contenedor.classList.add("administracion_reservas_detallesReservas_gestionTitular_contenedorBuscador")
                                                contenedor.setAttribute("contenedor", "buscador")
                                                const info = document.createElement("div")
                                                info.classList.add("adminsitracion_reservas_detallesReservas_gestionTitular_infoBuscador")
                                                //contenedor.appendChild(info)
                                                const campoBuscador = document.createElement("input")
                                                campoBuscador.classList.add("administracion_reservas_detallesReserva_gestionTitular_campoBuscador")
                                                campoBuscador.placeholder = "Buscar un cliente existente"
                                                campoBuscador.setAttribute("instanciaUID", instanciaUID)
                                                campoBuscador.setAttribute("campo", "buscador")
                                                campoBuscador.addEventListener("input", (e) => {
                                                    this.listaResultadosUI({
                                                        e,
                                                    })
                                                })
                                                contenedor.appendChild(campoBuscador)
                                                return contenedor
                                            },
                                            listaResultadosUI: async (data) => {
                                                const elemento = data.e
                                                const tipoIndividuo = data.tipoIndividuo
                                                const terminoBusqueda = elemento.target.value
                                                const instanciaUIDContenedor = elemento.target.getAttribute("instanciaUID")
                                                const instanciaUIDBuscador = casaVitini.utilidades.codigoFechaInstancia()
                                                if (!instanciaUIDContenedor) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    const error = "El componente buscador en casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.motor necesita la instancia que la invoca"
                                                    casaVitini.ui.componentes.advertenciaInmersiva(error)
                                                }
                                                const alturaDinamica = window.scrollY + elemento.target.getBoundingClientRect().bottom;
                                                const horizontalDinamico = elemento.target.offsetLeft;
                                                const anchoDinamico = elemento.target.getBoundingClientRect().width;
                                                const selectorListaResultadosBuscadorRapidoRenderiaza = document.querySelectorAll("[componente=buscadorRapidoCliente]")
                                                selectorListaResultadosBuscadorRapidoRenderiaza.forEach((listaRenderizada) => {
                                                    listaRenderizada.remove()
                                                })
                                                const campoVacio = elemento.target.value.length

                                                if (campoVacio === 0) {
                                                    clearTimeout(casaVitini.componentes.temporizador);
                                                    document.querySelector(`[instanciaUID="${instanciaUIDContenedor}"]`).querySelector(`[instanciaUIDBuscador]`)?.remove()
                                                    return
                                                }
                                                const listaResultados = document.createElement("div")
                                                listaResultados.setAttribute("componente", "buscadorRapidoCliente")
                                                listaResultados.setAttribute("instanciaUIDBuscador", instanciaUIDBuscador)
                                                listaResultados.classList.add("administracion_reservas_detallesReservas_gestionTitular_listaBuscador")
                                                listaResultados.style.top = (alturaDinamica + 4) + "px"
                                                // listaResultados.style.marginLeft = (horizontalDinamico + 4) + "px"
                                                listaResultados.style.marginLeft = "0px"
                                                listaResultados.style.width = anchoDinamico + "px"
                                                listaResultados.innerText = null
                                                const info = document.createElement("p")
                                                info.classList.add("infoBuscando")
                                                info.innerText = "Buscando..."
                                                listaResultados.appendChild(info)
                                                document.addEventListener("mousedown", (e) => {
                                                    if (e.target.getAttribute("componente") === "elementoResultadosBuscadorRapido") {
                                                        e.preventDefault()
                                                    }
                                                })
                                                const instanciaUIDRenderizada = document.querySelector(`[instanciaUID="${instanciaUIDContenedor}"] [contenedor=buscador]`)
                                                instanciaUIDRenderizada.appendChild(listaResultados)
                                                clearTimeout(casaVitini.componentes.temporizador);
                                                casaVitini.componentes.temporizador = setTimeout(() => {
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.transactor({
                                                        terminoBusqueda: terminoBusqueda,
                                                        instanciaUIDBuscador: instanciaUIDBuscador,
                                                        instanciaUIDContenedor: instanciaUIDContenedor,
                                                    })
                                                }, 1500);
                                            },
                                            transactor: async (data) => {
                                                const instanciaUIDBuscador = data.instanciaUIDBuscador
                                                const terminoBusqueda = data.terminoBusqueda
                                                const instanciaUIDContenedor = data.instanciaUIDContenedor
                                                const transaccion = {
                                                    zona: "administracion/clientes/buscar",
                                                    tipoBusqueda: "rapido",
                                                    buscar: terminoBusqueda
                                                }
                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                                const listaBuscadorRenderizada = document.querySelector(`[instanciaUIDBuscador="${instanciaUIDBuscador}"]`)
                                                if (!listaBuscadorRenderizada) {
                                                    return
                                                }
                                                if (respuestaServidor?.error) {
                                                    listaBuscadorRenderizada.remove()
                                                    return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }

                                                listaBuscadorRenderizada.innerHTML = null
                                                const resultadosClientes = respuestaServidor?.clientes
                                                resultadosClientes.forEach((clienteEncontrado) => {
                                                    const clienteUID = clienteEncontrado.clienteUID
                                                    const nombre = clienteEncontrado.nombre
                                                    const primerApellido = clienteEncontrado.primerApellido
                                                    const segundoApellido = clienteEncontrado.segundoApellido
                                                    const pasaporte = clienteEncontrado.pasaporte
                                                    const bloqueCliente = document.createElement("div")
                                                    bloqueCliente.classList.add("administracionReservaDetallesBuscadorRapidoBloqueCliente")
                                                    bloqueCliente.setAttribute("clienteUID", clienteUID)
                                                    bloqueCliente.setAttribute("nombreUI", nombre)
                                                    bloqueCliente.setAttribute("primerApellidoUI", primerApellido)
                                                    bloqueCliente.setAttribute("segundoApellidoUI", segundoApellido)
                                                    bloqueCliente.setAttribute("pasaporte", pasaporte)
                                                    bloqueCliente.setAttribute("componente", "elementoResultadosBuscadorRapido")

                                                    bloqueCliente.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.asociarCliente({
                                                            clienteUID: clienteUID,
                                                            instanciaUIDContenedor: instanciaUIDContenedor
                                                        })
                                                    })



                                                    const filaNombre = document.createElement("p")
                                                    filaNombre.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaNombre")
                                                    filaNombre.innerText = `${nombre} ${primerApellido} ${segundoApellido}`
                                                    filaNombre.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                    bloqueCliente.appendChild(filaNombre)
                                                    const filaPasaporte = document.createElement("p")
                                                    filaPasaporte.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaPasaporte")
                                                    filaPasaporte.innerText = pasaporte
                                                    filaPasaporte.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                    bloqueCliente.appendChild(filaPasaporte)
                                                    listaBuscadorRenderizada.appendChild(bloqueCliente)
                                                })
                                            },
                                            asociarCliente: async (data) => {
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const clienteUID = data.clienteUID
                                                const instanciaUIDContenedor = data.instanciaUIDContenedor
                                                const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                const opcionesPantallaDeCarga = {
                                                    instanciaUID: instanciaUIDPantallaDeCarga,
                                                    mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)

                                                const respuestaServidor = await casaVitini.shell.servidor({
                                                    zona: "administracion/reservas/detallesReserva/gestionTitular/asociarTitular",
                                                    clienteUID: String(clienteUID),
                                                    reservaUID: reservaUID
                                                })

                                                if (respuestaServidor?.error) {
                                                    pantallaDeCargaRenderizada?.remove()
                                                    casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    pantallaDeCargaRenderizada?.remove()
                                                    const nuevoClienteUID = respuestaServidor.clienteUID
                                                    const nombreCompleto = respuestaServidor.nombreCompleto
                                                    const nombre = respuestaServidor.nombre
                                                    const primerApellido = respuestaServidor.primerApellido
                                                    const segundoApellido = respuestaServidor.segundoApellido
                                                    const clienteUID = respuestaServidor.clienteUID
                                                    const mail = respuestaServidor.mail
                                                    const pasaporte = respuestaServidor.pasaporte
                                                    const telefono = respuestaServidor.telefono
                                                    const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                    const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                    if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                        selectorNombreTitular.innerText = nombreCompleto
                                                        const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                        selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                        selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                    }
                                                    const metadatosRespuestaUnificada = {
                                                        clienteUID: clienteUID,
                                                        nombreCompleto: nombreCompleto,
                                                        pasaporte: pasaporte,
                                                        mail: mail,
                                                        telefono: telefono,
                                                        instanciaUID: instanciaUIDContenedor,
                                                        reservaUID: reservaUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                }
                                            }
                                        },
                                        nuevoCliente: {
                                            UI: (data) => {
                                                const instanciaUID = data.instanciaUID

                                                const tituloNuevoCliente = "Crear un nuevo titular e insertarlo en la reserva"
                                                const tituloBotonCrear = "Crear cliente e insertarlo en la reserva como titular"

                                                const nuevoClienteUI = document.createElement("div")
                                                nuevoClienteUI.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI")
                                                nuevoClienteUI.setAttribute("formulario", "nuevoCliente")

                                                const info = document.createElement("p")
                                                info.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_info")
                                                info.classList.add("negrita")
                                                info.innerText = tituloNuevoCliente
                                                nuevoClienteUI.appendChild(info)
                                                const campoNombre = document.createElement("input")
                                                campoNombre.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                campoNombre.setAttribute("campo", "nombre")
                                                campoNombre.setAttribute("formulario", "AnadirPernoctante")
                                                campoNombre.placeholder = "Nombre (obligatiorio)"
                                                nuevoClienteUI.appendChild(campoNombre)
                                                const primerApellido = document.createElement("input")
                                                primerApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                primerApellido.setAttribute("campo", "primerApellido")
                                                primerApellido.setAttribute("formulario", "AnadirPernoctante")
                                                primerApellido.placeholder = "Primer apellido"
                                                nuevoClienteUI.appendChild(primerApellido)
                                                const segundoApellido = document.createElement("input")
                                                segundoApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                segundoApellido.setAttribute("campo", "segundoApellido")
                                                segundoApellido.setAttribute("formulario", "AnadirPernoctante")
                                                segundoApellido.placeholder = "Segundo apellido"
                                                nuevoClienteUI.appendChild(segundoApellido)
                                                const pasaporte = document.createElement("input")
                                                pasaporte.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                pasaporte.setAttribute("campo", "pasaporte")
                                                pasaporte.setAttribute("formulario", "AnadirPernoctante")
                                                pasaporte.placeholder = "Pasaporte (obligatorio)"
                                                nuevoClienteUI.appendChild(pasaporte)
                                                const telefono = document.createElement("input")
                                                telefono.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                telefono.setAttribute("campo", "telefono")
                                                telefono.setAttribute("formulario", "AnadirPernoctante")
                                                telefono.placeholder = "Teléfono"
                                                nuevoClienteUI.appendChild(telefono)
                                                const correoElecotronico = document.createElement("input")
                                                correoElecotronico.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                correoElecotronico.setAttribute("campo", "correoElectronico")
                                                correoElecotronico.setAttribute("formulario", "AnadirPernoctante")
                                                correoElecotronico.placeholder = "Correo electrónico"
                                                nuevoClienteUI.appendChild(correoElecotronico)
                                                const botonGuardarNuevoCliente = document.createElement("div")
                                                botonGuardarNuevoCliente.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_botonV1")
                                                botonGuardarNuevoCliente.innerText = tituloBotonCrear

                                                botonGuardarNuevoCliente.addEventListener("click", () => {
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.transactor(instanciaUID)
                                                })


                                                nuevoClienteUI.appendChild(botonGuardarNuevoCliente)
                                                return nuevoClienteUI
                                            },
                                            transactor: async (instanciaUID) => {
                                                const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                const opcionesPantallaDeCarga = {
                                                    instanciaUID: instanciaUIDPantallaDeCarga,
                                                    mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const campos = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`).querySelectorAll("[campo]")
                                                const metadatos = {
                                                    zona: "administracion/reservas/detallesReserva/gestionTitular/crearTitular",
                                                    reservaUID: String(reservaUID)
                                                }
                                                campos.forEach((campo) => {
                                                    const nombreCampo = campo.getAttribute("campo")
                                                    const valorCampo = campo.value
                                                    metadatos[nombreCampo] = valorCampo
                                                })
                                                const respuestaServidor = await casaVitini.shell.servidor(metadatos)
                                                if (respuestaServidor?.error) {
                                                    pantallaDeCargaRenderizada?.remove()
                                                    casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    pantallaDeCargaRenderizada?.remove()
                                                    const nuevoClienteUID = respuestaServidor.clienteUID
                                                    const nombreCompleto = respuestaServidor.nombreCompleto
                                                    const clienteUID = respuestaServidor.clienteUID
                                                    const mail = respuestaServidor.mail
                                                    const telefono = respuestaServidor.telefono
                                                    const pasaporte = respuestaServidor.pasaporte
                                                    const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                    const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                    if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                        selectorNombreTitular.innerText = nombreCompleto
                                                        const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                        selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                        selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                    }
                                                    const metadatosRespuestaUnificada = {
                                                        clienteUID: clienteUID,
                                                        nombreCompleto: nombreCompleto,
                                                        pasaporte: pasaporte,
                                                        mail: mail,
                                                        telefono: telefono,
                                                        instanciaUID: instanciaUID,
                                                        reservaUID: reservaUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                }
                                            }
                                        },
                                        desasociarClienteComoTitular: async (metadatos) => {
                                            const instanciaUID = metadatos.instanciaUID
                                            const reservaUID = metadatos.reservaUID
                                            const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                            const opcionesPantallaDeCarga = {
                                                instanciaUID: instanciaUIDPantallaDeCarga,
                                                mensaje: "Desasociando cliente como titular de la reserva"
                                            }
                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                            const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                            const metadatosPantallaDeCarga = {
                                                zona: "administracion/reservas/detallesReserva/gestionTitular/desasociarClienteComoTitular",
                                                reservaUID: String(reservaUID)
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(metadatosPantallaDeCarga)
                                            if (respuestaServidor?.error) {
                                                pantallaDeCargaRenderizada?.remove()
                                                casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                pantallaDeCargaRenderizada?.remove()
                                                const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`).querySelector(`[dataReserva=nombreTitular]`)
                                                if (selectorNombreTitularRenderizado) {
                                                    selectorNombreTitularRenderizado.innerText = "(Níngun titular asignado)"
                                                    const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                    selectorBloqueTitular.removeAttribute("tipoTitular")
                                                    selectorBloqueTitular.removeAttribute("titularUID")
                                                }
                                                const selectorDestinoRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [espacio=gestionTitular]`)
                                                if (selectorDestinoRenderizado) {
                                                    selectorDestinoRenderizado.innerHTML = null
                                                    const titulo = "Añadir titular a la reserva"
                                                    const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titulo(titulo)
                                                    selectorDestinoRenderizado.appendChild(tituloUI)
                                                    const info = "Esta reserva ahora mismo no tiene ningún titular asignado. Para añadir un titular a la reserva, puedes buscar con el campo de búsqueda inferior un cliente existente para asociarlo como titular. También puedes crear un cliente nuevo rellenando el formulario para crear un cliente y añadirlo como titular a esta reserva."
                                                    const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info)
                                                    selectorDestinoRenderizado.appendChild(infoUI)
                                                    const buscadorUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI({
                                                        instanciaUID
                                                    })
                                                    selectorDestinoRenderizado.appendChild(buscadorUI)
                                                    const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.UI({
                                                        instanciaUID
                                                    })
                                                    selectorDestinoRenderizado.appendChild(nuevoClienteUI)
                                                    const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                    selectorDestinoRenderizado.appendChild(botonCerrar)
                                                }
                                            }
                                        },
                                        detallesDelTitularUI: (detallesDelTitular) => {
                                            const clienteUID = detallesDelTitular.clienteUID
                                            const nombreTitular = detallesDelTitular.nombreTitular
                                            const pasaporteTitular = detallesDelTitular.pasaporteTitular
                                            const tipoTitular = detallesDelTitular.tipoTitular
                                            const mailTitular = detallesDelTitular.mailTitular ? detallesDelTitular.mailTitular : "(Sin mail)"
                                            const telefonoTitular = detallesDelTitular.telefonoTitular ? detallesDelTitular.telefonoTitular : "(Sin telefono)"
                                            const detallesRapidosDelTitular = document.createElement("div")
                                            detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedorGlobal")
                                            // Nombre completo titular
                                            let contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            let nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "Nombre completo del titular"
                                            contenedorDato.appendChild(nombreDato)
                                            let valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = nombreTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            // Pasaporte titular
                                            contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "Pasaporte"
                                            contenedorDato.appendChild(nombreDato)
                                            valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = pasaporteTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            // telefono titular
                                            contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "Teléfono"
                                            contenedorDato.appendChild(nombreDato)
                                            valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = telefonoTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            // mail titular
                                            contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "e-Mail"
                                            contenedorDato.appendChild(nombreDato)
                                            valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = mailTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            return detallesRapidosDelTitular
                                        },
                                        detallesDelTitularPoolUI: (detallesDelTitular) => {
                                            const nombreTitular = detallesDelTitular.nombreTitular
                                            const pasaporteTitular = detallesDelTitular.pasaporteTitular
                                            const tipoTitular = "Titular pool"
                                            const mailTitular = detallesDelTitular.mailTitular ? detallesDelTitular.mailTitular : "(Sin mail)"
                                            const telefonoTitular = detallesDelTitular.telefonoTitular ? detallesDelTitular.telefonoTitular : "(Sin telefono)"
                                            const detallesRapidosDelTitular = document.createElement("div")
                                            detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedorGlobal")
                                            // Nombre completo titular
                                            let contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            let nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "Nombre completo del titular"
                                            contenedorDato.appendChild(nombreDato)
                                            let valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = nombreTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            // Pasaporte titular
                                            contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "Pasaporte"
                                            contenedorDato.appendChild(nombreDato)
                                            valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = pasaporteTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            // telefono titular
                                            contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "Teléfono"
                                            contenedorDato.appendChild(nombreDato)
                                            valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = telefonoTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            // mail titular
                                            contenedorDato = document.createElement("div")
                                            contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                            nombreDato = document.createElement("div")
                                            nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                            nombreDato.innerText = "e-Mail"
                                            contenedorDato.appendChild(nombreDato)
                                            valorDato = document.createElement("div")
                                            valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                            valorDato.classList.add("negrita")
                                            valorDato.innerText = mailTitular
                                            contenedorDato.appendChild(valorDato)
                                            detallesRapidosDelTitular.appendChild(contenedorDato)
                                            return detallesRapidosDelTitular
                                        },
                                        botonCerrarFormularioNuevoCliente: () => {
                                            const boton = document.createElement("div")
                                            boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                            boton.innerHTML = "Cerrar gestion del titular de la reserva"
                                            boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                            boton
                                        },
                                        botonCerrar: () => {
                                            const boton = document.createElement("div")
                                            boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                            boton.innerHTML = "Cerrar gestion del titular de la reserva"
                                            boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                            return boton
                                        },
                                        botonDesasociar: (metadatos) => {
                                            const boton = document.createElement("div")
                                            boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                            boton.innerHTML = "Desasociar cliente como titular"
                                            boton.setAttribute("boton", "desasociarTitular")
                                            boton.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.desasociarClienteComoTitular(metadatos)
                                            })
                                            return boton
                                        },
                                        botonCambiarTitular: (instanciaUID) => {
                                            const boton = document.createElement("div")
                                            boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                            boton.innerHTML = "Cambiar titular"
                                            boton.setAttribute("boton", "cambiarTitular")
                                            boton.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.cambiarTitular(instanciaUID)
                                            })
                                            return boton
                                        },
                                        botonIrALaFichaDelClinete: (clienteUID) => {
                                            const boton = document.createElement("a")
                                            boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                            boton.innerHTML = "Ir a la ficha del cliente"
                                            boton.setAttribute("href", "/administracion/clientes/" + clienteUID)
                                            boton.setAttribute("vista", "/administracion/clientes/" + clienteUID)
                                            boton.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                            return boton
                                        },
                                        titulo: (titulo) => {
                                            const tituloUI = document.createElement("p")
                                            tituloUI.classList.add("detallesReservaTituloCancelarReserva")
                                            tituloUI.innerText = titulo
                                            return tituloUI
                                        },
                                        infoUI: (info) => {
                                            const infoUI = document.createElement("p")
                                            infoUI.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                            infoUI.innerText = info
                                            return infoUI
                                        },
                                        botonCerrarCambiarTitular: (instanciaUID) => {
                                            const boton = document.createElement("div")
                                            boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                            boton.innerHTML = "Cerrar formulario para cambiar de titular"
                                            boton.setAttribute("boton", "cerrarCambiarTitular")
                                            boton.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.cancelarCambiarTitular(instanciaUID)
                                            })
                                            return boton
                                        },
                                        cambiarTitular: (instanciaUID) => {
                                            const selectorBotonCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cambiarTitular]`)
                                            const selectorBotonDesasociar = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=desasociarTitular]`)
                                            selectorBotonCambiarTitular.style.display = "none"
                                            selectorBotonDesasociar.style.display = "none"
                                            const selectorNuevoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`)
                                            selectorNuevoClienteUI.removeAttribute("style")
                                            const selectorBuscadorRapidoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [contenedor=buscador]`)
                                            selectorBuscadorRapidoClienteUI.removeAttribute("style")
                                            const selectorbotonCerrarCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cerrarCambiarTitular]`)
                                            selectorbotonCerrarCambiarTitular.removeAttribute("style")
                                        },
                                        respuestaUnificadaUI: (metadatos) => {
                                            const clienteUID = metadatos.clienteUID
                                            const nombreCompleto = metadatos.nombreCompleto
                                            const pasaporte = metadatos.pasaporte
                                            const mail = metadatos.mailTitular
                                            const telefono = metadatos.telefon
                                            const instanciaUID = metadatos.instanciaUID
                                            const reservaUID = metadatos.reservaUID
                                            const selectorDestinoRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [espacio=gestionTitular]`)
                                            if (selectorDestinoRenderizado) {
                                                selectorDestinoRenderizado.innerHTML = null
                                                const titulo = "Detalles del titular"
                                                const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titulo(titulo)
                                                selectorDestinoRenderizado.appendChild(tituloUI)
                                                const info = "Vista rápida de los detalles del titular de la reserva. Puedes cambiar el titular de la reserva si lo necesitas o desasociar el titular. También puedes cambiar el titular, esto te permite rellenar los datos mientras ves los datos del actual titular por si fuera necesario."
                                                const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info)
                                                selectorDestinoRenderizado.appendChild(infoUI)
                                                const detallesDelTitular = {
                                                    clienteUID: clienteUID,
                                                    nombreTitular: nombreCompleto,
                                                    pasaporteTitular: pasaporte,
                                                    tipoTitular: "titularCliente",
                                                    mailTitular: mail,
                                                    telefonoTitular: telefono,
                                                }
                                                const detallesDelTitularUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.detallesDelTitularUI(detallesDelTitular)
                                                selectorDestinoRenderizado.appendChild(detallesDelTitularUI)
                                                const botonIrALaFichaDelClinete = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonIrALaFichaDelClinete(detallesDelTitular.clienteUID)
                                                selectorDestinoRenderizado.appendChild(botonIrALaFichaDelClinete)
                                                const botonCambiarTitular = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCambiarTitular(instanciaUID)
                                                selectorDestinoRenderizado.appendChild(botonCambiarTitular)
                                                const buscadorUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI({
                                                    instanciaUID
                                                })
                                                buscadorUI.style.display = "none"

                                                selectorDestinoRenderizado.appendChild(buscadorUI)

                                                const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.UI({
                                                    instanciaUID
                                                })
                                                nuevoClienteUI.style.display = "none"
                                                selectorDestinoRenderizado.appendChild(nuevoClienteUI)
                                                const metadatosBotonDesasociar = {
                                                    instanciaUID: instanciaUID,
                                                    reservaUID: reservaUID
                                                }
                                                const botonCerrarCambiarTitular = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrarCambiarTitular(instanciaUID)
                                                botonCerrarCambiarTitular.style.display = "none"
                                                selectorDestinoRenderizado.appendChild(botonCerrarCambiarTitular)
                                                const botonDesasociar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonDesasociar(metadatosBotonDesasociar)
                                                selectorDestinoRenderizado.appendChild(botonDesasociar)
                                                const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                selectorDestinoRenderizado.appendChild(botonCerrar)
                                            }
                                        },
                                        cancelarCambiarTitular: (instanciaUID) => {
                                            const selectorBotonCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cambiarTitular]`)
                                            const selectorBotonDesasociar = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=desasociarTitular]`)
                                            selectorBotonCambiarTitular.removeAttribute("style")
                                            selectorBotonDesasociar.removeAttribute("style")
                                            const selectorNuevoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`)
                                            selectorNuevoClienteUI.style.display = "none"
                                            const selectorBuscadorRapidoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [contenedor=buscador]`)
                                            selectorBuscadorRapidoClienteUI.style.display = "none"
                                            const selectorbotonCerrarCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cerrarCambiarTitular]`)
                                            selectorbotonCerrarCambiarTitular.style.display = "none"
                                        },
                                        titularPool: {
                                            UI: async (metadatos) => {
                                                const nombreTitular = metadatos.nombreTitular
                                                const pasaporteTitular = metadatos.pasaporteTitular
                                                const mailTitular = metadatos.mailTitular
                                                const telefonoTitular = metadatos.telefonoTitular
                                                const tipoTitular = metadatos.tipoTitular
                                                const instanciaUID = metadatos.instanciaUID
                                                const selectorDestinoRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [espacio=gestionTitular]`)
                                                if (selectorDestinoRenderizado) {
                                                    const titulo = "Datos del titular no verificado (POOL)"
                                                    const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titulo(titulo)
                                                    selectorDestinoRenderizado.appendChild(tituloUI)
                                                    const info = "Vista de los datos del titular Pool. Estos datos provienen del cliente. Por lo tanto, deben de verificarse con la base de datos de clientes."
                                                    const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info)
                                                    selectorDestinoRenderizado.appendChild(infoUI)
                                                    const detallesDelTitular = {
                                                        //clienteUID: clienteUID,
                                                        nombreTitular: nombreTitular,
                                                        pasaporteTitular: pasaporteTitular,
                                                        tipoTitular: "titularCliente",
                                                        mailTitular: mailTitular,
                                                        telefonoTitular: telefonoTitular,
                                                    }
                                                    const detallesDelTitularUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.detallesDelTitularUI(detallesDelTitular)
                                                    selectorDestinoRenderizado.appendChild(detallesDelTitularUI)
                                                    const info2 = "Primero usé en el campo de búsqueda para ver si existe ya una ficha del cliente para poder asociarlo. Si no existiera la ficha del cliente, puede crear una en el formulario de abajo. Si selecciona un cliente existente o crea una nueva ficha del cliente, desde aquí se asociará automáticamente como titular de esta reserva "
                                                    const infoUI2 = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info2)
                                                    selectorDestinoRenderizado.appendChild(infoUI2)

                                                    const buscadorUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI({
                                                        instanciaUID
                                                    })
                                                    selectorDestinoRenderizado.appendChild(buscadorUI)

                                                    const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.UI({
                                                        instanciaUID
                                                    })


                                                    selectorDestinoRenderizado.appendChild(nuevoClienteUI)
                                                    const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                    selectorDestinoRenderizado.appendChild(botonCerrar)
                                                }
                                                // Obtenemos datos
                                            }
                                        }
                                    }
                                },
                                estado: {
                                    aceptarReserva: async function (data) {
                                        const reservaUID = data.reservaUID
                                        const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                        const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                        const instanciaUID_aceptarReserva = pantallaInmersiva.getAttribute("instanciaUID")

                                        const titulo = constructor.querySelector("[componente=titulo]")
                                        titulo.innerText = `Confirmas que aceptas la reserva ${reservaUID}`
                                        const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                        mensaje.innerText = "Al confirmar una reserva pendiente, cambiarás el estado de pendiente, que sé que se ha confirmado. La reserva dejará de ser visible desde la sección de reservas confirmadas. Si necesitas volver a poner la reserva en estado pendiente, pulsa en el estado de la reserva para poder cambiarla."

                                        const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                        botonAceptar.innerText = "Comfirmar y aceptar reserva"
                                        botonAceptar.addEventListener("click", () => {
                                            this.confirmarNuevoEstado({
                                                reservaUID,
                                                instanciaUID_aceptarReserva,
                                                nuevoEstado: "confirmada"
                                            })
                                        })
                                        const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                        botonCancelar.innerText = "Cancelar y volver"
                                        document.querySelector("main").appendChild(pantallaInmersiva)

                                    },
                                    rechazarReserva: async function (data) {
                                        const reservaUID = data.reservaUID
                                        const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()

                                        const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                        const instanciaUID_aceptarReserva = pantallaInmersiva.getAttribute("instanciaUID")

                                        const titulo = constructor.querySelector("[componente=titulo]")
                                        titulo.innerText = `Confirmas que rechazas la reserva ${reservaUID}`
                                        const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                        mensaje.innerText = "Rechazar una reserva implica eliminarla de la base de datos. Si solo quieres cancelar esta reserva, dirígete al menú de cancelación."

                                        const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                        botonAceptar.innerText = "Rechazar reserva"
                                        botonAceptar.addEventListener("click", (e) => {
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.rechazarReserva.UI({
                                                e,
                                                reservaUID,
                                                origen: "reservaUI"
                                            })
                                        })
                                        const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                        botonCancelar.innerText = "Cancelar y volver"
                                        document.querySelector("main").appendChild(pantallaInmersiva)

                                    },
                                    ponerReservaEnPendiente: async function (data) {
                                        const reservaUID = data.reservaUID
                                        const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                        const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                        const instanciaUID_aceptarReserva = pantallaInmersiva.getAttribute("instanciaUID")

                                        const titulo = constructor.querySelector("[componente=titulo]")
                                        titulo.innerText = `Confirmas que aceptas la reserva ${reservaUID}`
                                        const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                        mensaje.innerText = "Al confirmar una reserva pendiente, cambiarás el estado de pendiente, que se ha confirmado. La reserva dejará de ser visible desde la sección de reservas confirmadas. Si necesitas volver a poner la reserva en estado pendiente, pulsa en el estado de la reserva para poder cambiarla."

                                        const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                        botonAceptar.innerText = "Comfirmar y aceptar reserva"
                                        botonAceptar.addEventListener("click", () => {
                                            this.confirmarNuevoEstado({
                                                reservaUID,
                                                instanciaUID_aceptarReserva,
                                                nuevoEstado: "pendiente"
                                            })
                                        })
                                        const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                        botonCancelar.innerText = "Cancelar y volver"
                                        document.querySelector("main").appendChild(pantallaInmersiva)

                                    },
                                    confirmarNuevoEstado: async function (data) {
                                        const reservaUID = data.reservaUID
                                        const nuevoEstado = data.nuevoEstado
                                        const instanciaUID_aceptarReserva = data.instanciaUID_aceptarReserva

                                        const ui = document.querySelector(`[instanciaUID="${instanciaUID_aceptarReserva}"]`)
                                        const contenedor = ui.querySelector("[componente=constructor]")
                                        contenedor.innerHTML = null

                                        const spinner = casaVitini.ui.componentes.spinner({
                                            mensaje: "Aceptando reserva un momento por favor..."
                                        })
                                        contenedor.appendChild(spinner)

                                        const transaccion = {
                                            zona: "administracion/reservas/detallesReserva/global/actualizarEstadoReserva",
                                            reservaUID: String(reservaUID),
                                            nuevoEstado
                                        }

                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                        document.querySelector(`[instanciaUID="${instanciaUID_aceptarReserva}"]`)?.remove()

                                        const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                        if (!uiRenderizada) { return }

                                        if (respuestaServidor?.error) {
                                            return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                        }
                                        if (respuestaServidor?.ok) {
                                            const estadoUI = uiRenderizada.querySelector("[dataReserva=estado]")
                                            const contenedorPendienteUI = uiRenderizada.querySelector("[contenedor=pendiente]")
                                            const estadoActual = respuestaServidor.estadoActual


                                            if (estadoActual === "pendiente") {
                                                estadoUI.innerText = "Pendiente"
                                                estadoUI.setAttribute("estadoReservaIDV", "pendiente")
                                                contenedorPendienteUI.style.display = "grid"

                                            }
                                            if (estadoActual === "confirmada") {
                                                estadoUI.innerText = "Confirmada"
                                                estadoUI.setAttribute("estadoReservaIDV", "confirmada")
                                                contenedorPendienteUI.style.display = "none"
                                            }

                                        }

                                    },
                                    panelExpandidoUI: async function (data) {
                                        const reservaUID = data.reservaUID
                                        const estadoActual = data.estadoActual

                                        const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                        const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                        const instanciaUID_aceptarReserva = pantallaInmersiva.getAttribute("instanciaUID")

                                        const titulo = constructor.querySelector("[componente=titulo]")
                                        titulo.innerText = `Estado de la reserva ${reservaUID}`
                                        const mensaje = constructor.querySelector("[componente=mensajeUI]")

                                        if (estadoActual === "confirmada") {
                                            mensaje.innerText = "El estado actual de la reserva es confirmado. Si se necesita, puedes cambiar el estado de esta reserva a pendiente. Esto permitirá insertar la reserva en reservas pendientes de revisión"

                                            const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                            botonAceptar.innerText = "Pasar el estado de esta reserva a pendiente de revisión"
                                            botonAceptar.addEventListener("click", () => {
                                                this.confirmarNuevoEstado({
                                                    reservaUID,
                                                    instanciaUID_aceptarReserva,
                                                    nuevoEstado: "pendiente"
                                                })
                                            })
                                        }
                                        if (estadoActual === "pendiente") {
                                            mensaje.innerText = "El estado de esta reserva es pendiente, en este estado es recomendable revisar la reserva para tomar la decisión de aceptarla o rechazarla. Es recomendable revisar las reservas pendientes y aceptar o rechazarlas para mantener la lista de reservas pendientes sin saturar."
                                            const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                            botonAceptar.innerText = "Aceptar reserva"
                                            botonAceptar.addEventListener("click", () => {
                                                this.confirmarNuevoEstado({
                                                    reservaUID,
                                                    instanciaUID_aceptarReserva,
                                                    nuevoEstado: "confirmada"
                                                })
                                            })
                                        }

                                        const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                        botonCancelar.innerText = "Cancelar y volver"
                                        document.querySelector("main").appendChild(pantallaInmersiva)

                                    }
                                },
                                categorias: {
                                    desplegarMenuResponsivo: (reservaUID) => {
                                        const advertenciaInmersivaIU = document.createElement("div")
                                        advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                        advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                        advertenciaInmersivaIU.setAttribute("contenedor", "menuResponsivoDesplegado")
                                        const contenedorAdvertenciaInmersiva = document.createElement("div")
                                        contenedorAdvertenciaInmersiva.classList.add("administracion_reservas_detallesReservas_contenedorAdvertencaiInmersiva")
                                        const contenidoAdvertenciaInmersiva = document.createElement("div")
                                        contenidoAdvertenciaInmersiva.classList.add("adminsitracion_reservas_detallesReserva_contenedorGlobalResponsivo")
                                        contenidoAdvertenciaInmersiva.setAttribute("contenedor", "contenidoAdvertenciaInmersiva")
                                        const contenedor = document.createElement("div")
                                        contenedor.classList.add("administracion_reservas_detallesReservas_contenedorBotonesEnPanelGlobalResponsivo")
                                        // divBotones.appendChild(botonAplicarDescuento);
                                        const botonCerrar = document.createElement('a');
                                        botonCerrar.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                        botonCerrar.textContent = 'Cerrar';
                                        botonCerrar.addEventListener("click", (e) => {
                                            e.target.closest("[contenedor=menuResponsivoDesplegado]").remove()
                                        })
                                        contenedor.appendChild(botonCerrar);
                                        const metadatosMenuResponsivo = {
                                            rectangularidad: "vertical",
                                            reservaUID: reservaUID
                                        }
                                        const contenedorBotonesCategoriasGlobales = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.categoriasGlobalesBotonesUI(metadatosMenuResponsivo)
                                        contenedor.appendChild(contenedorBotonesCategoriasGlobales)
                                        contenidoAdvertenciaInmersiva.appendChild(contenedor)
                                        contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                        advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                                        document.querySelector("main").appendChild(advertenciaInmersivaIU)
                                        // bug
                                        // const selectorPreRenderizacion = contenedor
                                        //     .querySelector("[contenedor=menuResponsivoDesplegado]")
                                        //     .querySelector("[componete=panelDetallesReserva]")
                                    },
                                    ocultaCategorias: () => {
                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas();
                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias()
                                        document.querySelector("[componente=contenedorDinamico]").innerHTML = null
                                    },
                                    limpiarMenusCategorias: () => {
                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas();
                                        document.querySelector("[componente=iconoLineaMiscelanea]").removeAttribute("style")
                                        const botonesCategoria = document.querySelectorAll("[categoriaReserva]")
                                        botonesCategoria.forEach((boton) => {
                                            boton.removeAttribute("style")
                                            boton.setAttribute("estadoCategoria", "otra")
                                        })
                                        document.querySelector("[componente=contenedorDinamico]").innerHTML = null
                                    },
                                    categoriasGlobalesBotonesUI: (metadatos) => {
                                        const rectangularidad = metadatos.rectangularidad
                                        const reservaUID = metadatos.reservaUID
                                        let css
                                        if (rectangularidad === "horizontal") {
                                            css = "miCasa_reserva_detallesReserva_marcoMenuExpandido_horizontal"
                                        }
                                        if (rectangularidad === "vertical") {
                                            css = "administracion_reserva_detallesReserva_marcoMenuExpandido_vertical"
                                        }
                                        const divBotones = document.createElement('div');
                                        divBotones.setAttribute('class', css);
                                        divBotones.setAttribute("componente", "panelDetallesReserva")
                                        // Crear el primer botón: p.botonSimpleV2 - Añadir apartamento
                                        const botonNuevaReserva = document.createElement('a');
                                        botonNuevaReserva.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                        botonNuevaReserva.setAttribute('categoriaReserva', 'alojamiento');
                                        botonNuevaReserva.setAttribute('href', '/administracion/reservas/' + reservaUID + "/alojamiento");
                                        botonNuevaReserva.addEventListener("click", (e) => {
                                            e.preventDefault()
                                            const metadatos = {
                                                categoria: "alojamiento",
                                                origen: "botonCategoria",
                                                reservaUID: reservaUID
                                            }
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.controladorCategorias(metadatos)
                                        })
                                        botonNuevaReserva.textContent = 'Alojamiento';
                                        divBotones.appendChild(botonNuevaReserva);
                                        // Crear el tercer botón: p.botonSimpleV2 - Calcular precio
                                        const botonCalcularPrecio = document.createElement('a');
                                        botonCalcularPrecio.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                        botonCalcularPrecio.setAttribute('componente', 'botonCalcularPrecioReserva');
                                        botonCalcularPrecio.setAttribute('categoriaReserva', 'enlacesDePago');
                                        botonCalcularPrecio.setAttribute('href', '/administracion/reservas/' + reservaUID + "/enlaces_de_pago");
                                        botonCalcularPrecio.addEventListener("click", (e) => {
                                            e.preventDefault()
                                            const metadatos = {
                                                categoria: "enlacesDePago",
                                                origen: "botonCategoria",
                                                reservaUID: reservaUID
                                            }
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.controladorCategorias(metadatos)
                                        })
                                        botonCalcularPrecio.textContent = 'Enlaces de pago';
                                        //divBotones.appendChild(botonCalcularPrecio);
                                        // divBotones.appendChild(botonAplicarDescuento);
                                        const botonDetallesDelPago = document.createElement('a');
                                        botonDetallesDelPago.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                        botonDetallesDelPago.setAttribute('categoriaReserva', 'transacciones');
                                        botonDetallesDelPago.setAttribute('href', '/administracion/reservas/' + reservaUID + "/transacciones");
                                        botonDetallesDelPago.textContent = 'Transacciones';
                                        botonDetallesDelPago.addEventListener("click", (e) => {
                                            e.preventDefault()
                                            const metadatos = {
                                                categoria: "transacciones",
                                                origen: "botonCategoria",
                                                reservaUID: reservaUID
                                            }
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.controladorCategorias(metadatos)
                                        })
                                        divBotones.appendChild(botonDetallesDelPago);
                                        // divBotones.appendChild(botonAplicarDescuento);
                                        const botonEnlacePago = document.createElement('a');
                                        botonEnlacePago.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                        botonEnlacePago.setAttribute('categoriaReserva', 'desgloseTotal');
                                        botonEnlacePago.setAttribute('href', '/administracion/reservas/' + reservaUID + "/desglose_total");
                                        botonEnlacePago.textContent = 'Desglose del total';
                                        botonEnlacePago.addEventListener("click", (e) => {
                                            e.preventDefault()
                                            const metadatos = {
                                                categoria: "desgloseTotal",
                                                origen: "botonCategoria",
                                                reservaUID: reservaUID
                                            }
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.controladorCategorias(metadatos)
                                        })
                                        divBotones.appendChild(botonEnlacePago);
                                        // Crear el quinto botón: p.botonSimpleV2 - Cancelar reserva
                                        const botonCancelarReserva = document.createElement('a');
                                        botonCancelarReserva.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                        botonCancelarReserva.setAttribute('categoriaReserva', 'cancelarReserva');
                                        botonCancelarReserva.setAttribute('href', '/administracion/reservas/' + reservaUID + "/cancelar_reserva");
                                        botonCancelarReserva.addEventListener("click", (e) => {
                                            e.preventDefault()
                                            const metadatos = {
                                                categoria: "cancelarReserva",
                                                origen: "botonCategoria",
                                                reservaUID: reservaUID
                                            }
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.controladorCategorias(metadatos)
                                        })
                                        botonCancelarReserva.textContent = 'Cancelar reserva';
                                        //divBotones.appendChild(botonCancelarReserva);
                                        const botonMiscelanea = document.createElement('a');
                                        botonMiscelanea.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                        botonMiscelanea.setAttribute('categoriaReserva', 'miscelanea');
                                        botonMiscelanea.setAttribute('href', '/administracion/reservas/' + reservaUID + "/miscelanea");
                                        botonMiscelanea.addEventListener("click", (e) => {
                                            e.preventDefault()
                                            const metadatos = {
                                                categoria: "miscelanea",
                                                origen: "botonCategoria",
                                                reservaUID: reservaUID
                                            }
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.controladorCategorias(metadatos)
                                        })
                                        const lineaMiscelanea = document.createElement("div")
                                        lineaMiscelanea.setAttribute("componente", "iconoLineaMiscelanea")
                                        lineaMiscelanea.classList.add("administracion_reservas_detallesReseerva_iconoMiscelanea")
                                        //lineaMiscelanea.setAttribute('href', '/administracion/reservas/' + reservaUID + "/alojamiento");
                                        botonMiscelanea.appendChild(lineaMiscelanea);
                                        divBotones.appendChild(botonMiscelanea);
                                        // Anadir divBotones al div principal
                                        return divBotones;
                                    },
                                    controladorCategorias: async (metadatos) => {
                                        const origen = metadatos.origen
                                        const categoriaALaQueIr = metadatos.categoria
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")

                                        const selectorBotonCategoriaRenderizado = document.querySelector(`[categoriaReserva="${categoriaALaQueIr}"]`)
                                        const estadoCategoria = selectorBotonCategoriaRenderizado?.getAttribute("estadoCategoria")
                                        const categoriaActual = document.querySelector("[estadoCategoria=actual]")?.getAttribute("categoriaReserva")
                                        const funcionPersonalizada = `casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.${categoriaALaQueIr}.arranque`
                                        //casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias()
                                        const constructorDireccionFuncion = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales[categoriaALaQueIr]?.arranque
                                        if (typeof constructorDireccionFuncion === "function") {
                                            await casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales[categoriaALaQueIr]?.arranque();
                                            const granuladoURL = casaVitini.utilidades.granuladorURL()
                                            const posicionReservaUID = granuladoURL.directorios.findIndex(directorio => directorio === "reservas") + 1;
                                            const directoriosFusionLimpios = []
                                            granuladoURL.directorios.forEach((directorio, indice) => {
                                                if (indice <= posicionReservaUID) {
                                                    directoriosFusionLimpios.push(directorio)
                                                }
                                            })

                                            const posicionCategoriaGlobalInicial = (posicionReservaUID + 1)
                                            const tranformadorASnakeCase = categoriaALaQueIr.replace(/[A-Z]/g, palabra => `_${palabra.toLowerCase()}`);


                                            //const directoriosFusion = "/" + directoriosFusionLimpios.join("/") + "/reserva:" + reservaUID + "/" + tranformadorASnakeCase

                                            const directoriosFusion = "/micasa/reservas/" + reservaUID + "/" + tranformadorASnakeCase
                                            const componentesExistenteUID = "reservaUID_miCasa_" + reservaUID
                                            const titulo = "Casa Vitini"

                                            const estado = {
                                                zona: directoriosFusion,
                                                EstadoInternoZona: "estado",
                                                tipoCambio: "parcial",
                                                componenteExistente: componentesExistenteUID,
                                                funcionPersonalizada: funcionPersonalizada
                                            }
                                            if (!categoriaActual) {
                                                //
                                                //  window.history.replaceState(estado, titulo, directoriosFusion);
                                            }
                                            if (categoriaALaQueIr !== categoriaActual) {
                                                if (origen === "url") {
                                                    window.history.replaceState(estado, titulo, directoriosFusion);
                                                }
                                                if (origen === "botonCategoria" && (estadoCategoria === "otra" || !estadoCategoria)) {
                                                    window.history.pushState(estado, titulo, directoriosFusion);
                                                }
                                                if (origen === "botonCategoria" && estadoCategoria === "actual") {
                                                    window.history.replaceState(estado, titulo, directoriosFusion);
                                                }
                                            }
                                        } else {
                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            const mensaje = "El controlador de categorias no encuentra la funcion"
                                            casaVitini.ui.componentes.advertenciaInmersiva(mensaje)
                                        }
                                    },
                                },
                                calcularPrecioReserva: async () => {
                                    const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                    const instanciaUID = document.querySelector("main").getAttribute("instanciaUID")
                                    const selectorEstadoPago = document.querySelector("[dataReserva=estadoPago]")
                                    const selectorTotalConImpuestos = document.querySelector("[dataReserva=totalReservaConImpuestos]")
                                    selectorEstadoPago.innerText = "Recalculando..."
                                    selectorTotalConImpuestos.innerText = "Recalculando..."
                                    const transaccion = {
                                        zona: "miCasa/misReservas/detallesReserva",
                                        reservaUID: reservaUID,

                                    }
                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                    if (respuestaServidor?.error) {
                                        casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                    }
                                    if (respuestaServidor?.ok) {
                                        const estadoPago = respuestaServidor.ok.global.estadoPagoIDV
                                        const estadoPagoUI = {
                                            pagado: "Pagado",
                                            noPagado: "No pagado",
                                            pagadoSuperadamente: "Pagado superadamente",
                                            pagadoParcialmente: "Pagado parcialmente"
                                        }
                                        const totalConImpuestos = respuestaServidor.ok.contenedorFinanciero.desgloseFinanciero?.global?.totales?.totalFinal ?
                                            respuestaServidor.ok.contenedorFinanciero.desgloseFinanciero?.global?.totales?.totalFinal + "$" :
                                            "Sin información"
                                        if (instanciaUID) {
                                            selectorEstadoPago.innerText = estadoPagoUI[estadoPago]
                                            selectorTotalConImpuestos.innerText = totalConImpuestos
                                            const section = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                            const selectorListaDePagosRenderizada = section.querySelector("[contenedorID=transacciones]")
                                            const selectorDesgloseFinancieroUIRenderizado = section.querySelector("[componente=contenedorDesgloseTotal]")

                                            if (selectorListaDePagosRenderizada) {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.actualizarDatosGlobalesPago({
                                                    reservaUID
                                                })
                                            }
                                            if (selectorDesgloseFinancieroUIRenderizado) {
                                                const instanciaUIDContenedorFinanciero = null

                                                casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                    reservaUID
                                                })
                                            }
                                        }
                                    }
                                },
                                rechazarReserva: {
                                    UI: (metadatos) => {
                                        const reservaUID = metadatos.reservaUID
                                        const origen = metadatos.origen
                                        const e = metadatos.e
                                        const uiRenderizada = e.target.closest("[componente=advertenciaInmersiva]")

                                        const contenedor = uiRenderizada.querySelector("[componente=constructor]")

                                        contenedor.innerHTML = null

                                        const instanciaUID_listaReservasPendientes = metadatos.instanciaUID_listaReservasPendientes
                                        uiRenderizada.style.transition = "background 500ms"
                                        uiRenderizada.style.background = "rgba(255, 0, 0, 0.3)"

                                        const instanciaUID_opcionesReserva = uiRenderizada.getAttribute("instanciaUID")
                                        const contenedorCancelacion = document.createElement("div")
                                        contenedorCancelacion.classList.add("administracion_reservas_detallesReservas_cancelarReserva_contenedorCancelacion")
                                        const tituloCancelarReserva = document.createElement("p")
                                        tituloCancelarReserva.classList.add("detallesReservaTituloCancelarReserva")
                                        tituloCancelarReserva.innerText = "Rechazar y eliminar la reserva " + reservaUID
                                        tituloCancelarReserva.style.color = "red"
                                        contenedorCancelacion.appendChild(tituloCancelarReserva)
                                        const botonCancelarProcesoCancelacion = document.createElement("div")
                                        botonCancelarProcesoCancelacion.classList.add("detallesReservaCancelarBoton")
                                        botonCancelarProcesoCancelacion.innerText = "Cerrar y volver atras"
                                        botonCancelarProcesoCancelacion.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                        contenedorCancelacion.appendChild(botonCancelarProcesoCancelacion)
                                        const bloqueBloqueoApartamentos = document.createElement("div")
                                        bloqueBloqueoApartamentos.classList.add(
                                            "flexVertical",
                                            "gap6"
                                        )
                                        const tituloBloquoApartamentos = document.createElement("div")
                                        tituloBloquoApartamentos.classList.add(
                                            "padding10"
                                        )
                                        //  tituloBloquoApartamentos.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                        tituloBloquoApartamentos.innerText = "Rechazar la reserva elimina la reserva del sistema y libera los apartamentos, haciéndolos de nuevo disponibles para reservas. Para rechazar la reserva y eliminarla irreversiblemente junto con toda su información relacionada, debe escribir su contraseña de usuario y su cuenta debe tener autorización administrativa."
                                        bloqueBloqueoApartamentos.appendChild(tituloBloquoApartamentos)
                                        const campo = document.createElement("input")
                                        campo.classList.add("administracion_reserva_detallesReserva_cancelarReserva_eliminarReserva_campo")
                                        campo.setAttribute("campo", "clave")
                                        campo.type = "password"
                                        campo.placeholder = "Escriba la contraseña de su VitiniID"
                                        bloqueBloqueoApartamentos.appendChild(campo)
                                        contenedorCancelacion.appendChild(bloqueBloqueoApartamentos)
                                        const bloqueBotones = document.createElement("div")
                                        bloqueBotones.classList.add("detallesReservaCancelarReservabloqueBotones")
                                        const botonCancelar = document.createElement("div")
                                        botonCancelar.classList.add("administracion_reserva_detallesReserva_cancelarReserva_eliminarReserva_botonV1")
                                        botonCancelar.setAttribute("componente", "botonConfirmarCancelarReserva")
                                        botonCancelar.innerText = "Eliminar reseva irreversiblemente"
                                        botonCancelar.addEventListener("click", () => {
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.eliminarReservaIrreversiblemente.confirmar({
                                                reservaUID,
                                                instanciaUID: instanciaUID_opcionesReserva,
                                                origen
                                            })
                                        })
                                        bloqueBloqueoApartamentos.appendChild(botonCancelar)
                                        contenedorCancelacion.appendChild(bloqueBotones)
                                        contenedor.appendChild(contenedorCancelacion)
                                    },
                                },


                            },
                            categoriasGlobales: {
                                alojamiento: {
                                    arranque: async function () {
                                        const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()

                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias()
                                        document.querySelector(`[categoriaReserva=alojamiento]`).setAttribute("estadoCategoria", "actual")
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        const botonAlojamiento = document.querySelector("[categoriaReserva=alojamiento]")
                                        botonAlojamiento.style.background = "blue"
                                        botonAlojamiento.style.color = "white"
                                        const contenedorDinamico = document.querySelector("[componente=contenedorDinamico]")
                                        contenedorDinamico.innerHTML = null

                                        const marcoAlojamiento = document.createElement('div');
                                        marcoAlojamiento.setAttribute('class', 'reservaDetallesBloqueAlojamineto');
                                        marcoAlojamiento.setAttribute('componente', 'marcoAlojamiento');
                                        marcoAlojamiento.setAttribute("instanciaUID", instanciaUID)
                                        const mensajeSpinner = "Esperando a Casa Vitini..."
                                        const spinnerPorRenderizar = casaVitini.ui.componentes.spinnerSimple(mensajeSpinner)
                                        marcoAlojamiento.appendChild(spinnerPorRenderizar)
                                        contenedorDinamico.appendChild(marcoAlojamiento)

                                        const transaccion = {
                                            zona: "miCasa/misReservas/detallesReserva",
                                            reservaUID: reservaUID,
                                        }

                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                        const instanciaDestino = document.querySelector(`[componente=marcoAlojamiento][instanciaUID="${instanciaUID}"]`)
                                        if (!instanciaDestino) { }
                                        instanciaDestino.innerHTML = null

                                        if (respuestaServidor?.error) {
                                            const errorUI = document.createElement("p")
                                            errorUI.classList.add("errorCategorialGlobal")
                                            errorUI.innerText = respuestaServidor?.error
                                            instanciaDestino.appendChild(errorUI)
                                        }
                                        if (respuestaServidor?.ok) {
                                            const detallesReserva = respuestaServidor.reserva
                                            const alojamiento = detallesReserva.alojamiento
                                            const pernoctantes = detallesReserva.pernoctantes

                                            const divPernoctantesSinAlojamiento = document.createElement('div');
                                            divPernoctantesSinAlojamiento.setAttribute('class', 'resertaDetallesPernoctantesSinAlojameinto elementoOcultoInicialmente');
                                            divPernoctantesSinAlojamiento.setAttribute('componente', 'espacioPernoctantesSinAlojamiento');
                                            const tituloPernoctantesSinHabitacion = document.createElement("div")
                                            tituloPernoctantesSinHabitacion.classList.add("administracion_reservas_detallesReservas_tituloPernoctantesSinHabitacion")
                                            tituloPernoctantesSinHabitacion.innerText = "Pernoctantes asociados a esta reserva sin habitación asignada"
                                            divPernoctantesSinAlojamiento.appendChild(tituloPernoctantesSinHabitacion)
                                            const contenedorPernoctantesSinHabitacion = document.createElement("div")
                                            contenedorPernoctantesSinHabitacion.classList.add("administracion_reservas_detallesReserva_contenedorPernoctantesSinHabitacion")
                                            contenedorPernoctantesSinHabitacion.setAttribute('componente', 'contenedorPernoctantesSinHabitacion');
                                            divPernoctantesSinAlojamiento.appendChild(contenedorPernoctantesSinHabitacion)
                                            instanciaDestino.appendChild(divPernoctantesSinAlojamiento)
                                            const contenedorAlojamientoUI = document.createElement("div")
                                            contenedorAlojamientoUI.classList.add("administracionReservaDetallesBloqueContendioAlojamiento")
                                            contenedorAlojamientoUI.setAttribute("componente", "contenedorIntermedioAlojamiento")
                                            const botonAnadirApartamento = document.createElement('p');
                                            botonAnadirApartamento.setAttribute('class', 'adminitracion_reservas_DetallesReserva_botonCategoria');
                                            botonAnadirApartamento.setAttribute('componenteBoton', 'anadirApartamento');
                                            botonAnadirApartamento.setAttribute('componente', 'menuDesplegable');
                                            botonAnadirApartamento.addEventListener("click",
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.abrirMenuReservas)
                                            botonAnadirApartamento.textContent = 'Añadir apartamento';
                                            //contenedorAlojamientoUI.appendChild(botonAnadirApartamento)
                                            const espacioAlojamiento = document.createElement("div")
                                            espacioAlojamiento.classList.add("reservasDetallesBloqueAlojamiennto")
                                            espacioAlojamiento.setAttribute("componente", "espacioAlojamiento")
                                            //instanciaDestino.appendChild(contenedorAlojamientoUI)
                                            instanciaDestino.appendChild(espacioAlojamiento)
                                            for (const [apartamentoIDV, configuracionApartamento] of Object.entries(alojamiento)) {
                                                const apartamentoUID = configuracionApartamento.apartamentoUID
                                                const apartamentoUI = configuracionApartamento.apartamentoUI
                                                const configuracionesHabitacion = configuracionApartamento.habitaciones

                                                const apartamentoComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.apatamentoUI({
                                                    apartamentoIDV: apartamentoIDV,
                                                    apartamentoUID: apartamentoUID,
                                                    apartamentoUI: apartamentoUI
                                                })
                                                const apartamentoTituloComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.apartamentoTituloUI({
                                                    apartamentoIDV: apartamentoIDV,
                                                    apartamentoUID: apartamentoUID,
                                                    apartamentoUI: apartamentoUI
                                                })
                                                apartamentoComponenteUI.appendChild(apartamentoTituloComponenteUI)
                                                delete configuracionApartamento.uid
                                                for (const [habitacionIDV, configuracionHabitacion] of Object.entries(configuracionesHabitacion)) {

                                                    const habitacionUID = configuracionHabitacion.habitacionUID
                                                    const habitacionUI = configuracionHabitacion.habitacionUI
                                                    const camas = configuracionHabitacion.camas

                                                    const habitacionComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.habitacionUI({
                                                        habitacionIDV: habitacionIDV,
                                                        habitacionUID: habitacionUID,
                                                        apartamentoIDV: apartamentoIDV,
                                                        habitacionUI: habitacionUI,
                                                    })

                                                    const habitacionTituloComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.habitacionTituloUI({
                                                        habitacionIDV: habitacionIDV,
                                                        habitacionUID: habitacionUID,
                                                        apartamentoIDV: apartamentoIDV,
                                                        habitacionUI: habitacionUI,
                                                    })
                                                    habitacionComponenteUI.appendChild(habitacionTituloComponenteUI)

                                                    const camaComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.camas.contenedorCamasUI({
                                                        habitacionIDV: habitacionIDV,
                                                        apartamentoIDV: apartamentoIDV,
                                                        habitacionUID: habitacionUID,
                                                        camas: camas,
                                                        reservaUID: reservaUID
                                                    })
                                                    habitacionComponenteUI.appendChild(camaComponenteUI)

                                                    apartamentoComponenteUI.appendChild(habitacionComponenteUI)
                                                }
                                                espacioAlojamiento.appendChild(apartamentoComponenteUI)
                                            }

                                            for (const detallesPernoctante of pernoctantes) {
                                                const tipoPernoctante = detallesPernoctante.tipoPernoctante
                                                const nombreCompleto = detallesPernoctante.nombreCompleto
                                                const pasaporte = detallesPernoctante.pasaporte
                                                const clienteUID = detallesPernoctante?.clienteUID
                                                const habitacionUID = detallesPernoctante?.habitacionUID
                                                const pernoctanteUID = detallesPernoctante.pernoctanteUID
                                                const fechaCheckIn = detallesPernoctante.fechaCheckIn
                                                const fechaCheckOutAdelantado = detallesPernoctante.fechaCheckOutAdelantado
                                                const metadatos = {
                                                    tipoPernoctante,
                                                    clienteUID,
                                                    pernoctanteUID,
                                                    fechaCheckIn,
                                                    fechaCheckOutAdelantado,
                                                    nombreCompleto,
                                                    pasaporte
                                                }
                                                if (clienteUID) {
                                                    metadatos.estadoAlojamiento = "alojado"
                                                } else {
                                                    metadatos.estadoAlojamiento = "noAlojado"
                                                }
                                                const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(metadatos)

                                                const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(metadatos)
                                                bloquePernoctantes.appendChild(nombrePernoctante)
                                                const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(metadatos)
                                                bloquePernoctantes.appendChild(identificacionPernoctante)

                                                if (habitacionUID) {
                                                    const selectorHabitacionUID = document.querySelector(`[habitacionUID="${habitacionUID}"]`)
                                                    selectorHabitacionUID.appendChild(bloquePernoctantes)
                                                } else {
                                                    contenedorPernoctantesSinHabitacion.appendChild(bloquePernoctantes)
                                                    divPernoctantesSinAlojamiento.classList.remove("elementoOcultoInicialmente")
                                                }
                                            }
                                            contenedorDinamico.appendChild(instanciaDestino)
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.componentesUI.controlEspacioAlojamiento()
                                        }
                                    },
                                    componentesUI: {
                                        controlEspacioAlojamiento: () => {
                                            const selectorMarcoAlojameinto = document.querySelector("[componente=marcoAlojamiento]")
                                            const selectorApartamentos = document.querySelectorAll("[componente=marcoAlojamiento] [apartamentoIDV]")
                                            if (selectorApartamentos.length > 0) {
                                                document.querySelector("[componente=infoSinAlojamiento]")?.remove()
                                            } else {
                                                const infoNoAlojamiento = document.createElement("div")
                                                infoNoAlojamiento.classList.add("reservas_detalles_infoDesgloseNo")
                                                infoNoAlojamiento.setAttribute("componente", "infoSinAlojamiento")
                                                infoNoAlojamiento.innerText = "Esta reserva no contiene ningun apartamento"
                                                selectorMarcoAlojameinto.appendChild(infoNoAlojamiento)
                                            }
                                        },
                                    },
                                    habitaciones: {
                                        habitacionUI: (metadatos) => {
                                            const habitacionUI = document.createElement("div")
                                            habitacionUI.classList.add("adminitracionReservasDetallesBloqueHabitacion")
                                            habitacionUI.setAttribute("habitacionIDV", metadatos.habitacionIDV)
                                            habitacionUI.setAttribute("habitacionUID", metadatos.habitacionUID)

                                            return habitacionUI
                                        },
                                        habitacionTituloUI: function (metadatos) {
                                            const habitacionUI = metadatos.habitacionUI
                                            const habitacionTituloUI = document.createElement("div")
                                            habitacionTituloUI.classList.add("habitacionUIInerte")
                                            habitacionTituloUI.setAttribute("componente", "menuDesplegable")
                                            habitacionTituloUI.setAttribute("habitacionUI", habitacionUI)
                                            // habitacionTituloUI.addEventListener("click", (e) => {
                                            //     const habitacionUID = e.target.closest("[habitacionUID]").getAttribute("habitacionUID")
                                            //     const apartamentoUI = e.target.closest("[apartamentoUI]").getAttribute("apartamentoUI")

                                            //     casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.opcionesHabitacion({
                                            //         habitacionUID,
                                            //         habitacionUI,
                                            //         apartamentoUI

                                            //     })
                                            // })
                                            habitacionTituloUI.innerText = metadatos.habitacionUI
                                            return habitacionTituloUI
                                        },
                                        selectorCambioHabitacionUI: (pernoctanteUID) => {
                                            const selectorCambioHabitacionUI = document.createElement("div")
                                            selectorCambioHabitacionUI.classList.add("reservaDetallesCambioPernoctante")
                                            selectorCambioHabitacionUI.classList.add("parpadea")
                                            selectorCambioHabitacionUI.setAttribute("componente", "botonMoverCliente")
                                            selectorCambioHabitacionUI.innerText = "Cambiar aquí al pernoctante seleccionado"
                                            selectorCambioHabitacionUI.addEventListener("click", (e) => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.cambiarDeHabitacion.cambiarPernoctanteHabitacion(pernoctanteUID, e)
                                            })
                                            return selectorCambioHabitacionUI
                                        },
                                        propuestaEliminarHabitacionUI: (datosEliminacion) => {
                                            const opcionPernoctantes = datosEliminacion.opcionesPernoctantes
                                            const habitacionUID = datosEliminacion.habitacionUID
                                            const habitacionUI = document
                                                .querySelector(`[habitacionUID="${habitacionUID}"]`)
                                                .querySelector("[habitacionUI]")
                                                .getAttribute("habitacionUI")
                                            let mensajeUI
                                            if (opcionPernoctantes === "conservar") {
                                                mensajeUI = `¿Confirmas eliminar la ${habitacionUI} del apartamento pero conservar los pernoctantes de esta habitación en la reserva, en la zona de pernoctantes en la reserva sin alojamiento?`
                                            }
                                            if (opcionPernoctantes === "eliminar") {
                                                mensajeUI = `¿Confirmas eliminar la ${habitacionUI} del apartamento junto con los pernoctantes que contiene de la reserva?`
                                            }
                                            let botonMenajeUI
                                            if (opcionPernoctantes === "eliminar") {
                                                botonMenajeUI = `Eliminar la ${habitacionUI} del apartamento y los pernoctantes que contiene de la reserva`
                                            }
                                            if (opcionPernoctantes === "conservar") {
                                                botonMenajeUI = `Eliminar la ${habitacionUI} del apartamento pero conservar a sus pernoctantes en la reserva`
                                            }

                                            const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                            const constructor = pantallaInmersiva.querySelector("[componente=constructor]")

                                            const titulo = constructor.querySelector("[componente=titulo]")
                                            titulo.innerText = "Confirmar la elimiación"
                                            const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                            mensaje.innerText = mensajeUI

                                            const contenedorEspacio = constructor.querySelector("[componente=contenedor]")


                                            const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                            botonAceptar.innerText = botonMenajeUI
                                            botonAceptar.addEventListener("click", () => {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                const datosEliminacion = {
                                                    habitacionUID: habitacionUID,
                                                    opcionPernoctantes: opcionPernoctantes,
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.eliminarHabitacion(datosEliminacion)
                                            })

                                            const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                            botonCancelar.innerText = "Cancelar la eliminacion"

                                            document.querySelector("main").appendChild(pantallaInmersiva)


                                        },
                                        opcionesHabitacion: async (data) => {
                                            const main = document.querySelector("main")
                                            const habitacionUID = data.habitacionUID
                                            const habitacionUI = data.habitacionUI
                                            const apartamentoUI = data.apartamentoUI


                                            const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                            main.appendChild(ui)
                                            const contenedor = ui.querySelector("[componente=contenedor]")

                                            const titulo = document.createElement("div")
                                            titulo.classList.add(
                                                "titulo"
                                            )
                                            titulo.innerText = `Opciones de la ${habitacionUI} en ${apartamentoUI}`
                                            contenedor.appendChild(titulo)

                                            const opcionAddPernoctante = document.createElement("p")
                                            opcionAddPernoctante.classList.add("opcionCambioCama")
                                            opcionAddPernoctante.innerText = `Anadir pernoctante en la ${habitacionUI}`
                                            opcionAddPernoctante.addEventListener("click", () => {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctante.nuevoPernoctanteUI({
                                                    habitacionUID,
                                                    habitacionUI,
                                                    apartamentoUI,
                                                })
                                            })
                                            contenedor.appendChild(opcionAddPernoctante)
                                            const opcionEliminarHabSinPernoc = document.createElement("p")
                                            opcionEliminarHabSinPernoc.classList.add("opcionCambioCama")
                                            opcionEliminarHabSinPernoc.innerText = `Eliminar la ${habitacionUI} pero mantener los pernoctantes que contiene asignados a esta reserva`
                                            opcionEliminarHabSinPernoc.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.propuestaEliminarHabitacionUI({
                                                    opcionesPernoctantes: "conservar",
                                                    habitacionUID: habitacionUID
                                                })
                                            })
                                            contenedor.appendChild(opcionEliminarHabSinPernoc)

                                            const eliminarHabYPernoc = document.createElement("p")
                                            eliminarHabYPernoc.classList.add("opcionCambioCama")
                                            eliminarHabYPernoc.innerText = `Eliminar la ${habitacionUI} y también los pernoctantes que contiene de la reserva`
                                            eliminarHabYPernoc.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.propuestaEliminarHabitacionUI({
                                                    opcionesPernoctantes: "eliminar",
                                                    habitacionUID: habitacionUID
                                                })
                                            })
                                            contenedor.appendChild(eliminarHabYPernoc)

                                            const botonCancelar = document.createElement("div")
                                            botonCancelar.classList.add("boton")
                                            botonCancelar.setAttribute("boton", "cancelar")
                                            botonCancelar.innerText = "Cerrar y volver a la reserva"
                                            botonCancelar.addEventListener("click", () => {
                                                return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            })
                                            contenedor.appendChild(botonCancelar)
                                        },
                                        eliminarHabitacion: async (datosElimiacion) => {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const habitacionUID = datosElimiacion.habitacionUID
                                            const opcionPernoctantes = datosElimiacion.opcionPernoctantes
                                            const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                            const opcionesPantallaDeCarga = {
                                                instanciaUID: instanciaUIDPantallaDeCarga,
                                                mensaje: "Eliminando habitación..."
                                            }
                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                            const pantallaDeCargaRenderizada = document
                                                .querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/alojamiento/eliminarHabitacionReserva",
                                                reservaUID: String(reservaUID),
                                                habitacionUID: String(habitacionUID),
                                                pernoctantes: opcionPernoctantes
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            pantallaDeCargaRenderizada?.remove()
                                            if (respuestaServidor?.error) {
                                                if (!pantallaDeCargaRenderizada) {

                                                }
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                if (opcionPernoctantes === "eliminar") {
                                                    document.querySelector(`[habitacionUID="${habitacionUID}"]`)?.remove()
                                                }
                                                if (opcionPernoctantes === "conservar") {
                                                    const selectorPernoctantesHabitacion = document
                                                        .querySelectorAll(`[habitacionUID="${habitacionUID}"] [tipoCliente]`)
                                                    selectorPernoctantesHabitacion.forEach((pernoctanteSeleccionado) => {
                                                        const nombreCompleto = pernoctanteSeleccionado.querySelector("[componente=nombreCompleto]").innerText
                                                        const pasaporte = pernoctanteSeleccionado.querySelector("[componente=pasaporte]").innerText
                                                        const tipoCliente = pernoctanteSeleccionado.getAttribute("tipoCliente")
                                                        const pernoctanteUID = pernoctanteSeleccionado.getAttribute("pernoctanteUID")
                                                        const clienteUID = pernoctanteSeleccionado.getAttribute("clienteUID")
                                                        const fechaCheckIn = pernoctanteSeleccionado.getAttribute("fechaCheckIn")
                                                        const fechaCheckOut = pernoctanteSeleccionado.getAttribute("fechaCheckOut")
                                                        const datosPernoctante = {
                                                            tipoPernoctante: tipoCliente,
                                                            clienteUID: clienteUID,
                                                            pernoctanteUID: pernoctanteUID,
                                                            estadoAlojamiento: "noAlojado",
                                                            fechaCheckIn: fechaCheckIn,
                                                            fechaCheckOutAdelantado: fechaCheckOut
                                                        }
                                                        const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(datosPernoctante)
                                                        const datosNombre = {
                                                            nombreCompleto: nombreCompleto,
                                                        }
                                                        const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(datosNombre)
                                                        bloquePernoctantes.appendChild(nombrePernoctante)
                                                        const datosPasaporte = {
                                                            pasaporte: pasaporte,
                                                        }
                                                        const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(datosPasaporte)
                                                        bloquePernoctantes.appendChild(identificacionPernoctante)
                                                        if (document.querySelector("[reservaUID]").getAttribute("reservaUID") === reservaUID) {
                                                            const zonaDestino = document.querySelector(`[componente=contenedorPernoctantesSinHabitacion]`)
                                                            zonaDestino.appendChild(bloquePernoctantes)
                                                        }
                                                    })
                                                    document.querySelector(`[habitacionUID="${habitacionUID}"]`)?.remove()
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.controlEspacioPernoctantesSinAlojamiento()
                                            }
                                        },

                                    },
                                    apartamentos: {
                                        apatamentoUI: (metadatos) => {
                                            const apartamento = document.createElement("div")
                                            apartamento.classList.add("adminitracionReservasDetallesBloqueApartamento")
                                            apartamento.setAttribute("apartamentoIDV", metadatos.apartamentoIDV)
                                            apartamento.setAttribute("apartamentoUID", metadatos.apartamentoUID)
                                            apartamento.setAttribute("apartamentoUI", metadatos.apartamentoUI)
                                            return apartamento
                                        },
                                        apartamentoTituloUI: (metadatos) => {
                                            const apartamentoTitulo = document.createElement("div")
                                            apartamentoTitulo.classList.add("apartamentoTituloUIInerte")
                                            apartamentoTitulo.setAttribute("componente", "menuDesplegable")
                                            apartamentoTitulo.innerText = metadatos.apartamentoUI
                                            //  apartamentoTitulo.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.opcionesApartamento)
                                            return apartamentoTitulo
                                        },
                                        propuestaEliminarApartamentoUI: (datosElimiacion) => {
                                            // hacer propesta de eliminar apartamento
                                            const apartamentoUID = datosElimiacion.apartamentoUID
                                            const apartamentoUI = datosElimiacion.apartamentoUI
                                            const tipoBloqueo = datosElimiacion.tipoBloqueo
                                            let mensajeUI
                                            if (tipoBloqueo === "sinBloqueo") {
                                                mensajeUI = `¿Confirmas eliminar el ${apartamentoUI} y liberarlo para que esté disponible para reservar públicamente? Los pernoctantes de este apartamento no se eliminarán de la reserva`
                                            }
                                            if (tipoBloqueo === "permanente") {
                                                mensajeUI = `¿Confirmas eliminar el ${apartamentoUI} y bloquearlo indefinidamente? (Hay que desbloquearlo manualmente) Los pernoctantes de este apartamento no se eliminarán de la reserva`
                                            }
                                            if (tipoBloqueo === "rangoTemporal") {
                                                mensajeUI = `¿Confirmas eliminar el ${apartamentoUI} y bloquearlo durante el mismo rango de fechas que esta reserva? Los pernoctantes de este apartamento no se eliminarán de la reserva`
                                            }
                                            let botonMenajeUI
                                            if (tipoBloqueo === "permanente") {
                                                botonMenajeUI = `Eliminar el ${apartamentoUI} de la reserva y bloquearlo indefinidamente`
                                            }
                                            if (tipoBloqueo === "sinBloqueo") {
                                                botonMenajeUI = `Eliminar la ${apartamentoUI} de la reserva y liberarlo para que se pueda reservas`
                                            }
                                            if (tipoBloqueo === "rangoTemporal") {
                                                botonMenajeUI = `Eliminar la ${apartamentoUI} de la reserva y bloquearlo durante el mismo rango que la reserva`
                                            }



                                            const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                            const constructor = pantallaInmersiva.querySelector("[componente=constructor]")

                                            const titulo = constructor.querySelector("[componente=titulo]")
                                            titulo.innerText = "Confirmar la elimiación"
                                            const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                            mensaje.innerText = mensajeUI

                                            const contenedorEspacio = constructor.querySelector("[componente=contenedor]")

                                            const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                            botonAceptar.innerText = botonMenajeUI
                                            botonAceptar.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.eliminarApartamento({
                                                    apartamentoUID: apartamentoUID,
                                                    tipoBloqueo: tipoBloqueo,
                                                })
                                            })
                                            const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                            botonCancelar.innerText = "Cancelar la eliminacion"

                                            document.querySelector("main").appendChild(pantallaInmersiva)

                                        },
                                        abrirMenuReservas: async () => {
                                            const main = document.querySelector("main")

                                            const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                            const instanciaUID = ui.getAttribute("instanciaUID")
                                            const contenedor = ui.querySelector("[componente=contenedor]")
                                            main.appendChild(ui)

                                            const spinner = casaVitini.ui.componentes.spinnerSimple()
                                            contenedor.appendChild(spinner)

                                            const botonCerrar = document.createElement("div")
                                            botonCerrar.classList.add(
                                                "botonV1",
                                                "comportamientoBoton"
                                            )
                                            botonCerrar.innerText = "Cerrar y volver"
                                            botonCerrar.addEventListener("click", () => {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            })
                                            contenedor.appendChild(botonCerrar)


                                            const fechaEntrada = document.querySelector("[calendario=entrada]").getAttribute("memoriaVolatil")
                                            const fechaSalida = document.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")
                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/alojamiento/apartamentosDisponiblesParaAnadirAReserva",
                                                fechaEntrada: fechaEntrada,
                                                fechaSalida: fechaSalida
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            contenedor.innerHTML = null

                                            const botonCerrar1 = document.createElement("div")
                                            botonCerrar1.classList.add(
                                                "botonV1",
                                                "comportamientoBoton"
                                            )
                                            botonCerrar1.innerText = "Cerrar y volver"
                                            botonCerrar1.addEventListener("click", () => {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            })
                                            contenedor.appendChild(botonCerrar1)

                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                const apartamentosDisponibles = respuestaServidor?.ok.apartamentosDisponibles
                                                const apartamentosNoDisponibles = respuestaServidor?.ok.apartamentosNoDisponibles
                                                if (apartamentosDisponibles.length > 0) {
                                                    const bloqueApartamentos = document.createElement("div")
                                                    bloqueApartamentos.classList.add("reservaDetalles_menu_apartamentosDipsonbiles")
                                                    const tituloApartamentoComponenteUIs = document.createElement("div")
                                                    tituloApartamentoComponenteUIs.classList.add("reservaDetalles_menu_titutloapartamentosDisponibles")
                                                    tituloApartamentoComponenteUIs.innerText = "Apartamentos disponibles"
                                                    bloqueApartamentos.appendChild(tituloApartamentoComponenteUIs)
                                                    for (const detallesApartamento of apartamentosDisponibles) {
                                                        const apartamentoUI = document.createElement("div")
                                                        apartamentoUI.classList.add("menuFlotanteOpcionAnadirApartamento")
                                                        apartamentoUI.innerText = detallesApartamento.apartamentoUI
                                                        apartamentoUI.addEventListener("click", (e) => {
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.anadirApartamento({

                                                                instanciaUID_contenedorUI: instanciaUID,
                                                                apartamentoIDV: detallesApartamento.apartamentoIDV
                                                            })
                                                        })
                                                        bloqueApartamentos.appendChild(apartamentoUI)
                                                    }
                                                    contenedor.appendChild(bloqueApartamentos)
                                                }
                                                if (apartamentosNoDisponibles.length > 0) {
                                                    const bloqueApartamentos = document.createElement("div")
                                                    bloqueApartamentos.classList.add("reservaDetalles_menu_apartamentosNoDipsonbiles")
                                                    const tituloApartamentoComponenteUIs = document.createElement("div")
                                                    tituloApartamentoComponenteUIs.classList.add("reservaDetalles_menu_titutloapartamentosDisponibles")
                                                    tituloApartamentoComponenteUIs.innerText = "Apartamentos no disponibles"
                                                    bloqueApartamentos.appendChild(tituloApartamentoComponenteUIs)
                                                    for (const detallesApartamento of apartamentosNoDisponibles) {
                                                        const apartamentoUI = document.createElement("div")
                                                        apartamentoUI.classList.add("menuFlotanteOpcionApartamentoNoDisponible")
                                                        apartamentoUI.innerText = detallesApartamento.apartamentoUI
                                                        bloqueApartamentos.appendChild(apartamentoUI)
                                                    }
                                                    contenedor.appendChild(bloqueApartamentos)
                                                }
                                            }

                                        },
                                        opcionesApartamento: async (apartamento) => {

                                            const main = document.querySelector("main")
                                            const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                            const reservaUID = main.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const instanciaUID = ui.getAttribute("instanciaUID")

                                            main.appendChild(ui)
                                            const contenedor = ui.querySelector("[componente=contenedor]")
                                            const spinner = casaVitini.ui.componentes.spinner({
                                                mensaje: "Obteninedo las opciones del apartamento..."
                                            })
                                            contenedor.appendChild(spinner)

                                            const contenedorApartmeanto = apartamento.target.closest("[apartamentoIDV]")
                                            const apartamentoIDV = contenedorApartmeanto.getAttribute("apartamentoIDV")
                                            const apartamentoUID = contenedorApartmeanto.getAttribute("apartamentoUID")
                                            const apartamentoUI = apartamento.target.innerText

                                            const respuestaServidor = await casaVitini.shell.servidor({
                                                zona: "administracion/reservas/detallesReserva/alojamiento/estadoHabitacionesApartamento",
                                                reservaUID: reservaUID,
                                                apartamentoUID: apartamentoUID
                                            })
                                            contenedor.innerHTML = null

                                            const titulo = document.createElement("div")
                                            titulo.classList.add(
                                                "titulo"
                                            )
                                            titulo.innerText = `Opciones del ${apartamentoUI}`
                                            contenedor.appendChild(titulo)

                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor.error)
                                            }


                                            const opcionesEliminacion = function (selector) {



                                                if (selector === "sinBloqueo") {
                                                    const opcion = document.createElement("p")
                                                    opcion.classList.add("opcionCambioCama")
                                                    opcion.setAttribute("componente", "menuVolatil")
                                                    opcion.innerText = `Eliminar ${apartamentoUI} y liberarlo para que este disponible para reservar`
                                                    opcion.addEventListener("click", () => {
                                                        casaVitini.shell.controladoresUI.limpiarTodoElementoFlotante()
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.propuestaEliminarApartamentoUI({
                                                            apartamentoUID: apartamentoUID,
                                                            apartamentoUI: apartamentoUI,
                                                            tipoBloqueo: "sinBloqueo"
                                                        })
                                                    })
                                                    return opcion
                                                }
                                                if (selector === "bloqueoPermanente") {
                                                    const opcion = document.createElement("p")
                                                    opcion.classList.add("opcionCambioCama")
                                                    opcion.innerText = `Eliminar ${apartamentoUI} bloquearlo permanentemente. (Deberá desbloquearlo manualmente el bloqueo permanente)`
                                                    opcion.setAttribute("componente", "menuVolatil")
                                                    opcion.addEventListener("click", () => {
                                                        casaVitini.shell.controladoresUI.limpiarTodoElementoFlotante()
                                                        const datosPropuestaElimiacion = {
                                                            apartamentoUID: apartamentoUID,
                                                            apartamentoUI: apartamentoUI,
                                                            tipoBloqueo: "permanente"
                                                        }
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.propuestaEliminarApartamentoUI(datosPropuestaElimiacion)
                                                    })
                                                    return opcion


                                                }
                                                if (selector === "bloqueoTemporal") {
                                                    const opcion = document.createElement("p")
                                                    opcion.classList.add("opcionCambioCama")
                                                    opcion.setAttribute("componente", "menuVolatil")
                                                    opcion.innerText = `Eliminar ${apartamentoUI} y mantenerlo bloqueado en el rango de fechas de esta reserva`
                                                    opcion.addEventListener("click", () => {
                                                        casaVitini.shell.controladoresUI.limpiarTodoElementoFlotante()
                                                        const datosPropuestaElimiacion = {
                                                            apartamentoUID: apartamentoUID,
                                                            apartamentoUI: apartamentoUI,
                                                            tipoBloqueo: "rangoTemporal"
                                                        }
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.propuestaEliminarApartamentoUI(datosPropuestaElimiacion)
                                                    })
                                                    return opcion


                                                }
                                            }
                                            if (respuestaServidor?.info) {
                                                const opcionApartamento = document.createElement("p")
                                                opcionApartamento.classList.add("opcionDeInformacion")
                                                opcionApartamento.setAttribute("componente", "menuVolatil")
                                                opcionApartamento.innerText = respuestaServidor?.info
                                                contenedor.appendChild(opcionApartamento)

                                                const opcionSinBloqueo = opcionesEliminacion("sinBloqueo")
                                                contenedor.appendChild(opcionSinBloqueo)

                                            }
                                            if (respuestaServidor?.ok) {

                                                const habitacionesApartamento = respuestaServidor?.ok
                                                if (habitacionesApartamento.length === 0) {
                                                    const opcionApartamento = document.createElement("p")
                                                    opcionApartamento.classList.add("opcionDeInformacion")
                                                    opcionApartamento.setAttribute("componente", "menuVolatil")
                                                    opcionApartamento.innerText = `Este apartamento tiene ya todas las habitaciones implementadas`
                                                    contenedor.appendChild(opcionApartamento)
                                                }
                                                if (habitacionesApartamento.length > 0) {
                                                    habitacionesApartamento.forEach((habitacion) => {
                                                        const opcionApartamento = document.createElement("p")
                                                        opcionApartamento.classList.add("opcionCambioCama")
                                                        opcionApartamento.setAttribute("componente", "menuVolatil")
                                                        opcionApartamento.innerText = `Anadir ${habitacion.habitacionUI}`
                                                        opcionApartamento.addEventListener("click", async () => {

                                                            const instanciaUID_pantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()

                                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta({
                                                                instanciaUID: instanciaUID_pantallaDeCarga,
                                                                mensaje: "Eliminando habitación..."
                                                            })








                                                            const transaccion = {
                                                                zona: "administracion/reservas/detallesReserva/alojamiento/anadirHabitacionAlApartamentoEnReserva",
                                                                reservaUID: String(reservaUID),
                                                                apartamentoUID: String(apartamentoUID),
                                                                habitacionIDV: habitacion.habitacionIDV
                                                            }
                                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_pantallaDeCarga}"]`)
                                                            if (!pantallaDeCargaRenderizada) {
                                                                return
                                                            }
                                                            pantallaDeCargaRenderizada?.remove()


                                                            if (respuestaServidor?.error) {
                                                                return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                            }
                                                            if (respuestaServidor?.ok) {
                                                                const uiContenedor = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                                if (!uiContenedor) {
                                                                    return
                                                                }
                                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()

                                                                const bloqueHabitacionUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.habitacionUI({
                                                                    habitacionIDV: habitacion.habitacionIDV,
                                                                    habitacionUID: respuestaServidor?.nuevoUID,
                                                                    apartamentoIDV: apartamentoIDV
                                                                })

                                                                const nombreHabitacionUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.habitacionTituloUI({
                                                                    habitacionIDV: habitacion.habitacionIDV,
                                                                    habitacionUID: respuestaServidor?.nuevoUID,
                                                                    apartamentoIDV: apartamentoIDV,
                                                                    habitacionUI: habitacion.habitacionUI,

                                                                })
                                                                bloqueHabitacionUI.appendChild(nombreHabitacionUI)

                                                                const camaComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.camas.contenedorCamasUI({
                                                                    habitacionIDV: habitacion.habitacionIDV,
                                                                    apartamentoIDV: apartamentoIDV,
                                                                    habitacionUID: respuestaServidor?.nuevoUID,
                                                                    camas: {
                                                                        compartida: {
                                                                            camaUI: "Sin cama asignada"
                                                                        },
                                                                        fisicas: []
                                                                    },
                                                                    reservaUID: reservaUID
                                                                })
                                                                bloqueHabitacionUI.appendChild(camaComponenteUI)


                                                                document.querySelector(`[apartamentoUID="${apartamentoUID}"]`).appendChild(bloqueHabitacionUI)
                                                            }
                                                        })
                                                        contenedor.appendChild(opcionApartamento)
                                                    })
                                                }
                                                const opcionSinBloqueo = opcionesEliminacion("sinBloqueo")
                                                contenedor.appendChild(opcionSinBloqueo)
                                                const opcionbloqueoTemporal = opcionesEliminacion("bloqueoTemporal")
                                                contenedor.appendChild(opcionbloqueoTemporal)
                                                const opcionbloqueoPermanente = opcionesEliminacion("bloqueoPermanente")
                                                contenedor.appendChild(opcionbloqueoPermanente)
                                            }


                                            const botonCancelar = document.createElement("div")
                                            botonCancelar.classList.add("boton")
                                            botonCancelar.setAttribute("boton", "cancelar")
                                            botonCancelar.innerText = "Cerrar y volver a la reserva"
                                            botonCancelar.addEventListener("click", () => {
                                                return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            })
                                            contenedor.appendChild(botonCancelar)
                                        },
                                        anadirApartamento: async (data) => {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const apartamentoIDV = data.apartamentoIDV
                                            const instanciaUI_conteneodrUI = data.instanciaUID_contenedorUI
                                            const instanciaUID_pantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()

                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta({
                                                instanciaUID: instanciaUID_pantallaDeCarga,
                                                mensaje: "Eliminando habitación..."
                                            })


                                            const respuestaServidor = await casaVitini.shell.servidor({
                                                zona: "administracion/reservas/detallesReserva/alojamiento/anadirApartamentoReserva",
                                                reservaUID: String(reservaUID),
                                                apartamentoIDV: apartamentoIDV
                                            })
                                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_pantallaDeCarga}"]`)
                                            if (!pantallaDeCargaRenderizada) {
                                                return
                                            }
                                            pantallaDeCargaRenderizada?.remove()

                                            if (respuestaServidor?.error) {
                                                return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {

                                                const uiContenedor = document.querySelector(`[instanciaUID="${instanciaUI_conteneodrUI}"]`)
                                                if (!uiContenedor) {
                                                    return
                                                }

                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()

                                                const apartamentoComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.apatamentoUI({
                                                    apartamentoIDV: apartamentoIDV,
                                                    apartamentoUID: respuestaServidor?.nuevoUID,
                                                    apartamentoUI: respuestaServidor?.apartamentoUI
                                                })

                                                const tituloApartamentoComponenteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.apartamentos.apartamentoTituloUI({
                                                    apartamentoUI: respuestaServidor?.apartamentoUI
                                                })
                                                apartamentoComponenteUI.appendChild(tituloApartamentoComponenteUI)
                                                // const selectorEspacioAlojamiento = document.querySelector("[componente=contenedorIntermedioAlojamiento]")
                                                // if (!selectorEspacioAlojamiento) {
                                                //     const selectorMarcoAlojameinto = document.querySelector("[componente=marcoAlojamiento]")
                                                //     selectorMarcoAlojameinto.innerHTML = null
                                                //     const contenedorAlojamientoUI = document.createElement("div")
                                                //     contenedorAlojamientoUI.classList.add("administracionReservaDetallesBloqueContendioAlojamiento")
                                                //     contenedorAlojamientoUI.setAttribute("componente", "contenedorIntermedioAlojamiento")
                                                //     const espacioAlojamiento = document.createElement("div")
                                                //     espacioAlojamiento.classList.add("reservasDetallesBloqueAlojamiennto")
                                                //     espacioAlojamiento.setAttribute("componente", "espacioAlojamiento")
                                                //     contenedorAlojamientoUI.appendChild(espacioAlojamiento)
                                                //     selectorMarcoAlojameinto.appendChild(contenedorAlojamientoUI)
                                                // }
                                                document.querySelector("[componente=espacioAlojamiento]").appendChild(apartamentoComponenteUI)
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.componentesUI.controlEspacioAlojamiento()
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.calcularPrecioReserva()
                                            }
                                        },
                                        eliminarApartamento: async (metadatos) => {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const tipoBloqueo = metadatos.tipoBloqueo
                                            const apartamentoUID = metadatos.apartamentoUID
                                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                            const opcionesPantallaDeCarga = {
                                                instanciaUID: instanciaUID,
                                                mensaje: "Eliminando habitación..."
                                            }
                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)

                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/alojamiento/eliminarApartamentoReserva",
                                                reservaUID: reservaUID,
                                                apartamentoUID: apartamentoUID,
                                                tipoBloqueo: tipoBloqueo
                                            }

                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            const pantallaDeCargaRenderizada = document
                                                .querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUID}"]`)
                                            pantallaDeCargaRenderizada?.remove()
                                            if (!pantallaDeCargaRenderizada) {
                                                return
                                            }
                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                const selectorPernoctantesHabitacion = document.querySelectorAll(`[apartamentoUID="${apartamentoUID}"] [pernoctanteUID]`)
                                                selectorPernoctantesHabitacion.forEach((pernoctanteSeleccionado) => {
                                                    const nombreCompleto = pernoctanteSeleccionado.querySelector("[componente=nombreCompleto]").innerText
                                                    const pasaporte = pernoctanteSeleccionado.querySelector("[componente=pasaporte]").innerText
                                                    const tipoCliente = pernoctanteSeleccionado.getAttribute("tipoCliente")
                                                    const pernoctanteUID = pernoctanteSeleccionado.getAttribute("pernoctanteUID")
                                                    const clienteUID = pernoctanteSeleccionado.getAttribute("clienteUID")
                                                    const fechaCheckIn = pernoctanteSeleccionado.getAttribute("fechaCheckIn")
                                                    const fechaCheckOut = pernoctanteSeleccionado.getAttribute("fechaCheckOut")

                                                    const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI({
                                                        tipoPernoctante: tipoCliente,
                                                        clienteUID: clienteUID,
                                                        pernoctanteUID: pernoctanteUID,
                                                        estadoAlojamiento: "noAlojado",
                                                        fechaCheckIn: fechaCheckIn,
                                                        fechaCheckOutAdelantado: fechaCheckOut
                                                    })

                                                    const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI({
                                                        nombreCompleto: nombreCompleto,
                                                    })
                                                    bloquePernoctantes.appendChild(nombrePernoctante)

                                                    const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI({
                                                        pasaporte: pasaporte,
                                                    })
                                                    bloquePernoctantes.appendChild(identificacionPernoctante)
                                                    const zonaDestino = document.querySelector(`[componente=contenedorPernoctantesSinHabitacion]`)
                                                    zonaDestino.appendChild(bloquePernoctantes)
                                                    zonaDestino.classList.remove("elementoOcultoInicialmente")
                                                })
                                                casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                                document.querySelector(`[apartamentoUID="${apartamentoUID}"]`).remove()
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.componentesUI.controlEspacioAlojamiento()
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.controlEspacioPernoctantesSinAlojamiento()
                                            }
                                            if (respuestaServidor?.estadoDesgloseFinanciero === "actualizar") {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.calcularPrecioReserva()
                                            }
                                        },
                                    },
                                    camas: {
                                        contenedorCamasUI: function (data) {

                                            const camas = data.camas
                                            const habitacionIDV = data.habitacionIDV
                                            const apartamentoIDV = data.apartamentoIDV
                                            const habitacionUID = data.habitacionUID
                                            const habitacionUI = data.habitacionUI
                                            const reservaUID = data.reservaUID

                                            const camaCompartida = camas.compartida
                                            const contenedorCamasFisicas = camas.fisicas

                                            const contenedorCamasUI = document.createElement("div")
                                            contenedorCamasUI.classList.add(
                                                "flexVertical",
                                                "gap6",
                                                "padding4",

                                            )
                                            contenedorCamasUI.setAttribute("contenedor", "camas")

                                            const camaCompartidaUI = document.createElement("div")
                                            camaCompartidaUI.classList.add(
                                                "padding10",
                                                "borderRadius6",
                                                "backgroundGrey1"

                                            )
                                            camaCompartidaUI.setAttribute("contenedor", "camaCompartida")
                                            camaCompartidaUI.setAttribute("componente", "menuDesplegable")
                                            camaCompartidaUI.innerText = camaCompartida.camaUI
                                            // camaCompartidaUI.addEventListener("click", (e) => {
                                            //     casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.camas.anadirCama(e, {
                                            //         apartamentoIDV,
                                            //         habitacionIDV,
                                            //         habitacionUID,
                                            //         habitacionUI
                                            //     })
                                            // })
                                            contenedorCamasUI.appendChild(camaCompartidaUI)

                                            if (contenedorCamasFisicas.length > 0) {
                                                const contenedorCamasFisicasUI = this.contenedorCamasFisicas()
                                                contenedorCamasUI.appendChild(contenedorCamasFisicasUI)

                                                contenedorCamasFisicas.forEach((camaFisica) => {
                                                    const componenteUID = camaFisica.componenteUID
                                                    const camaIDV = camaFisica.camaIDV
                                                    const camaUI = camaFisica.camaUI

                                                    const camaFisicaUI = this.camaFisicaUI({
                                                        componenteUID,
                                                        camaIDV,
                                                        reservaUID,
                                                        habitacionUID,
                                                        habitacionUI,
                                                        camaUI,
                                                    })
                                                    contenedorCamasFisicasUI.appendChild(camaFisicaUI)
                                                })
                                            }

                                            return contenedorCamasUI
                                        },
                                        camaFisicaUI: (data) => {
                                            const componenteUID = data.componenteUID
                                            const camaIDV = data.camaIDV
                                            const reservaUID = data.reservaUID
                                            const camaUI = data.camaUI
                                            const habitacionUI = data.habitacionUI
                                            const habitacionUID = data.habitacionUID



                                            const camaFisicaUI = document.createElement("div")
                                            camaFisicaUI.classList.add(
                                                "padding10",
                                                "comportamientoBoton",
                                                "borderRadius6",
                                                "backgroundGrey1"
                                            )
                                            camaFisicaUI.setAttribute("componente", "menuDesplegable")
                                            camaFisicaUI.setAttribute("camaIDV", camaIDV)
                                            camaFisicaUI.setAttribute("componenteUID", componenteUID)
                                            camaFisicaUI.innerText = camaUI
                                            camaFisicaUI.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.camas.eliminarCamaFisica.ui({
                                                    camaUI,
                                                    componenteUID,
                                                    habitacionUI,
                                                    reservaUID,
                                                    camaIDV,
                                                    habitacionUID
                                                })
                                            })
                                            return camaFisicaUI
                                        },
                                        contenedorCamasFisicas: () => {
                                            const contenedorCamasFisicasUI = document.createElement("div")
                                            contenedorCamasFisicasUI.setAttribute("contenedor", "camasFisicas")
                                            contenedorCamasFisicasUI.classList.add(
                                                "flexVertical",
                                                "gap6",
                                            )
                                            const titulo = document.createElement("div")
                                            titulo.classList.add(
                                                "padding10"
                                            )
                                            titulo.innerText = "Camas extra"
                                            contenedorCamasFisicasUI.appendChild(titulo)
                                            return contenedorCamasFisicasUI
                                        },
                                        eliminarCamaFisica: {
                                            ui: function (data) {

                                                const camaUI = data.camaUI
                                                const componenteUID = data.componenteUID
                                                const habitacionUI = data.habitacionUI
                                                const reservaUID = data.reservaUID
                                                const camaIDV = data.camaIDV
                                                const habitacionUID = data.habitacionUID

                                                const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                                const instanciaUID_pantallaInmersia = pantallaInmersiva.getAttribute("instanciaUID")
                                                const constructor = pantallaInmersiva.querySelector("[componente=constructor]")

                                                const titulo = constructor.querySelector("[componente=titulo]")
                                                titulo.innerText = `Eliminar ${camaUI}`
                                                const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                                mensaje.innerText = `Confirmar eliminar la cama fisica ${camaUI} de la habitación ${habitacionUI} de la reserva ${reservaUID}, ¿Estás de acuerdo?`

                                                const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                                botonAceptar.innerText = "Eliminar cama fisica"
                                                botonAceptar.addEventListener("click", () => {
                                                    this.confirmar({
                                                        componenteUID,
                                                        habitacionUI,
                                                        reservaUID,
                                                        camaIDV,
                                                        habitacionUID,
                                                        instanciaUID_pantallaInmersia
                                                    })
                                                })
                                                const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                                botonCancelar.innerText = "Cancelar y volver"

                                                document.querySelector("main").appendChild(pantallaInmersiva)

                                            },
                                            confirmar: async (data) => {

                                                const componenteUID = data.componenteUID
                                                const habitacionUI = data.habitacionUI
                                                const reservaUID = data.reservaUID
                                                const camaIDV = data.camaIDV
                                                const habitacionUID = data.habitacionUID

                                                const instanciaUID_pantallaInmersia = data.instanciaUID_pantallaInmersia
                                                const instanciaUID_pantallaCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                const mensaje = "Eliminado cama..."
                                                const datosPantallaSuperpuesta = {
                                                    instanciaUID: instanciaUID_pantallaCarga,
                                                    mensaje: mensaje
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/alojamiento/eliminarCamaFisicaDeHabitacion",
                                                    componenteUID: String(componenteUID),
                                                    habitacionUI: String(habitacionUI),
                                                    reservaUID: String(reservaUID)
                                                }
                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                                document.querySelector(`[instanciaUID="${instanciaUID_pantallaCarga}"]`)?.remove()

                                                const instanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_pantallaInmersia}"]`)
                                                if (!instanciaRenderizada) { return }
                                                instanciaRenderizada.remove()

                                                if (respuestaServidor?.error) {
                                                    casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    const contenedorSelectorCamas = document
                                                        .querySelector(`[reservaUID="${reservaUID}"]`)
                                                        .querySelector(`[habitacionUID="${habitacionUID}"]`)
                                                        .querySelector(`[contenedor=camasFisicas]`)

                                                    const selectorCamaObsoleta = contenedorSelectorCamas
                                                        .querySelector(`[componenteUID="${componenteUID}"]`)


                                                    selectorCamaObsoleta?.remove()

                                                    const selectorCamasFisicasRestantes = contenedorSelectorCamas
                                                        .querySelectorAll(`[componenteUID]`)

                                                    if (selectorCamasFisicasRestantes.length === 0) {
                                                        contenedorSelectorCamas?.remove()
                                                    }
                                                }
                                            }
                                        },
                                        anadirCama: async (elementoCama, data) => {
                                            const apartamentoIDV = data.apartamentoIDV
                                            const habitacionIDV = data.habitacionIDV
                                            const habitacionUID = data.habitacionUID
                                            const habitacionUI = data.habitacionUI

                                            const main = document.querySelector("main")
                                            const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                            const reservaUID = main.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const instanciaUID = ui.getAttribute("instanciaUID")

                                            main.appendChild(ui)
                                            const contenedor = ui.querySelector("[componente=contenedor]")
                                            const spinner = casaVitini.ui.componentes.spinner({
                                                mensaje: "Obteniendo camas del apartmento..."
                                            })
                                            contenedor.appendChild(spinner)


                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/alojamiento/listarTipoCamasHabitacion",
                                                apartamentoIDV: apartamentoIDV,
                                                habitacionIDV: habitacionIDV
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                            contenedor.innerHTML = null
                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }

                                            if (respuestaServidor.ok) {
                                                const contenedorCamasCompartidas = document.createElement("div")
                                                contenedorCamasCompartidas.classList.add(
                                                    "flexVertical",
                                                    "gap6",
                                                    "padding6"
                                                )
                                                contenedor.appendChild(contenedorCamasCompartidas)

                                                const tituloCamasCompartidas = document.createElement("div")
                                                tituloCamasCompartidas.classList.add(
                                                    "padding6"
                                                )
                                                tituloCamasCompartidas.innerText = "Camas compartidas"
                                                contenedorCamasCompartidas.appendChild(tituloCamasCompartidas)

                                                respuestaServidor.listaCamasDisponiblesPorHabitacion.forEach(cama => {
                                                    const camaIDV = cama.camaIDV
                                                    const camaUI = cama.camaUI
                                                    const tipoCama = document.createElement("p")
                                                    tipoCama.classList.add("opcionCambioCama")
                                                    tipoCama.setAttribute("componente", "opcionesCama")
                                                    tipoCama.setAttribute("camaIDV", camaIDV)
                                                    tipoCama.innerText = camaUI

                                                    tipoCama.addEventListener("click", async () => {
                                                        const instanciaUID_alojamientoRenderizado = document.querySelector("[componente=marcoAlojamiento]").getAttribute("instanciaUID")
                                                        const transaccion = {
                                                            zona: "administracion/reservas/detallesReserva/alojamiento/gestionarCamasDeHabitacion",
                                                            reservaUID,
                                                            habitacionUID: String(habitacionUID),
                                                            nuevaCamaIDV: camaIDV,
                                                            tipoIDV: "compartida"
                                                        }
                                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()

                                                        if (respuestaServidor?.error) {
                                                            casaVitini.shell.controladoresUI.limpiarTodoElementoFlotante()
                                                            casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {

                                                            const nuevoUID = respuestaServidor?.nuevoUID
                                                            const selectorTituloCama = document.querySelector(`[habitacionUID="${habitacionUID}"] [contenedor=camas] [contenedor=camaCompartida]`)
                                                            selectorTituloCama.innerText = camaUI
                                                            selectorTituloCama.setAttribute("camaIDV", camaIDV)
                                                            if (nuevoUID) {
                                                                selectorTituloCama.setAttribute("camaUID", nuevoUID)
                                                            }
                                                        }
                                                    })
                                                    contenedorCamasCompartidas.appendChild(tipoCama)
                                                })

                                                if (respuestaServidor.listaCamasFisicas.length > 0) {
                                                    const contenedorCamasFisicas = document.createElement("div")
                                                    contenedorCamasFisicas.classList.add(
                                                        "flexVertical",
                                                        "gap6",
                                                        "padding6"
                                                    )
                                                    contenedor.appendChild(contenedorCamasFisicas)

                                                    const tituloCamasFisicas = document.createElement("div")
                                                    tituloCamasFisicas.classList.add(
                                                        "padding6"
                                                    )
                                                    tituloCamasFisicas.innerText = "Camas físicas"
                                                    contenedorCamasFisicas.appendChild(tituloCamasFisicas)
                                                    respuestaServidor.listaCamasFisicas.forEach(cama => {
                                                        const camaIDV = cama.camaIDV
                                                        const camaUI = cama.camaUI
                                                        const tipoCama = document.createElement("p")
                                                        tipoCama.classList.add("opcionCambioCama")
                                                        tipoCama.setAttribute("componente", "opcionesCama")
                                                        tipoCama.setAttribute("camaIDV", camaIDV)
                                                        tipoCama.innerText = camaUI
                                                        tipoCama.addEventListener("click", async () => {
                                                            const transaccion = {
                                                                zona: "administracion/reservas/detallesReserva/alojamiento/gestionarCamasDeHabitacion",
                                                                reservaUID,
                                                                habitacionUID: String(habitacionUID),
                                                                nuevaCamaIDV: String(camaIDV),
                                                                tipoIDV: "fisica"
                                                            }
                                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()


                                                            if (respuestaServidor?.error) {
                                                                casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                            }
                                                            if (respuestaServidor?.ok) {
                                                                const camaIDV = respuestaServidor.camaIDV
                                                                const componenteUID = respuestaServidor.componenteUID
                                                                const camaUI = respuestaServidor.camaUI


                                                                const selectorContenedorCamas = document.querySelector(`[habitacionUID="${habitacionUID}"] [contenedor=camas]`)
                                                                if (!selectorContenedorCamas) {
                                                                    return
                                                                }

                                                                const selectorContenedorCamasFisicasRenderizados = selectorContenedorCamas.querySelector("[contenedor=camasFisicas]")
                                                                if (!selectorContenedorCamasFisicasRenderizados) {
                                                                    const contenedorCamasFisicasUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.camas.contenedorCamasFisicas()
                                                                    selectorContenedorCamas.appendChild(contenedorCamasFisicasUI)
                                                                }

                                                                const contenedorCamasFisicas_renderizado = selectorContenedorCamas.querySelector("[contenedor=camasFisicas]")
                                                                const camaFisicaUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.camas.camaFisicaUI({
                                                                    componenteUID: componenteUID,
                                                                    camaIDV: camaIDV,
                                                                    reservaUID: reservaUID,
                                                                    camaUI: camaUI,
                                                                    habitacionUI: habitacionUI,
                                                                    habitacionUID: habitacionUID
                                                                })
                                                                contenedorCamasFisicas_renderizado.appendChild(camaFisicaUI)
                                                            }
                                                        })
                                                        contenedorCamasFisicas.appendChild(tipoCama)
                                                    })
                                                }


                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("boton")
                                                botonCancelar.setAttribute("boton", "cancelar")
                                                botonCancelar.innerText = "Cerrar y volver a la reserva"
                                                botonCancelar.addEventListener("click", () => {
                                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                })
                                                contenedor.appendChild(botonCancelar)
                                            }

                                        },
                                    },
                                    pernoctantes: {
                                        pernoctanteUI: function (metadatos) {
                                            const estadoAlojamiento = metadatos.estadoAlojamiento
                                            const tipoPernoctante = metadatos.tipoPernoctante
                                            const fechaCheckIn = metadatos.fechaCheckIn
                                            const fechaCheckOutAdelantado = metadatos.fechaCheckOutAdelantado
                                            const clienteUID = metadatos.clienteUID
                                            const pernoctanteUID = metadatos.pernoctanteUID
                                            const pernoctanteUI = document.createElement("div")
                                            if (estadoAlojamiento === "alojado") {
                                                pernoctanteUI.classList.add("pernoctanteUIInerte")
                                            }
                                            if (estadoAlojamiento === "noAlojado") {
                                                pernoctanteUI.classList.add("bloquePernoctanteNoAlojadoInerte")
                                            }
                                            pernoctanteUI.setAttribute("tipoCliente", tipoPernoctante)
                                            pernoctanteUI.setAttribute("estadoAlojamiento", estadoAlojamiento)
                                            pernoctanteUI.setAttribute("componente", "contenedorPernocanteHabitacion")
                                            // pernoctanteUI.addEventListener("click", () => {
                                            //     this.detallesPernoctante.ui({
                                            //         pernoctanteUID
                                            //     })
                                            // })
                                            pernoctanteUI.setAttribute("clienteUID", clienteUID)
                                            pernoctanteUI.setAttribute("contenedor", "pernoctante")
                                            pernoctanteUI.setAttribute("componente", "menuDesplegable")
                                            pernoctanteUI.setAttribute("pernoctanteUID", pernoctanteUID)
                                            if (tipoPernoctante === "clientePool") {
                                                const tipoPernoctanteUI = document.createElement("div")
                                                tipoPernoctanteUI.classList.add("administracion_reservas_detallesReserva_tituloPendienteComprobacion")
                                                tipoPernoctanteUI.classList.add("parpadea")
                                                tipoPernoctanteUI.setAttribute("componente", "pendienteComprobacion")
                                                tipoPernoctanteUI.innerText = "Pendiente de comprobación documental"
                                                pernoctanteUI.appendChild(tipoPernoctanteUI)
                                            }
                                            if (tipoPernoctante === "cliente") {
                                                if (!fechaCheckIn) {
                                                    const tipoPernoctanteUI = document.createElement("div")
                                                    tipoPernoctanteUI.classList.add("administracion_reservas_detallesReserva_tituloCheckIn")
                                                    //tipoPernoctanteUI.classList.add("parpadea")
                                                    tipoPernoctanteUI.setAttribute("componente", "checkInInfo")
                                                    tipoPernoctanteUI.innerText = "Pendiente de checkin"
                                                    pernoctanteUI.appendChild(tipoPernoctanteUI)
                                                } else {
                                                    pernoctanteUI.setAttribute("fechaCheckIn", fechaCheckIn)
                                                    const tipoPernoctanteUI = document.createElement("div")
                                                    tipoPernoctanteUI.classList.add("administracion_reservas_detallesReserva_tituloCheckIn")
                                                    //tipoPernoctanteUI.classList.add("parpadea")
                                                    tipoPernoctanteUI.setAttribute("componente", "checkInInfo")
                                                    tipoPernoctanteUI.innerText = "> " + fechaCheckIn
                                                    pernoctanteUI.appendChild(tipoPernoctanteUI)
                                                }
                                                if (fechaCheckOutAdelantado) {
                                                    pernoctanteUI.setAttribute("fechaCheckOut", fechaCheckOutAdelantado)
                                                    const tipoPernoctanteUI = document.createElement("div")
                                                    tipoPernoctanteUI.classList.add("administracion_reservas_detallesReserva_tituloCheckIn")
                                                    tipoPernoctanteUI.classList.add("letraRoja")
                                                    tipoPernoctanteUI.setAttribute("componente", "checkOutInfo")
                                                    tipoPernoctanteUI.innerText = "< " + fechaCheckOutAdelantado
                                                    pernoctanteUI.appendChild(tipoPernoctanteUI)
                                                } else {
                                                    const tipoPernoctanteUI = document.createElement("div")
                                                    tipoPernoctanteUI.classList.add("administracion_reservas_detallesReserva_tituloCheckIn")
                                                    tipoPernoctanteUI.classList.add("letraRoja")
                                                    tipoPernoctanteUI.style.display = "none"
                                                    tipoPernoctanteUI.setAttribute("componente", "checkOutInfo")
                                                    // tipoPernoctanteUI.innerText = "< " + fechaCheckOutAdelantado
                                                    pernoctanteUI.appendChild(tipoPernoctanteUI)
                                                }
                                            }
                                            return pernoctanteUI
                                        },
                                        pernoctanteNombreUI: (metadatos) => {
                                            const pernoctanteNombreUI = document.createElement("div")
                                            pernoctanteNombreUI.classList.add("adminitracionReservasDetallesNombrePernoctante")
                                            pernoctanteNombreUI.setAttribute("componente", "nombreCompleto")
                                            pernoctanteNombreUI.innerText = metadatos.nombreCompleto
                                            return pernoctanteNombreUI
                                        },
                                        pernoctantePasaporteUI: (metadatos) => {
                                            const pernoctantePasaporteUI = document.createElement("div")
                                            pernoctantePasaporteUI.classList.add("adminitracionReservasDetallesIdentificacionPernoctante")
                                            pernoctantePasaporteUI.setAttribute("componente", "pasaporte")
                                            pernoctantePasaporteUI.innerText = metadatos.pasaporte
                                            return pernoctantePasaporteUI
                                        },
                                        propuestaCambioPernoctanteUI: (propuesta) => {
                                            let clienteUID = propuesta.target.getAttribute("clienteUID")
                                            let clientePoolUID = propuesta.target.getAttribute("clientePoolUID")
                                            let nombreUI = propuesta.target.getAttribute("nombreUI")
                                            let primerApellidoUI = propuesta.target.getAttribute("primerApellidoUI")
                                            let segundoApellidoUI = propuesta.target.getAttribute("segundoApellidoUI")
                                            let pasaporte = propuesta.target.getAttribute("pasaporte")
                                            let bloquePropuestaCambio = document.createElement("div")
                                            bloquePropuestaCambio.classList.add("administracionReservaDetallesPropuedaCambioClientePool")
                                            bloquePropuestaCambio.setAttribute("componente", "contenedorPropuestaCliente")
                                            let tituloPropuestaCambio = document.createElement("p")
                                            tituloPropuestaCambio.classList.add("administracionReservaDetallesPropuedaCambioClientePoolTitulo")
                                            tituloPropuestaCambio.setAttribute("componente", "tituloCambioPropuesta")
                                            tituloPropuestaCambio.innerText = "¿Confirmas la propuesta seleccionada?"
                                            bloquePropuestaCambio.appendChild(tituloPropuestaCambio)
                                            let nombreCompletoPropuesta = document.createElement("p")
                                            nombreCompletoPropuesta.classList.add("administracionReservaDetallesPropuedaCambioClientePoolnombreCompletoPropuesta")
                                            nombreCompletoPropuesta.setAttribute("componente", "nombrePropuesto")
                                            nombreCompletoPropuesta.innerText = `${nombreUI} ${primerApellidoUI} ${segundoApellidoUI}`
                                            bloquePropuestaCambio.appendChild(nombreCompletoPropuesta)
                                            let pasaportePropuesta = document.createElement("p")
                                            pasaportePropuesta.classList.add("administracionReservaDetallesPropuedaCambioClientePoolpasaportePropuesta")
                                            pasaportePropuesta.innerText = pasaporte
                                            bloquePropuestaCambio.appendChild(pasaportePropuesta)
                                            let botonOpcionesCliente = document.createElement("p")
                                            botonOpcionesCliente.classList.add("administracionReservaDetallesPropuedaCambioClientePoolbotonOpcione")
                                            botonOpcionesCliente.setAttribute("componente", "botonConfirmarPropuesta")
                                            botonOpcionesCliente.setAttribute("clienteUID_", clienteUID)
                                            botonOpcionesCliente.setAttribute("clientePoolUID", clientePoolUID)
                                            botonOpcionesCliente.setAttribute("nombreUI", nombreUI)
                                            botonOpcionesCliente.setAttribute("primerApellidoUI", primerApellidoUI)
                                            botonOpcionesCliente.setAttribute("segundoApellidoUI", segundoApellidoUI)
                                            botonOpcionesCliente.setAttribute("pasaporte", pasaporte)
                                            botonOpcionesCliente.innerText = "Confirmar"
                                            botonOpcionesCliente.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.confirmarPropuestaCambioCliente)
                                            bloquePropuestaCambio.appendChild(botonOpcionesCliente)
                                            botonOpcionesCliente = document.createElement("p")
                                            botonOpcionesCliente.classList.add("administracionReservaDetallesPropuedaCambioClientePoolbotonOpcione")
                                            botonOpcionesCliente.setAttribute("componente", "botonCancelarPropuesta")
                                            botonOpcionesCliente.innerText = "Cancelar"
                                            botonOpcionesCliente.addEventListener("click", () => {
                                                let selectorContenedoresPropuesta = document.querySelectorAll("[componente=contenedorPropuestaCliente]")
                                                selectorContenedoresPropuesta.forEach((contenedorPropueda) => {
                                                    contenedorPropueda.remove()
                                                })
                                                document.querySelector("[componente=buscadorRapido]").style.removeProperty("display")
                                                let selectorComponentesOcultables = document.querySelectorAll("[componente=botonOpcionClientePool]")
                                                selectorComponentesOcultables.forEach((elementoOcultable) => {
                                                    elementoOcultable.style.removeProperty("display")
                                                })
                                            })
                                            bloquePropuestaCambio.appendChild(botonOpcionesCliente)
                                            document.querySelector("[componente=buscadorRapido]").style.display = "none"
                                            let selectorComponentesOcultables = document.querySelectorAll("[componente=botonOpcionClientePool]")
                                            selectorComponentesOcultables.forEach((elementoOcultable) => {
                                                elementoOcultable.style.display = "none"
                                            })
                                            let selectorPasaporte = document.querySelector("[componente=opcionesCliente]")
                                            let botonCerrar = document.querySelector("[componente=botonCerrarOpciones]")
                                            selectorPasaporte.insertBefore(bloquePropuestaCambio, botonCerrar);
                                        },
                                        propuestaEliminarPernoctanteUI: (datosEliminacion) => {
                                            const tipoEliminacion = datosEliminacion.tipoEliminacion
                                            const pernoctanteUID = datosEliminacion.pernoctanteUID

                                            const nombreCompleto = document
                                                .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                .querySelector("[componente=nombreCompleto]")
                                                .innerText
                                            const pasaporte = document
                                                .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                .querySelector("[componente=pasaporte]")
                                                .innerText

                                            let mensajeUI
                                            if (tipoEliminacion === "habitacion") {
                                                mensajeUI = "Confirmas la eliminación de este pernoctante de la habitación pero no de la reserva. Este pernoctante pasará a la sección de pernoctantes asociados a la reserva pero sin alojamiento asignado."
                                            }
                                            if (tipoEliminacion === "reserva") {
                                                mensajeUI = "¿Confirmas la eliminación de este pernoctante de la reserva? Si confirmas la eliminación el pernoctante será eliminado de esta reserva."
                                            }
                                            const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                            const constructor = pantallaInmersiva.querySelector("[componente=constructor]")

                                            const titulo = constructor.querySelector("[componente=titulo]")
                                            titulo.innerText = "Confirmar la elimiación"
                                            const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                            mensaje.innerText = mensajeUI

                                            const contenedorEspacio = constructor.querySelector("[componente=contenedor]")
                                            const nombreCompletoPropuesta = document.createElement("p")
                                            nombreCompletoPropuesta.classList.add("administracionReservaDetallesPropuedaCambioClientePoolnombreCompletoPropuesta")
                                            nombreCompletoPropuesta.setAttribute("componente", "nombrePropuesto")
                                            nombreCompletoPropuesta.innerText = nombreCompleto
                                            contenedorEspacio.appendChild(nombreCompletoPropuesta)
                                            const pasaportePropuesta = document.createElement("p")
                                            pasaportePropuesta.classList.add("administracionReservaDetallesPropuedaCambioClientePoolpasaportePropuesta")
                                            pasaportePropuesta.innerText = pasaporte
                                            contenedorEspacio.appendChild(pasaportePropuesta)

                                            let botonMenajeUI
                                            if (tipoEliminacion === "habitacion") {
                                                botonMenajeUI = "Eliminar de la habitación"
                                            }
                                            if (tipoEliminacion === "reserva") {
                                                botonMenajeUI = "Eliminar de la reserva"
                                            }

                                            const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                            botonAceptar.innerText = botonMenajeUI
                                            botonAceptar.addEventListener("click", () => {
                                                const metadatosTipoEliminacion = {
                                                    pernoctanteUID: pernoctanteUID,
                                                    tipoEliminacion: tipoEliminacion
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.eliminarPernoctante(metadatosTipoEliminacion)
                                            })
                                            const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                            botonCancelar.innerText = "Cancelar la eliminacion"

                                            document.querySelector("main").appendChild(pantallaInmersiva)
                                        },
                                        checkin: {
                                            UI: async (pernoctanteUID) => {

                                                const main = document.querySelector("main")
                                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                const instanciaUID = ui.getAttribute("instanciaUID")
                                                ui.setAttribute("contenedor", "checkin")
                                                main.appendChild(ui)
                                                const contenedor = ui.querySelector("[componente=contenedor]")

                                                const pernoctanteElemento = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                const nombreCompleto = pernoctanteElemento.querySelector("[componente=nombreCompleto]").innerText
                                                const pasaporte = pernoctanteElemento.querySelector("[componente=pasaporte]").innerText

                                                const tituloCancelarReserva = document.createElement("p")
                                                tituloCancelarReserva.classList.add("detallesReservaTituloCancelarReserva")
                                                tituloCancelarReserva.innerText = "Realizar checkin"
                                                contenedor.appendChild(tituloCancelarReserva)
                                                const datosTitular = {
                                                    nombreCompleto: nombreCompleto,
                                                    pasaporte: pasaporte
                                                }
                                                const pernoctanteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.detallesDelTitularUI(datosTitular)
                                                contenedor.appendChild(pernoctanteUI)
                                                const instanciaUID_Calendario = casaVitini.utilidades.codigoFechaInstancia()
                                                const metadatosCalendario = {
                                                    tipoFecha: "entrada",
                                                    almacenamientoCalendarioID: "administracionCalendario",
                                                    perfilMes: "calendario_entrada_asistido_detallesReserva_checkIn_conPasado",
                                                    calendarioIO: "entrada",
                                                    mensajeInfo: "Selecciona el día de checkin",
                                                    alturaDinamica: "10",
                                                    instanciaUID: instanciaUID_Calendario,
                                                    metodoSelectorDia: "casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.seleccionarDia"
                                                }
                                                const calendarioIncrustado = casaVitini.ui.componentes.calendario.constructorCalendarioIncrustado(metadatosCalendario)
                                                contenedor.appendChild(calendarioIncrustado)
                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("administracion_reservas_detallesReservas_check_botonConfirmar")
                                                botonCancelar.setAttribute("componente", "botonConfirmarCancelarReserva")
                                                botonCancelar.innerText = "Seleccionar una fecha del checkin"
                                                botonCancelar.addEventListener("click", (e) => {
                                                    const datosCheckIn = {
                                                        fechaCheckIn: e.target.getAttribute("fechaCheckIn"),
                                                        pernoctanteUID: pernoctanteUID,
                                                        instanciaUID: instanciaUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.confirmar(datosCheckIn)
                                                }
                                                )
                                                contenedor.appendChild(botonCancelar)
                                                const infoEliminarReserva = document.createElement("div")
                                                infoEliminarReserva.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                                infoEliminarReserva.style.marginTop = "50px"
                                                infoEliminarReserva.innerText = "También puedes eliminar irreversiblemente una reserva. La eliminación irreversible de una reserva borra la información de la reserva, así como los pagos asociados a la reserva y toda la información relacionada con la reserva. A diferencia de la cancelación, los datos dejarán de estar disponibles."
                                                const selectorCheckIn = document
                                                    .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    .getAttribute("fechaCheckIn")

                                                if (selectorCheckIn) {
                                                    contenedor.setAttribute("fechaCheckIn", selectorCheckIn)
                                                    const botonEliminarCheckIn = document.createElement("div")
                                                    botonEliminarCheckIn.classList.add("administracion_reservas_detallesReserva_cancelarReserva_botonV1")
                                                    botonEliminarCheckIn.setAttribute("componente", "botonConfirmarCancelarReserva")
                                                    botonEliminarCheckIn.innerText = "Eliminar checkin"
                                                    botonEliminarCheckIn.addEventListener("click", () => {
                                                        const eliminarCheckIN = {
                                                            pernoctanteUID,
                                                            instanciaUID
                                                        }
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.eliminar(eliminarCheckIN)
                                                    })
                                                    contenedor.appendChild(botonEliminarCheckIn)
                                                }
                                                const selectorCheckOutAdelantado = document
                                                    .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    .getAttribute("fechaCheckOut")
                                                if (selectorCheckOutAdelantado) {
                                                    contenedor.setAttribute("fechaCheckOut", selectorCheckOutAdelantado)
                                                }
                                                const botonCancelarCheckin = document.createElement("div")
                                                botonCancelarCheckin.classList.add("administracion_reservas_detallesReserva_cancelarReserva_botonV1")
                                                botonCancelarCheckin.setAttribute("componente", "botonConfirmarCancelarReserva")
                                                botonCancelarCheckin.innerText = "Cancelar checkin y volver a la reserva"
                                                botonCancelarCheckin.addEventListener("click", () => {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()

                                                })
                                                contenedor.appendChild(botonCancelarCheckin)

                                                const fechaEntrada = document.querySelector("[calendario=entrada]").getAttribute("memoriaVolatil")
                                                const fechaEntradaArray = fechaEntrada.split("-")
                                                const mesEntrada = fechaEntradaArray[1]
                                                const anoEntrada = fechaEntradaArray[0]

                                                const resolucionCalendario = {
                                                    tipo: "personalizado",
                                                    comando: "construyeObjeto",
                                                    ano: Number(anoEntrada),
                                                    mes: Number(mesEntrada)
                                                }
                                                if (selectorCheckIn) {
                                                    const fechaCheckInArray = selectorCheckIn.split("-")
                                                    const mesCheckIn = Number(fechaCheckInArray[1])
                                                    const anoCheckIn = Number(fechaCheckInArray[0])
                                                    resolucionCalendario.mes = mesCheckIn
                                                    resolucionCalendario.ano = anoCheckIn
                                                }


                                                const calendarioResuelvo = await casaVitini.ui.componentes.calendario.resolverCalendarioNuevo(resolucionCalendario)



                                                calendarioResuelvo.instanciaUID = instanciaUID_Calendario
                                                calendarioResuelvo.pernoctanteUID = pernoctanteUID
                                                await casaVitini.ui.componentes.calendario.constructorMesNuevo(calendarioResuelvo)
                                            },
                                            detallesDelTitularUI: (detallesDelTitular) => {
                                                const nombreCompleto = detallesDelTitular.nombreCompleto
                                                const pasaporte = detallesDelTitular.pasaporte
                                                const detallesRapidosDelTitular = document.createElement("div")
                                                detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_checkin_infoTitular_contenedorGlobal")
                                                // Nombre completo titular
                                                let contenedorDato = document.createElement("div")
                                                contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                let nombreDato = document.createElement("div")
                                                nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                nombreDato.innerText = "Nombre del pernoctante"
                                                contenedorDato.appendChild(nombreDato)
                                                let valorDato = document.createElement("div")
                                                valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                valorDato.classList.add("negrita")
                                                valorDato.setAttribute("componente", "nombreCompleto")
                                                valorDato.innerText = nombreCompleto
                                                contenedorDato.appendChild(valorDato)
                                                detallesRapidosDelTitular.appendChild(contenedorDato)
                                                // Pasaporte titular
                                                contenedorDato = document.createElement("div")
                                                contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                nombreDato = document.createElement("div")
                                                nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                nombreDato.innerText = "Pasaporte del pernoctante"
                                                contenedorDato.appendChild(nombreDato)
                                                valorDato = document.createElement("div")
                                                valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                valorDato.classList.add("negrita")
                                                valorDato.setAttribute("componente", "pasaporte")
                                                valorDato.innerText = pasaporte
                                                contenedorDato.appendChild(valorDato)
                                                detallesRapidosDelTitular.appendChild(contenedorDato)
                                                return detallesRapidosDelTitular
                                            },
                                            seleccionarDia: (dia) => {
                                                const diaSeleccionado = dia.target.getAttribute("dia").padStart(2, "0")
                                                const diaSeleccionadoComoElemento = dia.target;
                                                const instanciaUID_contenedorCheckIn = dia.target.closest("[contenedor=checkin][instanciaUID]")?.getAttribute("instanciaUID")
                                                const calendario = diaSeleccionadoComoElemento.closest("[componente=marcoCalendario]")
                                                const calendarioIO = calendario.getAttribute("calendarioIO")
                                                if (diaSeleccionadoComoElemento.getAttribute("estadoDia") === "seleccionado") {
                                                    diaSeleccionadoComoElemento.classList.remove("calendarioDiaSeleccionado")
                                                    if (calendarioIO === "entrada") {
                                                        const selectorBotonConfirmar = document
                                                            .querySelector(`[instanciaUID="${instanciaUID_contenedorCheckIn}"]`)
                                                            .querySelector("[componente=botonConfirmarCancelarReserva]")
                                                        selectorBotonConfirmar.innerText = "Seleccionar una fecha del checkin"
                                                        selectorBotonConfirmar.removeAttribute("style")
                                                        diaSeleccionadoComoElemento.style.background = ""
                                                        diaSeleccionadoComoElemento.style.color = ""
                                                        selectorBotonConfirmar.removeAttribute("fechaCheckIn")
                                                    } else if (calendarioIO === "salida") {
                                                        document.querySelector("[componente=bloquePropuestaNuevaFechaSalida]")?.remove()
                                                        diaSeleccionadoComoElemento.style.background = ""
                                                        diaSeleccionadoComoElemento.style.color = ""
                                                    }
                                                    diaSeleccionadoComoElemento.removeAttribute("estadoDia")
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.fechas.controladorZonaPropuestasCambioFechas()

                                                }
                                                calendario.querySelectorAll("[estadoDia=seleccionado]").forEach(diasDelCalendario => {
                                                    //  diaDisponible.removeAttribute("style")
                                                    diasDelCalendario.removeAttribute("estadoDia")
                                                    diasDelCalendario.style.background = ""
                                                    diasDelCalendario.style.color = ""
                                                });
                                                diaSeleccionadoComoElemento.style.background = "green"
                                                diaSeleccionadoComoElemento.style.color = "white"
                                                diaSeleccionadoComoElemento.setAttribute("estadoDia", "seleccionado")
                                                const anoSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("ano").padStart(4, "0")
                                                const mesSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("mes").padStart(2, "0")
                                                if (calendarioIO === "entrada") {

                                                    const selectorBotonConfirmar = document
                                                        .querySelector(`[instanciaUID="${instanciaUID_contenedorCheckIn}"]`)
                                                        .querySelector("[componente=botonConfirmarCancelarReserva]")
                                                    selectorBotonConfirmar.innerText = `Confirmar checkin para el ${diaSeleccionado}/${mesSeleccionado}/${anoSeleccionado}`
                                                    selectorBotonConfirmar.style.pointerEvents = "all"
                                                    selectorBotonConfirmar.setAttribute("fechaCheckIn", `${anoSeleccionado}-${mesSeleccionado}-${diaSeleccionado}`)
                                                    selectorBotonConfirmar.style.fontWeight = "bold"
                                                }
                                            },
                                            confirmar: async (checkIn) => {
                                                const pernoctanteUID = checkIn.pernoctanteUID
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const fechaCheckIn = checkIn.fechaCheckIn
                                                const instanciaUID = checkIn.instanciaUID
                                                const instanciaUID_localProceso = casaVitini.utilidades.codigoFechaInstancia()
                                                const metadatosPantallaCarga = {
                                                    mensaje: "Esperando al servidor...",
                                                    instanciaUID: instanciaUID_localProceso,
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                                const estadoReserva = {
                                                    zona: "administracion/reservas/detallesReserva/pernoctantes/confirmarFechaCheckIn",
                                                    pernoctanteUID: String(pernoctanteUID),
                                                    fechaCheckIn: fechaCheckIn,
                                                    reservaUID: String(reservaUID)
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(estadoReserva)

                                                const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUID_localProceso}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                                selectorPantallaDeCarga.forEach((pantalla) => {
                                                    pantalla.remove()
                                                })
                                                const selectorInstanciaRaiz = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                if (!selectorInstanciaRaiz) {

                                                }
                                                if (respuestaServidor?.error) {
                                                    casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    const selectorPernoctante = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    selectorPernoctante.setAttribute("fechaCheckIn", fechaCheckIn)
                                                    const selectorCheckInInfo = selectorPernoctante.querySelector(`[componente=checkInInfo]`)
                                                    selectorCheckInInfo.innerText = "> " + fechaCheckIn
                                                }
                                            },
                                            eliminar: async (data) => {
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const pernoctanteUID = data.pernoctanteUID
                                                const instanciaUID = data.instanciaUID
                                                const instanciaUID_localProceso = casaVitini.utilidades.codigoFechaInstancia()
                                                const metadatosPantallaCarga = {
                                                    mensaje: "Esperando al servidor...",
                                                    instanciaUID: instanciaUID_localProceso,
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                                const estadoReserva = {
                                                    zona: "administracion/reservas/detallesReserva/pernoctantes/eliminarCheckIN",
                                                    pernoctanteUID: String(pernoctanteUID),
                                                    reservaUID: String(reservaUID)
                                                }
                                                const respuestaServidor = await casaVitini.shell.servidor(estadoReserva)
                                                const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUID_localProceso}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                                selectorPantallaDeCarga.forEach((pantalla) => {
                                                    pantalla.remove()
                                                })
                                                const selectorInstanciaRaiz = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                if (!selectorInstanciaRaiz) {

                                                }
                                                if (respuestaServidor?.error) {
                                                    casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    const selectorPernoctante = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    selectorPernoctante.removeAttribute("fechaCheckIn")
                                                    const selectorCheckInInfo = selectorPernoctante.querySelector(`[componente=checkInInfo]`)
                                                    selectorCheckInInfo.innerText = "Pendiente de checkin"
                                                    selectorPernoctante.removeAttribute("fechaCheckOut")
                                                    const selectorCheckOutInfo = selectorPernoctante.querySelector(`[componente=checkOutInfo]`)
                                                    selectorCheckOutInfo.style.display = "none"
                                                    selectorCheckOutInfo.innerText = null
                                                }
                                            }
                                        },
                                        checkout: {
                                            UI: async (pernoctanteUID) => {
                                                document.body.style.overflow = 'hidden';
                                                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                                const pernoctanteElemento = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                const nombreCompleto = pernoctanteElemento.querySelector("[componente=nombreCompleto]").innerText
                                                const pasaporte = pernoctanteElemento.querySelector("[componente=pasaporte]").innerText
                                                const advertenciaInmersivaIU = document.createElement("div")
                                                advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                                advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                                advertenciaInmersivaIU.setAttribute("contenedor", "checkout")
                                                advertenciaInmersivaIU.setAttribute("instanciaUID", instanciaUID)
                                                advertenciaInmersivaIU.style.justifyContent = "flex-start"
                                                const contenedorAdvertenciaInmersiva = document.createElement("div")
                                                contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                                                const contenidoAdvertenciaInmersiva = document.createElement("div")
                                                contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                                                contenidoAdvertenciaInmersiva.setAttribute("contenedor", "contenidoAdvertenciaInmersiva")
                                                const contenedor = document.createElement("div")
                                                contenedor.classList.add("administracion_reservas_detallesReservas_check_contenedor")
                                                const tituloCancelarReserva = document.createElement("p")
                                                tituloCancelarReserva.classList.add("detallesReservaTituloCancelarReserva")
                                                tituloCancelarReserva.innerText = "Checkout adelantado"
                                                contenedor.appendChild(tituloCancelarReserva)
                                                const datosTitular = {
                                                    nombreCompleto: nombreCompleto,
                                                    pasaporte: pasaporte
                                                }
                                                const pernoctanteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkout.detallesDelTitularUI(datosTitular)
                                                contenedor.appendChild(pernoctanteUI)
                                                const instanciaUID_Calendario = casaVitini.utilidades.codigoFechaInstancia()
                                                const metadatosCalendario = {
                                                    tipoFecha: "salida",
                                                    almacenamientoCalendarioID: "administracionCalendario",
                                                    perfilMes: "calendario_salida_asistido_detallesReserva_checkOut_conPasado",
                                                    calendarioIO: "salida",
                                                    mensajeInfo: "Selecciona el día de checkout adelantado",
                                                    alturaDinamica: "10",
                                                    instanciaUID: instanciaUID_Calendario,
                                                    metodoSelectorDia: "casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkout.seleccionarDia"
                                                }
                                                const calendarioIncrustado = casaVitini.ui.componentes.calendario.constructorCalendarioIncrustado(metadatosCalendario)
                                                contenedor.appendChild(calendarioIncrustado)
                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("administracion_reservas_detallesReservas_check_botonConfirmar")
                                                botonCancelar.setAttribute("componente", "botonConfirmarCancelarReserva")
                                                botonCancelar.innerText = "Seleccionar una fecha del checkout adelantado"
                                                botonCancelar.addEventListener("click", (e) => {
                                                    const datosCheckIn = {
                                                        fechaCheckOut: e.target.getAttribute("fechaCheckOut"),
                                                        pernoctanteUID: pernoctanteUID,
                                                        instanciaUID: instanciaUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkout.confirmar(datosCheckIn)
                                                }
                                                )
                                                contenedor.appendChild(botonCancelar)
                                                const infoEliminarReserva = document.createElement("div")
                                                infoEliminarReserva.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                                infoEliminarReserva.style.marginTop = "50px"
                                                infoEliminarReserva.innerText = "También puedes eliminar irreversiblemente una reserva. La eliminación irreversible de una reserva borra la información de la reserva, así como los pagos asociados a la reserva y toda la información relacionada con la reserva. A diferencia de la cancelación los datos dejarán de estar disponibles."
                                                const selectorCheckOut = document
                                                    .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    .getAttribute("fechaCheckOut")
                                                if (selectorCheckOut) {
                                                    advertenciaInmersivaIU.setAttribute("fechaCheckOut", selectorCheckOut)
                                                    const botonEliminar = document.createElement("div")
                                                    botonEliminar.classList.add("administracion_reservas_detallesReserva_cancelarReserva_botonV1")
                                                    botonEliminar.setAttribute("componente", "botonConfirmarCancelarReserva")
                                                    botonEliminar.innerText = "Eliminar checkout adelantado"
                                                    botonEliminar.addEventListener("click", () => {
                                                        const eliminarCheckOut = {
                                                            pernoctanteUID: pernoctanteUID,
                                                            instanciaUID: instanciaUID
                                                        }
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkout.eliminar(eliminarCheckOut)
                                                    })
                                                    contenedor.appendChild(botonEliminar)
                                                }
                                                const selectorCheckIn = document
                                                    .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    .getAttribute("fechaCheckIn")
                                                if (selectorCheckIn) {
                                                    advertenciaInmersivaIU.setAttribute("fechaCheckIn", selectorCheckIn)
                                                }
                                                const botonCancelarCheckin = document.createElement("div")
                                                botonCancelarCheckin.classList.add("administracion_reservas_detallesReserva_cancelarReserva_botonV1")
                                                botonCancelarCheckin.setAttribute("componente", "botonConfirmarCancelarReserva")
                                                botonCancelarCheckin.innerText = "Cancelar checkout adelantado y volver a la reserva"
                                                botonCancelarCheckin.addEventListener("click", () => {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    //document.querySelector(`[instanciaUID="${instanciaUID}"]`).remove()
                                                })
                                                contenedor.appendChild(botonCancelarCheckin)
                                                contenidoAdvertenciaInmersiva.appendChild(contenedor)
                                                contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                                advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                                                document.querySelector("main").appendChild(advertenciaInmersivaIU)
                                                const fechaSalida = document.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")
                                                const fechaSalidaArray = fechaSalida.split("-")
                                                const mesSalida = fechaSalidaArray[1]
                                                const anoSalida = fechaSalidaArray[0]
                                                const resolucionCalendario = {
                                                    tipo: "personalizado",
                                                    comando: "construyeObjeto",
                                                    mes: Number(mesSalida),
                                                    ano: Number(anoSalida),
                                                }

                                                if (selectorCheckOut) {
                                                    const fechaCheckOutArray = selectorCheckOut.split("-")
                                                    const mesCheckOut = Number(fechaCheckOutArray[1])
                                                    const anoCheckOut = Number(fechaCheckOutArray[0])
                                                    resolucionCalendario.mes = mesCheckOut
                                                    resolucionCalendario.ano = anoCheckOut
                                                }

                                                const calendarioResuelvo = await casaVitini.ui.componentes.calendario.resolverCalendarioNuevo(resolucionCalendario)
                                                calendarioResuelvo.instanciaUID = instanciaUID_Calendario
                                                calendarioResuelvo.pernoctanteUID = pernoctanteUID
                                                await casaVitini.ui.componentes.calendario.constructorMesNuevo(calendarioResuelvo)
                                            },
                                            detallesDelTitularUI: (detallesDelTitular) => {
                                                const nombreCompleto = detallesDelTitular.nombreCompleto
                                                const pasaporte = detallesDelTitular.pasaporte
                                                const detallesRapidosDelTitular = document.createElement("div")
                                                detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_checkin_infoTitular_contenedorGlobal")
                                                // Nombre completo titular
                                                let contenedorDato = document.createElement("div")
                                                contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                let nombreDato = document.createElement("div")
                                                nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                nombreDato.innerText = "Nombre del pernoctante"
                                                contenedorDato.appendChild(nombreDato)
                                                let valorDato = document.createElement("div")
                                                valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                valorDato.classList.add("negrita")
                                                valorDato.setAttribute("componente", "nombreCompleto")
                                                valorDato.innerText = nombreCompleto
                                                contenedorDato.appendChild(valorDato)
                                                detallesRapidosDelTitular.appendChild(contenedorDato)
                                                // Pasaporte titular
                                                contenedorDato = document.createElement("div")
                                                contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                nombreDato = document.createElement("div")
                                                nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                nombreDato.innerText = "Pasaporte del pernoctante"
                                                contenedorDato.appendChild(nombreDato)
                                                valorDato = document.createElement("div")
                                                valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                valorDato.classList.add("negrita")
                                                valorDato.setAttribute("componente", "pasaporte")
                                                valorDato.innerText = pasaporte
                                                contenedorDato.appendChild(valorDato)
                                                detallesRapidosDelTitular.appendChild(contenedorDato)
                                                return detallesRapidosDelTitular
                                            },
                                            seleccionarDia: (dia) => {
                                                const diaSeleccionado = dia.target.getAttribute("dia").padStart(2, "0")
                                                const diaSeleccionadoComoElemento = dia.target;
                                                const instanciaUID_contenedorCheckOut = dia.target.closest("[contenedor=checkout][instanciaUID]")?.getAttribute("instanciaUID")
                                                const calendario = diaSeleccionadoComoElemento.closest("[componente=marcoCalendario]")
                                                const calendarioIO = calendario.getAttribute("calendarioIO")
                                                if (diaSeleccionadoComoElemento.getAttribute("estadoDia") === "seleccionado") {
                                                    diaSeleccionadoComoElemento.classList.remove("calendarioDiaSeleccionado")
                                                    if (calendarioIO === "salida") {
                                                        const selectorBotonConfirmar = document
                                                            .querySelector(`[instanciaUID="${instanciaUID_contenedorCheckOut}"]`)
                                                            .querySelector("[componente=botonConfirmarCancelarReserva]")
                                                        selectorBotonConfirmar.innerText = "Seleccionar una fecha del checkout adelantado"
                                                        selectorBotonConfirmar.removeAttribute("style")
                                                        diaSeleccionadoComoElemento.style.background = ""
                                                        diaSeleccionadoComoElemento.style.color = ""
                                                        selectorBotonConfirmar.removeAttribute("fechaCheckOut")
                                                    }
                                                    diaSeleccionadoComoElemento.removeAttribute("estadoDia")
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.fechas.controladorZonaPropuestasCambioFechas()

                                                }
                                                calendario.querySelectorAll("[estadoDia=seleccionado]").forEach(diasDelCalendario => {
                                                    //  diaDisponible.removeAttribute("style")
                                                    diasDelCalendario.removeAttribute("estadoDia")
                                                    diasDelCalendario.style.background = ""
                                                    diasDelCalendario.style.color = ""
                                                });
                                                diaSeleccionadoComoElemento.style.background = "green"
                                                diaSeleccionadoComoElemento.style.color = "white"
                                                diaSeleccionadoComoElemento.setAttribute("estadoDia", "seleccionado")
                                                const anoSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("ano").padStart(4, "0")
                                                const mesSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("mes").padStart(2, "0")
                                                const selectorPropuestaCambioFecha = document.querySelector("[componente=espacioPropuestaCambioFechaReserva]")
                                                if (calendarioIO === "salida") {
                                                    const selectorBotonConfirmar = document
                                                        .querySelector(`[instanciaUID="${instanciaUID_contenedorCheckOut}"]`)
                                                        .querySelector("[componente=botonConfirmarCancelarReserva]")
                                                    selectorBotonConfirmar.innerText = `Confirmar checkout adelantador para el ${diaSeleccionado}/${mesSeleccionado}/${anoSeleccionado}`
                                                    selectorBotonConfirmar.style.pointerEvents = "all"
                                                    selectorBotonConfirmar.setAttribute("fechaCheckOut", `${anoSeleccionado}-${mesSeleccionado}-${diaSeleccionado}`)
                                                    selectorBotonConfirmar.style.fontWeight = "bold"
                                                }
                                            },
                                            confirmar: async (checkOut) => {
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const pernoctanteUID = checkOut.pernoctanteUID
                                                const fechaCheckOut = checkOut.fechaCheckOut
                                                const instanciaUID = checkOut.instanciaUID
                                                const instanciaUID_localProceso = casaVitini.utilidades.codigoFechaInstancia()
                                                const metadatosPantallaCarga = {
                                                    mensaje: "Esperando al servidor...",
                                                    instanciaUID: instanciaUID_localProceso,
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                                const estadoReserva = {
                                                    zona: "administracion/reservas/detallesReserva/pernoctantes/confirmarFechaCheckOutAdelantado",
                                                    reservaUID: String(reservaUID),
                                                    pernoctanteUID: String(pernoctanteUID),
                                                    fechaCheckOut: fechaCheckOut
                                                }
                                                const respuestaServidor = await casaVitini.shell.servidor(estadoReserva)
                                                const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUID_localProceso}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                                selectorPantallaDeCarga.forEach((pantalla) => {
                                                    pantalla.remove()
                                                })
                                                const selectorInstanciaRaiz = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                if (!selectorInstanciaRaiz) {

                                                }
                                                if (respuestaServidor?.error) {
                                                    casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    const selectorPernoctante = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    selectorPernoctante.setAttribute("fechaCheckOut", fechaCheckOut)
                                                    const selectorCheckInInfo = selectorPernoctante.querySelector(`[componente=checkOutInfo]`)
                                                    selectorCheckInInfo.innerText = "< " + fechaCheckOut
                                                    selectorCheckInInfo.removeAttribute("style")
                                                }
                                            },
                                            eliminar: async (checkOut) => {
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const pernoctanteUID = checkOut.pernoctanteUID
                                                const instanciaUID = checkOut.instanciaUID
                                                const instanciaUID_localProceso = casaVitini.utilidades.codigoFechaInstancia()
                                                const metadatosPantallaCarga = {
                                                    mensaje: "Esperando al servidor...",
                                                    instanciaUID: instanciaUID_localProceso,
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                                const estadoReserva = {
                                                    zona: "administracion/reservas/detallesReserva/pernoctantes/eliminarCheckOutAdelantado",
                                                    pernoctanteUID: String(pernoctanteUID),
                                                    reservaUID: String(reservaUID)
                                                }
                                                const respuestaServidor = await casaVitini.shell.servidor(estadoReserva)
                                                const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUID_localProceso}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                                selectorPantallaDeCarga.forEach((pantalla) => {
                                                    pantalla.remove()
                                                })
                                                const selectorInstanciaRaiz = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                if (!selectorInstanciaRaiz) {

                                                }
                                                if (respuestaServidor?.error) {
                                                    casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    const selectorPernoctante = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    selectorPernoctante.removeAttribute("fechacheckout")
                                                    const selectorCheckInInfo = selectorPernoctante.querySelector(`[componente=checkOutInfo]`)
                                                    selectorCheckInInfo.style.display = "none"
                                                    selectorCheckInInfo.innerText = null
                                                }
                                            }
                                        },
                                        detallesPernoctante: {
                                            ui: async function (data) {
                                                const pernoctanteUID = data.pernoctanteUID
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")

                                                const main = document.querySelector("main")
                                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                main.appendChild(ui)
                                                const instanciaUID = ui.getAttribute("instanciaUID")
                                                const contenedor = ui.querySelector("[componente=contenedor]")

                                                const mensajeSpinner = "Esperando al servidor...."
                                                const spinner = casaVitini.ui.componentes.spinner(mensajeSpinner)
                                                contenedor.appendChild(spinner)

                                                const respuestaServidor = await casaVitini.shell.servidor({
                                                    zona: "administracion/reservas/detallesReserva/pernoctantes/detallesDelPernoctantePorPernoctaneUID",
                                                    reservaUID,
                                                    pernoctanteUID: String(pernoctanteUID)
                                                })
                                                const uiRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                if (!uiRenderizada) { return }

                                                contenedor.innerHTML = null
                                                contenedor.style.justifyContent = "flex-start";

                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {

                                                    const data = respuestaServidor.ok


                                                    /*
                                                    {
                                                        "ok": {
                                                            "pernoctante": {
                                                                "componenteUID": 1609,
                                                                "reservaUID": 2587,
                                                                "habitacionUID": 3090,
                                                                "clienteUID": 557,
                                                                "fechaCheckIn": null,
                                                                "fechaCheckOutAdelantado": null
                                                            },
                                                            "cliente": {
                                                                "clienteUID": 557,
                                                                "telefono": "978789''",
                                                                "mail": "",
                                                                "nombreCompleto": "dfgdfg'' undefined ",
                                                                "pasaporte": "45646'¡'",
                                                                "tipoPernoctante": "cliente"
                                                            }
                                                        }
                                                    }
                                                     */

                                                    const datosCliente = data.cliente
                                                    const datosPernoctante = data.pernoctante

                                                    const pernoctanteUID = datosPernoctante.componenteUID
                                                    const nombreCompleto = datosCliente.nombreCompleto
                                                    const pasaporte = datosCliente.pasaporte
                                                    const tipoPernoctante = datosCliente.tipoPernoctante
                                                    const fechaCheckIn = datosPernoctante.fechaCheckIn
                                                    const fechaCheckOutAdelantado = datosPernoctante.fechaCheckOutAdelantado


                                                    if (tipoPernoctante === "cliente") {
                                                        const clienteUID = data.clienteUID
                                                        const mail = data.mail
                                                        const telefono = data.telefono

                                                        this.componentes.respuestaUnificadaUI({
                                                            clienteUID,
                                                            nombreCompleto,
                                                            pernoctanteUID,
                                                            telefono,
                                                            pasaporte,
                                                            mail,
                                                            instanciaUID,
                                                            fechaCheckIn,
                                                            fechaCheckOutAdelantado,
                                                            reservaUID
                                                        })
                                                    }
                                                    if (tipoPernoctante === "clientePool") {
                                                        const metadatosTitualPool = {
                                                            nombreTitular: detallesTitular.nombreTitular,
                                                            pasaporteTitular: detallesTitular.pasaporteTitular,
                                                            mailTitular: detallesTitular.mailTitular,
                                                            telefonoTitular: detallesTitular.telefonoTitular,
                                                            instanciaUID: instanciaUID
                                                        }
                                                        this.componentes.titularPool.UI(metadatosTitualPool)
                                                    }

                                                }
                                            },
                                            anadirPernoctanteUI: (habitacion) => {
                                                const apartamentoUI = habitacion.apartamentoUI
                                                const habitacionUID = habitacion.habitacionUID
                                                const habitacionUI = habitacion.habitacionUI
                                                const origen = habitacion.origen

                                                const main = document.querySelector("main")
                                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                const reservaUID = main.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const instanciaUID = ui.getAttribute("instanciaUID")

                                                main.appendChild(ui)
                                                const contenedor = ui.querySelector("[componente=contenedor]")
                                                const spinner = casaVitini.ui.componentes.spinnerSimple()
                                                //contenedor.appendChild(spinner)

                                                const titulo = document.createElement("div")
                                                titulo.classList.add(
                                                    "titulo"
                                                )
                                                titulo.innerText = `Añador un nuevo pernoctanre en la ${habitacionUI} del ${apartamentoUI}`
                                                contenedor.appendChild(titulo)

                                                const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctante.componentes.nuevoCliente.UI({
                                                    instanciaUID,
                                                })
                                                contenedor.appendChild(nuevoClienteUI)
                                                // const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                // contenedor.appendChild(botonCerrar)

                                                const botonVolver = document.createElement("div")
                                                botonVolver.classList.add("boton")
                                                botonVolver.setAttribute("boton", "cancelar")
                                                botonVolver.innerText = `Volver a las opciones de la ${habitacionUI}`
                                                botonVolver.addEventListener("click", () => {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.opcionesHabitacion({
                                                        habitacionUID,
                                                        habitacionUI
                                                    })
                                                })
                                                contenedor.appendChild(botonVolver)

                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("boton")
                                                botonCancelar.setAttribute("boton", "cancelar")
                                                botonCancelar.innerText = "Cerrar y volver a la reserva"
                                                botonCancelar.addEventListener("click", () => {
                                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                })
                                                contenedor.appendChild(botonCancelar)

                                            },
                                            componentes: {
                                                buscadorRapido: {
                                                    UI: function (data) {
                                                        const instanciaUID = data.instanciaUID
                                                        const tipoIndividuo = data.tipoIndividuo

                                                        if (!instanciaUID) {
                                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                            const error = "El componente buscador en casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI necesita la instancia que la invoca"
                                                            return casaVitini.ui.componentes.advertenciaInmersiva(error)
                                                        }
                                                        const contenedor = document.createElement("div")
                                                        contenedor.classList.add("administracion_reservas_detallesReservas_gestionTitular_contenedorBuscador")
                                                        contenedor.setAttribute("contenedor", "buscador")
                                                        const info = document.createElement("div")
                                                        info.classList.add("adminsitracion_reservas_detallesReservas_gestionTitular_infoBuscador")
                                                        //contenedor.appendChild(info)
                                                        const campoBuscador = document.createElement("input")
                                                        campoBuscador.classList.add("administracion_reservas_detallesReserva_gestionTitular_campoBuscador")
                                                        campoBuscador.placeholder = "Buscar un cliente existente"
                                                        campoBuscador.setAttribute("instanciaUID", instanciaUID)
                                                        campoBuscador.setAttribute("campo", "buscador")
                                                        campoBuscador.addEventListener("input", (e) => {
                                                            this.listaResultadosUI({
                                                                e,
                                                                tipoIndividuo
                                                            })
                                                        })
                                                        contenedor.appendChild(campoBuscador)
                                                        return contenedor
                                                    },
                                                    listaResultadosUI: async (data) => {
                                                        const elemento = data.e
                                                        const tipoIndividuo = data.tipoIndividuo
                                                        const terminoBusqueda = elemento.target.value
                                                        const instanciaUIDContenedor = elemento.target.getAttribute("instanciaUID")
                                                        const instanciaUIDBuscador = casaVitini.utilidades.codigoFechaInstancia()
                                                        if (!instanciaUIDContenedor) {
                                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                            const error = "El componente buscador en casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.motor necesita la instancia que la invoca"
                                                            casaVitini.ui.vista.advertenciaInmersiva(error)
                                                        }
                                                        const alturaDinamica = window.scrollY + elemento.target.getBoundingClientRect().bottom;
                                                        const horizontalDinamico = elemento.target.offsetLeft;
                                                        const anchoDinamico = elemento.target.getBoundingClientRect().width;
                                                        const selectorListaResultadosBuscadorRapidoRenderiaza = document.querySelectorAll("[componente=buscadorRapidoCliente]")
                                                        selectorListaResultadosBuscadorRapidoRenderiaza.forEach((listaRenderizada) => {
                                                            listaRenderizada.remove()
                                                        })
                                                        const campoVacio = elemento.target.value.length

                                                        if (campoVacio === 0) {
                                                            clearTimeout(casaVitini.componentes.temporizador);
                                                            document.querySelector(`[instanciaUID="${instanciaUIDContenedor}"]`).querySelector(`[instanciaUIDBuscador]`)?.remove()
                                                            return
                                                        }
                                                        const listaResultados = document.createElement("div")
                                                        listaResultados.setAttribute("componente", "buscadorRapidoCliente")
                                                        listaResultados.setAttribute("instanciaUIDBuscador", instanciaUIDBuscador)
                                                        listaResultados.classList.add("administracion_reservas_detallesReservas_gestionTitular_listaBuscador")
                                                        listaResultados.style.top = (alturaDinamica + 4) + "px"
                                                        // listaResultados.style.marginLeft = (horizontalDinamico + 4) + "px"
                                                        listaResultados.style.marginLeft = "0px"
                                                        listaResultados.style.width = anchoDinamico + "px"
                                                        listaResultados.innerText = null
                                                        const info = document.createElement("p")
                                                        info.classList.add("infoBuscando")
                                                        info.innerText = "Buscando..."
                                                        listaResultados.appendChild(info)
                                                        document.addEventListener("mousedown", (e) => {
                                                            if (e.target.getAttribute("componente") === "elementoResultadosBuscadorRapido") {
                                                                e.preventDefault()
                                                            }
                                                        })
                                                        const instanciaUIDRenderizada = document.querySelector(`[instanciaUID="${instanciaUIDContenedor}"] [contenedor=buscador]`)
                                                        instanciaUIDRenderizada.appendChild(listaResultados)
                                                        clearTimeout(casaVitini.componentes.temporizador);
                                                        casaVitini.componentes.temporizador = setTimeout(() => {
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.transactor({
                                                                terminoBusqueda: terminoBusqueda,
                                                                instanciaUIDBuscador: instanciaUIDBuscador,
                                                                instanciaUIDContenedor: instanciaUIDContenedor,
                                                                tipoIndividuo
                                                            })
                                                        }, 1500);
                                                    },
                                                    transactor: async (data) => {
                                                        const instanciaUIDBuscador = data.instanciaUIDBuscador
                                                        const terminoBusqueda = data.terminoBusqueda
                                                        const instanciaUIDContenedor = data.instanciaUIDContenedor
                                                        const tipoIndividuo = data.tipoIndividuo
                                                        const transaccion = {
                                                            zona: "administracion/clientes/buscar",
                                                            tipoBusqueda: "rapido",
                                                            buscar: terminoBusqueda
                                                        }
                                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                                        const listaBuscadorRenderizada = document.querySelector(`[instanciaUIDBuscador="${instanciaUIDBuscador}"]`)
                                                        if (!listaBuscadorRenderizada) {
                                                            return
                                                        }
                                                        if (respuestaServidor?.error) {
                                                            listaBuscadorRenderizada.remove()
                                                            return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }

                                                        listaBuscadorRenderizada.innerHTML = null
                                                        const resultadosClientes = respuestaServidor?.clientes
                                                        resultadosClientes.forEach((clienteEncontrado) => {
                                                            const cliente = clienteEncontrado.uid
                                                            const nombre = clienteEncontrado.nombre
                                                            const primerApellido = clienteEncontrado.primerApellido
                                                            const segundoApellido = clienteEncontrado.segundoApellido
                                                            const pasaporte = clienteEncontrado.pasaporte
                                                            const bloqueCliente = document.createElement("div")
                                                            bloqueCliente.classList.add("administracionReservaDetallesBuscadorRapidoBloqueCliente")
                                                            bloqueCliente.setAttribute("clienteUID", cliente)
                                                            bloqueCliente.setAttribute("nombreUI", nombre)
                                                            bloqueCliente.setAttribute("primerApellidoUI", primerApellido)
                                                            bloqueCliente.setAttribute("segundoApellidoUI", segundoApellido)
                                                            bloqueCliente.setAttribute("pasaporte", pasaporte)
                                                            bloqueCliente.setAttribute("componente", "elementoResultadosBuscadorRapido")

                                                            if (tipoIndividuo === "titular") {
                                                                bloqueCliente.addEventListener("click", () => {
                                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.asociarCliente({
                                                                        clienteUID: cliente,
                                                                        instanciaUIDContenedor: instanciaUIDContenedor
                                                                    })
                                                                })
                                                            }
                                                            if (tipoIndividuo === "pernoctante") {
                                                                // bloqueCliente.addEventListener("click", () => {
                                                                //     casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.asociarCliente({
                                                                //         clienteUID: cliente,
                                                                //         instanciaUIDContenedor: instanciaUIDContenedor
                                                                //     })
                                                                // })
                                                            }

                                                            const filaNombre = document.createElement("p")
                                                            filaNombre.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaNombre")
                                                            filaNombre.innerText = `${nombre} ${primerApellido} ${segundoApellido}`
                                                            filaNombre.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                            bloqueCliente.appendChild(filaNombre)
                                                            const filaPasaporte = document.createElement("p")
                                                            filaPasaporte.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaPasaporte")
                                                            filaPasaporte.innerText = pasaporte
                                                            filaPasaporte.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                            bloqueCliente.appendChild(filaPasaporte)
                                                            listaBuscadorRenderizada.appendChild(bloqueCliente)
                                                        })
                                                    },
                                                    asociarCliente: async (metadatos) => {
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const clienteUID = metadatos.clienteUID
                                                        const instanciaUIDContenedor = metadatos.instanciaUIDContenedor
                                                        const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                        const opcionesPantallaDeCarga = {
                                                            instanciaUID: instanciaUIDPantallaDeCarga,
                                                            mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                        }
                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                        const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                        const transaccion = {
                                                            zona: "administracion/reservas/gestionTitular/asociarTitular",
                                                            clienteUID: Number(clienteUID),
                                                            reservaUID: reservaUID
                                                        }
                                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                        if (respuestaServidor?.error) {
                                                            pantallaDeCargaRenderizada?.remove()
                                                            casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {
                                                            //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                            pantallaDeCargaRenderizada?.remove()
                                                            const nuevoClienteUID = respuestaServidor.clienteUID
                                                            const nombreCompleto = respuestaServidor.nombreCompleto
                                                            const nombre = respuestaServidor.nombre
                                                            const primerApellido = respuestaServidor.primerApellido
                                                            const segundoApellido = respuestaServidor.segundoApellido
                                                            const clienteUID = respuestaServidor.clienteUID
                                                            const mail = respuestaServidor.mail
                                                            const pasaporte = respuestaServidor.pasaporte
                                                            const telefono = respuestaServidor.telefono
                                                            const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                            const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                            if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                                selectorNombreTitular.innerText = nombreCompleto
                                                                const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                                selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                                selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                            }
                                                            const metadatosRespuestaUnificada = {
                                                                clienteUID: clienteUID,
                                                                nombreCompleto: nombreCompleto,
                                                                pasaporte: pasaporte,
                                                                mail: mail,
                                                                telefono: telefono,
                                                                instanciaUID: instanciaUIDContenedor,
                                                                reservaUID: reservaUID
                                                            }
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                        }
                                                    }
                                                },
                                                nuevoCliente: {
                                                    UI: (data) => {
                                                        const instanciaUID = data.instanciaUID
                                                        const tipoIndividuo = data.tipoIndividuo
                                                        let tituloNuevoCliente
                                                        let tituloBotonCrear

                                                        if (tipoIndividuo === "pernoctante") {
                                                            tituloNuevoCliente = "Crear un nuevo cliente e insertarlo en la reserva"
                                                            tituloBotonCrear = "Crear nuevo cliente e insertarlo en la reserva como pernoctante"
                                                        } else if (tipoIndividuo === "titular") {
                                                            tituloNuevoCliente = "Crear un nuevo titular e insertarlo en la reserva"
                                                            tituloBotonCrear = "Crear cliente e insertarlo en la reserva como titular"
                                                        }

                                                        const nuevoClienteUI = document.createElement("div")
                                                        nuevoClienteUI.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI")
                                                        nuevoClienteUI.setAttribute("formulario", "nuevoCliente")
                                                        const buscadorUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI({
                                                            instanciaUID,
                                                            tipoIndividuo
                                                        })
                                                        nuevoClienteUI.appendChild(buscadorUI)
                                                        const info = document.createElement("p")
                                                        info.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_info")
                                                        info.classList.add("negrita")
                                                        info.innerText = tituloNuevoCliente
                                                        nuevoClienteUI.appendChild(info)
                                                        const campoNombre = document.createElement("input")
                                                        campoNombre.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        campoNombre.setAttribute("campo", "nombre")
                                                        campoNombre.setAttribute("formulario", "AnadirPernoctante")
                                                        campoNombre.placeholder = "Nombre (obligatiorio)"
                                                        nuevoClienteUI.appendChild(campoNombre)
                                                        const primerApellido = document.createElement("input")
                                                        primerApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        primerApellido.setAttribute("campo", "primerApellido")
                                                        primerApellido.setAttribute("formulario", "AnadirPernoctante")
                                                        primerApellido.placeholder = "Primer apellido"
                                                        nuevoClienteUI.appendChild(primerApellido)
                                                        const segundoApellido = document.createElement("input")
                                                        segundoApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        segundoApellido.setAttribute("campo", "segundoApellido")
                                                        segundoApellido.setAttribute("formulario", "AnadirPernoctante")
                                                        segundoApellido.placeholder = "Segundo apellido"
                                                        nuevoClienteUI.appendChild(segundoApellido)
                                                        const pasaporte = document.createElement("input")
                                                        pasaporte.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        pasaporte.setAttribute("campo", "pasaporte")
                                                        pasaporte.setAttribute("formulario", "AnadirPernoctante")
                                                        pasaporte.placeholder = "Pasaporte (obligatorio)"
                                                        nuevoClienteUI.appendChild(pasaporte)
                                                        const telefono = document.createElement("input")
                                                        telefono.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        telefono.setAttribute("campo", "telefono")
                                                        telefono.setAttribute("formulario", "AnadirPernoctante")
                                                        telefono.placeholder = "Teléfono"
                                                        nuevoClienteUI.appendChild(telefono)
                                                        const correoElecotronico = document.createElement("input")
                                                        correoElecotronico.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        correoElecotronico.setAttribute("campo", "correoElectronico")
                                                        correoElecotronico.setAttribute("formulario", "AnadirPernoctante")
                                                        correoElecotronico.placeholder = "Correo electrónico"
                                                        nuevoClienteUI.appendChild(correoElecotronico)
                                                        const botonGuardarNuevoCliente = document.createElement("div")
                                                        botonGuardarNuevoCliente.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_botonV1")
                                                        botonGuardarNuevoCliente.innerText = tituloBotonCrear

                                                        if (tipoIndividuo === "titular") {
                                                            botonGuardarNuevoCliente.addEventListener("click", () => {
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.transactor(instanciaUID)
                                                            })
                                                        }
                                                        if (tipoIndividuo === "pernoctante") {
                                                            botonGuardarNuevoCliente.addEventListener("click", () => {
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.anadirPernoctante(instanciaUID)
                                                            })
                                                        }


                                                        nuevoClienteUI.appendChild(botonGuardarNuevoCliente)
                                                        return nuevoClienteUI
                                                    },
                                                    transactor: async (instanciaUID) => {
                                                        const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                        const opcionesPantallaDeCarga = {
                                                            instanciaUID: instanciaUIDPantallaDeCarga,
                                                            mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                        }
                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                        const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const campos = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`).querySelectorAll("[campo]")
                                                        const metadatos = {
                                                            zona: "administracion/reservas/gestionTitular/crearTitular",
                                                            reservaUID: reservaUID
                                                        }
                                                        campos.forEach((campo) => {
                                                            const nombreCampo = campo.getAttribute("campo")
                                                            const valorCampo = campo.value
                                                            metadatos[nombreCampo] = valorCampo
                                                        })
                                                        const respuestaServidor = await casaVitini.shell.servidor(metadatos)
                                                        if (respuestaServidor?.error) {
                                                            pantallaDeCargaRenderizada?.remove()
                                                            casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {
                                                            //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                            pantallaDeCargaRenderizada?.remove()
                                                            const nuevoClienteUID = respuestaServidor.clienteUID
                                                            const nombreCompleto = respuestaServidor.nombreCompleto
                                                            const clienteUID = respuestaServidor.clienteUID
                                                            const mail = respuestaServidor.mail
                                                            const telefono = respuestaServidor.telefono
                                                            const pasaporte = respuestaServidor.pasaporte
                                                            const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                            const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                            if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                                selectorNombreTitular.innerText = nombreCompleto
                                                                const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                                selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                                selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                            }
                                                            const metadatosRespuestaUnificada = {
                                                                clienteUID: clienteUID,
                                                                nombreCompleto: nombreCompleto,
                                                                pasaporte: pasaporte,
                                                                mail: mail,
                                                                telefono: telefono,
                                                                instanciaUID: instanciaUID,
                                                                reservaUID: reservaUID
                                                            }
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                        }
                                                    }
                                                },
                                                desasociarClienteComoTitular: async (metadatos) => {
                                                    const instanciaUID = metadatos.instanciaUID
                                                    const reservaUID = metadatos.reservaUID
                                                    const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                    const opcionesPantallaDeCarga = {
                                                        instanciaUID: instanciaUIDPantallaDeCarga,
                                                        mensaje: "Desasociando cliente como titular de la reserva"
                                                    }
                                                    casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                    const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                    const metadatosPantallaDeCarga = {
                                                        zona: "administracion/reservas/gestionTitular/desasociarClienteComoTitular",
                                                        reservaUID: reservaUID
                                                    }
                                                    const respuestaServidor = await casaVitini.shell.servidor(metadatosPantallaDeCarga)
                                                    if (respuestaServidor?.error) {
                                                        pantallaDeCargaRenderizada?.remove()
                                                        casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor?.ok) {
                                                        pantallaDeCargaRenderizada?.remove()
                                                        const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                        const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                        if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                            selectorNombreTitular.innerText = "(Níngun titular asignado)"
                                                            const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                            selectorBloqueTitular.removeAttribute("tipoTitular")
                                                            selectorBloqueTitular.removeAttribute("titularUID")
                                                        }
                                                        const selectorDestinoRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [espacio=gestionTitular]`)
                                                        if (selectorDestinoRenderizado) {
                                                            selectorDestinoRenderizado.innerHTML = null
                                                            const titulo = "Añadir titular a la reserva"
                                                            const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titulo(titulo)
                                                            selectorDestinoRenderizado.appendChild(tituloUI)
                                                            const info = "Esta reserva ahora mismo no tiene ningún titular asignado. Para añadir un titular a la reserva, puedes buscar con el campo de búsqueda inferior un cliente existente para asociarlo como titular. También puedes crear un cliente nuevo rellenando el formulario para crear un cliente y añadirlo como titular a esta reserva."
                                                            const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info)
                                                            selectorDestinoRenderizado.appendChild(infoUI)
                                                            const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.UI({
                                                                instanciaUID
                                                            })
                                                            selectorDestinoRenderizado.appendChild(nuevoClienteUI)
                                                            const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                            selectorDestinoRenderizado.appendChild(botonCerrar)
                                                        }
                                                    }
                                                },
                                                detallesDelTitularUI: (detallesDelTitular) => {
                                                    const clienteUID = detallesDelTitular.clienteUID
                                                    const nombreTitular = detallesDelTitular.nombreTitular
                                                    const pasaporteTitular = detallesDelTitular.pasaporteTitular
                                                    const tipoTitular = detallesDelTitular.tipoTitular
                                                    const mailTitular = detallesDelTitular.mailTitular ? detallesDelTitular.mailTitular : "(Sin mail)"
                                                    const telefonoTitular = detallesDelTitular.telefonoTitular ? detallesDelTitular.telefonoTitular : "(Sin telefono)"
                                                    const detallesRapidosDelTitular = document.createElement("div")
                                                    detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedorGlobal")
                                                    // Nombre completo titular
                                                    let contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    let nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Nombre completo del titular"
                                                    contenedorDato.appendChild(nombreDato)
                                                    let valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = nombreTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // Pasaporte titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Pasaporte"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = pasaporteTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // telefono titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Teléfono"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = telefonoTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // mail titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "e-Mail"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = mailTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    return detallesRapidosDelTitular
                                                },
                                                detallesDelTitularPoolUI: (detallesDelTitular) => {
                                                    const nombreTitular = detallesDelTitular.nombreTitular
                                                    const pasaporteTitular = detallesDelTitular.pasaporteTitular
                                                    const tipoTitular = "Titular pool"
                                                    const mailTitular = detallesDelTitular.mailTitular ? detallesDelTitular.mailTitular : "(Sin mail)"
                                                    const telefonoTitular = detallesDelTitular.telefonoTitular ? detallesDelTitular.telefonoTitular : "(Sin telefono)"
                                                    const detallesRapidosDelTitular = document.createElement("div")
                                                    detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedorGlobal")
                                                    // Nombre completo titular
                                                    let contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    let nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Nombre completo del titular"
                                                    contenedorDato.appendChild(nombreDato)
                                                    let valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = nombreTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // Pasaporte titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Pasaporte"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = pasaporteTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // telefono titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Teléfono"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = telefonoTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // mail titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "e-Mail"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = mailTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    return detallesRapidosDelTitular
                                                },
                                                botonCerrarFormularioNuevoCliente: () => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Cerrar gestion del titular de la reserva"
                                                    boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                    boton
                                                },
                                                botonCerrar: () => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Cerrar gestion del titular de la reserva"
                                                    boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                    return boton
                                                },
                                                botonIrALaFichaDelClinete: (clienteUID) => {
                                                    const boton = document.createElement("a")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Ir a la ficha del cliente"
                                                    boton.setAttribute("href", "/administracion/clientes/" + clienteUID)
                                                    boton.setAttribute("vista", "/administracion/clientes/" + clienteUID)
                                                    boton.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                    return boton
                                                },
                                                botonCambiarDeHabitacion: (pernoctanteUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerText = "Cambiar de habitación"
                                                    boton.setAttribute("componente", "botonOpcionClientePool")
                                                    boton.addEventListener("click", () => {
                                                        document.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.cambiarDeHabitacion.ocultarSelectoresCambioHabitacion)
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.cambiarDeHabitacion.mostrasSelectorCambioPernoctanteHabitacion(pernoctanteUID)
                                                    })
                                                    return boton
                                                },
                                                botonEliminarPernoctante: (pernoctanteUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.setAttribute("componente", "botonOpcionClientePool")
                                                    boton.innerText = "Eliminar pernoctante de la habitacion y de la reserva"
                                                    boton.addEventListener("click", () => {
                                                        const datosEliminacion = {
                                                            tipoEliminacion: "reserva",
                                                            pernoctanteUID: pernoctanteUID
                                                        }
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.propuestaEliminarPernoctanteUI(datosEliminacion)
                                                    })
                                                    return boton
                                                },
                                                botonModificarCheckIn: (pernoctanteUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add(
                                                        "administracion_reservas_detallesReservas_gestionTitular_botonCerrar",
                                                        "negrita"

                                                    )
                                                    boton.setAttribute("componente", "botonOpcionClientePool")
                                                    boton.setAttribute("tipoEliminacion", "habitacion")
                                                    boton.innerText = "Modificar checkin"
                                                    boton.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.UI(pernoctanteUID)
                                                    })
                                                    return boton
                                                },
                                                botonCheckOutAdelantado: (pernoctanteUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add(
                                                        "administracion_reservas_detallesReservas_gestionTitular_botonCerrar",
                                                        "negrita"
                                                    )
                                                    boton.setAttribute("componente", "botonOpcionClientePool")
                                                    boton.setAttribute("tipoEliminacion", "habitacion")
                                                    boton.innerText = "Checkout Adelantado"
                                                    boton.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkout.UI(pernoctanteUID)
                                                    })
                                                    return boton
                                                },
                                                botonCheckIn: (pernoctanteUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add(
                                                        "administracion_reservas_detallesReservas_gestionTitular_botonCerrar",
                                                        "negrita"
                                                    )
                                                    boton.setAttribute("componente", "botonOpcionClientePool")
                                                    boton.innerText = ">>> Realizar checkin"
                                                    boton.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.UI(pernoctanteUID)
                                                    })
                                                    return boton
                                                },
                                                botonEliminarPernoctaneDeLaHabitacion: (pernoctanteUID) => {
                                                    // Eliminar pernoctane de la habitacion
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.setAttribute("componente", "botonOpcionClientePool")
                                                    boton.innerText = "Eliminar pernoctante de la habitacion"
                                                    boton.addEventListener("click", () => {
                                                        const datosEliminacion = {
                                                            tipoEliminacion: "habitacion",
                                                            pernoctanteUID: pernoctanteUID
                                                        }
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.propuestaEliminarPernoctanteUI(datosEliminacion)
                                                    })
                                                    return boton
                                                },
                                                titulo: (titulo) => {
                                                    const tituloUI = document.createElement("p")
                                                    tituloUI.classList.add("detallesReservaTituloCancelarReserva")
                                                    tituloUI.innerText = titulo
                                                    return tituloUI
                                                },
                                                infoUI: (info) => {
                                                    const infoUI = document.createElement("p")
                                                    infoUI.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                                    infoUI.innerText = info
                                                    return infoUI
                                                },
                                                botonCerrarCambiarTitular: (instanciaUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Cerrar formulario para cambiar de titular"
                                                    boton.setAttribute("boton", "cerrarCambiarTitular")
                                                    boton.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.cancelarCambiarTitular(instanciaUID)
                                                    })
                                                    return boton
                                                },
                                                cambiarTitular: (instanciaUID) => {
                                                    const selectorBotonCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cambiarTitular]`)
                                                    const selectorBotonDesasociar = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=desasociarTitular]`)
                                                    selectorBotonCambiarTitular.style.display = "none"
                                                    selectorBotonDesasociar.style.display = "none"
                                                    const selectorNuevoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`)
                                                    selectorNuevoClienteUI.removeAttribute("style")
                                                    const selectorbotonCerrarCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cerrarCambiarTitular]`)
                                                    selectorbotonCerrarCambiarTitular.removeAttribute("style")
                                                },
                                                respuestaUnificadaUI: function (data) {
                                                    const clienteUID = data.clienteUID
                                                    const nombreCompleto = data.nombreCompleto
                                                    const pasaporte = data.pasaporte
                                                    const mail = data.mail
                                                    const pernoctanteUID = data.pernoctanteUID
                                                    const telefono = data.telefon
                                                    const instanciaUID = data.instanciaUID
                                                    const fechaCheckIn = data.fechaCheckIn
                                                    const fechaCheckOutAdelantado = data.fechaCheckOutAdelantado

                                                    const reservaUID = data.reservaUID
                                                    const ui = document.querySelector(`[instanciaUID="${instanciaUID}"]`).querySelector("[componente=contenedor]")
                                                    if (ui) {
                                                        const titulo = "Detalles del pernoctante"
                                                        const tituloUI = this.titulo(titulo)
                                                        ui.appendChild(tituloUI)
                                                        const info = "Vista rápida de los detalles del pernoctante"
                                                        const infoUI = this.infoUI(info)
                                                        ui.appendChild(infoUI)

                                                        const detallesDelTitularUI = this.detallesDelTitularUI({
                                                            clienteUID: clienteUID,
                                                            nombreTitular: nombreCompleto,
                                                            pasaporteTitular: pasaporte,
                                                            tipoTitular: "titularCliente",
                                                            mail: mail,
                                                            telefonoTitular: telefono,
                                                        })
                                                        ui.appendChild(detallesDelTitularUI)


                                                        if (!fechaCheckIn) {
                                                            const botonCheckIn = this.botonCheckIn(pernoctanteUID)
                                                            ui.appendChild(botonCheckIn)
                                                        } else {
                                                            const botonModificarCheckIn = this.botonModificarCheckIn(pernoctanteUID)
                                                            ui.appendChild(botonModificarCheckIn)
                                                            const botonCheckOutAdelantado = this.botonCheckOutAdelantado(pernoctanteUID)
                                                            ui.appendChild(botonCheckOutAdelantado)
                                                        }

                                                        const botonIrALaFichaDelClinete = this.botonIrALaFichaDelClinete(clienteUID)
                                                        ui.appendChild(botonIrALaFichaDelClinete)
                                                        const botonCambiarDeHabitacion = this.botonCambiarDeHabitacion(pernoctanteUID)
                                                        ui.appendChild(botonCambiarDeHabitacion)
                                                        const botonEliminarPernoctante = this.botonEliminarPernoctante(pernoctanteUID)
                                                        ui.appendChild(botonEliminarPernoctante)
                                                        const botonEliminarPernoctaneDeLaHabitacion = this.botonEliminarPernoctaneDeLaHabitacion(pernoctanteUID)
                                                        ui.appendChild(botonEliminarPernoctaneDeLaHabitacion)

                                                        const botonCerrar = this.botonCerrar()
                                                        ui.appendChild(botonCerrar)
                                                    }
                                                },
                                                cancelarCambiarTitular: (instanciaUID) => {
                                                    const selectorBotonCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cambiarTitular]`)
                                                    const selectorBotonDesasociar = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=desasociarTitular]`)
                                                    selectorBotonCambiarTitular.removeAttribute("style")
                                                    selectorBotonDesasociar.removeAttribute("style")
                                                    const selectorNuevoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`)
                                                    selectorNuevoClienteUI.style.display = "none"
                                                    const selectorbotonCerrarCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cerrarCambiarTitular]`)
                                                    selectorbotonCerrarCambiarTitular.style.display = "none"
                                                },
                                            },
                                            gestionPernoctantePorComprobar: {
                                                desplegarUI: async (pernoctanteUID) => {
                                                    const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                    const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                                    const advertenciaInmersivaIU = document.createElement("div")
                                                    advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                                    advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                                    advertenciaInmersivaIU.setAttribute("instanciaUID", instanciaUID)
                                                    advertenciaInmersivaIU.setAttribute("pernoctanteUID", pernoctanteUID)
                                                    const contenedorAdvertenciaInmersiva = document.createElement("div")
                                                    contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                                                    const contenidoAdvertenciaInmersiva = document.createElement("div")
                                                    contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                                                    contenidoAdvertenciaInmersiva.setAttribute("espacio", "gestionPernoctantePorComprobar")
                                                    const mensajeSpinner = "Esperando al servidor...."
                                                    const spinner = casaVitini.ui.componentes.spinner(mensajeSpinner)
                                                    contenidoAdvertenciaInmersiva.appendChild(spinner)
                                                    contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                                    advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                                                    document.body.appendChild(advertenciaInmersivaIU)
                                                    const transaccion = {
                                                        zona: "administracion/reservas/detallesDelPernoctantePorPernoctaneUID",
                                                        reservaUID: reservaUID,
                                                        pernoctanteUID: Number(pernoctanteUID)
                                                    }
                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    if (respuestaServidor?.error) {
                                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                        casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor?.pernoctanteUID) {
                                                        const pernoctanteUID = respuestaServidor.pernoctanteUID
                                                        const nombreCompleto = respuestaServidor.nombreCompleto
                                                        const pasaporte = respuestaServidor.pasaporte
                                                        const seleccionarInstanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                        if (seleccionarInstanciaRenderizada) {
                                                            seleccionarInstanciaRenderizada.querySelector("[contenedor=spinner]")?.remove()
                                                            seleccionarInstanciaRenderizada.style.justifyContent = "flex-start";
                                                            //const destinoRenderizado = seleccionarInstanciaRenderizada.querySelector("[espacio=gestionPernoctantePorComprobar]")
                                                            const metadatosTitualPool = {
                                                                instanciaUID: instanciaUID,
                                                                pernoctanteUID: pernoctanteUID,
                                                                nombreCompleto: nombreCompleto,
                                                                pasaporte: pasaporte
                                                            }
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.titularPool.UI(metadatosTitualPool)
                                                        }
                                                    }
                                                },
                                                componentes: {
                                                    buscadorRapido: {
                                                        UI: (instanciaUID) => {
                                                            if (!instanciaUID) {
                                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                                const error = "El componente buscador en casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI necesita la instancia que la invoca"
                                                                casaVitini.ui.componentes.advertenciaInmersiva(error)
                                                            }
                                                            const contenedor = document.createElement("div")
                                                            contenedor.classList.add("administracion_reservas_detallesReservas_gestionTitular_contenedorBuscador")
                                                            contenedor.setAttribute("contenedor", "buscador")
                                                            const info = document.createElement("div")
                                                            info.classList.add("adminsitracion_reservas_detallesReservas_gestionTitular_infoBuscador")
                                                            //contenedor.appendChild(info)
                                                            const campoBuscador = document.createElement("input")
                                                            campoBuscador.classList.add("administracion_reservas_detallesReserva_gestionTitular_campoBuscador")
                                                            campoBuscador.placeholder = "Buscar un cliente existente"
                                                            campoBuscador.setAttribute("campo", "buscador")
                                                            campoBuscador.addEventListener("input", (e) => {
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.buscadorRapido.listaResultadosUI(e, instanciaUID)
                                                            })
                                                            contenedor.appendChild(campoBuscador)
                                                            const resultadosBuscador = document.createElement("div")
                                                            resultadosBuscador.classList.add("administracion_reservas_detallesReserva_gestionTitular_resultadosBuscador")
                                                            resultadosBuscador.setAttribute("contenedor", "resultadosBuscador")
                                                            //contenedor.appendChild(resultadosBuscador)
                                                            contenedor
                                                        },
                                                        listaResultadosUI: async (e, instanciaUID) => {
                                                            const terminoBusqueda = e.target.value
                                                            const instanciaUIDBuscador = casaVitini.utilidades.codigoFechaInstancia()
                                                            const alturaDinamica = window.scrollY + e.target.getBoundingClientRect().bottom;
                                                            const anchoDinamico = e.target.getBoundingClientRect().width;
                                                            const horizontalDinamicoJerarquico = casaVitini.utilidades.observador.medirPorJerarquiaDom.horizontal(e.target);
                                                            const selectorListaResultadosBuscadorRapidoRenderiaza = document.querySelectorAll("[componente=buscadorRapidoCliente]")
                                                            selectorListaResultadosBuscadorRapidoRenderiaza.forEach((listaRenderizada) => {
                                                                listaRenderizada.remove()
                                                            })
                                                            const campoVacio = e.target.value.length
                                                            if (campoVacio === 0) {
                                                                clearTimeout(casaVitini.componentes.temporizador);
                                                                ;
                                                            }
                                                            const listaResultados = document.createElement("div")
                                                            listaResultados.setAttribute("componente", "buscadorRapidoCliente")
                                                            listaResultados.setAttribute("instanciaUIDBuscador", instanciaUIDBuscador)
                                                            listaResultados.classList.add("administracion_reservas_detallesReservas_gestionTitular_listaBuscador")
                                                            listaResultados.style.top = (alturaDinamica + 4) + "px"
                                                            listaResultados.style.left = (horizontalDinamicoJerarquico + 0) + "px"
                                                            listaResultados.style.width = anchoDinamico + "px"
                                                            listaResultados.innerText = null
                                                            listaResultados.innerText = "Buscando..."
                                                            document.addEventListener("mousedown", (e) => {
                                                                if (e.target.getAttribute("componente") === "elementoResultadosBuscadorRapido") {
                                                                    e.preventDefault()
                                                                }
                                                            })
                                                            const instanciaUIDRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"] [contenedor=buscador]`)
                                                            instanciaUIDRenderizada.appendChild(listaResultados)
                                                            clearTimeout(casaVitini.componentes.temporizador);
                                                            casaVitini.componentes.temporizador = setTimeout(() => {
                                                                const metadatos = {
                                                                    terminoBusqueda: terminoBusqueda,
                                                                    instanciaUIDBuscador: instanciaUIDBuscador,
                                                                    instanciaUID: instanciaUID
                                                                }
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.buscadorRapido.transactor(metadatos)
                                                            }, 1500);
                                                        },
                                                        transactor: async (metadatos) => {
                                                            const instanciaUIDBuscador = metadatos.instanciaUIDBuscador
                                                            const terminoBusqueda = metadatos.terminoBusqueda
                                                            const instanciaUID = metadatos.instanciaUID
                                                            const transaccion = {
                                                                zona: "administracion/clientes/buscar",
                                                                tipoBusqueda: "rapido",
                                                                buscar: terminoBusqueda
                                                            }
                                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                            if (respuestaServidor?.error) {

                                                            }
                                                            const listaBuscadorRenderizada = document.querySelector(`[instanciaUIDBuscador="${instanciaUIDBuscador}"]`)
                                                            if (!listaBuscadorRenderizada) {

                                                            }
                                                            listaBuscadorRenderizada.innerHTML = null
                                                            const resultadosClientes = respuestaServidor?.clientes
                                                            resultadosClientes.forEach((clienteEncontrado) => {
                                                                const cliente = clienteEncontrado.uid
                                                                const nombre = clienteEncontrado.nombre
                                                                const primerApellido = clienteEncontrado.primerApellido
                                                                const segundoApellido = clienteEncontrado.segundoApellido
                                                                const pasaporte = clienteEncontrado.pasaporte
                                                                const bloqueCliente = document.createElement("div")
                                                                bloqueCliente.classList.add("administracionReservaDetallesBuscadorRapidoBloqueCliente")
                                                                bloqueCliente.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                                bloqueCliente.addEventListener("click", () => {
                                                                    const metadatos = {
                                                                        clienteUID: cliente,
                                                                        nombre: nombre,
                                                                        primerApellido: primerApellido,
                                                                        segundoApellido: segundoApellido,
                                                                        pasaporte: pasaporte,
                                                                        instanciaUID: instanciaUID
                                                                    }
                                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.propuestaDeCambioPernoctantePoolPorClienteEnHabitacion(metadatos)
                                                                })
                                                                const filaNombre = document.createElement("p")
                                                                filaNombre.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaNombre")
                                                                filaNombre.innerText = `${nombre} ${primerApellido} ${segundoApellido}`
                                                                filaNombre.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                                bloqueCliente.appendChild(filaNombre)
                                                                const filaPasaporte = document.createElement("p")
                                                                filaPasaporte.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaPasaporte")
                                                                filaPasaporte.innerText = pasaporte
                                                                filaPasaporte.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                                bloqueCliente.appendChild(filaPasaporte)
                                                                listaBuscadorRenderizada.appendChild(bloqueCliente)
                                                            })
                                                        },
                                                        asociarClienteComoTitular: async (metadatos) => {
                                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                            const clienteUID = metadatos.clienteUID
                                                            const instanciaUIDContenedor = metadatos.instanciaUIDContenedor
                                                            const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                            const opcionesPantallaDeCarga = {
                                                                instanciaUID: instanciaUIDPantallaDeCarga,
                                                                mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                            }
                                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                            const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                            const transaccion = {
                                                                zona: "administracion/reservas/gestionTitular/asociarTitular",
                                                                clienteUID: Number(clienteUID),
                                                                reservaUID: reservaUID
                                                            }
                                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                            if (respuestaServidor?.error) {
                                                                pantallaDeCargaRenderizada?.remove()
                                                                casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                            }
                                                            if (respuestaServidor?.ok) {
                                                                //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                                pantallaDeCargaRenderizada?.remove()
                                                                const nuevoClienteUID = respuestaServidor.clienteUID
                                                                const nombreCompleto = respuestaServidor.nombreCompleto
                                                                const nombre = respuestaServidor.nombre
                                                                const primerApellido = respuestaServidor.primerApellido
                                                                const segundoApellido = respuestaServidor.segundoApellido
                                                                const clienteUID = respuestaServidor.clienteUID
                                                                const mail = respuestaServidor.mail
                                                                const pasaporte = respuestaServidor.pasaporte
                                                                const telefono = respuestaServidor.telefono
                                                                const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                                const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                                if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                                    selectorNombreTitular.innerText = nombreCompleto
                                                                    const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                                    selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                                    selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                                }
                                                                const metadatosRespuestaUnificada = {
                                                                    clienteUID: clienteUID,
                                                                    nombreCompleto: nombreCompleto,
                                                                    pasaporte: pasaporte,
                                                                    mail: mail,
                                                                    telefono: telefono,
                                                                    instanciaUID: instanciaUIDContenedor,
                                                                    reservaUID: reservaUID
                                                                }
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                            }
                                                        }
                                                    },
                                                    nuevoCliente: {
                                                        UI: (data) => {
                                                            const instancaiUID = data.instanciaUID
                                                            const tituloBajoBuscador = data.titulBajoBuscador || "tituloBajoBuscador"
                                                            const tituloBotonCrear = data.tituloBotonCrear || "tituloBotonCrear1"


                                                            const nuevoClienteUI = document.createElement("div")
                                                            nuevoClienteUI.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI")
                                                            nuevoClienteUI.setAttribute("formulario", "nuevoCliente")
                                                            const info = document.createElement("p")
                                                            info.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_info")
                                                            info.classList.add("negrita")
                                                            info.innerText = tituloBajoBuscador
                                                            nuevoClienteUI.appendChild(info)
                                                            const campoNombre = document.createElement("input")
                                                            campoNombre.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                            campoNombre.setAttribute("campo", "nombre")
                                                            campoNombre.setAttribute("formulario", "AnadirPernoctante")
                                                            campoNombre.placeholder = "Nombre (obligatiorio)"
                                                            nuevoClienteUI.appendChild(campoNombre)
                                                            const primerApellido = document.createElement("input")
                                                            primerApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                            primerApellido.setAttribute("campo", "primerApellido")
                                                            primerApellido.setAttribute("formulario", "AnadirPernoctante")
                                                            primerApellido.placeholder = "Primer apellido"
                                                            nuevoClienteUI.appendChild(primerApellido)
                                                            const segundoApellido = document.createElement("input")
                                                            segundoApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                            segundoApellido.setAttribute("campo", "segundoApellido")
                                                            segundoApellido.setAttribute("formulario", "AnadirPernoctante")
                                                            segundoApellido.placeholder = "Segundo apellido"
                                                            nuevoClienteUI.appendChild(segundoApellido)
                                                            const pasaporte = document.createElement("input")
                                                            pasaporte.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                            pasaporte.setAttribute("campo", "pasaporte")
                                                            pasaporte.setAttribute("formulario", "AnadirPernoctante")
                                                            pasaporte.placeholder = "Pasaporte (obligatorio)"
                                                            nuevoClienteUI.appendChild(pasaporte)
                                                            const telefono = document.createElement("input")
                                                            telefono.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                            telefono.setAttribute("campo", "telefono")
                                                            telefono.setAttribute("formulario", "AnadirPernoctante")
                                                            telefono.placeholder = "Teléfono"
                                                            nuevoClienteUI.appendChild(telefono)
                                                            const correoElecotronico = document.createElement("input")
                                                            correoElecotronico.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                            correoElecotronico.setAttribute("campo", "correoElectronico")
                                                            correoElecotronico.setAttribute("formulario", "AnadirPernoctante")
                                                            correoElecotronico.placeholder = "Correo electrónico"
                                                            nuevoClienteUI.appendChild(correoElecotronico)
                                                            const botonGuardarNuevoCliente = document.createElement("div")
                                                            botonGuardarNuevoCliente.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_botonV1")
                                                            botonGuardarNuevoCliente.innerText = tituloBotonCrear
                                                            botonGuardarNuevoCliente.addEventListener("click", () => {
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.guardarNuevoClienteYSustituirloPorElClientePoolActual(instanciaUID)
                                                            })
                                                            nuevoClienteUI.appendChild(botonGuardarNuevoCliente)
                                                            return nuevoClienteUI
                                                        },
                                                        transactor: async (instanciaUID) => {
                                                            const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                            const opcionesPantallaDeCarga = {
                                                                instanciaUID: instanciaUIDPantallaDeCarga,
                                                                mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                            }
                                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                            const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                            const campos = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`).querySelectorAll("[campo]")
                                                            const metadatos = {
                                                                zona: "administracion/reservas/gestionTitular/crearTitular",
                                                                reservaUID: reservaUID
                                                            }
                                                            campos.forEach((campo) => {
                                                                const nombreCampo = campo.getAttribute("campo")
                                                                const valorCampo = campo.value
                                                                metadatos[nombreCampo] = valorCampo
                                                            })
                                                            const respuestaServidor = await casaVitini.shell.servidor(metadatos)
                                                            if (respuestaServidor?.error) {
                                                                pantallaDeCargaRenderizada?.remove()
                                                                casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                            }
                                                            if (respuestaServidor?.ok) {
                                                                //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                                pantallaDeCargaRenderizada?.remove()
                                                                const nuevoClienteUID = respuestaServidor.clienteUID
                                                                const nombreCompleto = respuestaServidor.nombreCompleto
                                                                const clienteUID = respuestaServidor.clienteUID
                                                                const mail = respuestaServidor.mail
                                                                const telefono = respuestaServidor.telefono
                                                                const pasaporte = respuestaServidor.pasaporte
                                                                const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                                const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                                if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                                    selectorNombreTitular.innerText = nombreCompleto
                                                                    const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                                    selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                                    selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                                }
                                                                const metadatosRespuestaUnificada = {
                                                                    clienteUID: clienteUID,
                                                                    nombreCompleto: nombreCompleto,
                                                                    pasaporte: pasaporte,
                                                                    mail: mail,
                                                                    telefono: telefono,
                                                                    instanciaUID: instanciaUID,
                                                                    reservaUID: reservaUID
                                                                }
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                            }
                                                        }
                                                    },
                                                    detallesDelTitularUI: (detallesDelTitular) => {
                                                        const nombreCompleto = detallesDelTitular.nombreCompleto
                                                        const pasaporte = detallesDelTitular.pasaporte
                                                        const detallesRapidosDelTitular = document.createElement("div")
                                                        detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedorGlobal")
                                                        // Nombre completo titular
                                                        let contenedorDato = document.createElement("div")
                                                        contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                        let nombreDato = document.createElement("div")
                                                        nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                        nombreDato.innerText = "Nombre completo del pernoctante a comprobar"
                                                        contenedorDato.appendChild(nombreDato)
                                                        let valorDato = document.createElement("div")
                                                        valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                        valorDato.classList.add("negrita")
                                                        valorDato.setAttribute("componente", "nombreCompleto")
                                                        valorDato.innerText = nombreCompleto
                                                        contenedorDato.appendChild(valorDato)
                                                        detallesRapidosDelTitular.appendChild(contenedorDato)
                                                        // Pasaporte titular
                                                        contenedorDato = document.createElement("div")
                                                        contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                        nombreDato = document.createElement("div")
                                                        nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                        nombreDato.innerText = "Pasaporte del pernoctante a comprobar           "
                                                        contenedorDato.appendChild(nombreDato)
                                                        valorDato = document.createElement("div")
                                                        valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                        valorDato.classList.add("negrita")
                                                        valorDato.setAttribute("componente", "pasaporte")
                                                        valorDato.innerText = pasaporte
                                                        contenedorDato.appendChild(valorDato)
                                                        detallesRapidosDelTitular.appendChild(contenedorDato)
                                                        detallesRapidosDelTitular
                                                    },
                                                    botonCerrarFormularioNuevoCliente: () => {
                                                        const boton = document.createElement("div")
                                                        boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                        boton.innerHTML = "Cerrar gestion del titular de la reserva"
                                                        boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                        boton
                                                    },
                                                    botonCerrar: () => {
                                                        const boton = document.createElement("div")
                                                        boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                        boton.innerHTML = "Cerrar gestion del pernoctante de la reserva"
                                                        boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                        boton
                                                    },
                                                    titulo: (titulo) => {
                                                        const tituloUI = document.createElement("p")
                                                        tituloUI.classList.add("detallesReservaTituloCancelarReserva")
                                                        tituloUI.innerText = titulo
                                                        tituloUI
                                                    },
                                                    infoUI: (info) => {
                                                        const infoUI = document.createElement("p")
                                                        infoUI.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                                        infoUI.innerText = info
                                                        infoUI
                                                    },
                                                    titularPool: {
                                                        UI: async (metadatos) => {
                                                            const instanciaUID = metadatos.instanciaUID
                                                            const pernoctanteUID = metadatos.pernoctanteUID
                                                            const nombreCompleto = metadatos.nombreCompleto
                                                            const pasaporte = metadatos.pasaporte
                                                            const selectorDestinoRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [espacio=gestionPernoctantePorComprobar]`)
                                                            if (selectorDestinoRenderizado) {
                                                                document.querySelector(`[instanciaUID="${instanciaUID}"]`).setAttribute("pernoctanteUID", pernoctanteUID)
                                                                const titulo = "Pernoctane por comprobar (POOL)"
                                                                const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.titulo(titulo)
                                                                selectorDestinoRenderizado.appendChild(tituloUI)
                                                                const info = "Los datos del pernoctante deben de comprobarse antes de guardarse en la base de datos de los clientes."
                                                                const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.infoUI(info)
                                                                selectorDestinoRenderizado.appendChild(infoUI)
                                                                const detallesDelTitular = {
                                                                    nombreCompleto: nombreCompleto,
                                                                    pasaporte: pasaporte
                                                                }
                                                                const detallesDelTitularUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.detallesDelTitularUI(detallesDelTitular)
                                                                selectorDestinoRenderizado.appendChild(detallesDelTitularUI)
                                                                const info2 = "Primero use en el campo de búsqueda para ver si existe ya una ficha del cliente para poder asociarlo. Si no existiera la ficha del cliente puede crear una en el formulario de abajo. Si selecciona un cliente existente o crea una nueva ficha del cliente desde aquí se asociará automáticamente como titular de esta reserva"
                                                                const infoUI2 = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.infoUI(info2)
                                                                selectorDestinoRenderizado.appendChild(infoUI2)
                                                                const buscadorUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.buscadorRapido.UI(instanciaUID)
                                                                selectorDestinoRenderizado.appendChild(buscadorUI)
                                                                const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.nuevoCliente.UI({
                                                                    instanciaUID
                                                                })
                                                                selectorDestinoRenderizado.appendChild(nuevoClienteUI)
                                                                const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.botonCerrar()
                                                                selectorDestinoRenderizado.appendChild(botonCerrar)
                                                                // Obtenemos datos
                                                            }
                                                        }
                                                    },
                                                    propuestaDeCambioPernoctantePoolPorClienteEnHabitacion: (propuesta) => {
                                                        const clienteUID = propuesta.clienteUID
                                                        const nombre = propuesta.nombre
                                                        const primerApellido = propuesta.primerApellido
                                                        const segundoApellido = propuesta.segundoApellido
                                                        const pasaporte = propuesta.pasaporte
                                                        const instanciaUID = propuesta.instanciaUID
                                                        const nombreCompletoPool = document.querySelector(`[instanciaUID="${instanciaUID}"]`).querySelector("[componente=nombreCompleto]").innerText
                                                        const pasaportePool = document.querySelector(`[instanciaUID="${instanciaUID}"]`).querySelector("[componente=pasaporte]").innerText
                                                        const pernoctanteUID = document
                                                            .querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                            .getAttribute("pernoctanteUID")
                                                        const contenedorRenderizad = document
                                                            .querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                            .querySelector("[espacio=gestionPernoctantePorComprobar]")
                                                        const contenidoAdvertenciaInmersiva = document.createElement("div")
                                                        contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                                                        contenidoAdvertenciaInmersiva.setAttribute("contenedor", "contenidoAdvertenciaInmersiva")
                                                        const titulo = "Propuesta de verificacion"
                                                        const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.titulo(titulo)
                                                        contenidoAdvertenciaInmersiva.appendChild(tituloUI)
                                                        let info = document.createElement("div")
                                                        info.setAttribute("class", "advertenciaInfoFlujoPago")
                                                        info.setAttribute("componente", "mensajeFlujoPasarela")
                                                        info.innerText = "Revise los datos y si estan verificados documentalmente puede proceder a guardarlos. Este proceso reemplazara los datos verificados por los anteriores datos no verificados."
                                                        contenidoAdvertenciaInmersiva.appendChild(info)
                                                        info = document.createElement("div")
                                                        info.setAttribute("class", "advertenciaInfoFlujoPago")
                                                        info.setAttribute("componente", "mensajeFlujoPasarela")
                                                        info.innerText = "Pernoctante no verificado por el que se va a proceder a la sustitucion."
                                                        contenidoAdvertenciaInmersiva.appendChild(info)
                                                        const datosDetallesDelTitularUI = {
                                                            nombreCompleto: nombreCompletoPool,
                                                            pasaporte: pasaportePool
                                                        }
                                                        const detallesDelTitularUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.detallesDelTitularUI(datosDetallesDelTitularUI)
                                                        contenidoAdvertenciaInmersiva.appendChild(detallesDelTitularUI)
                                                        info = document.createElement("div")
                                                        info.setAttribute("class", "advertenciaInfoFlujoPago")
                                                        info.setAttribute("componente", "mensajeFlujoPasarela")
                                                        info.innerText = "Pernoctante final que sustituira al anterior con datos verificados."
                                                        contenidoAdvertenciaInmersiva.appendChild(info)
                                                        const datosPernoctanteVerificado = {
                                                            nombreCompleto: `${nombre}${primerApellido}${segundoApellido}`,
                                                            pasaporte: pasaporte
                                                        }
                                                        const pernoctanteVerificadoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.detallesDelTitularUI(datosPernoctanteVerificado)
                                                        contenidoAdvertenciaInmersiva.appendChild(pernoctanteVerificadoUI)
                                                        const botonAceptarPropuesta = document.createElement("div")
                                                        botonAceptarPropuesta.setAttribute("class", "errorBoton")
                                                        botonAceptarPropuesta.innerText = "Aceptar propuesta"
                                                        botonAceptarPropuesta.addEventListener("click", () => {
                                                            const confimarPropuesta = {
                                                                clienteUID: clienteUID,
                                                                instanciaUID: instanciaUID
                                                            }
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.confirmarPropuesta(confimarPropuesta)
                                                        })
                                                        contenidoAdvertenciaInmersiva.appendChild(botonAceptarPropuesta)
                                                        const botonAtras = document.createElement("div")
                                                        botonAtras.setAttribute("class", "errorBoton")
                                                        botonAtras.innerText = "Volver a atras"
                                                        botonAtras.addEventListener("click", (e) => {
                                                            const metadatosTitualPool = {
                                                                instanciaUID: instanciaUID,
                                                                pernoctanteUID: pernoctanteUID,
                                                                nombreCompleto: nombreCompletoPool,
                                                                pasaporte: pasaportePool
                                                            }
                                                            contenedorRenderizad.innerHTML = null
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.componentes.titularPool.UI(metadatosTitualPool)
                                                        })
                                                        contenidoAdvertenciaInmersiva.appendChild(botonAtras)
                                                        const botonCancelar = document.createElement("div")
                                                        botonCancelar.setAttribute("class", "errorBoton")
                                                        botonCancelar.innerText = "Cancelar y cerrar"
                                                        botonCancelar.addEventListener("click", () => {
                                                            document.querySelector(`[instanciaUID="${instanciaUID}"]`).remove()
                                                        })
                                                        contenidoAdvertenciaInmersiva.appendChild(botonCancelar)
                                                        // contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                                        // advertenciaInmersivaUI.appendChild(contenedorAdvertenciaInmersiva)
                                                        contenedorRenderizad.innerHTML = null
                                                        contenedorRenderizad.appendChild(contenidoAdvertenciaInmersiva)
                                                    },
                                                    confirmarPropuesta: async (propuesta) => {
                                                        const instanciaUID = propuesta.instanciaUID
                                                        const clienteUID = propuesta.clienteUID
                                                        const pernoctanteUID_DesdeInstancia = document.querySelector(`[instanciaUID="${instanciaUID}"]`).getAttribute("pernoctanteUID")
                                                        const instanciaUID_pantallaPropuestaConfirmada = casaVitini.utilidades.codigoFechaInstancia()
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const metadatosPantallaCarga = {
                                                            mensaje: "Esperando al servidor...",
                                                            instanciaUID: instanciaUID_pantallaPropuestaConfirmada,
                                                        }
                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                                        const transaccion = {
                                                            zona: "administracion/reservas/cambiarTipoCliente",
                                                            reservaUID: reservaUID,
                                                            pernoctanteUID: Number(pernoctanteUID_DesdeInstancia),
                                                            clienteUID: Number(clienteUID)
                                                        }
                                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                        const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUID_pantallaPropuestaConfirmada}"]`)
                                                        if (!selectorPantallaDeCarga) {

                                                        }
                                                        selectorPantallaDeCarga.forEach((pantalla) => {
                                                            pantalla.remove()
                                                        })
                                                        if (respuestaServidor?.error) {
                                                            casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {
                                                            const habitacionUID = respuestaServidor.habitacionUID
                                                            const pernoctanteUID = respuestaServidor.pernoctanteUID
                                                            const nombreCompleto = respuestaServidor.nombreCompleto
                                                            const pasaporte = respuestaServidor.pasaporte
                                                            const selectorInstanciaRaiz = document.querySelectorAll(`[instanciaUID="${instanciaUID}"]`)
                                                            selectorInstanciaRaiz.forEach((pantalla) => {
                                                                pantalla.remove()
                                                            })
                                                            const selectorContenedorPernoctanteAntiguo = document.querySelector(`[contenedor=pernoctante][pernoctanteUID="${pernoctanteUID}"]`)
                                                            selectorContenedorPernoctanteAntiguo.remove()
                                                            if (habitacionUID) {
                                                                const selectorHabitacion = document.querySelector(`[habitacionUID="${habitacionUID}"]`)
                                                                let metadatos = {
                                                                    tipoPernoctante: "cliente",
                                                                    clienteUID: clienteUID,
                                                                    pernoctanteUID: pernoctanteUID,
                                                                    estadoAlojamiento: "alojado",
                                                                }
                                                                const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(metadatos)
                                                                metadatos = {
                                                                    nombreCompleto: nombreCompleto,
                                                                }
                                                                const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(metadatos)
                                                                bloquePernoctantes.appendChild(nombrePernoctante)
                                                                metadatos = {
                                                                    pasaporte: pasaporte,
                                                                }
                                                                const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(metadatos)
                                                                bloquePernoctantes.appendChild(identificacionPernoctante)
                                                                selectorHabitacion.appendChild(bloquePernoctantes)
                                                            } else {
                                                                const metadatosBloquePernoctantes = {
                                                                    tipoPernoctante: "cliente",
                                                                    clienteUID: clienteUID,
                                                                    pernoctanteUID: pernoctanteUID,
                                                                    estadoAlojamiento: "noAlojado"
                                                                }
                                                                const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(metadatosBloquePernoctantes)
                                                                const metadatosNombreUi = {
                                                                    nombreCompleto: nombreCompleto,
                                                                }
                                                                const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(metadatosNombreUi)
                                                                bloquePernoctantes.appendChild(nombrePernoctante)
                                                                const metadatosPasaporte = {
                                                                    pasaporte: pasaporte,
                                                                }
                                                                const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(metadatosPasaporte)
                                                                bloquePernoctantes.appendChild(identificacionPernoctante)
                                                                const zonaDestino = document.querySelector(`[componente=contenedorPernoctantesSinHabitacion]`)
                                                                zonaDestino.appendChild(bloquePernoctantes)
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.controlEspacioPernoctantesSinAlojamiento()
                                                            }
                                                        }
                                                    },

                                                }
                                            },
                                        },
                                        cambiarDeHabitacion: {
                                            mostrasSelectorCambioPernoctanteHabitacion: (pernoctanteUID) => {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()

                                                const habitacionActual = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)?.closest("[habitacionUID]")?.getAttribute("habitacionUID")



                                                const selectorHabitaciones = document.querySelectorAll("[habitacionIDV]")
                                                const selectorBotonAsignarAHabitacionRenderizado = document.querySelectorAll("[componente=botonMoverCliente]")

                                                selectorBotonAsignarAHabitacionRenderizado.forEach(botonRenderizado => {
                                                    botonRenderizado.remove()
                                                });


                                                selectorHabitaciones.forEach((habitacion) => {
                                                    const habitacionUID = habitacion.getAttribute("habitacionUID")
                                                    if (habitacionUID !== habitacionActual) {
                                                        const bloqueSelectorCambio = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.habitaciones.selectorCambioHabitacionUI(pernoctanteUID)
                                                        habitacion.appendChild(bloqueSelectorCambio)
                                                    }
                                                })
                                            },
                                            ocultarSelectoresCambioHabitacion: (e) => {
                                                const componente = e.target?.getAttribute("componente")
                                                if (componente === "botonOpcionClientePool") {
                                                    return
                                                }
                                                const selectorBotonMoverCliente = document.querySelectorAll("[componente=botonMoverCliente]")
                                                selectorBotonMoverCliente.forEach(selectorBotonMoverCliente => {
                                                    selectorBotonMoverCliente.remove()
                                                })
                                                document.removeEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.cambiarDeHabitacion.ocultarSelectoresCambioHabitacion)
                                            },
                                            cambiarPernoctanteHabitacion: async (pernoctanteUID, e) => {
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const habitacionUID = e.target.closest("[habitacionUID]").getAttribute("habitacionUID")
                                                const pernoctante = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                const clienteUID = pernoctante.getAttribute("clienteUID")
                                                const tipoCliente = pernoctante.getAttribute("tipoCliente")
                                                const nombrePernoctante = pernoctante.querySelector("[componente=nombreCompleto]").innerText
                                                const pasaportePernoctante = pernoctante.querySelector(`[componente=pasaporte]`).innerText
                                                const fechaCheckIn = pernoctante.getAttribute("fechaCheckIn")
                                                const fechaCheckOutAdelantado = pernoctante.getAttribute("fechaCheckOut")
                                                document.querySelectorAll("[componente=botonMoverCliente]").forEach(botonMover => {
                                                    botonMover.remove()
                                                })
                                                document.querySelectorAll("[componente=opcionesCliente]").forEach(opcionesCliente => {
                                                    opcionesCliente.remove()
                                                })
                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/alojamiento/cambiarPernoctanteDeHabitacion",
                                                    reservaUID: String(reservaUID),
                                                    habitacionDestinoUID: String(habitacionUID),
                                                    pernoctanteUID: String(pernoctanteUID)
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                if (respuestaServidor?.error) {
                                                    casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    document.querySelector("[pernoctanteUID='" + pernoctanteUID + "']")
                                                        .remove()
                                                    const datoPernoctante = {
                                                        tipoPernoctante: tipoCliente,
                                                        clienteUID: clienteUID,
                                                        pernoctanteUID: pernoctanteUID,
                                                        estadoAlojamiento: "alojado",
                                                        fechaCheckIn: fechaCheckIn,
                                                        fechaCheckOutAdelantado: fechaCheckOutAdelantado,
                                                    }
                                                    const bloqueClienteMover = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(datoPernoctante)
                                                    const datosNombre = {
                                                        nombreCompleto: nombrePernoctante
                                                    }
                                                    const pernoctanteNombreUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(datosNombre)
                                                    bloqueClienteMover.appendChild(pernoctanteNombreUI)
                                                    const datosPasaporte = {
                                                        pasaporte: pasaportePernoctante
                                                    }
                                                    const pernoctantePasaporteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(datosPasaporte)
                                                    bloqueClienteMover.appendChild(pernoctantePasaporteUI)
                                                    const selectorHabitacionDestino = document.querySelector("[habitacionUID='" + habitacionUID + "']")
                                                    selectorHabitacionDestino?.appendChild(bloqueClienteMover)
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.controlEspacioPernoctantesSinAlojamiento()
                                                }
                                            },
                                        },
                                        menuPrincipalPernoctante: (pernoctante) => {
                                            const pernoctanteElemento = pernoctante.target.closest("[pernoctanteUID]")
                                            const pernoctanteUID = pernoctanteElemento.getAttribute("pernoctanteUID")
                                            const clienteUID = pernoctanteElemento.getAttribute("clienteUID")
                                            const menuYaRenderizado = document.querySelector(`[componente=menuVolatil][pernoctanteUID="${pernoctanteUID}"]`)
                                            if (menuYaRenderizado) {
                                                document.removeEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)
                                                casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                            } else {
                                                document.querySelectorAll("[componente=menuVolatil]").forEach((menuRenderizado) => {
                                                    menuRenderizado.remove()
                                                })
                                            }
                                            const selectorOpcionesApartamento = document.querySelector(`[componente=menuVolatil][clienteUID="${clienteUID}"]`)
                                            if (selectorOpcionesApartamento) {
                                                casaVitini.shell.controladoresUI.ocultarMenusVolatiles()

                                            }
                                            casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                            screen.orientation?.removeEventListener("change", casaVitini.shell.controladoresUI.ocultarMenusVolatiles);
                                            screen.orientation?.addEventListener("change", casaVitini.shell.controladoresUI.ocultarMenusVolatiles);
                                            window.removeEventListener("resize", casaVitini.shell.controladoresUI.controlHorizotnalVetana)
                                            window.addEventListener("resize", casaVitini.shell.controladoresUI.controlHorizotnalVetana)

                                            const alturaDinamica = window.scrollY + pernoctanteElemento.getBoundingClientRect().bottom;
                                            const horizontalDinamicoJerarquico = casaVitini.utilidades.observador.medirPorJerarquiaDom.horizontal(pernoctanteElemento);
                                            let tipoCliente = pernoctanteElemento.getAttribute("tipoCliente")
                                            let bloqueCliente = pernoctanteElemento
                                            const estadoAlojamiento = pernoctanteElemento.getAttribute("estadoAlojamiento")
                                            if (!tipoCliente) {
                                                tipoCliente = pernoctanteElemento.parentElement.getAttribute("tipoCliente")
                                                bloqueCliente = pernoctanteElemento.parentElement
                                            }
                                            const opcionesClientePool = document.querySelectorAll("[componente=opcionesCliente]")
                                            opcionesClientePool.forEach((opcionClientePool) => {
                                                opcionClientePool.parentElement.style.removeProperty("background")
                                                opcionClientePool.remove()
                                            })
                                            const bloqueOpcionesCliente = document.createElement("div")
                                            bloqueOpcionesCliente.classList.add("administracionReservasDetallesBloqueOpcionesCliente")
                                            bloqueOpcionesCliente.setAttribute("contenedor", "opcionesCliente")
                                            bloqueOpcionesCliente.setAttribute("componente", "menuVolatil")
                                            bloqueOpcionesCliente.setAttribute("clienteUID", clienteUID)
                                            bloqueOpcionesCliente.setAttribute("pernoctanteUID", pernoctanteUID)
                                            bloqueOpcionesCliente.setAttribute("tipoCliente", tipoCliente)
                                            bloqueOpcionesCliente.style.top = (alturaDinamica + 4) + "px"
                                            bloqueOpcionesCliente.style.left = (horizontalDinamicoJerarquico) + "px"
                                            if (tipoCliente === "cliente" && estadoAlojamiento === "alojado") {
                                                const selectorCheckIn = document
                                                    .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`).getAttribute("fechaCheckIn")
                                                if (selectorCheckIn) {
                                                    const botonRealizarCheckin = document.createElement("div")
                                                    botonRealizarCheckin.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                    botonRealizarCheckin.setAttribute("componente", "botonOpcionClientePool")
                                                    botonRealizarCheckin.setAttribute("tipoEliminacion", "habitacion")
                                                    botonRealizarCheckin.innerText = "Modificar checkin"
                                                    botonRealizarCheckin.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.UI(pernoctanteUID)
                                                    })
                                                    bloqueOpcionesCliente.appendChild(botonRealizarCheckin)
                                                    const botonCheckOutAdelantado = document.createElement("div")
                                                    botonCheckOutAdelantado.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                    botonCheckOutAdelantado.setAttribute("componente", "botonOpcionClientePool")
                                                    botonCheckOutAdelantado.setAttribute("tipoEliminacion", "habitacion")
                                                    botonCheckOutAdelantado.innerText = "Checkout Adelantado"
                                                    botonCheckOutAdelantado.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkout.UI(pernoctanteUID)
                                                    })
                                                    bloqueOpcionesCliente.appendChild(botonCheckOutAdelantado)
                                                } else {
                                                    const botonRealizarCheckin = document.createElement("div")
                                                    botonRealizarCheckin.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                    botonRealizarCheckin.setAttribute("componente", "botonOpcionClientePool")
                                                    botonRealizarCheckin.innerText = ">>> Realizar checkin"
                                                    botonRealizarCheckin.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.checkin.UI(pernoctanteUID)
                                                    })
                                                    bloqueOpcionesCliente.appendChild(botonRealizarCheckin)
                                                }
                                                // Eliminar pernoctane de la habitacion
                                                const botonOpcionCliente = document.createElement("div")
                                                botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                botonOpcionCliente.setAttribute("componente", "botonOpcionClientePool")
                                                botonOpcionCliente.innerText = "Eliminar pernoctante de la habitacion"
                                                botonOpcionCliente.addEventListener("click", () => {
                                                    const datosEliminacion = {
                                                        tipoEliminacion: "habitacion",
                                                        pernoctanteUID: pernoctanteUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.propuestaEliminarPernoctanteUI(datosEliminacion)
                                                })
                                                bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                            }
                                            if (tipoCliente === "cliente") {
                                                // Ir a detalles de clinete
                                                botonOpcionCliente = document.createElement("a")
                                                botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                botonOpcionCliente.setAttribute("vista", "/administracion/clientes/" + clienteUID)
                                                botonOpcionCliente.setAttribute("href", "/administracion/clientes/" + clienteUID)
                                                botonOpcionCliente.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                botonOpcionCliente.innerText = "Ir a detalles del cliente"
                                                bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                            }
                                            if (tipoCliente === "clientePool") {
                                                // Buscador rapido clinete
                                                const campoBuscador = document.createElement("div")
                                                campoBuscador.classList.add("administracion_reservas_detallesReservas_botonCheckIn")
                                                campoBuscador.setAttribute("buscadorUID", "clientePoolCheckInAsociacion")
                                                campoBuscador.innerText = "Verificar comprobación documental"
                                                campoBuscador.setAttribute("componente", "buscadorRapido")
                                                campoBuscador.addEventListener("click", () => {
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctantePorComprobar.desplegarUI(pernoctanteUID)
                                                })
                                                bloqueOpcionesCliente.appendChild(campoBuscador)
                                                // Crear cliente nuevo
                                                let botonOpcionCliente = document.createElement("div")
                                                botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                botonOpcionCliente.innerText = "Crear cliente nuevo"
                                                botonOpcionCliente.setAttribute("origen", "opcionesClientePool")
                                                botonOpcionCliente.setAttribute("componente", "botonOpcionClientePool")
                                                botonOpcionCliente.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.anadirPernoctanteUI)
                                                //bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                            }
                                            if (estadoAlojamiento === "alojado") {
                                                // Cambiar habitacion
                                                botonOpcionCliente = document.createElement("div")
                                                botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                botonOpcionCliente.innerText = "Cambiar de habitación"
                                                botonOpcionCliente.setAttribute("componente", "botonOpcionClientePool")
                                                botonOpcionCliente.addEventListener("click", () => {
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.cambiarDeHabitacion.mostrasSelectorCambioPernoctanteHabitacion(pernoctanteUID)
                                                })
                                                bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                                // Eliminar pernoctane de la habitacion y de la reserva
                                                botonOpcionCliente = document.createElement("div")
                                                botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                botonOpcionCliente.setAttribute("componente", "botonOpcionClientePool")
                                                botonOpcionCliente.innerText = "Eliminar pernoctante de la habitacion y de la reserva"
                                                botonOpcionCliente.addEventListener("click", () => {
                                                    const datosEliminacion = {
                                                        tipoEliminacion: "reserva",
                                                        pernoctanteUID: pernoctanteUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.propuestaEliminarPernoctanteUI(datosEliminacion)
                                                })
                                                bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                                ///
                                            }
                                            if (estadoAlojamiento === "noAlojado") {
                                                // Cambiar habitacion
                                                botonOpcionCliente = document.createElement("div")
                                                botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                botonOpcionCliente.innerText = "Asignar a una habitación"
                                                botonOpcionCliente.setAttribute("componente", "botonOpcionClientePool")
                                                botonOpcionCliente.addEventListener("click", () => {
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.cambiarDeHabitacion.mostrasSelectorCambioPernoctanteHabitacion(pernoctanteUID)
                                                })
                                                bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                                // Eliminar pernoctane de la habitacion y de la reserva
                                                botonOpcionCliente = document.createElement("div")
                                                botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                                botonOpcionCliente.setAttribute("componente", "botonOpcionClientePool")
                                                botonOpcionCliente.setAttribute("pernoctanteUID_", pernoctanteUID)
                                                //botonOpcionCliente.setAttribute("nombreCompleto_", nombreCompleto)
                                                botonOpcionCliente.setAttribute("clienteUID_", clienteUID)
                                                //botonOpcionCliente.setAttribute("pasaporte_", pasaporte)
                                                botonOpcionCliente.setAttribute("tipoEliminacion", "reserva")
                                                botonOpcionCliente.innerText = "Eliminar pernoctancte de la reserva"
                                                botonOpcionCliente.addEventListener("click", () => {
                                                    const datosEliminacion = {
                                                        tipoEliminacion: "reserva",
                                                        pernoctanteUID: pernoctanteUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.propuestaEliminarPernoctanteUI(datosEliminacion)
                                                })
                                                bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                                ///
                                            }
                                            //Cerrar opciones del pernoctante
                                            botonOpcionCliente = document.createElement("div")
                                            botonOpcionCliente.classList.add("administracionReservasDetallesBotonOpcionCliente")
                                            botonOpcionCliente.setAttribute("componente", "botonCerrarOpciones")
                                            botonOpcionCliente.innerText = "Cerrar opciones del pernoctante"
                                            botonOpcionCliente.addEventListener("click", (e) => {
                                                e.stopPropagation()
                                                let selectorFilasCliente = document.querySelectorAll("[componente=contenedorPernocanteHabitacion]")
                                                selectorFilasCliente.forEach((filaCliente) => {
                                                    filaCliente.style.removeProperty("background")
                                                })
                                                const selectorContenedoresOpcionCliente = document.querySelectorAll("[contenedor=opcionesCliente]")
                                                selectorContenedoresOpcionCliente.forEach((contenedor) => {
                                                    contenedor.remove()
                                                })
                                                document.querySelector("[componente=bloqueCalendario]")?.remove()
                                            })
                                            bloqueOpcionesCliente.appendChild(botonOpcionCliente)
                                            document.querySelector("main:not([Estado=Obsoleto]").appendChild(bloqueOpcionesCliente)
                                            document.addEventListener("click", casaVitini.shell.controladoresUI.ocultarMenusVolatiles)
                                        },
                                        eliminarPernoctante: async (metadatos) => {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const pernoctanteUID = metadatos.pernoctanteUID
                                            const pernoctante = document
                                                .querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                            const tipoPernoctante = pernoctante.getAttribute("tipoCliente")
                                            const tipoEliminacion = metadatos.tipoEliminacion
                                            const clienteUID = pernoctante.getAttribute("clienteUID")
                                            const nombreCompleto = pernoctante.querySelector("[componente=nombreCompleto]").innerText
                                            const pasaporte = pernoctante.querySelector("[componente=pasaporte]").innerHTML
                                            const fechaCheckIn = pernoctante.getAttribute("fechaCheckIn")
                                            const fechaCheckOut = pernoctante.getAttribute("fechaCheckOut")
                                            const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/pernoctantes/eliminarPernoctanteReserva",
                                                reservaUID: String(reservaUID),
                                                pernoctanteUID: String(pernoctanteUID),
                                                tipoEliminacion: tipoEliminacion
                                            }

                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            const metadatosPantallaCarga = {
                                                mensaje: "Esperando al servidor...",
                                                instanciaUID: instanciaUIDPantallaDeCarga,
                                            }
                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUIDPantallaDeCarga}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                            selectorPantallaDeCarga.forEach((pantalla) => {
                                                pantalla.remove()
                                            })
                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                if (tipoEliminacion === "habitacion") {
                                                    const metadatosPernoctante = {
                                                        tipoPernoctante: "cliente",
                                                        clienteUID: clienteUID,
                                                        pernoctanteUID: pernoctanteUID,
                                                        tipoPernoctante: tipoPernoctante,
                                                        estadoAlojamiento: "noAlojado",
                                                        fechaCheckIn: fechaCheckIn,
                                                        fechaCheckOutAdelantado: fechaCheckOut
                                                    }
                                                    const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(metadatosPernoctante)
                                                    const metadatosNombre = {
                                                        nombreCompleto: nombreCompleto,
                                                        clienteUID: clienteUID,
                                                    }
                                                    const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(metadatosNombre)
                                                    bloquePernoctantes.appendChild(nombrePernoctante)
                                                    const metadatosPasaporte = {
                                                        pasaporte: pasaporte,
                                                        clienteUID: clienteUID
                                                    }
                                                    const selectorPernoctanteRenderizado = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    selectorPernoctanteRenderizado.remove()
                                                    const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(metadatosPasaporte)
                                                    bloquePernoctantes.appendChild(identificacionPernoctante)
                                                    const zonaDestino = document.querySelector(`[componente=contenedorPernoctantesSinHabitacion]`)
                                                    zonaDestino.appendChild(bloquePernoctantes)
                                                    zonaDestino.classList.remove("elementoOcultoInicialmente")
                                                }
                                                if (tipoEliminacion === "reserva") {
                                                    const selectorPernoctanteRenderizado = document.querySelector(`[pernoctanteUID="${pernoctanteUID}"]`)
                                                    selectorPernoctanteRenderizado.remove()
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.controlEspacioPernoctantesSinAlojamiento()
                                            }
                                        },
                                        controlEspacioPernoctantesSinAlojamiento: () => {
                                            const selectorMarcoPernoctantesSinAlojamiento = document.querySelector("[componente=espacioPernoctantesSinAlojamiento]")
                                            const selectorPernoctantes = selectorMarcoPernoctantesSinAlojamiento.querySelectorAll("[contenedor=pernoctante]")
                                            if (selectorPernoctantes.length > 0) {
                                                selectorMarcoPernoctantesSinAlojamiento.classList.remove("elementoOcultoInicialmente")
                                            } else {
                                                selectorMarcoPernoctantesSinAlojamiento.classList.add("elementoOcultoInicialmente")
                                            }
                                        },
                                        gestionPernoctante: {
                                            desplegarUIPernoctante: async function () {
                                                document.body.style.overflow = 'hidden';
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                                const advertenciaInmersivaIU = document.createElement("div")
                                                advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                                advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                                advertenciaInmersivaIU.setAttribute("instanciaUID", instanciaUID)
                                                const contenedorAdvertenciaInmersiva = document.createElement("div")
                                                contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                                                const contenidoAdvertenciaInmersiva = document.createElement("div")
                                                contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                                                contenidoAdvertenciaInmersiva.setAttribute("espacio", "gestionTitular")
                                                const mensajeSpinner = "Esperando al servidor...."
                                                const spinner = casaVitini.ui.componentes.spinner(mensajeSpinner)
                                                contenidoAdvertenciaInmersiva.appendChild(spinner)
                                                contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                                advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                                                document.querySelector("main").appendChild(advertenciaInmersivaIU)
                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/pernoctantes/detallesDelPernoctantePorPernoctaneUID",
                                                    reservaUID: reservaUID,
                                                    pernoctanteUID: pernoctanteUID
                                                }
                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {

                                                    /*
                                                    {
                                                        "ok": {
                                                            "pernoctanteUID": 1586,
                                                            "nombreCompleto": "rajoiCo nEspacio undefined ",
                                                            "pasaporte": "234234234",
                                                            "tipoPernoctante": "cliente"
                                                        }
                                                    }
                                                     */

                                                    const pernoctanteUID = respuestaServidor.pernoctanteUID
                                                    const nombreCompleto = respuestaServidor.nombreCompleto
                                                    const pasaporte = respuestaServidor.pasaporte
                                                    const tipoPernoctante = respuestaServidor.tipoPernoctante

                                                    const detallesTitular = respuestaServidor.ok.titular
                                                    const tipoTitularIDV = detallesTitular?.tipoTitularIDV
                                                    const seleccionarInstanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                    if (seleccionarInstanciaRenderizada) {
                                                        seleccionarInstanciaRenderizada.querySelector("[contenedor=spinner]")?.remove()
                                                        seleccionarInstanciaRenderizada.style.justifyContent = "flex-start";
                                                        const destinoRenderizado = seleccionarInstanciaRenderizada.querySelector("[espacio=gestionTitular]")
                                                        if (!detallesTitular) {
                                                            const titulo = "Añadir pernoctante a la reserva"
                                                            const tituloUI = this.componentes.titulo(titulo)
                                                            destinoRenderizado.appendChild(tituloUI)
                                                            const info = "Esta reserva ahora mismo no tiene ningún titular asignado. Para añadir un titular a la reserva, puedes buscar con el campo de búsqueda inferior un cliente existente para asociarlo como titular. También puedes crear un cliente nuevo rellenando el formulario para crear un cliente y añadirlo como titular a esta reserva."
                                                            const infoUI = this.componentes.infoUI(info)
                                                            destinoRenderizado.appendChild(infoUI)
                                                            const nuevoClienteUI = this.componentes.nuevoCliente.UI({
                                                                instanciaUID
                                                            })
                                                            destinoRenderizado.appendChild(nuevoClienteUI)
                                                            const botonCerrar = this.componentes.botonCerrar()
                                                            destinoRenderizado.appendChild(botonCerrar)
                                                        }
                                                        if (tipoTitularIDV === "titularCliente") {
                                                            const metadatosRespuestaUnificada = {
                                                                clienteUID: detallesTitular.clienteUID,
                                                                nombreCompleto: detallesTitular.nombreTitular,
                                                                pasaporte: detallesTitular.pasaporteTitular,
                                                                mail: detallesTitular.mailTitular,
                                                                telefono: detallesTitular.telefonoTitular,
                                                                instanciaUID: instanciaUID,
                                                                reservaUID: reservaUID
                                                            }
                                                            this.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                        }
                                                        if (tipoTitularIDV === "titularPool") {
                                                            const metadatosTitualPool = {
                                                                nombreTitular: detallesTitular.nombreTitular,
                                                                pasaporteTitular: detallesTitular.pasaporteTitular,
                                                                mailTitular: detallesTitular.mailTitular,
                                                                telefonoTitular: detallesTitular.telefonoTitular,
                                                                instanciaUID: instanciaUID
                                                            }
                                                            this.componentes.titularPool.UI(metadatosTitualPool)
                                                        }
                                                    }
                                                }
                                            },
                                            nuevoPernoctanteUI: async function (data) {
                                                const habitacionUID = data.habitacionUID
                                                const habitacionUI = data.habitacionUI
                                                const apartamentoUI = data.apartamentoUI

                                                const main = document.querySelector("main")
                                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                ui.setAttribute("operacion", "crearCliente")
                                                ui.setAttribute("habitacionUID", habitacionUID)

                                                const instanciaUID_ui = ui.getAttribute("instanciaUID")

                                                main.appendChild(ui)
                                                const contenedor = ui.querySelector("[componente=contenedor]")


                                                const titulo = `Añadir pernoctante en la ${habitacionUI} del ${apartamentoUI}`
                                                const tituloUI = this.componentes.titulo(titulo)
                                                contenedor.appendChild(tituloUI)
                                                const info = "Esta reserva ahora mismo no tiene ningún titular asignado. Para añadir un titular a la reserva, puedes buscar con el campo de búsqueda inferior un cliente existente para asociarlo como titular. También puedes crear un cliente nuevo rellenando el formulario para crear un cliente y añadirlo como titular a esta reserva."
                                                const infoUI = this.componentes.infoUI(info)
                                                contenedor.appendChild(infoUI)

                                                const buscadorUI = this.componentes.buscadorRapido.UI()
                                                contenedor.appendChild(buscadorUI)
                                                const nuevoClienteUI = this.componentes.nuevoCliente.UI({
                                                    operacion: "crearCliente",
                                                    habitacionUID
                                                })

                                                // guardarNuevoClienteYAnadirloComoPernoctnante
                                                contenedor.appendChild(nuevoClienteUI)
                                                const botonCerrar = this.componentes.botonCerrar()
                                                contenedor.appendChild(botonCerrar)

                                            },
                                            componentes: {
                                                buscadorRapido: {
                                                    UI: function () {
                                                        const contenedor = document.createElement("div")
                                                        contenedor.classList.add("administracion_reservas_detallesReservas_gestionTitular_contenedorBuscador")
                                                        contenedor.setAttribute("contenedor", "buscador")
                                                        const info = document.createElement("div")
                                                        info.classList.add("adminsitracion_reservas_detallesReservas_gestionTitular_infoBuscador")
                                                        //contenedor.appendChild(info)
                                                        const campoBuscador = document.createElement("input")
                                                        campoBuscador.classList.add("administracion_reservas_detallesReserva_gestionTitular_campoBuscador")
                                                        campoBuscador.placeholder = "Buscar un cliente existente"
                                                        campoBuscador.setAttribute("campo", "buscador")
                                                        campoBuscador.addEventListener("input", (e) => {
                                                            this.listaResultadosUI({
                                                                e
                                                            })
                                                        })
                                                        contenedor.appendChild(campoBuscador)
                                                        return contenedor
                                                    },
                                                    listaResultadosUI: async function (data) {
                                                        const evento = data.e
                                                        const elemento = evento.target
                                                        const terminoBusqueda = elemento.value

                                                        const instanciaUIDBuscador = casaVitini.utilidades.codigoFechaInstancia()

                                                        const selectorListaResultadosBuscadorRapidoRenderiaza = document.querySelectorAll("[componente=buscadorRapidoCliente]")
                                                        selectorListaResultadosBuscadorRapidoRenderiaza.forEach((listaRenderizada) => {
                                                            listaRenderizada.remove()
                                                        })
                                                        const campoVacio = elemento.value.length
                                                        if (campoVacio === 0) {
                                                            clearTimeout(casaVitini.componentes.temporizador);
                                                            elemento.closest(`[contenedor=buscador]`).querySelector(`[instanciaUIDBuscador]`)?.remove()
                                                            return
                                                        }
                                                        const listaResultados = document.createElement("div")
                                                        listaResultados.setAttribute("componente", "buscadorRapidoCliente")
                                                        listaResultados.setAttribute("instanciaUIDBuscador", instanciaUIDBuscador)
                                                        listaResultados.classList.add("administracion_reservas_detallesReservas_gestionTitular_listaBuscador")

                                                        listaResultados.innerText = null
                                                        const info = document.createElement("p")
                                                        info.classList.add("infoBuscando")
                                                        info.innerText = "Buscando..."
                                                        listaResultados.appendChild(info)

                                                        const instanciaUIDRenderizada = elemento.closest(`[contenedor=buscador]`)
                                                        instanciaUIDRenderizada.appendChild(listaResultados)
                                                        clearTimeout(casaVitini.componentes.temporizador);
                                                        casaVitini.componentes.temporizador = setTimeout(() => {
                                                            this.transactor({
                                                                terminoBusqueda: terminoBusqueda,
                                                                instanciaUIDBuscador: instanciaUIDBuscador,

                                                            })
                                                        }, 1500);
                                                    },
                                                    transactor: async function (data) {
                                                        const terminoBusqueda = data.terminoBusqueda
                                                        const instanciaUIDBuscador = data.instanciaUIDBuscador

                                                        const transaccion = {
                                                            zona: "administracion/clientes/buscar",
                                                            tipoBusqueda: "rapido",
                                                            buscar: terminoBusqueda
                                                        }
                                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                                        const listaBuscadorRenderizada = document.querySelector(`[instanciaUIDBuscador="${instanciaUIDBuscador}"]`)
                                                        if (!listaBuscadorRenderizada) {
                                                            return
                                                        }
                                                        if (respuestaServidor?.error) {
                                                            listaBuscadorRenderizada.remove()
                                                            return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }

                                                        listaBuscadorRenderizada.innerHTML = null
                                                        const resultadosClientes = respuestaServidor?.clientes
                                                        resultadosClientes.forEach((clienteEncontrado) => {
                                                            const clienteUID = clienteEncontrado.clienteUID
                                                            const nombre = clienteEncontrado.nombre
                                                            const primerApellido = clienteEncontrado.primerApellido
                                                            const segundoApellido = clienteEncontrado.segundoApellido
                                                            const pasaporte = clienteEncontrado.pasaporte
                                                            const bloqueCliente = document.createElement("div")
                                                            bloqueCliente.classList.add("administracionReservaDetallesBuscadorRapidoBloqueCliente")
                                                            bloqueCliente.setAttribute("clienteUID", clienteUID)
                                                            bloqueCliente.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                            bloqueCliente.addEventListener("click", (e) => {

                                                                const habitacionUID = e.target.closest("[operacion]").getAttribute("habitacionUID")
                                                                const operacion = e.target.closest("[operacion]").getAttribute("operacion")
                                                                if (operacion === "crearCliente") {

                                                                    this.anadirPernoctanteTransaccion({
                                                                        e,
                                                                        clienteUID,
                                                                        habitacionUID,

                                                                    })
                                                                }
                                                                if (operacion === "sustituirClientePoolPorClienteVitini") {
                                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.gestionPernoctante.componentes.buscadorRapido.asociarCliente({
                                                                        clienteUID: clienteUID,
                                                                    })
                                                                }


                                                            })



                                                            const filaNombre = document.createElement("p")
                                                            filaNombre.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaNombre")
                                                            filaNombre.innerText = `${nombre} ${primerApellido} ${segundoApellido}`
                                                            filaNombre.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                            bloqueCliente.appendChild(filaNombre)
                                                            const filaPasaporte = document.createElement("p")
                                                            filaPasaporte.classList.add("administracionReservaDetallesBuscadorRapidoBloqueClienteFilaPasaporte")
                                                            filaPasaporte.innerText = pasaporte
                                                            filaPasaporte.setAttribute("componente", "elementoResultadosBuscadorRapido")
                                                            bloqueCliente.appendChild(filaPasaporte)
                                                            listaBuscadorRenderizada.appendChild(bloqueCliente)
                                                        })
                                                    },
                                                    asociarCliente: async (data) => {
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const clienteUID = data.clienteUID
                                                        const instanciaUIDContenedor = data.instanciaUIDContenedor
                                                        const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                        const opcionesPantallaDeCarga = {
                                                            instanciaUID: instanciaUIDPantallaDeCarga,
                                                            mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                        }
                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                        const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)

                                                        const respuestaServidor = await casaVitini.shell.servidor({
                                                            zona: "administracion/reservas/detallesReserva/gestionTitular/asociarTitular",
                                                            clienteUID: String(clienteUID),
                                                            reservaUID: reservaUID
                                                        })

                                                        if (respuestaServidor?.error) {
                                                            pantallaDeCargaRenderizada?.remove()
                                                            casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {
                                                            //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                            pantallaDeCargaRenderizada?.remove()
                                                            const nuevoClienteUID = respuestaServidor.clienteUID
                                                            const nombreCompleto = respuestaServidor.nombreCompleto
                                                            const nombre = respuestaServidor.nombre
                                                            const primerApellido = respuestaServidor.primerApellido
                                                            const segundoApellido = respuestaServidor.segundoApellido
                                                            const clienteUID = respuestaServidor.clienteUID
                                                            const mail = respuestaServidor.mail
                                                            const pasaporte = respuestaServidor.pasaporte
                                                            const telefono = respuestaServidor.telefono
                                                            const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                            const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                            if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                                selectorNombreTitular.innerText = nombreCompleto
                                                                const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                                selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                                selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                            }
                                                            const metadatosRespuestaUnificada = {
                                                                clienteUID: clienteUID,
                                                                nombreCompleto: nombreCompleto,
                                                                pasaporte: pasaporte,
                                                                mail: mail,
                                                                telefono: telefono,
                                                                instanciaUID: instanciaUIDContenedor,
                                                                reservaUID: reservaUID
                                                            }
                                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                        }
                                                    },
                                                    anadirPernoctanteTransaccion: async (data) => {
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const clienteUID = data.clienteUID
                                                        const habitacionUID = data.habitacionUID
                                                        const e = data.e
                                                        const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                        const instanciaUID_nuevoPernoctanteUI = e.target.closest("[operacion=crearCliente]").getAttribute("instanciaUID")

                                                        const metadatosPantallaCarga = {
                                                            mensaje: "Esperando al servidor...",
                                                            instanciaUID: instanciaUIDPantallaDeCarga,
                                                        }
                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)

                                                        const respuestaServidor = await casaVitini.shell.servidor({
                                                            zona: "administracion/reservas/detallesReserva/alojamiento/anadirPernoctanteHabitacion",
                                                            reservaUID,
                                                            clienteUID: String(clienteUID),
                                                            habitacionUID
                                                        })

                                                        const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUIDPantallaDeCarga}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                                        selectorPantallaDeCarga.forEach((pantalla) => {
                                                            pantalla.remove()
                                                        })
                                                        const selectorBloqueAnadirPernoctante = document.querySelector(`[instanciaUID="${instanciaUID_nuevoPernoctanteUI}"]`)
                                                        if (!selectorBloqueAnadirPernoctante) {
                                                            return
                                                        }
                                                        if (respuestaServidor?.error) {
                                                            return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {
                                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()

                                                            const pernoctante = respuestaServidor.pernoctante
                                                            const cliente = respuestaServidor.cliente

                                                            const clienteUID = cliente.clienteUID
                                                            const pernoctanteUID = pernoctante.componenteUID
                                                            const nombre = cliente.nombre
                                                            const primerApellido = cliente.primerApellido
                                                            const segundoApellido = cliente.segundoApellido
                                                            const pasaporte = cliente.pasaporte


                                                            const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI({
                                                                tipoPernoctante: "cliente",
                                                                clienteUID: clienteUID,
                                                                pernoctanteUID: pernoctanteUID,
                                                                estadoAlojamiento: "alojado"
                                                            })

                                                            const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI({
                                                                nombreCompleto: `${nombre} ${primerApellido} ${segundoApellido}`,
                                                                clienteUID: clienteUID,
                                                            })
                                                            bloquePernoctantes.appendChild(nombrePernoctante)

                                                            const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI({
                                                                pasaporte: pasaporte,
                                                                clienteUID: clienteUID
                                                            })
                                                            bloquePernoctantes.appendChild(identificacionPernoctante)



                                                            const habitacionDestino = document.querySelector(`[habitacionUID="${habitacionUID}"]`)
                                                            habitacionDestino.appendChild(bloquePernoctantes)
                                                        }
                                                    },
                                                },
                                                nuevoCliente: {
                                                    UI: function (data) {

                                                        const operacion = data.operacion

                                                        let tituloNuevoCliente
                                                        let tituloBotonCrear
                                                        if (operacion === "crearCliente") {
                                                            tituloNuevoCliente = "Crear un nuevo cliente e insertarlo en la reserva como pernoctante"
                                                            tituloBotonCrear = "Crear cliente e insertarlo en la reserva como pernoctante"
                                                        }
                                                        if (operacion === "sustituirClientePool") {
                                                            tituloNuevoCliente = "Crear un nuevo cliente e insertarlo en la reserva sustituyendolo por el cliente pool"
                                                            tituloBotonCrear = "Crear cliente y sustituirlo por el cliente pool"
                                                        }


                                                        const nuevoClienteUI = document.createElement("div")
                                                        nuevoClienteUI.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI")
                                                        nuevoClienteUI.setAttribute("formulario", "nuevoCliente")

                                                        const info = document.createElement("p")
                                                        info.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_info")
                                                        info.classList.add("negrita")
                                                        info.innerText = tituloNuevoCliente
                                                        nuevoClienteUI.appendChild(info)
                                                        const campoNombre = document.createElement("input")
                                                        campoNombre.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        campoNombre.setAttribute("campo", "nombre")
                                                        campoNombre.setAttribute("formulario", "AnadirPernoctante")
                                                        campoNombre.placeholder = "Nombre (obligatiorio)"
                                                        nuevoClienteUI.appendChild(campoNombre)
                                                        const primerApellido = document.createElement("input")
                                                        primerApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        primerApellido.setAttribute("campo", "primerApellido")
                                                        primerApellido.setAttribute("formulario", "AnadirPernoctante")
                                                        primerApellido.placeholder = "Primer apellido"
                                                        nuevoClienteUI.appendChild(primerApellido)
                                                        const segundoApellido = document.createElement("input")
                                                        segundoApellido.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        segundoApellido.setAttribute("campo", "segundoApellido")
                                                        segundoApellido.setAttribute("formulario", "AnadirPernoctante")
                                                        segundoApellido.placeholder = "Segundo apellido"
                                                        nuevoClienteUI.appendChild(segundoApellido)
                                                        const pasaporte = document.createElement("input")
                                                        pasaporte.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        pasaporte.setAttribute("campo", "pasaporte")
                                                        pasaporte.setAttribute("formulario", "AnadirPernoctante")
                                                        pasaporte.placeholder = "Pasaporte (obligatorio)"
                                                        nuevoClienteUI.appendChild(pasaporte)
                                                        const telefono = document.createElement("input")
                                                        telefono.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        telefono.setAttribute("campo", "telefono")
                                                        telefono.setAttribute("formulario", "AnadirPernoctante")
                                                        telefono.placeholder = "Teléfono"
                                                        nuevoClienteUI.appendChild(telefono)
                                                        const correoElecotronico = document.createElement("input")
                                                        correoElecotronico.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_campo")
                                                        correoElecotronico.setAttribute("campo", "correoElectronico")
                                                        correoElecotronico.setAttribute("formulario", "AnadirPernoctante")
                                                        correoElecotronico.placeholder = "Correo electrónico"
                                                        nuevoClienteUI.appendChild(correoElecotronico)
                                                        const botonGuardarNuevoCliente = document.createElement("div")
                                                        botonGuardarNuevoCliente.setAttribute("boton", "crearCliente")
                                                        botonGuardarNuevoCliente.classList.add("administracion_reservas_detallesReservas_gestionTitular_nuevoClienteUI_botonV1")
                                                        botonGuardarNuevoCliente.innerText = tituloBotonCrear

                                                        if (operacion === "crearCliente") {
                                                            botonGuardarNuevoCliente.addEventListener("click", (e) => {
                                                                this.guardarNuevoClienteYAnadirloComoPernoctnante({
                                                                    e
                                                                })
                                                            })
                                                        }

                                                        if (operacion === "sustituirClientePool") {
                                                            botonGuardarNuevoCliente.addEventListener("click", (e) => {

                                                            })
                                                        }

                                                        nuevoClienteUI.appendChild(botonGuardarNuevoCliente)
                                                        return nuevoClienteUI
                                                    },
                                                    transactor: async function (instanciaUID) {
                                                        const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                        const opcionesPantallaDeCarga = {
                                                            instanciaUID: instanciaUIDPantallaDeCarga,
                                                            mensaje: "Asociando cliente a la titularidad de esta reserva"
                                                        }
                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(opcionesPantallaDeCarga)
                                                        const pantallaDeCargaRenderizada = document.querySelector(`[pantallaSuperpuesta=pantallaCargaSuperpuesta][instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const campos = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`).querySelectorAll("[campo]")
                                                        const metadatos = {
                                                            zona: "administracion/reservas/gestionTitular/crearTitular",
                                                            reservaUID: reservaUID
                                                        }
                                                        campos.forEach((campo) => {
                                                            const nombreCampo = campo.getAttribute("campo")
                                                            const valorCampo = campo.value
                                                            metadatos[nombreCampo] = valorCampo
                                                        })
                                                        const respuestaServidor = await casaVitini.shell.servidor(metadatos)
                                                        if (respuestaServidor?.error) {
                                                            pantallaDeCargaRenderizada?.remove()
                                                            casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {
                                                            //casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                            pantallaDeCargaRenderizada?.remove()
                                                            const nuevoClienteUID = respuestaServidor.clienteUID
                                                            const nombreCompleto = respuestaServidor.nombreCompleto
                                                            const clienteUID = respuestaServidor.clienteUID
                                                            const mail = respuestaServidor.mail
                                                            const telefono = respuestaServidor.telefono
                                                            const pasaporte = respuestaServidor.pasaporte
                                                            const selectorNombreTitularRenderizado = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                            const selectorNombreTitular = document.querySelector(`[dataReserva=nombreTitular]`)
                                                            if (selectorNombreTitularRenderizado && selectorNombreTitular) {
                                                                selectorNombreTitular.innerText = nombreCompleto
                                                                const selectorBloqueTitular = document.querySelector(`[contenedor=titularUID]`)
                                                                selectorBloqueTitular.setAttribute("tipoTitular", "titularCliente")
                                                                selectorBloqueTitular.setAttribute("titularUID", nuevoClienteUID)
                                                            }
                                                            const metadatosRespuestaUnificada = {
                                                                clienteUID: clienteUID,
                                                                nombreCompleto: nombreCompleto,
                                                                pasaporte: pasaporte,
                                                                mail: mail,
                                                                telefono: telefono,
                                                                instanciaUID: instanciaUID,
                                                                reservaUID: reservaUID
                                                            }
                                                            this.respuestaUnificadaUI(metadatosRespuestaUnificada)
                                                        }
                                                    },
                                                    guardarNuevoClienteYSustituirloPorElClientePoolActual: async (instanciaUID) => {
                                                        const pernoctanteUID_DesdeInstancia = document.querySelector(`[instanciaUID="${instanciaUID}"]`).getAttribute("pernoctanteUID")
                                                        const instanciaUID_pantallaPropuestaConfirmada = casaVitini.utilidades.codigoFechaInstancia()
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const campos = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`).querySelectorAll("[campo]")
                                                        const metadatosPantallaCarga = {
                                                            mensaje: "Esperando al servidor...",
                                                            instanciaUID: instanciaUID_pantallaPropuestaConfirmada,
                                                        }
                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                                        const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUID_pantallaPropuestaConfirmada}"]`)
                                                        const transaccion = {
                                                            zona: "administracion/reservas/guardarNuevoClienteYSustituirloPorElClientePoolActual",
                                                            reserva: Number(reservaUID),
                                                            pernoctanteUID: Number(pernoctanteUID_DesdeInstancia)
                                                        }
                                                        campos.forEach((campo) => {
                                                            const nombreCampo = campo.getAttribute("campo")
                                                            const valorCampo = campo.value
                                                            transaccion[nombreCampo] = valorCampo
                                                        })
                                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                        if (!selectorPantallaDeCarga) {

                                                        }
                                                        selectorPantallaDeCarga.forEach((pantalla) => {
                                                            pantalla.remove()
                                                        })
                                                        if (respuestaServidor?.error) {
                                                            casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                        if (respuestaServidor?.ok) {
                                                            const nuevoClienteUID = respuestaServidor.nuevoClienteUID
                                                            const nombreCompleto = respuestaServidor.nombreCompleto
                                                            const pasaporte = respuestaServidor.pasaporte
                                                            const habitacionUID = respuestaServidor.habitacionUID
                                                            const selectorInstanciaRaiz = document.querySelectorAll(`[instanciaUID="${instanciaUID}"]`)
                                                            selectorInstanciaRaiz.forEach((pantalla) => {
                                                                pantalla.remove()
                                                            })
                                                            const selectorContenedorPernoctanteAntiguo = document.querySelector(`[contenedor=pernoctante][pernoctanteUID="${pernoctanteUID_DesdeInstancia}"]`)
                                                            selectorContenedorPernoctanteAntiguo.remove()
                                                            if (habitacionUID) {
                                                                const selectorHabitacion = document.querySelector(`[habitacionUID="${habitacionUID}"]`)
                                                                let metadatos = {
                                                                    tipoPernoctante: "cliente",
                                                                    clienteUID: nuevoClienteUID,
                                                                    pernoctanteUID: pernoctanteUID_DesdeInstancia,
                                                                    estadoAlojamiento: "alojado",
                                                                }
                                                                const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(metadatos)
                                                                metadatos = {
                                                                    nombreCompleto: nombreCompleto,
                                                                }
                                                                const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(metadatos)
                                                                bloquePernoctantes.appendChild(nombrePernoctante)
                                                                metadatos = {
                                                                    pasaporte: pasaporte,
                                                                }
                                                                const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(metadatos)
                                                                bloquePernoctantes.appendChild(identificacionPernoctante)
                                                                selectorHabitacion.appendChild(bloquePernoctantes)
                                                            } else {
                                                                const metadatosBloquePernoctantes = {
                                                                    tipoPernoctante: "cliente",
                                                                    clienteUID: nuevoClienteUID,
                                                                    pernoctanteUID: pernoctanteUID_DesdeInstancia,
                                                                    estadoAlojamiento: "noAlojado"
                                                                }
                                                                const bloquePernoctantes = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI(metadatosBloquePernoctantes)
                                                                const metadatosNombreUi = {
                                                                    nombreCompleto: nombreCompleto,
                                                                }
                                                                const nombrePernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI(metadatosNombreUi)
                                                                bloquePernoctantes.appendChild(nombrePernoctante)
                                                                const metadatosPasaporte = {
                                                                    pasaporte: pasaporte,
                                                                }
                                                                const identificacionPernoctante = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI(metadatosPasaporte)
                                                                bloquePernoctantes.appendChild(identificacionPernoctante)
                                                                const zonaDestino = document.querySelector(`[componente=contenedorPernoctantesSinHabitacion]`)
                                                                zonaDestino.appendChild(bloquePernoctantes)
                                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.controlEspacioPernoctantesSinAlojamiento()
                                                            }
                                                        }
                                                    },
                                                    guardarNuevoClienteYAnadirloComoPernoctnante: async (data) => {

                                                        const e = data.e
                                                        const contenedor = e.target.closest("[operacion]")
                                                        const instanciaUID_contenedorNuevoPernoctanteUI = contenedor.getAttribute("instanciaUID")
                                                        const habitacionUID = contenedor.getAttribute("habitacionUID")
                                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                        const campos = e.target.closest("[formulario=nuevoCliente]").querySelectorAll(`[campo]`)
                                                        const instanciaUIDPantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()

                                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta({
                                                            mensaje: "Creando cliente y asignandolo a la habitacion...",
                                                            instanciaUID: instanciaUIDPantallaDeCarga,
                                                        })

                                                        const transaccion = {
                                                            zona: "administracion/reservas/detallesReserva/pernoctantes/crearClienteDesdeReservaYAnadirloAreserva",
                                                            reservaUID: reservaUID,
                                                            habitacionUID: habitacionUID
                                                        }
                                                        campos.forEach((campo) => {
                                                            const nombreCampo = campo.getAttribute("campo")
                                                            const datoCampo = campo.value
                                                            transaccion[nombreCampo] = datoCampo
                                                        })
                                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                                        const selectorPantallaDeCarga = document.querySelector(`[instanciaUID="${instanciaUIDPantallaDeCarga}"]`)
                                                        if (!selectorPantallaDeCarga) {
                                                            return
                                                        }
                                                        selectorPantallaDeCarga.remove()
                                                        if (respuestaServidor?.error) {
                                                            return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor.error)
                                                        }
                                                        if (respuestaServidor?.ok) {

                                                            const selectorAnadirPernoctanteRedenrizada = document.querySelector(`[instanciaUID="${instanciaUID_contenedorNuevoPernoctanteUI}"]`)
                                                            if (selectorAnadirPernoctanteRedenrizada) {
                                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                            }

                                                            const datosNuevoCliente = respuestaServidor.nuevoCliente
                                                            const nombre = datosNuevoCliente.nombre
                                                            const primerApellido = datosNuevoCliente.primerApellido ? datosNuevoCliente.primerApellido : ""
                                                            const segundoApellido = datosNuevoCliente.segundoApellido ? datosNuevoCliente.segundoApellido : ""
                                                            const pasaporte = datosNuevoCliente.pasaporte
                                                            const telefono = datosNuevoCliente.telefono
                                                            const correoElectronico = datosNuevoCliente.correoElectronico

                                                            const pernoctanteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteUI({
                                                                tipoPernoctante: "cliente",
                                                                clienteUID: respuestaServidor?.nuevoUIDCliente,
                                                                pernoctanteUID: respuestaServidor?.nuevoUIDPernoctante,
                                                                estadoAlojamiento: "alojado"
                                                            })

                                                            const pernoctanteNombreUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctanteNombreUI({
                                                                clienteUID: respuestaServidor?.nuevoUIDCliente,
                                                                nombreCompleto: `${nombre} ${primerApellido} ${segundoApellido}`
                                                            })

                                                            const pernoctantePasaporteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.alojamiento.pernoctantes.pernoctantePasaporteUI({
                                                                clienteUID: respuestaServidor?.nuevoUIDCliente,
                                                                pasaporte: transaccion.pasaporte
                                                            })
                                                            pernoctanteUI.appendChild(pernoctanteNombreUI)
                                                            pernoctanteUI.appendChild(pernoctantePasaporteUI)
                                                            const selectorHabitacionDestino = document.querySelector(`[habitacionUID="${habitacionUID}"]`)
                                                            selectorHabitacionDestino.appendChild(pernoctanteUI)
                                                        }
                                                    },

                                                },

                                                detallesDelTitularUI: (detallesDelTitular) => {
                                                    const clienteUID = detallesDelTitular.clienteUID
                                                    const nombreTitular = detallesDelTitular.nombreTitular
                                                    const pasaporteTitular = detallesDelTitular.pasaporteTitular
                                                    const tipoTitular = detallesDelTitular.tipoTitular
                                                    const mailTitular = detallesDelTitular.mailTitular ? detallesDelTitular.mailTitular : "(Sin mail)"
                                                    const telefonoTitular = detallesDelTitular.telefonoTitular ? detallesDelTitular.telefonoTitular : "(Sin telefono)"
                                                    const detallesRapidosDelTitular = document.createElement("div")
                                                    detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedorGlobal")
                                                    // Nombre completo titular
                                                    let contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    let nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Nombre completo del titular"
                                                    contenedorDato.appendChild(nombreDato)
                                                    let valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = nombreTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // Pasaporte titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Pasaporte"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = pasaporteTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // telefono titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Teléfono"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = telefonoTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // mail titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "e-Mail"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = mailTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    return detallesRapidosDelTitular
                                                },
                                                detallesDelTitularPoolUI: (detallesDelTitular) => {
                                                    const nombreTitular = detallesDelTitular.nombreTitular
                                                    const pasaporteTitular = detallesDelTitular.pasaporteTitular
                                                    const tipoTitular = "Titular pool"
                                                    const mailTitular = detallesDelTitular.mailTitular ? detallesDelTitular.mailTitular : "(Sin mail)"
                                                    const telefonoTitular = detallesDelTitular.telefonoTitular ? detallesDelTitular.telefonoTitular : "(Sin telefono)"
                                                    const detallesRapidosDelTitular = document.createElement("div")
                                                    detallesRapidosDelTitular.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedorGlobal")
                                                    // Nombre completo titular
                                                    let contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    let nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Nombre completo del titular"
                                                    contenedorDato.appendChild(nombreDato)
                                                    let valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = nombreTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // Pasaporte titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Pasaporte"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = pasaporteTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // telefono titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "Teléfono"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = telefonoTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    // mail titular
                                                    contenedorDato = document.createElement("div")
                                                    contenedorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_contenedor")
                                                    nombreDato = document.createElement("div")
                                                    nombreDato.classList.add("administracion_reservas_detallesReserva_infoTitular_nombreDato")
                                                    nombreDato.innerText = "e-Mail"
                                                    contenedorDato.appendChild(nombreDato)
                                                    valorDato = document.createElement("div")
                                                    valorDato.classList.add("administracion_reservas_detallesReserva_infoTitular_dato")
                                                    valorDato.classList.add("negrita")
                                                    valorDato.innerText = mailTitular
                                                    contenedorDato.appendChild(valorDato)
                                                    detallesRapidosDelTitular.appendChild(contenedorDato)
                                                    return detallesRapidosDelTitular
                                                },
                                                botonCerrarFormularioNuevoCliente: () => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Cerrar gestion del titular de la reserva"
                                                    boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                    boton
                                                },
                                                botonCerrar: () => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Cerrar gestion del titular de la reserva"
                                                    boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                    return boton
                                                },
                                                botonDesasociar: (metadatos) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Desasociar cliente como titular"
                                                    boton.setAttribute("boton", "desasociarTitular")
                                                    boton.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.desasociarClienteComoTitular(metadatos)
                                                    })
                                                    return boton
                                                },
                                                botonCambiarTitular: (instanciaUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Cambiar titular"
                                                    boton.setAttribute("boton", "cambiarTitular")
                                                    boton.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.cambiarTitular(instanciaUID)
                                                    })
                                                    return boton
                                                },
                                                botonIrALaFichaDelClinete: (clienteUID) => {
                                                    const boton = document.createElement("a")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Ir a la ficha del cliente"
                                                    boton.setAttribute("href", "/administracion/clientes/" + clienteUID)
                                                    boton.setAttribute("vista", "/administracion/clientes/" + clienteUID)
                                                    boton.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                    return boton
                                                },
                                                titulo: (titulo) => {
                                                    const tituloUI = document.createElement("p")
                                                    tituloUI.classList.add("detallesReservaTituloCancelarReserva")
                                                    tituloUI.innerText = titulo
                                                    return tituloUI
                                                },
                                                infoUI: (info) => {
                                                    const infoUI = document.createElement("p")
                                                    infoUI.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                                    infoUI.innerText = info
                                                    return infoUI
                                                },
                                                botonCerrarCambiarTitular: (instanciaUID) => {
                                                    const boton = document.createElement("div")
                                                    boton.classList.add("administracion_reservas_detallesReservas_gestionTitular_botonCerrar")
                                                    boton.innerHTML = "Cerrar formulario para cambiar de titular"
                                                    boton.setAttribute("boton", "cerrarCambiarTitular")
                                                    boton.addEventListener("click", () => {
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.cancelarCambiarTitular(instanciaUID)
                                                    })
                                                    return boton
                                                },
                                                cambiarTitular: (instanciaUID) => {
                                                    const selectorBotonCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cambiarTitular]`)
                                                    const selectorBotonDesasociar = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=desasociarTitular]`)
                                                    selectorBotonCambiarTitular.style.display = "none"
                                                    selectorBotonDesasociar.style.display = "none"
                                                    const selectorNuevoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`)
                                                    selectorNuevoClienteUI.removeAttribute("style")
                                                    const selectorbotonCerrarCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cerrarCambiarTitular]`)
                                                    selectorbotonCerrarCambiarTitular.removeAttribute("style")
                                                },
                                                respuestaUnificadaUI: function (metadatos) {
                                                    const clienteUID = metadatos.clienteUID
                                                    const nombreCompleto = metadatos.nombreCompleto
                                                    const pasaporte = metadatos.pasaporte
                                                    const mail = metadatos.mailTitular
                                                    const telefono = metadatos.telefon
                                                    const instanciaUID = metadatos.instanciaUID
                                                    const reservaUID = metadatos.reservaUID
                                                    const selectorDestinoRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [espacio=gestionTitular]`)
                                                    if (selectorDestinoRenderizado) {
                                                        selectorDestinoRenderizado.innerHTML = null
                                                        const titulo = "Detalles del titular"
                                                        const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titulo(titulo)
                                                        selectorDestinoRenderizado.appendChild(tituloUI)
                                                        const info = "Vista rapída de los detalles del titular de la reserva. Puedes cambiar el titular de la reserva si lo necesitas o desasociar el titular. Tambien puedes cambiar el titular, esto te permite rellenar los datos mientras ves los datos del actual titular por si fuera necesario"
                                                        const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info)
                                                        selectorDestinoRenderizado.appendChild(infoUI)
                                                        const detallesDelTitular = {
                                                            clienteUID: clienteUID,
                                                            nombreTitular: nombreCompleto,
                                                            pasaporteTitular: pasaporte,
                                                            tipoTitular: "titularCliente",
                                                            mailTitular: mail,
                                                            telefonoTitular: telefono,
                                                        }
                                                        const detallesDelTitularUI = this.detallesDelTitularUI(detallesDelTitular)
                                                        selectorDestinoRenderizado.appendChild(detallesDelTitularUI)
                                                        const botonIrALaFichaDelClinete = this.botonIrALaFichaDelClinete(detallesDelTitular.clienteUID)
                                                        selectorDestinoRenderizado.appendChild(botonIrALaFichaDelClinete)
                                                        const botonCambiarTitular = this.botonCambiarTitular(instanciaUID)
                                                        selectorDestinoRenderizado.appendChild(botonCambiarTitular)
                                                        const buscadorUI = this.buscadorRapido.UI({
                                                            instanciaUID
                                                        })
                                                        selectorDestinoRenderizado.appendChild(buscadorUI)

                                                        const nuevoClienteUI = this.nuevoCliente.UI({
                                                            instanciaUID
                                                        })
                                                        nuevoClienteUI.style.display = "none"
                                                        selectorDestinoRenderizado.appendChild(nuevoClienteUI)
                                                        const metadatosBotonDesasociar = {
                                                            instanciaUID: instanciaUID,
                                                            reservaUID: reservaUID
                                                        }
                                                        const botonCerrarCambiarTitular = this.botonCerrarCambiarTitular(instanciaUID)
                                                        botonCerrarCambiarTitular.style.display = "none"
                                                        selectorDestinoRenderizado.appendChild(botonCerrarCambiarTitular)
                                                        const botonDesasociar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonDesasociar(metadatosBotonDesasociar)
                                                        selectorDestinoRenderizado.appendChild(botonDesasociar)
                                                        const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                        selectorDestinoRenderizado.appendChild(botonCerrar)
                                                    }
                                                },
                                                cancelarCambiarTitular: (instanciaUID) => {
                                                    const selectorBotonCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cambiarTitular]`)
                                                    const selectorBotonDesasociar = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=desasociarTitular]`)
                                                    selectorBotonCambiarTitular.removeAttribute("style")
                                                    selectorBotonDesasociar.removeAttribute("style")
                                                    const selectorNuevoClienteUI = document.querySelector(`[instanciaUID="${instanciaUID}"] [formulario=nuevoCliente]`)
                                                    selectorNuevoClienteUI.style.display = "none"
                                                    const selectorbotonCerrarCambiarTitular = document.querySelector(`[instanciaUID="${instanciaUID}"] [boton=cerrarCambiarTitular]`)
                                                    selectorbotonCerrarCambiarTitular.style.display = "none"
                                                },
                                                titularPool: {
                                                    UI: async function (metadatos) {
                                                        const nombreTitular = metadatos.nombreTitular
                                                        const pasaporteTitular = metadatos.pasaporteTitular
                                                        const mailTitular = metadatos.mailTitular
                                                        const telefonoTitular = metadatos.telefonoTitular
                                                        const tipoTitular = metadatos.tipoTitular
                                                        const instanciaUID = metadatos.instanciaUID
                                                        const selectorDestinoRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [espacio=gestionTitular]`)
                                                        if (selectorDestinoRenderizado) {
                                                            const titulo = "Datos del titular no verificado (POOL)"
                                                            const tituloUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.titulo(titulo)
                                                            selectorDestinoRenderizado.appendChild(tituloUI)
                                                            const info = "Vista de los datos del titular Pool. Estos datos provienen del cliente. Por lo tanto, deben de verificarse con la base de datos de clientes."
                                                            const infoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info)
                                                            selectorDestinoRenderizado.appendChild(infoUI)
                                                            const detallesDelTitular = {
                                                                //clienteUID: clienteUID,
                                                                nombreTitular: nombreTitular,
                                                                pasaporteTitular: pasaporteTitular,
                                                                tipoTitular: "titularCliente",
                                                                mailTitular: mailTitular,
                                                                telefonoTitular: telefonoTitular,
                                                            }
                                                            const detallesDelTitularUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.detallesDelTitularUI(detallesDelTitular)
                                                            selectorDestinoRenderizado.appendChild(detallesDelTitularUI)
                                                            const info2 = "Primero use en el campo de búsqueda para ver si existe ya una ficha del cliente para poder asociarlo. Si no existiera la ficha del cliente puede crear una en el formulario de abajo. Si selecciona un cliente existente o crea una nueva ficha del cliente desde aquí se asociará automáticamente como titular de esta reserva "
                                                            const infoUI2 = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.infoUI(info2)
                                                            selectorDestinoRenderizado.appendChild(infoUI2)

                                                            const buscadorUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.buscadorRapido.UI({
                                                                instanciaUID
                                                            })
                                                            selectorDestinoRenderizado.appendChild(buscadorUI)

                                                            const nuevoClienteUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.nuevoCliente.UI({
                                                                instanciaUID
                                                            })


                                                            selectorDestinoRenderizado.appendChild(nuevoClienteUI)
                                                            const botonCerrar = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.titular.componentes.botonCerrar()
                                                            selectorDestinoRenderizado.appendChild(botonCerrar)
                                                        }
                                                        // Obtenemos datos
                                                    }
                                                }
                                            }
                                        },
                                    },
                                },

                                transacciones: {
                                    arranque: async () => {
                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias()
                                        document.querySelector(`[categoriaReserva=transacciones]`).setAttribute("estadoCategoria", "actual")
                                        const botonTransacciones = document.querySelector("[categoriaReserva=transacciones]")
                                        botonTransacciones.style.background = "blue"
                                        botonTransacciones.style.color = "white"
                                        const contenedorDinamico = document.querySelector("[componente=contenedorDinamico]")
                                        contenedorDinamico.innerHTML = null
                                        const advertenciasInmersivasRenderizadas = document.querySelectorAll("[componente=advertenciaInmersiva]")
                                        advertenciasInmersivasRenderizadas.forEach((advertencia) =>
                                            advertencia.remove()
                                        )
                                        const instanciaUID_contenedorDinamicoTransacciones = casaVitini.utilidades.codigoFechaInstancia()
                                        const contenedorListaDePagos = document.createElement("div")
                                        contenedorListaDePagos.setAttribute("class", "administracion_reservas_detallesReservas_transacciones_contenedorListaDePagos")
                                        contenedorListaDePagos.setAttribute("instanciaUID", instanciaUID_contenedorDinamicoTransacciones)
                                        contenedorListaDePagos.setAttribute("contenedorID", "transacciones")

                                        const spinnerSimple = casaVitini.ui.componentes.spinnerSimple()
                                        contenedorListaDePagos.appendChild(spinnerSimple)

                                        contenedorDinamico.appendChild(contenedorListaDePagos)
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        const transaccion = {
                                            zona: "miCasa/misReservas/detallesReserva",
                                            reservaUID: reservaUID
                                        }
                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                        const instanciaDestino = document.querySelector(`[contenedorID=transacciones][instanciaUID="${instanciaUID_contenedorDinamicoTransacciones}"]`)
                                        if (!instanciaDestino) { }
                                        instanciaDestino.innerHTML = null
                                        if (respuestaServidor?.error) {
                                            const errorUI = document.createElement("p")
                                            errorUI.classList.add("errorCategorialGlobal")
                                            errorUI.innerText = respuestaServidor?.error
                                            instanciaDestino.appendChild(errorUI)

                                        }
                                        if (respuestaServidor?.ok) {
                                            instanciaDestino.style.justifyContent = "flex-start";
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.UI.listaDePagos({
                                                detallesPagos: respuestaServidor.reserva.detallesPagos,
                                                instanciaUID_contenedorDinamicoTransacciones
                                            })

                                        }
                                    },
                                    UI: {
                                        listaDePagos: async (data) => {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const listaDePagos = data.detallesPagos


                                            const totalReserva = listaDePagos.totalReserva
                                            const totalPagado = listaDePagos.totalPagado
                                            const faltantePorPagar = listaDePagos.faltantePorPagar
                                            const instanciaUID_contenedorDinamicoTransacciones = data.instanciaUID_contenedorDinamicoTransacciones
                                            const totalReembolsado = listaDePagos.totalReembolsado
                                            const porcentajeReembolsado = listaDePagos.porcentajeReembolsado
                                            const porcentajePagado = listaDePagos.porcentajePagado
                                            const pagos = listaDePagos.pagos // array
                                            const contenedorAdvertenciaInmersiva = document.createElement("div")
                                            contenedorAdvertenciaInmersiva.classList.add("administracion_reservas_detallesReserva_contenedorListaDePagos")
                                            const titulo = document.createElement("p")
                                            titulo.classList.add("detallesReserva_reembolso_tituloGlobal")
                                            titulo.innerText = "Transacciones"
                                            contenedorAdvertenciaInmersiva.appendChild(titulo)
                                            const infoGlobal = document.createElement("div")
                                            infoGlobal.classList.add("detallesReserva_reembolso_infoGlobal")
                                            infoGlobal.innerText = `Estos son los pagos de esta reserva. Aquí se detallan los pagos realizados para esta reserva, incluyendo la plataforma de pago utilizada, ya sea pasarela, en metálico, cheque, etc.`
                                            contenedorAdvertenciaInmersiva.appendChild(infoGlobal)
                                            const bloqueTransacciones = document.createElement("div")
                                            bloqueTransacciones.classList.add("detallesReserva_transacciones_bloqueGlobal")
                                            bloqueTransacciones.setAttribute("contenedor", "transaccionesUI")
                                            // const bloqueBotones = document.createElement("div")
                                            // bloqueBotones.classList.add("detallesReserva_transacciones_bloqueBotones")
                                            // const botonCrearPagoManual = document.createElement("div")
                                            // botonCrearPagoManual.classList.add("detallesReserva_transacciones_botonV1")
                                            // botonCrearPagoManual.addEventListener("click", () => {
                                            //     casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.crearPagoManual.UI()
                                            // })
                                            // botonCrearPagoManual.innerText = "Crear pago manual12"
                                            //bloqueBotones.appendChild(botonCrearPagoManual)
                                            const botonCerrar = document.createElement("div")
                                            botonCerrar.classList.add("detallesReserva_transacciones_botonV1")
                                            botonCerrar.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                            botonCerrar.innerText = "Cerrar"
                                            //bloqueBotones.appendChild(botonCerrar)
                                            //bloqueTransacciones.appendChild(bloqueBotones)
                                            const bloqueDatosGenerales = document.createElement("div")
                                            bloqueDatosGenerales.classList.add("detallesReserva_transacciones_bloqueDatosGenerales")
                                            // Total reserva
                                            let bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            let bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Total de la reserva"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            let bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.setAttribute("componentePago", "totalReserva")
                                            bloqueDato.innerText = totalReserva + "$"
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDatosGenerales.appendChild(bloqueInfoDato)
                                            // Total pagado
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.setAttribute("componentePago", "porcentajePagado")
                                            bloqueInfo.innerText = `Total pagado (${porcentajePagado})`
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.setAttribute("componentePago", "totalPagado")
                                            bloqueDato.innerText = totalPagado + "$"
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDatosGenerales.appendChild(bloqueInfoDato)
                                            // Total reembolsado
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.setAttribute("componentePago", "porcentajeReembolsado")
                                            bloqueInfo.innerText = `Total reembolsado (${porcentajeReembolsado})`
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.setAttribute("componentePago", "totalReembolsado")
                                            bloqueDato.innerText = totalReembolsado + "$"
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDatosGenerales.appendChild(bloqueInfoDato)
                                            // Faltante por pagar
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Faltante por pagar"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.setAttribute("componentePago", "faltantePorPagar")
                                            bloqueDato.innerText = faltantePorPagar + "$"
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDatosGenerales.appendChild(bloqueInfoDato)
                                            bloqueTransacciones.appendChild(bloqueDatosGenerales)
                                            if (pagos.length === 0) {
                                                const infoNoPagoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.UI.infoNoPagos()
                                                bloqueTransacciones.appendChild(infoNoPagoUI)

                                            }
                                            if (pagos.length > 0) {
                                                const bloqueListaDePagos = document.createElement("div")
                                                bloqueListaDePagos.classList.add("reservaDetalles_transacciones_bloqueListaDePagos")
                                                bloqueListaDePagos.setAttribute("contenedor", "listaDePagos")
                                                for (const detallesDelPago of pagos) {
                                                    const pagoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.UI.pagoUI(detallesDelPago)
                                                    bloqueListaDePagos.appendChild(pagoUI)
                                                }
                                                bloqueTransacciones.appendChild(bloqueListaDePagos)
                                            }
                                            const enlacePagoUIRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_contenedorDinamicoTransacciones}"]`)
                                            enlacePagoUIRenderizada.innerHTML = null
                                            contenedorAdvertenciaInmersiva.appendChild(bloqueTransacciones)
                                            enlacePagoUIRenderizada.appendChild(contenedorAdvertenciaInmersiva)
                                        },
                                        realizarReembolso_quienMeLlama: async () => {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const transaccion = {
                                                zona: "administracion/enlacesDePago/detallesDelEnlace",
                                                enlaceUID: Number(reservaUID)
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            if (respuestaServidor?.error) {
                                                const advertenciasInmersivasRenderizadas = document.querySelectorAll("[componente=advertenciaInmersiva]")
                                                advertenciasInmersivasRenderizadas.forEach((advertencia) =>
                                                    advertencia.remove()
                                                )
                                                casaVitini.administracion.comportamiento_de_precios.portadaUI()
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                document.querySelector("[componente=iconoCargaEnlace]")?.remove()
                                                const detallesEnlace = respuestaServidor?.ok
                                                const uidEnlace = detallesEnlace.reserva
                                                const nombreEnlace = detallesEnlace.nombreEnlace
                                                const codigo = detallesEnlace.codigo
                                                const precio = detallesEnlace.precio
                                                const descripcion = detallesEnlace.descripcion
                                                const estadoPago = detallesEnlace.estadoPago
                                                const caducidadUTC = detallesEnlace.caducidadUTC
                                                const caducidadMadrid = detallesEnlace.caducidadMadrid
                                                const caducidadNicaragua = detallesEnlace.caducidadNicaragua
                                                const advertenciaInmersivaIU = document.createElement("div")
                                                advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                                advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                                const contenedorAdvertenciaInmersiva = document.createElement("div")
                                                contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                                                const titulo = document.createElement("p")
                                                titulo.classList.add("detallesReservaTituloCancelarReserva")
                                                titulo.innerText = "Detalles del enlace de pago"
                                                contenedorAdvertenciaInmersiva.appendChild(titulo)
                                                const bloque = document.createElement("div")
                                                bloque.classList.add("detallesReservaCancelarReservaBloqueBloqueoApartamentos")
                                                const info = document.createElement("div")
                                                info.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                                info.innerText = `Aquí tienes los detalles del enlace de pago generado y vigente`
                                                bloque.appendChild(info)
                                                const campoNombre = document.createElement("input")
                                                campoNombre.classList.add("detallesReserva_campoNombreEnlace")
                                                campoNombre.placeholder = "Escribe un nombre para el nuevo enlace o genere el enlace con un nombre genérico"
                                                campoNombre.setAttribute("campo", "nombreEnlace")
                                                campoNombre.value = nombreEnlace
                                                bloque.appendChild(campoNombre)
                                                const contenedorCacudidaUTC = document.createElement("div")
                                                contenedorCacudidaUTC.classList.add("detallesReserva_contenedorCaducidad")
                                                const tituloCadicdadUTC = document.createElement("div")
                                                tituloCadicdadUTC.classList.add("detallesReserva_caducidadTitulo")
                                                tituloCadicdadUTC.classList.add("negrita")
                                                tituloCadicdadUTC.innerText = "Caducidad en horario universal (UTC)"
                                                contenedorCacudidaUTC.appendChild(tituloCadicdadUTC)
                                                const caducidadUIUTC = document.createElement("div")
                                                caducidadUIUTC.classList.add("detallesReserva_caduciadaUI")
                                                caducidadUIUTC.innerText = caducidadUTC
                                                contenedorCacudidaUTC.appendChild(caducidadUIUTC)
                                                bloque.append(contenedorCacudidaUTC)
                                                const contenedorCadudidaMadrid = document.createElement("div")
                                                contenedorCadudidaMadrid.classList.add("detallesReserva_contenedorCaducidad")
                                                const tituloCadicdadMadrid = document.createElement("div")
                                                tituloCadicdadMadrid.classList.add("detallesReserva_caducidadTitulo")
                                                tituloCadicdadMadrid.classList.add("negrita")
                                                tituloCadicdadMadrid.innerText = "Caducidad en horario de Madrid"
                                                contenedorCadudidaMadrid.appendChild(tituloCadicdadMadrid)
                                                const caducidadUIMadrid = document.createElement("div")
                                                caducidadUIMadrid.classList.add("detallesReserva_caduciadaUI")
                                                caducidadUIMadrid.innerText = caducidadMadrid
                                                contenedorCadudidaMadrid.appendChild(caducidadUIMadrid)
                                                bloque.append(contenedorCadudidaMadrid)
                                                const contenedorCadudidaNicaragua = document.createElement("div")
                                                contenedorCadudidaNicaragua.classList.add("detallesReserva_contenedorCaducidad")
                                                const tituloCadicdadNicaragua = document.createElement("div")
                                                tituloCadicdadNicaragua.classList.add("detallesReserva_caducidadTitulo")
                                                tituloCadicdadNicaragua.classList.add("negrita")
                                                tituloCadicdadNicaragua.innerText = "Caducidad en horario de Nicaragua"
                                                contenedorCadudidaNicaragua.appendChild(tituloCadicdadNicaragua)
                                                const caducidadUINIcaragua = document.createElement("div")
                                                caducidadUINIcaragua.classList.add("detallesReserva_caduciadaUI")
                                                caducidadUINIcaragua.innerText = caducidadNicaragua
                                                contenedorCadudidaNicaragua.appendChild(caducidadUINIcaragua)
                                                bloque.append(contenedorCadudidaNicaragua)
                                                const codigoUI = document.createElement("a")
                                                codigoUI.classList.add("detallesReserva_enlacePago_codigoUI")
                                                codigoUI.setAttribute("href", "/pagos/" + codigo)
                                                codigoUI.setAttribute("vista", "/pago/" + codigo)
                                                codigoUI.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                codigoUI.innerText = " Ir al enlace"
                                                bloque.appendChild(codigoUI)
                                                const campoDescripcion = document.createElement("textarea")
                                                campoDescripcion.classList.add("detallesReserva_campoDescripcion")
                                                campoDescripcion.placeholder = "No es obligatorio, pero escriba una descripción si quieres para definir aún más a este enlace si lo necesitas."
                                                campoDescripcion.setAttribute("campo", "descripcion")
                                                campoDescripcion.value = descripcion
                                                bloque.appendChild(campoDescripcion)
                                                contenedorAdvertenciaInmersiva.appendChild(bloque)
                                                const bloqueBotones = document.createElement("div")
                                                bloqueBotones.classList.add("detallesReservaCancelarReservabloqueBotones")
                                                const botonConfirmar = document.createElement("div")
                                                botonConfirmar.classList.add("detallesReservaCancelarBoton")
                                                botonConfirmar.setAttribute("componente", "botonActualizarEnlace")
                                                botonConfirmar.innerText = "Actualizar enlace de pago"
                                                botonConfirmar.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.enlacesDePago.acutalizarEnlace)
                                                bloqueBotones.appendChild(botonConfirmar)
                                                const botonEliminar = document.createElement("div")
                                                botonEliminar.classList.add("detallesReservaCancelarBoton")
                                                botonEliminar.setAttribute("componente", "botonConfirmarCancelarReserva")
                                                botonEliminar.innerText = "Eliminar enlace de pago"
                                                botonEliminar.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.enlacesDePago.eliminarEnlace.UI)
                                                bloqueBotones.appendChild(botonEliminar)
                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("detallesReservaCancelarBoton")
                                                botonCancelar.innerText = "Cerrar detalles del enlace de pago"
                                                botonCancelar.addEventListener("click", () => {
                                                    let selectorAdvertenciaInmersiva = document.querySelectorAll("[componente=advertenciaInmersiva]")
                                                    selectorAdvertenciaInmersiva.forEach((advertenciaInmersiva) => {
                                                        advertenciaInmersiva.remove()
                                                    })
                                                })
                                                bloqueBotones.appendChild(botonCancelar)
                                                contenedorAdvertenciaInmersiva.appendChild(bloqueBotones)
                                                const enlacePagoUIRenderizada = document.querySelector("[componenteUID=enlaceDePagoUI]")
                                                enlacePagoUIRenderizada.innerHTML = null
                                                enlacePagoUIRenderizada.appendChild(contenedorAdvertenciaInmersiva)
                                            }
                                        },
                                        pagoUI: (metadatos) => {

                                            const pagoUID = metadatos.pagoUID
                                            const plataformaDePagoIDV = metadatos.plataformaDePagoIDV
                                            const pagoUIDPasarela = metadatos.pagoUIDPasarela
                                            const tarjetaDigitos = metadatos.tarjetaDigitos
                                            const fechaPago = metadatos.fechaPago
                                            const fechaPagoTZ_ISO = metadatos.fechaPagoTZ_ISO
                                            const tarjeta = metadatos.tarjeta
                                            const cantidad = metadatos.cantidad
                                            const sumaDeLoReembolsado = metadatos.sumaDeLoReembolsado
                                            const reembolsado = metadatos.reembolsado
                                            const chequeUID = metadatos.chequeUID
                                            const instanciaUID_contenedorDinamicoTransacciones = metadatos.instanciaUID_contenedorDinamicoTransacciones

                                            const fechaPagoUTC_objeto = fechaPago.split("T")
                                            const fechaUTC_array = fechaPagoUTC_objeto[0].split("-")
                                            const horaUTC_array = fechaPagoUTC_objeto[1].split("-")[0]
                                            const fechaPagoUTC_humana = `${fechaUTC_array[2]}/${fechaUTC_array[1]}/${fechaUTC_array[0]} ${horaUTC_array}`

                                            const fechaPagoTZ_objeto = fechaPagoTZ_ISO.split("T")
                                            const fechaTZ_array = fechaPagoTZ_objeto[0].split("-")
                                            const horaTZ_array = fechaPagoTZ_objeto[1].split("-")[0]
                                            const fechaPagoTZ_humana = `${fechaTZ_array[2]}/${fechaTZ_array[1]}/${fechaTZ_array[0]} ${horaTZ_array}`

                                            const plataformaDePagoUI = {
                                                efectivo: "Efectivo",
                                                transferenciaBancaria: "Transferencia bancaria",
                                                tarjeta: "Tarteja TPV",
                                                pasarela: "Pasarela de pago",
                                                cheque: "Cheque"
                                            }
                                            const bloqueDetallesDelPago = document.createElement("div")
                                            bloqueDetallesDelPago.classList.add("reservaDetalles_transacciones_bloque_miCasa")
                                            bloqueDetallesDelPago.setAttribute("pagoUID", pagoUID)
                                            // bloqueDetallesDelPago.addEventListener("click", () => {
                                            //     const metadatos = {
                                            //         pagoUID: pagoUID,
                                            //         instanciaUID_contenedorDinamicoTransacciones: instanciaUID_contenedorDinamicoTransacciones
                                            //     }
                                            //     casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.detallesDelPago.UI(metadatos)
                                            // })
                                            // PagoUID
                                            let bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            let bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Identificador del pago (pagoUID)"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            let bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = pagoUID
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                            // Plataforma de pago
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Plataforma de pago"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = plataformaDePagoUI[plataformaDePagoIDV]
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                            // pagoUIDPasarela
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.innerText = "Identificador del pago dentro de la pasarela"
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = pagoUIDPasarela
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            if (plataformaDePagoIDV === "pasarela") {
                                                bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                            }
                                            // tarjetaDigiros
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Tarjeta de credito"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = `**** **** **** ${tarjetaDigitos} (${tarjeta})`
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            if (plataformaDePagoIDV === "pasarela") {
                                                bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                            }
                                            // Fecha de pago UTC
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Fecha del pago en UTC"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = fechaPagoUTC_humana
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                            // Fecha de pago TZ
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Fecha del pago en hora local"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = fechaPagoTZ_humana
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                            // Cantidad del pago 
                                            bloqueInfoDato = document.createElement("div")
                                            bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Cantidad cobrada en dolares"
                                            bloqueInfoDato.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = cantidad + "$"
                                            bloqueInfoDato.appendChild(bloqueDato)
                                            bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                            // Resumen de reembolsos
                                            const bloqueSumaDeLoReembolsado = document.createElement("div")
                                            bloqueSumaDeLoReembolsado.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Resumen de reembolsos"
                                            bloqueSumaDeLoReembolsado.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = `${sumaDeLoReembolsado}$, reembolsado ${reembolsado}`
                                            bloqueSumaDeLoReembolsado.appendChild(bloqueDato)
                                            if (sumaDeLoReembolsado) {
                                                bloqueDetallesDelPago.appendChild(bloqueSumaDeLoReembolsado)
                                            }
                                            // Cheque UID
                                            const bloqueChequeUID = document.createElement("div")
                                            bloqueChequeUID.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                            bloqueInfo = document.createElement("div")
                                            bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                            bloqueInfo.classList.add("negrita")
                                            bloqueInfo.innerText = "Identificador del cheque"
                                            bloqueChequeUID.appendChild(bloqueInfo)
                                            bloqueDato = document.createElement("div")
                                            bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                            bloqueDato.innerText = chequeUID
                                            bloqueChequeUID.appendChild(bloqueDato)
                                            if (chequeUID) {
                                                bloqueDetallesDelPago.appendChild(bloqueChequeUID)
                                            }
                                            return bloqueDetallesDelPago
                                        },
                                        infoNoPagos: () => {
                                            const infoNoPagos = document.createElement("div")
                                            infoNoPagos.classList.add("reservaDetalles_transacciones_textoV1")
                                            infoNoPagos.setAttribute("contenedor", "infoNoPagos")
                                            infoNoPagos.innerText = "Esta reserva no tiene ningún pago registrado. Si ha realizado el pago y aún no aparece, espere unos días o póngase en contacto con Casa Vitini para asegurarse de que su pago se registre correctamente."
                                            return infoNoPagos
                                        }
                                    },

                                    detallesDelPago: {
                                        UI: async (metadatos) => {
                                            const pagoUID = metadatos.pagoUID
                                            const instanciaUID_contenedorDinamicoTransacciones = metadatos.instanciaUID_contenedorDinamicoTransacciones

                                            document.body.style.overflow = 'hidden';
                                            const instanciaUIDDetalleDelPago = casaVitini.utilidades.codigoFechaInstancia()
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const mensajeSpinner = "Esperando al servidor..."
                                            const spinnerPorRenderizar = casaVitini.ui.componentes.spinner(mensajeSpinner)
                                            const advertenciaInmersivaIU = document.createElement("div")
                                            advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                            advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                            advertenciaInmersivaIU.setAttribute("instanciaUID", instanciaUIDDetalleDelPago)
                                            const contenedorAdvertenciaInmersiva = document.createElement("div")
                                            contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                                            const contenidoAdvertenciaInmersiva = document.createElement("div")
                                            contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                                            contenidoAdvertenciaInmersiva.setAttribute("espacio", "detallesDelPago")
                                            contenidoAdvertenciaInmersiva.appendChild(spinnerPorRenderizar)
                                            contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                            advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                                            document.querySelector("main").appendChild(advertenciaInmersivaIU)
                                            const ocultaPanales = () => {
                                                const selectorContenedores = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"]`)
                                                const contenedorNuevoReembolso = selectorContenedores.querySelector("[contenedor=nuevoReembolso]")
                                                const contenedorEliminarPago = selectorContenedores.querySelector("[contenedor=eliminarPago]")
                                                contenedorNuevoReembolso.innerHTML = null
                                                contenedorNuevoReembolso.removeAttribute("style")
                                                contenedorEliminarPago.innerHTML = null
                                                contenedorEliminarPago.removeAttribute("style")
                                            }
                                            const transaccion = {
                                                zona: "miCasa/misReservas/detallesReserva",
                                                reservaUID: reservaUID
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                const detallesDelPago = respuestaServidor.ok.detallesDelPago
                                                const plataformaDePagoIDV = detallesDelPago.plataformaDePagoIDV
                                                const pagoUID = detallesDelPago.pagoUID
                                                const pagoUIDPasarela = detallesDelPago.pagoUIDPasarela
                                                const tarjetaDigitos = detallesDelPago.tarjetaDigitos
                                                const fechaPagoUTC_ISO = detallesDelPago.fechaPagoUTC_ISO
                                                const fechaPagoTZ_ISO = detallesDelPago.fechaPagoTZ_ISO

                                                const fechaPagoUTC_objeto = fechaPagoUTC_ISO.split("T")
                                                const fechaUTC_array = fechaPagoUTC_objeto[0].split("-")
                                                const horaUTC_array = fechaPagoUTC_objeto[1].split("-")[0]
                                                const fechaPagoUTC_humana = `${fechaUTC_array[2]}/${fechaUTC_array[1]}/${fechaUTC_array[0]} ${horaUTC_array}`

                                                const fechaPagoTZ_objeto = fechaPagoTZ_ISO.split("T")
                                                const fechaTZ_array = fechaPagoTZ_objeto[0].split("-")
                                                const horaTZ_array = fechaPagoTZ_objeto[1].split("-")[0]
                                                const fechaPagoTZ_humana = `${fechaTZ_array[2]}/${fechaTZ_array[1]}/${fechaTZ_array[0]} ${horaTZ_array}`


                                                const tarjeta = detallesDelPago.tarjeta
                                                const cantidad = detallesDelPago.cantidad
                                                const sumaDeLoReembolsado = detallesDelPago.sumaDeLoReembolsado
                                                const reembolsado = detallesDelPago.reembolsado
                                                const deglosePorReembolso = respuestaServidor.deglosePorReembolso


                                                const plataformaDePagoUI = {
                                                    efectivo: "Efectivo",
                                                    transferenciaBancaria: "Transferencia bancaria",
                                                    tarjeta: "Tarteja TPV",
                                                    pasarela: "Pasarela de pago",
                                                    cheque: "Cheque"
                                                }



                                                const selectorInstanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"]`)?.querySelector("[espacio=detallesDelPago]")
                                                if (!selectorInstanciaRenderizada) {
                                                    return
                                                }
                                                selectorInstanciaRenderizada.innerHTML = null
                                                const bloque = document.createElement("div")
                                                bloque.classList.add("administracion_reservas_reservaDetalles_transacciones_reembolsos_bloqueTitulo")
                                                const info = document.createElement("div")
                                                info.classList.add("administracion_reservas_reservaDetalles_transacciones_reembolsos_tituloDetallesPago")
                                                info.innerText = `Detalles del pago ${pagoUID} de la reserva ${reservaUID} junto con sus reembolsos. Desde aquí puedes ver los detalles de este pago y gestionar los reembolsos. Puedes crear reembolsos. Tanto los pagos hechos por la pasarela como los reembolsos enviados a la pasarela no se pueden eliminar. Solo se pueden eliminar los pagos manuales.`
                                                bloque.appendChild(info)
                                                selectorInstanciaRenderizada.appendChild(bloque)
                                                const bloqueDetallesDelPago = document.createElement("div")
                                                bloqueDetallesDelPago.classList.add("administracion_reservas_reservaDetalles_transacciones_reembolsos_bloqueDetallePago")
                                                bloqueDetallesDelPago.setAttribute("pagoUID", pagoUID)
                                                // PagoUID
                                                let bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                let bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfo.innerText = "Identificador del pago (pagoUID)"
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                let bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.innerText = pagoUID
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                // Plataforma de pago
                                                bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfo.innerText = "Plataforma de pago"
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.innerText = plataformaDePagoUI[plataformaDePagoIDV]
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                // pagoUIDPasarela
                                                bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.innerText = "Identificador del pago dentro de la pasarela"
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.innerText = pagoUIDPasarela
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                if (plataformaDePagoIDV === "pasarela") {
                                                    bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                }
                                                // tarjetaDigiros
                                                bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfo.innerText = "Tarjeta de credito"
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.innerText = `**** **** **** ${tarjetaDigitos} (${tarjeta})`
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                if (plataformaDePagoIDV === "pasarela") {
                                                    bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                }
                                                // Fecha de pago UTC
                                                bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfo.innerText = "Fecha del pago UTC"
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.innerText = fechaPagoUTC_humana
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                // Fecha de pago TZ
                                                bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfo.innerText = "Fecha del pago hora local"
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.innerText = fechaPagoTZ_humana
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                // Cantidad del pago 
                                                bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfo.innerText = "Cantidad cobrada en dolares"
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.setAttribute("cantidadPago", cantidad)
                                                bloqueDato.innerText = cantidad + "$"
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                // Resumen de reembolsos
                                                bloqueInfoDato = document.createElement("div")
                                                bloqueInfoDato.classList.add("reservaDetalles_transacciones_bloqueInfoDato")
                                                bloqueInfo = document.createElement("div")
                                                bloqueInfo.classList.add("reservaDetalles_transacciones_bloqueInfo")
                                                bloqueInfo.classList.add("negrita")
                                                bloqueInfo.innerText = "Resumen de reembolsos"
                                                bloqueInfoDato.appendChild(bloqueInfo)
                                                bloqueDato = document.createElement("div")
                                                bloqueDato.classList.add("reservaDetalles_transacciones_bloqueDato")
                                                bloqueDato.setAttribute("sumaDeLoReembolsado", sumaDeLoReembolsado)
                                                bloqueDato.innerText = `${sumaDeLoReembolsado}$, reembolsado ${reembolsado}`
                                                bloqueInfoDato.appendChild(bloqueDato)
                                                if (sumaDeLoReembolsado) {
                                                    bloqueDetallesDelPago.appendChild(bloqueInfoDato)
                                                }
                                                selectorInstanciaRenderizada.appendChild(bloqueDetallesDelPago)
                                                const contenedorBotones = document.createElement("div")
                                                contenedorBotones.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_contenedorBotones")
                                                const botonCrearReembolso = document.createElement("div")
                                                botonCrearReembolso.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_botonV1")
                                                botonCrearReembolso.innerText = "Crear un reembolso"
                                                botonCrearReembolso.addEventListener("click", () => {
                                                    ocultaPanales()
                                                    const selectorContenedorReembolso = document.querySelector("[contenedor=nuevoReembolso]")
                                                    selectorContenedorReembolso.innerText = null
                                                    const metadatos = {
                                                        pagoUID: pagoUID,
                                                        instanciaUID_contenedorDinamicoTransacciones: instanciaUID_contenedorDinamicoTransacciones,
                                                        instanciaUIDDetalleDelPago: instanciaUIDDetalleDelPago
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.reembolsos.reembolsoUI(metadatos)
                                                })
                                                contenedorBotones.appendChild(botonCrearReembolso)
                                                const botonCerrar = document.createElement("div")
                                                botonCerrar.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_botonV1")
                                                botonCerrar.innerText = "Cerrar detalles del pago"
                                                botonCerrar.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                                                contenedorBotones.appendChild(botonCerrar)
                                                const botonEliminarPago = document.createElement("div")
                                                botonEliminarPago.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_botonV1")
                                                botonEliminarPago.innerText = "Eliminar pago"
                                                if (plataformaDePagoIDV !== "pasarela") {
                                                    contenedorBotones.appendChild(botonEliminarPago)
                                                }
                                                botonEliminarPago.addEventListener("click", () => {
                                                    ocultaPanales()
                                                    const selectorContenedorEliminarPago = document.querySelector("[contenedor=eliminarPago]")
                                                    selectorContenedorEliminarPago.innerHTML = null
                                                    const metadatos = {
                                                        instanciaUIDDetalleDelPago: instanciaUIDDetalleDelPago
                                                    }
                                                    const eliminarPagoUI = casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.eliminarPagoManual.UI(metadatos)
                                                    selectorContenedorEliminarPago.appendChild(eliminarPagoUI)
                                                    selectorContenedorEliminarPago.style.display = "flex"
                                                })
                                                selectorInstanciaRenderizada.appendChild(contenedorBotones)
                                                const contenedorEliminarPago = document.createElement("div")
                                                contenedorEliminarPago.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_contenedorCrearReembolso")
                                                contenedorEliminarPago.setAttribute("contenedor", "eliminarPago")
                                                selectorInstanciaRenderizada.appendChild(contenedorEliminarPago)
                                                const contenedorCrearReembolso = document.createElement("div")
                                                contenedorCrearReembolso.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_contenedorCrearReembolso")
                                                contenedorCrearReembolso.setAttribute("contenedor", "nuevoReembolso")
                                                selectorInstanciaRenderizada.appendChild(contenedorCrearReembolso)
                                                const contenedorReembolsos = document.createElement("div")
                                                contenedorReembolsos.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_contenedorReembolso")
                                                if (deglosePorReembolso.length === 0) {
                                                    const info = document.createElement("div")
                                                    info.classList.add("adminsitracion_reservas_detalles_transacciones_reembolsos_infoNoReembolsos")
                                                    info.innerText = "Este pago no tiene ningun reembolso"
                                                    info.appendChild(contenedorReembolsos)
                                                }
                                                const botonOpcionesReembolsoUI = (metadatos) => {
                                                    const botonEliminarReembolso = document.createElement("div")
                                                    botonEliminarReembolso.classList.add("boton_opciones_reembolso_v2")
                                                    botonEliminarReembolso.innerText = "Opciones del reembolso"
                                                    botonEliminarReembolso.addEventListener("click", () => {
                                                        opcionesReembolsoUI(metadatos)
                                                    })
                                                    return botonEliminarReembolso
                                                }
                                                const restaurarTodasLasOpcionesDeTodosLosReembolsos = (pagoUID, instanciaUIDDetalleDelPago) => {
                                                    const reembolsosOpcionesDesplegadas = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"]`)?.querySelectorAll("[contenedor=opcionesDelReembolso][estado=opcionesDesplegadas]")
                                                    reembolsosOpcionesDesplegadas.forEach(contenedorOpcionesReembolso => {
                                                        contenedorOpcionesReembolso.innerHTML = null
                                                        const reembolsoUID = contenedorOpcionesReembolso.closest("[reembolsoUID]").getAttribute("reembolsoUID")
                                                        const metadatosOpcionesReembolso = {
                                                            instanciaUIDDetalleDelPago: instanciaUIDDetalleDelPago,
                                                            reembolsoUID: reembolsoUID,
                                                            pagoIUD: pagoUID
                                                        }
                                                        contenedorOpcionesReembolso.appendChild(botonOpcionesReembolsoUI(metadatosOpcionesReembolso))
                                                    });
                                                }
                                                const opcionesReembolsoUI = (metadatos) => {
                                                    const reembolsoUID = metadatos.reembolsoUID
                                                    const instanciaUIDDetalleDelPago = metadatos.instanciaUIDDetalleDelPago
                                                    const pagoUID = metadatos.pagoUID
                                                    const instanciaUID_contenedorDinamicoTransacciones = metadatos.instanciaUID_contenedorDinamicoTransacciones
                                                    restaurarTodasLasOpcionesDeTodosLosReembolsos(pagoUID, instanciaUIDDetalleDelPago)
                                                    const selectorReembolso = document.querySelector(`[reembolsoUID="${reembolsoUID}"]`).querySelector("[contenedor=opcionesDelReembolso]")
                                                    selectorReembolso.setAttribute("estado", "opcionesDesplegadas")
                                                    selectorReembolso.innerHTML = null
                                                    const contenedor = document.createElement("div")
                                                    contenedor.classList.add("administracion_reservas_detallesReserva_transacciones_opcionesReembolso")
                                                    const campoPalabra = document.createElement("input")
                                                    campoPalabra.classList.add("detallesReserva_reembolso_campoConfirmacion")
                                                    campoPalabra.setAttribute("campo", "palabra")
                                                    campoPalabra.placeholder = "Escribe la palabra eliminar"
                                                    selectorReembolso.appendChild(campoPalabra)
                                                    const botonEliminarReembolso = document.createElement("div")
                                                    botonEliminarReembolso.classList.add("boton_opciones_reembolso_v2")
                                                    botonEliminarReembolso.innerText = "Confirmar la eliminación irreversible del reembolso"
                                                    botonEliminarReembolso.addEventListener("click", () => {
                                                        const metadatosEliminarReembolso = {
                                                            instanciaUIDDetalleDelPago: instanciaUIDDetalleDelPago,
                                                            reembolsoUID: reembolsoUID,
                                                            instanciaUID_contenedorDinamicoTransacciones: instanciaUID_contenedorDinamicoTransacciones
                                                        }
                                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.reembolsos.eliminarReembolso(metadatosEliminarReembolso)
                                                    })
                                                    selectorReembolso.appendChild(botonEliminarReembolso)
                                                    const botonCerrarOpcionesDeReembolso = document.createElement("div")
                                                    botonCerrarOpcionesDeReembolso.classList.add("boton_opciones_reembolso_v2")
                                                    botonCerrarOpcionesDeReembolso.innerText = "Cerrar opciones del reembolso"
                                                    botonCerrarOpcionesDeReembolso.addEventListener("click", () => {
                                                        restaurarTodasLasOpcionesDeTodosLosReembolsos(pagoUID, instanciaUIDDetalleDelPago)
                                                    })
                                                    selectorReembolso.appendChild(botonCerrarOpcionesDeReembolso)
                                                }
                                                deglosePorReembolso.forEach((detallesDelReembolso) => {
                                                    const reembolsoUID = detallesDelReembolso.reembolsoUID
                                                    const plataformaDePagoIDV = detallesDelReembolso.plataformaDePagoIDV
                                                    const cantidad = detallesDelReembolso.cantidad
                                                    const reembolsoUIDPasarela = detallesDelReembolso.reembolsoUIDPasarela

                                                    const fechaCreacionUTC_ISO = detallesDelReembolso.fechaCreacionUTC_ISO
                                                    const fechaCreacionTZ_ISO = detallesDelReembolso.fechaCreacionTZ_ISO

                                                    const fechaActualizacionUTC_ISO = detallesDelReembolso.fechaActualizacionUTC_ISO
                                                    const fechaActualizacionTZ_ISO = detallesDelReembolso.fechaActualizacionTZ_ISO

                                                    const fechaCreacionUTC_objeto = fechaCreacionUTC_ISO.split("T")
                                                    const fechaCreacionUTC_array = fechaCreacionUTC_objeto[0].split("-")
                                                    const horaCreacionUTC_array = fechaCreacionUTC_objeto[1].split("-")[0]
                                                    const fechaCreacionUTC_humana = `${fechaCreacionUTC_array[2]}/${fechaCreacionUTC_array[1]}/${fechaCreacionUTC_array[0]} ${horaCreacionUTC_array}`

                                                    const fechaCreacionTZ_objeto = fechaCreacionTZ_ISO.split("T")
                                                    const fechaCreacionTZ_array = fechaCreacionTZ_objeto[0].split("-")
                                                    const horaCreacionTZ_array = fechaCreacionTZ_objeto[1].split("-")[0]
                                                    const fechaCreacionTZ_humana = `${fechaCreacionTZ_array[2]}/${fechaCreacionTZ_array[1]}/${fechaCreacionTZ_array[0]} ${horaCreacionTZ_array}`


                                                    const fechaActualizacionUTC_objeto = fechaActualizacionUTC_ISO?.split("T") || []
                                                    const fechaActualizacionUTC_array = fechaActualizacionUTC_objeto[0]?.split("-") || []
                                                    const horaActualizacionUTC_array = fechaActualizacionUTC_objeto[1]?.split("-")[0] || []
                                                    const fechaActualizacionUTC_humana = `${fechaActualizacionUTC_array[2]}/${fechaActualizacionUTC_array[1]}/${fechaActualizacionUTC_array[0]} ${horaActualizacionUTC_array}`

                                                    const fechaActualizacionTZ_objeto = fechaActualizacionTZ_ISO?.split("T") || []
                                                    const fechaActualizacionTZ_array = fechaActualizacionTZ_objeto[0]?.split("-") || []
                                                    const horaActualizacionTZ_array = fechaActualizacionTZ_objeto[1]?.split("-")[0] || []
                                                    const fechaActualizacionTZ_humana = `${fechaActualizacionTZ_array[2]}/${fechaActualizacionTZ_array[1]}/${fechaActualizacionTZ_array[0]} ${horaActualizacionTZ_array}`

                                                    const plataformaDePagoUI = {
                                                        efectivo: "Efectivo",
                                                        transferenciaBancaria: "Transferencia bancaria",
                                                        tarjeta: "Tarteja TPV",
                                                        pasarela: "Pasarela de pago",
                                                        cheque: "Cheque"
                                                    }


                                                    const contenedorRembolsoEnDetalle = document.createElement("div")
                                                    contenedorRembolsoEnDetalle.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle")
                                                    contenedorRembolsoEnDetalle.setAttribute("reembolsoUID", reembolsoUID)
                                                    const tituloReembolso = document.createElement("div")
                                                    tituloReembolso.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_tituloReembolso")
                                                    tituloReembolso.classList.add("negrita")
                                                    tituloReembolso.innerText = "Reembolso " + reembolsoUID
                                                    contenedorRembolsoEnDetalle.appendChild(tituloReembolso)
                                                    // plataformaDePago
                                                    let bloque = document.createElement("div")
                                                    bloque.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloque")
                                                    let bloqueTitulo = document.createElement("div")
                                                    bloqueTitulo.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueTitulo")
                                                    bloqueTitulo.innerText = "Plataforma de reembolso"
                                                    bloque.appendChild(bloqueTitulo)
                                                    let bloqueDato = document.createElement("div")
                                                    bloqueDato.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueDato");
                                                    bloqueDato.classList.add("negrita")
                                                    bloqueDato.innerText = plataformaDePagoUI[plataformaDePagoIDV]
                                                    bloque.appendChild(bloqueDato)
                                                    contenedorRembolsoEnDetalle.appendChild(bloque)
                                                    // cantidadReembolso
                                                    bloque = document.createElement("div")
                                                    bloque.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloque")
                                                    bloqueTitulo = document.createElement("div")
                                                    bloqueTitulo.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueTitulo")
                                                    bloqueTitulo.innerText = "Cantidad del reembolso"
                                                    bloque.appendChild(bloqueTitulo)
                                                    bloqueDato = document.createElement("div")
                                                    bloqueDato.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueDato");
                                                    bloqueDato.classList.add("negrita")
                                                    bloqueDato.innerText = cantidad + "$"
                                                    bloque.appendChild(bloqueDato)
                                                    contenedorRembolsoEnDetalle.appendChild(bloque)
                                                    // reembolsoUIDPasarela
                                                    const bloqueReembolsoUIDPasarela = document.createElement("div")
                                                    bloqueReembolsoUIDPasarela.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloque")
                                                    bloqueTitulo = document.createElement("div")
                                                    bloqueTitulo.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueTitulo")
                                                    bloqueTitulo.innerText = "Reembolso UID en pasarela"
                                                    bloqueReembolsoUIDPasarela.appendChild(bloqueTitulo)
                                                    bloqueDato = document.createElement("div")
                                                    bloqueDato.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueDato")
                                                    bloqueDato.classList.add("negrita")
                                                    bloqueDato.innerText = reembolsoUIDPasarela
                                                    bloqueReembolsoUIDPasarela.appendChild(bloqueDato)
                                                    if (plataformaDePagoIDV === "pasarela") {
                                                        contenedorRembolsoEnDetalle.appendChild(bloqueReembolsoUIDPasarela)
                                                    }
                                                    // fechaCreacionUTC
                                                    bloque = document.createElement("div")
                                                    bloque.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloque")
                                                    bloqueTitulo = document.createElement("div")
                                                    bloqueTitulo.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueTitulo")
                                                    bloqueTitulo.innerText = "Fecha de creación UTC"
                                                    bloque.appendChild(bloqueTitulo)
                                                    bloqueDato = document.createElement("div")
                                                    bloqueDato.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueDato")
                                                    bloqueDato.classList.add("negrita")
                                                    bloqueDato.innerText = fechaCreacionUTC_humana
                                                    bloque.appendChild(bloqueDato)
                                                    contenedorRembolsoEnDetalle.appendChild(bloque)
                                                    // fechaCreacion hora local
                                                    bloque = document.createElement("div")
                                                    bloque.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloque")
                                                    bloqueTitulo = document.createElement("div")
                                                    bloqueTitulo.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueTitulo")
                                                    bloqueTitulo.innerText = "Fecha de creación hora local"
                                                    bloque.appendChild(bloqueTitulo)
                                                    bloqueDato = document.createElement("div")
                                                    bloqueDato.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueDato")
                                                    bloqueDato.classList.add("negrita")
                                                    bloqueDato.innerText = fechaCreacionTZ_humana
                                                    bloque.appendChild(bloqueDato)
                                                    contenedorRembolsoEnDetalle.appendChild(bloque)
                                                    // fechaActualizacionUTC
                                                    bloque = document.createElement("div")
                                                    bloque.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloque")
                                                    bloqueTitulo = document.createElement("div")
                                                    bloqueTitulo.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueTitulo")
                                                    bloqueTitulo.innerText = "Fecha de actualización UTC"
                                                    bloque.appendChild(bloqueTitulo)
                                                    bloqueDato = document.createElement("div")
                                                    bloqueDato.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueDato")
                                                    bloqueDato.classList.add("negrita")
                                                    bloqueDato.innerText = fechaActualizacionUTC_humana
                                                    bloque.appendChild(bloqueDato)
                                                    if (plataformaDePagoIDV === "pasarela") {
                                                        contenedorRembolsoEnDetalle.appendChild(bloque)
                                                    }
                                                    // fechaActualizacion hora local
                                                    bloque = document.createElement("div")
                                                    bloque.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloque")
                                                    bloqueTitulo = document.createElement("div")
                                                    bloqueTitulo.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueTitulo")
                                                    bloqueTitulo.innerText = "Fecha de actualización UTC"
                                                    bloque.appendChild(bloqueTitulo)
                                                    bloqueDato = document.createElement("div")
                                                    bloqueDato.classList.add("administracion_reservas_detallesReservas_transacciones_reembolsos_contenedorReembolsoEnDetalle_bloqueDato")
                                                    bloqueDato.classList.add("negrita")
                                                    bloqueDato.innerText = fechaActualizacionTZ_humana
                                                    bloque.appendChild(bloqueDato)
                                                    if (plataformaDePagoIDV === "pasarela") {
                                                        contenedorRembolsoEnDetalle.appendChild(bloque)
                                                    }

                                                    const contenedorBotones = document.createElement("div")
                                                    contenedorBotones.classList.add("administracion_reservas_detallesReserva_transacciones_reembolsos_detallesReembolso_contenedorBotones")
                                                    contenedorBotones.setAttribute("contenedor", "opcionesDelReembolso")
                                                    const metadatosOpcionesReembolso = {
                                                        instanciaUID_contenedorDinamicoTransacciones: instanciaUID_contenedorDinamicoTransacciones,
                                                        instanciaUIDDetalleDelPago: instanciaUIDDetalleDelPago,
                                                        reembolsoUID: reembolsoUID,
                                                        pagoIUD: pagoUID
                                                    }
                                                    contenedorBotones.appendChild(botonOpcionesReembolsoUI(metadatosOpcionesReembolso))
                                                    if (plataformaDePagoIDV !== "pasarela") {
                                                        contenedorRembolsoEnDetalle.appendChild(contenedorBotones)
                                                    }
                                                    contenedorReembolsos.appendChild(contenedorRembolsoEnDetalle)
                                                })
                                                selectorInstanciaRenderizada.appendChild(contenedorReembolsos)
                                            }
                                        },
                                        confirmar: async () => {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const nombreEnlace = document.querySelector("[espacio=formularioCrearEnlaceDePago] [campo=nombreEnlace]")
                                            const cantidad = document.querySelector("[espacio=formularioCrearEnlaceDePago] [campo=cantidad]")
                                            const horasCaducidad = document.querySelector("[espacio=formularioCrearEnlaceDePago] [campo=horasCaducidad]")
                                            const transaccion = {
                                                zona: "administracion/enlacesDePago/crearNuevoEnlace",
                                                reservaUID: reservaUID,
                                                nombreEnlace: nombreEnlace.value,
                                                cantidad: cantidad.value,
                                                horasCaducidad: horasCaducidad.value,
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            if (respuestaServidor?.error) {
                                                casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.UI.enlacesDePago()
                                            }
                                        }
                                    },
                                    reembolsos: {
                                        reembolsoUI: async (metadatos) => {
                                            const pagoUID = metadatos.pagoUID
                                            // Esto que cojones es:
                                            const instanciaUID_contenedorDinamicoTransacciones = metadatos.instanciaUID_contenedorDinamicoTransacciones
                                            const instanciaUIDDetalleDelPago = metadatos.instanciaUIDDetalleDelPago
                                            const selectorContenedorCrearReembolso = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [contenedor=nuevoReembolso]`)
                                            selectorContenedorCrearReembolso.style.display = "flex"
                                            const mostrarContenedorPorTipo = (tipoReembolso) => {
                                                const selectorTipoContenedores = selectorContenedorCrearReembolso.querySelectorAll("[contenedorTipoReembolso]")
                                                selectorTipoContenedores.forEach((contenedor) => {
                                                    contenedor.style.display = "none"
                                                })
                                                selectorContenedorCrearReembolso.querySelector(`[contenedorTipoReembolso="${tipoReembolso}"]`).removeAttribute("style")
                                            }
                                            const reseteaBotonesTipoReembolso = () => {
                                                const selectorBotonesTipoReembolso = selectorContenedorCrearReembolso.querySelectorAll("[botonTipoReembolso]")
                                                selectorBotonesTipoReembolso.forEach((botonTipoReembolso) => {
                                                    botonTipoReembolso.removeAttribute("style")
                                                    botonTipoReembolso.removeAttribute("tipoReembolsoSeleccionado")
                                                })
                                            }
                                            const maximoReembolsable = async () => {
                                                const totalPagado = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [cantidadPago]`).getAttribute("cantidadPago")
                                                const totalReembolsado = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [sumaDeLoReembolsado]`)?.getAttribute("sumaDeLoReembolsado")
                                                const selectorUI = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [componente=totalReembolsable]`)
                                                selectorUI.innerText = "Esperando resultado del calculo..."
                                                if (!totalReembolsado) {
                                                    selectorUI.innerText = `Total reembolsable ${totalPagado}$`
                                                    selectorUI.setAttribute("totalReembolsable", totalPagado)

                                                }
                                                try {
                                                    const transaccion = {
                                                        zona: "administracion/componentes/calculadora",
                                                        numero1: totalPagado,
                                                        numero2: totalReembolsado || "0.00",
                                                        operador: "-"
                                                    }

                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    if (respuestaServidor?.error) {
                                                        casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                                        casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor?.ok) {
                                                        const resultado = Number(respuestaServidor?.ok).toFixed(2)
                                                        selectorUI.innerText = `Total reembolsable ${resultado}$`
                                                        selectorUI.setAttribute("totalReembolsable", resultado)
                                                    }
                                                    // casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.arranque()
                                                } catch (errorCapturado) {
                                                    const error = errorCapturado.message
                                                    casaVitini.ui.componentes.advertenciaInmersiva(error)
                                                }
                                            }
                                            const reglaDeTresPorcentaje = async (porcentaje) => {
                                                let totalReembolsable
                                                const selectorTotalReembolsableConReeembolsos = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [totalReembolsable]`)
                                                if (selectorTotalReembolsableConReeembolsos) {
                                                    totalReembolsable = selectorTotalReembolsableConReeembolsos.getAttribute("totalReembolsable")
                                                } else {
                                                    const selectorTotalReembolsableSinReembolsos = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [cantidadPago]`).getAttribute("cantidadPago")
                                                    totalReembolsable = selectorTotalReembolsableSinReembolsos
                                                }
                                                const selectorUI = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [informacionPorcentaje=informacionPorcentaje]`)
                                                selectorUI.innerHTML = "Calculando..."
                                                try {
                                                    const transaccion = {
                                                        zona: "administracion/componentes/calculadora",
                                                        numero1: totalReembolsable,
                                                        numero2: porcentaje,
                                                        operador: "%"
                                                    }
                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    if (respuestaServidor?.error) {
                                                        casaVitini.shell.controladoresUI.ocultarMenusVolatiles()
                                                        casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor?.ok) {
                                                        const resultado = Number(respuestaServidor?.ok).toFixed(2)
                                                        selectorUI.innerText = `El reembolso seria de ${resultado}$ (El ${porcentaje}% de ${totalReembolsable}$ es ${resultado}$`
                                                        selectorUI.setAttribute("totalReembolso", resultado)
                                                    }
                                                } catch (errorCapturado) {
                                                    const error = errorCapturado.message
                                                    casaVitini.ui.componentes.advertenciaInmersiva(error)
                                                }
                                                /*  const calculo = (Number(porcentaje) / 100) * Number(maximoReembolsable());
                                                  const resultado = parseFloat(calculo.toFixed(2));
                                                   resultado*/
                                            };
                                            const contenedorEmitirReembolso = document.createElement("div")
                                            contenedorEmitirReembolso.classList.add("detallesReserva_rembolso_contenedorEmitirReembolso")
                                            const titulo = document.createElement("p")
                                            titulo.classList.add("detallesReservaTituloCancelarReserva")
                                            titulo.innerText = "Realizar un reembolso"
                                            contenedorEmitirReembolso.appendChild(titulo)
                                            const bloqueReembolso = document.createElement("div")
                                            bloqueReembolso.classList.add("detallesReserva_reemboldo_bloqueEmitirReembolso")
                                            let bloqueInterno = document.createElement("div")
                                            bloqueInterno.classList.add("detallesReserva_reembolso_bloqueInterno_campoConfiramcion")
                                            const info = document.createElement("div")
                                            info.classList.add("detallesReserva_reembolso_emitirReembolso_texto")
                                            info.innerText = `Para realizar el reembolso, por favor, escribe reembolso en minúsculas en el campo de texto y, pulse realizar reembolso. Se exige escribir reembolso como medida para evitar un falso clic en el botón de confirmación al querer hacer clic en el botón de cerrar opciones de emisión de reembolso.`
                                            bloqueInterno.appendChild(info)
                                            bloqueReembolso.appendChild(bloqueInterno)
                                            const infoTotalReembolsable = document.createElement("div")
                                            infoTotalReembolsable.classList.add("detallesReserva_reembolso_emitirReembolso_texto")
                                            infoTotalReembolsable.classList.add("negrita")
                                            infoTotalReembolsable.setAttribute("componente", "totalReembolsable")
                                            //infoTotalReembolsable.innerText = `Total reembolsable ${await maximoReembolsable()}`
                                            bloqueInterno.appendChild(infoTotalReembolsable)
                                            bloqueReembolso.appendChild(bloqueInterno)
                                            const contenedorTipoReembolsos = document.createElement("div")
                                            contenedorTipoReembolsos.classList.add("detallesReserva_reembolso_emitirReembolso_contenedorTipoReembolsos")
                                            const reembolsoPorCantidad = document.createElement("div")
                                            reembolsoPorCantidad.classList.add("detallesReserva_reembolso_emitirReembolso_botonTipoReembolso")
                                            reembolsoPorCantidad.innerText = "Por cantidad"
                                            reembolsoPorCantidad.setAttribute("botonTipoReembolso", "porCantidad")
                                            reembolsoPorCantidad.setAttribute("tipoReembolso", "porCantidad")
                                            reembolsoPorCantidad.addEventListener("click", (e) => {
                                                reseteaBotonesTipoReembolso()
                                                e.target.setAttribute("tipoReembolsoSeleccionado", "porCantidad")
                                                e.target.style.background = "blue"
                                                e.target.style.color = "white"
                                                const tipoReembolso = e.target.getAttribute("tipoReembolso")
                                                mostrarContenedorPorTipo(tipoReembolso)
                                            })
                                            contenedorTipoReembolsos.appendChild(reembolsoPorCantidad)
                                            const reembolsoPorPorcentaje = document.createElement("div")
                                            reembolsoPorPorcentaje.classList.add("detallesReserva_reembolso_emitirReembolso_botonTipoReembolso")
                                            reembolsoPorPorcentaje.innerText = "Por porcentaje"
                                            reembolsoPorPorcentaje.setAttribute("botonTipoReembolso", "porPorcentaje")
                                            reembolsoPorPorcentaje.setAttribute("tipoReembolso", "porPorcentaje")
                                            reembolsoPorPorcentaje.addEventListener("click", (e) => {
                                                reseteaBotonesTipoReembolso()
                                                e.target.setAttribute("tipoReembolsoSeleccionado", "porPorcentaje")
                                                e.target.style.background = "blue"
                                                e.target.style.color = "white"
                                                const tipoReembolso = e.target.getAttribute("tipoReembolso")
                                                mostrarContenedorPorTipo(tipoReembolso)
                                            })
                                            contenedorTipoReembolsos.appendChild(reembolsoPorPorcentaje)
                                            bloqueReembolso.appendChild(contenedorTipoReembolsos)
                                            const contenedorDinamicoTipo = document.createElement("div")
                                            contenedorDinamicoTipo.classList.add("detallesReserva_rembolso_contenedorDiamicoTipo")
                                            const contenedorPorCantidad = document.createElement("div")
                                            contenedorPorCantidad.classList.add("detallesReserva_rembolso_contenedorPorCantidad")
                                            contenedorPorCantidad.style.display = "none"
                                            contenedorPorCantidad.setAttribute("contenedorTipoReembolso", "porCantidad")
                                            const infoPorCantidad = document.createElement("div")
                                            infoPorCantidad.classList.add("detallesReserva_reembolso_emitirReembolso_texto")
                                            infoPorCantidad.innerText = `Determina la cantidad total del reembolso. Si quieres emitir, por ejemplo, un reembolso de 100, entonces debes de escribir también los dos decimales separados por punto, por ejemplo, 100.00. Luego establece la moneda.`
                                            contenedorPorCantidad.appendChild(infoPorCantidad)
                                            const campoCantidadReembolso = document.createElement("input")
                                            campoCantidadReembolso.classList.add("detallesReserva_reembolso_campo")
                                            campoCantidadReembolso.setAttribute("campo", "porCantidad")
                                            campoCantidadReembolso.placeholder = "0.00"
                                            contenedorPorCantidad.appendChild(campoCantidadReembolso)
                                            const campoMonedaReembolso = document.createElement("input")
                                            campoMonedaReembolso.classList.add("detallesReserva_reembolso_campo")
                                            campoMonedaReembolso.setAttribute("campo", "moneda")
                                            campoMonedaReembolso.placeholder = "EUR"
                                            //contenedorPorCantidad.appendChild(campoMonedaReembolso)
                                            contenedorDinamicoTipo.appendChild(contenedorPorCantidad)
                                            const contenedorPorPorcentaje = document.createElement("div")
                                            contenedorPorPorcentaje.classList.add("detallesReserva_rembolso_contenedorPorPorcentaje")
                                            contenedorPorPorcentaje.style.display = "none"
                                            contenedorPorPorcentaje.setAttribute("contenedorTipoReembolso", "porPorcentaje")
                                            const infoPorPorcentaje = document.createElement("div")
                                            infoPorPorcentaje.classList.add("detallesReserva_reembolso_emitirReembolso_texto")
                                            infoPorPorcentaje.innerText = `Determina el porcentaje del reembolso.`
                                            contenedorPorPorcentaje.appendChild(infoPorPorcentaje)
                                            const resultadoPorcentaje = document.createElement("div")
                                            resultadoPorcentaje.classList.add("detallesReserva_reembolso_emitirReembolso_texto")
                                            resultadoPorcentaje.classList.add("negrita")
                                            resultadoPorcentaje.setAttribute("informacionPorcentaje", "informacionPorcentaje")
                                            resultadoPorcentaje.innerText = `Escribe un porcentaje para ver su calculo`
                                            contenedorPorPorcentaje.appendChild(resultadoPorcentaje)
                                            const campoPorcentajeReembolso = document.createElement("input")
                                            campoPorcentajeReembolso.classList.add("detallesReserva_reembolso_campo")
                                            campoPorcentajeReembolso.placeholder = "0%"
                                            campoPorcentajeReembolso.addEventListener("input", (e) => {
                                                const entrada = e.target.value
                                                const selectorInformacionResultadoPorcentaje = document.querySelector("[informacionPorcentaje=informacionPorcentaje]")
                                                const controlFormato = /^\d+%$/.test(entrada);
                                                if (entrada.length === 0) {
                                                    selectorInformacionResultadoPorcentaje.innerText = "Escribe un porcentaje para ver su cálculo"
                                                    e.target.removeAttribute("totalReembolso")
                                                } else {
                                                    if (!controlFormato) {
                                                        selectorInformacionResultadoPorcentaje.innerText = "No te olvides del signo de porcentaje %, solo números enteros sin decimales."
                                                        e.target.removeAttribute("totalReembolso")
                                                    } else {
                                                        const numeroLimpio = entrada.replace("%", "")
                                                        reglaDeTresPorcentaje(numeroLimpio)
                                                    }
                                                }
                                            })
                                            contenedorPorPorcentaje.appendChild(campoPorcentajeReembolso)
                                            contenedorDinamicoTipo.appendChild(contenedorPorPorcentaje)
                                            const campoMoneda = document.createElement("input")
                                            campoMoneda.classList.add("detallesReserva_reembolso_campo")
                                            campoMoneda.setAttribute("campo", "moneda")
                                            campoMoneda.placeholder = "Moneda, por ejemplo EUR o USD"
                                            //contenedorPorPorcentaje.appendChild(campoMoneda)
                                            contenedorDinamicoTipo.appendChild(contenedorPorPorcentaje)
                                            const selectorTipoReembolso = document.createElement("select")
                                            selectorTipoReembolso.classList.add("usuariosCrearCuenta_campoUsuario")
                                            selectorTipoReembolso.setAttribute("campo", "plataformaDePagoEntrada")
                                            const opcionPreterminada = document.createElement("option");
                                            opcionPreterminada.value = "";
                                            opcionPreterminada.selected = "true"
                                            opcionPreterminada.disabled = "true"
                                            opcionPreterminada.text = "Selecciona cómo realizar este reembolso";
                                            selectorTipoReembolso.add(opcionPreterminada);
                                            let opcion = document.createElement("option");
                                            opcion.value = "efectivo";
                                            opcion.text = "Efectivo";
                                            selectorTipoReembolso.add(opcion);
                                            opcion = document.createElement("option");
                                            opcion.value = "tarjeta";
                                            opcion.text = "Tarjeta TPV";
                                            selectorTipoReembolso.add(opcion);
                                            opcion = document.createElement("option");
                                            opcion.value = "cheque";
                                            opcion.text = "Cheque";
                                            selectorTipoReembolso.add(opcion);
                                            opcion = document.createElement("option");
                                            opcion.value = "pasarela";
                                            opcion.text = "Pasarela";
                                            selectorTipoReembolso.add(opcion);
                                            //cheque pasarela, tarjeta TPV
                                            contenedorDinamicoTipo.appendChild(selectorTipoReembolso)
                                            bloqueReembolso.appendChild(contenedorDinamicoTipo)
                                            bloqueInterno = document.createElement("div")
                                            bloqueInterno.classList.add("detallesReserva_reembolso_bloqueInterno_campoConfiramcion")
                                            const infoCampoConfirmacion = document.createElement("div")
                                            infoCampoConfirmacion.classList.add("detallesReserva_reembolso_emitirReembolso_texto")
                                            infoCampoConfirmacion.innerText = `Para realizar el reembolso, por favor, escribe reembolso en minúsculas en el campo de texto y, pulse realizar reembolso. Se exige escribir reembolso como medida para evitar un falso clic en el botón de confirmación al querer hacer click en el botón de cerrar opciones de emisión de reembolso.`
                                            bloqueInterno.appendChild(infoCampoConfirmacion)
                                            const campoConfirmacion = document.createElement("input")
                                            campoConfirmacion.classList.add("detallesReserva_reembolso_campoConfirmacion")
                                            campoConfirmacion.setAttribute("campo", "palabra")
                                            campoConfirmacion.placeholder = "Escribe la palabra reembolso"
                                            bloqueInterno.appendChild(campoConfirmacion)
                                            bloqueReembolso.appendChild(bloqueInterno)
                                            contenedorEmitirReembolso.appendChild(bloqueReembolso)
                                            const bloqueBotones = document.createElement("div")
                                            bloqueBotones.classList.add("detallesReserva_reembolso_emitirReembolso_contenedorBotones")
                                            const botonConfirmar = document.createElement("div")
                                            botonConfirmar.classList.add("detallesReservaCancelarBoton")
                                            botonConfirmar.setAttribute("componente", "botonActualizarEnlace")
                                            botonConfirmar.innerText = "Realizar reembolso"
                                            botonConfirmar.addEventListener("click", () => {
                                                const metadatos = {
                                                    pagoUID: pagoUID,
                                                    instanciaUID_contenedorDinamicoTransacciones: instanciaUID_contenedorDinamicoTransacciones,
                                                    instanciaUIDDetalleDelPago: instanciaUIDDetalleDelPago
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.reembolsos.confirmarReembolso(metadatos)
                                            })
                                            bloqueBotones.appendChild(botonConfirmar)
                                            const botonCancelar = document.createElement("div")
                                            botonCancelar.classList.add("detallesReservaCancelarBoton")
                                            botonCancelar.innerText = "Cerrar opciones de emitir reembolso"
                                            botonCancelar.addEventListener("click", () => {
                                                selectorContenedorCrearReembolso.innerHTML = null
                                                selectorContenedorCrearReembolso.removeAttribute("style")
                                            })
                                            bloqueBotones.appendChild(botonCancelar)
                                            contenedorEmitirReembolso.appendChild(bloqueBotones)
                                            selectorContenedorCrearReembolso.appendChild(contenedorEmitirReembolso)
                                            maximoReembolsable();
                                        },
                                        eliminarReembolso: async (metadatos) => {
                                            const instanciaUIDDetalleDelPago = metadatos.instanciaUIDDetalleDelPago
                                            const reembolsoUID = metadatos.reembolsoUID
                                            const instanciaUID = metadatos.instanciaUID
                                            const metadatosPantallaCarga = {
                                                mensaje: "Eliminando reembolso...",
                                                instanciaUID: instanciaUIDDetalleDelPago,
                                            }
                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                            const pagoUID = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"]`).querySelector("[pagoUID]").getAttribute("pagoUID")
                                            const palabra = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"]`).querySelector(`[reembolsoUID="${reembolsoUID}"] [campo=palabra]`).value
                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/transacciones/eliminarReembolsoManual",
                                                reembolsoUID: String(reembolsoUID),
                                                palabra: palabra
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUIDDetalleDelPago}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                            selectorPantallaDeCarga.forEach((pantalla) => {
                                                pantalla.remove()
                                            })
                                            if (respuestaServidor?.error) {
                                                casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                const selectorDetallesDelPagoRenderizado = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"]`)
                                                if (selectorDetallesDelPagoRenderizado) {
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.arranque()
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    const metadatos = {
                                                        pagoUID: pagoUID,
                                                        instanciaUID: instanciaUID
                                                    }
                                                    casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.detallesDelPago.UI(metadatos)
                                                }
                                            }
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        },
                                        confirmarReembolso: async (metadatos) => {
                                            const pagoUID = String(metadatos.pagoUID)
                                            const instanciaUID_contenedorDinamicoTransacciones = metadatos.instanciaUID_contenedorDinamicoTransacciones
                                            const instanciaUIDDetalleDelPago = metadatos.instanciaUIDDetalleDelPago
                                            const instanciaUID_pantallaDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const tipoReembolso = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [tipoReembolsoSeleccionado]`)?.getAttribute("tipoReembolsoSeleccionado")
                                            if (!tipoReembolso) {
                                                const error = "Selecciona un tipo de reembolso, ya sea por cantidad o por porcentaje"
                                                casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(error)
                                            }
                                            const metadatosPantallaCarga = {
                                                mensaje: "Esperando al servidor...",
                                                instanciaUID: instanciaUID_pantallaDeCarga,
                                            }
                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/transacciones/realizarReembolso",
                                                reservaUID: reservaUID,
                                                pagoUID: pagoUID
                                            }
                                            if (tipoReembolso === "porPorcentaje") {
                                                const cantidad = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [contenedortiporeembolso=porPorcentaje] [totalReembolso]`)?.getAttribute("totalReembolso")
                                                //const moneda = document.querySelector(`[instanciaUID="${instanciaUID}"] [contenedortiporeembolso=porPorcentaje] [campo=moneda]`)?.value
                                                transaccion.cantidad = cantidad
                                                //transaccion.moneda = moneda
                                            }
                                            if (tipoReembolso === "porCantidad") {
                                                const cantidad = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [contenedortiporeembolso=porCantidad] [campo=porCantidad]`)?.value
                                                //const moneda = document.querySelector(`[instanciaUID="${instanciaUID}"] [contenedortiporeembolso=porCantidad] [campo=moneda]`)?.value
                                                transaccion.cantidad = cantidad
                                                //transaccion.moneda = moneda
                                            }
                                            transaccion.tipoReembolso = tipoReembolso
                                            const plataformaDePagoEntrada = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [contenedor=nuevoReembolso] [campo=plataformaDePagoEntrada]`).value
                                            transaccion.plataformaDePagoEntrada = plataformaDePagoEntrada
                                            const palabra = document.querySelector(`[instanciaUID="${instanciaUIDDetalleDelPago}"] [campo=palabra]`)?.value
                                            transaccion.palabra = palabra

                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            const selectorPantallaDeCarga = document.querySelectorAll(`[instanciaUID="${instanciaUID_pantallaDeCarga}"][pantallaSuperpuesta=pantallaCargaSuperpuesta]`)
                                            selectorPantallaDeCarga.forEach((pantalla) => {
                                                pantalla.remove()
                                            })
                                            if (respuestaServidor?.error) {
                                                casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.arranque()
                                                const mensaje = respuestaServidor?.ok
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                const metadatos = {
                                                    pagoUID: pagoUID,
                                                    instanciaUID_contenedorDinamicoTransacciones: instanciaUID_contenedorDinamicoTransacciones
                                                }
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.transacciones.detallesDelPago.UI(metadatos)
                                                //casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(mensaje)
                                            }
                                        }
                                    },

                                },
                                desgloseTotal: {
                                    arranque: async function () {
                                        const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias()
                                        document.querySelector(`[categoriaReserva=desgloseTotal]`).setAttribute("estadoCategoria", "actual")
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        const botonCategoria = document.querySelector("[categoriaReserva=desgloseTotal]")
                                        botonCategoria.style.background = "blue"
                                        botonCategoria.style.color = "white"
                                        botonCategoria.setAttribute("categoria", "desgloseTotal")
                                        const contenedorDinamico = document.querySelector("[componente=contenedorDinamico]")
                                        contenedorDinamico.innerHTML = null
                                        const spinnerPorRenderizar = casaVitini.ui.componentes.spinnerSimple()
                                        const contenedorDesgloseDelTotal = document.createElement("div")
                                        contenedorDesgloseDelTotal.classList.add("administracion_reserver_detallesReserva_contenedorDesgloseTotal")
                                        contenedorDesgloseDelTotal.setAttribute("instanciaUID", instanciaUID)
                                        contenedorDesgloseDelTotal.setAttribute("componente", "contenedorDesgloseTotal")
                                        contenedorDesgloseDelTotal.appendChild(spinnerPorRenderizar)
                                        contenedorDinamico.appendChild(contenedorDesgloseDelTotal)
                                        const transaccion = {
                                            zona: "miCasa/misReservas/detallesReserva",
                                            reservaUID: reservaUID,

                                        }

                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                        const instanciaDestino = document.querySelector(`[componente=contenedorDesgloseTotal][instanciaUID="${instanciaUID}"]`)
                                        if (!instanciaDestino) { }
                                        instanciaDestino.innerHTML = null

                                        if (respuestaServidor?.error) {
                                            const errorUI = document.createElement("p")
                                            errorUI.classList.add("errorCategorialGlobal")
                                            errorUI.innerText = respuestaServidor?.error
                                            instanciaDestino.appendChild(errorUI)
                                        }

                                        if (respuestaServidor?.ok) {

                                            const panelBotones = document.createElement("nav")
                                            panelBotones.classList.add(
                                                "borderRadius10",
                                                "flexHorizontal",
                                                "gap6",
                                                "paddinHorizontal6",
                                                "paddinTop6",
                                                "elementosExpandidos",

                                            )
                                            //instanciaDestino.appendChild(panelBotones)

                                            const botonInsertarDescuento = document.createElement("div")
                                            botonInsertarDescuento.classList.add(
                                                "comportamientoBoton",
                                                "botonV1",
                                                "width100"
                                            )
                                            botonInsertarDescuento.innerText = "Insertar descuento"
                                            botonInsertarDescuento.addEventListener("click", () => {
                                                this.componentesUI.insertarDescuentos.ui({
                                                    instanciaUID_contenedorFinanciero: instanciaUID
                                                })
                                            })
                                            panelBotones.appendChild(botonInsertarDescuento)

                                            const botonDescuentosCompatibles = document.createElement("div")
                                            botonDescuentosCompatibles.classList.add(
                                                "comportamientoBoton",
                                                "botonV1",
                                                "width100"
                                            )
                                            botonDescuentosCompatibles.innerText = "Descuentos compatibles"
                                            panelBotones.appendChild(botonDescuentosCompatibles)

                                            const botonSobreControlDePrecios = document.createElement("div")
                                            botonSobreControlDePrecios.classList.add(
                                                "comportamientoBoton",
                                                "botonV1",
                                                "width100"
                                            )
                                            botonSobreControlDePrecios.innerText = "Sobre control de precios"
                                            botonSobreControlDePrecios.addEventListener("click", () => {
                                                this.componentesUI.sobreControlPrecios.arranque()
                                            })
                                            panelBotones.appendChild(botonSobreControlDePrecios)

                                            const botonReconstruirTotal = document.createElement("div")
                                            botonReconstruirTotal.classList.add(
                                                "comportamientoBoton",
                                                "botonV1",
                                                "width100"
                                            )
                                            botonReconstruirTotal.innerText = "Reconstruir total"
                                            panelBotones.appendChild(botonReconstruirTotal)

                                            const contenedorFinanciero = respuestaServidor.reserva.contenedorFinanciero
                                            casaVitini.ui.componentes.contenedorFinanciero.constructor({
                                                destino: `[instanciaUID="${instanciaUID}"][componente=contenedorDesgloseTotal]`,
                                                contenedorFinanciero,
                                                modoUI: "plaza"

                                            })



                                        }
                                    },

                                    componentesUI: {
                                        insertarDescuentos: {
                                            ui: async function (data) {
                                                const main = document.querySelector("main")
                                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                const reservaUID = main.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const instanciaUID_insertarDescuentosUI = ui.getAttribute("instanciaUID")
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                main.appendChild(ui)
                                                const constructor = ui.querySelector("[componente=contenedor]")
                                                const spinner = casaVitini.ui.componentes.spinner({
                                                    mensaje: "Obteniendo ofertas...",
                                                    textoBoton: "Cancelar"
                                                })
                                                constructor.appendChild(spinner)

                                                const transaccion = {
                                                    zona: "administracion/ofertas/listasOfertasAdministracion"
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const uiRenderizada = document.querySelectorAll(`[instanciaUID="${instanciaUID_insertarDescuentosUI}"]`)
                                                if (!uiRenderizada) { return }
                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    spinner.remove()
                                                    constructor.appendChild(this.botonCancelar())

                                                    const ofertas = respuestaServidor.ok

                                                    const contenedorOfertas = document.createElement("div")
                                                    contenedorOfertas.classList.add(
                                                        "maxWidth1280px",
                                                        "width100",
                                                        "flexVertical",
                                                        "gap6",
                                                    )
                                                    constructor.appendChild(contenedorOfertas)
                                                    const estadoUI_ = (estadoIDV) => {

                                                        if (estadoIDV === "activado") {
                                                            return "Activada"
                                                        } else if (estadoIDV === "desactivado") {
                                                            return "Desactivada"
                                                        }

                                                    }

                                                    ofertas.forEach((detalles) => {
                                                        const nombreOferta = detalles.nombreOferta
                                                        const ofertaUID = detalles.ofertaUID
                                                        const fechaInicio = detalles.fechaInicio
                                                        const fechaFinal = detalles.fechaFinal
                                                        const estadoIDV = detalles.estadoIDV
                                                        const zonaIDV = detalles.zonaIDV


                                                        const contenedorOferta = document.createElement("div")
                                                        contenedorOferta.setAttribute("ofertaUID", ofertaUID)
                                                        contenedorOferta.classList.add(
                                                            "borderRadius12",
                                                            "width100",
                                                            "flexVertical",
                                                            "backgroundGrey1",
                                                            "padding6",
                                                            "gap6"
                                                        )

                                                        const contenedorGlobal = document.createElement("div")

                                                        const nombreOfertaUI = document.createElement("div")
                                                        nombreOfertaUI.classList.add("negrita")
                                                        nombreOfertaUI.innerText = nombreOferta
                                                        contenedorGlobal.appendChild(nombreOfertaUI)

                                                        const estadoTitulo = document.createElement("div")
                                                        estadoTitulo.innerText = "Estado de la oferta"
                                                        contenedorGlobal.appendChild(estadoTitulo)


                                                        const estadoUI = document.createElement("div")
                                                        estadoUI.classList.add("negrita")
                                                        estadoUI.innerText = estadoUI_(estadoIDV)
                                                        contenedorGlobal.appendChild(estadoUI)
                                                        contenedorOferta.appendChild(contenedorGlobal)

                                                        const contendorBotones = document.createElement("div")
                                                        contendorBotones.classList.add(
                                                            "flexHorizontal",
                                                            "gap6",
                                                        )

                                                        const botonInsertar = document.createElement("div")
                                                        botonInsertar.classList.add(
                                                            "borderRadius8",
                                                            "backgroundGrey1",
                                                            "comportamientoBoton",
                                                            "padding8"
                                                        )
                                                        botonInsertar.innerText = "Insertar descuento en la reserva"
                                                        botonInsertar.addEventListener("click", () => {
                                                            this.confirmarInsertar({
                                                                reservaUID,
                                                                ofertaUID,
                                                                instanciaUID_insertarDescuentosUI,
                                                                instanciaUID_contenedorFinanciero
                                                            })

                                                        })
                                                        contendorBotones.appendChild(botonInsertar)

                                                        const botonVerOferta = document.createElement("a")
                                                        botonVerOferta.classList.add(
                                                            "borderRadius8",
                                                            "backgroundGrey1",
                                                            "comportamientoBoton",
                                                            "padding8",
                                                            "limpiezaBotonA"
                                                        )
                                                        botonVerOferta.innerText = "Ir a la oferta"
                                                        botonVerOferta.setAttribute("href", "/administracion/gestion_de_ofertas/oferta:" + ofertaUID)
                                                        botonVerOferta.setAttribute("vista", "/administracion/gestion_de_ofertas/oferta:" + ofertaUID)
                                                        botonVerOferta.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                        contendorBotones.appendChild(botonVerOferta)


                                                        contenedorOferta.appendChild(contendorBotones)

                                                        contenedorOfertas.appendChild(contenedorOferta)
                                                    })
                                                    constructor.appendChild(this.botonCancelar())

                                                }

                                            },
                                            botonCancelar: () => {
                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("boton")
                                                botonCancelar.setAttribute("boton", "cancelar")
                                                botonCancelar.innerText = "Cerrar y volver a la reserva"
                                                botonCancelar.addEventListener("click", () => {
                                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                })
                                                return botonCancelar
                                            },
                                            confirmarInsertar: async function (data) {
                                                const reservaUID = data.reservaUID
                                                const ofertaUID = String(data.ofertaUID)
                                                const instanciaUID_insertarDescuentosUI = data.instanciaUID_insertarDescuentosUI
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero



                                                const ui = document.querySelector(`[instanciaUID="${instanciaUID_insertarDescuentosUI}"]`)
                                                const contenedor = ui.querySelector("[componente=contenedor]")
                                                contenedor.innerHTML = null

                                                const spinner = casaVitini.ui.componentes.spinner({
                                                    mensaje: "Insertando oferta en la reserva..."
                                                })
                                                contenedor.appendChild(spinner)

                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/descuentos/insertarDescuentoPorAdministrador",
                                                    reservaUID,
                                                    ofertaUID
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                if (!uiRenderizada) { return }

                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                        instanciaUID_contenedorFinanciero,
                                                        reservaUID
                                                    })
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                }

                                            },

                                        },
                                        insertarOfertasCompatibles: {
                                            ui: async function (data) {
                                                const main = document.querySelector("main")
                                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                const reservaUID = main.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const instanciaUID_insertarDescuentosUI = ui.getAttribute("instanciaUID")
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                main.appendChild(ui)
                                                const constructor = ui.querySelector("[componente=contenedor]")
                                                const spinner = casaVitini.ui.componentes.spinner({
                                                    mensaje: "Obteniendo ofertas compatibles con la oferta...",
                                                    textoBoton: "Cancelar"
                                                })
                                                constructor.appendChild(spinner)

                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/descuentos/obtenerDescuentosCompatiblesConLaReserva",
                                                    reservaUID
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const uiRenderizada = document.querySelectorAll(`[instanciaUID="${instanciaUID_insertarDescuentosUI}"]`)
                                                if (!uiRenderizada) { return }
                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    spinner.remove()
                                                    constructor.appendChild(this.botonCancelar())
                                                    const ofertas = respuestaServidor.ofertasCompatibles
                                                    const contenedorOfertas = document.createElement("div")
                                                    contenedorOfertas.classList.add(
                                                        "maxWidth1280px",
                                                        "width100",
                                                        "flexVertical",
                                                        "gap6",
                                                    )
                                                    constructor.appendChild(contenedorOfertas)
                                                    const estadoUI_ = (estadoIDV) => {

                                                        if (estadoIDV === "activado") {
                                                            return "Activada"
                                                        } else if (estadoIDV === "desactivado") {
                                                            return "Desactivada"
                                                        }
                                                    }

                                                    ofertas.forEach((contenedorOferta) => {
                                                        const detalles = contenedorOferta.oferta
                                                        const nombreOferta = detalles.nombreOferta
                                                        const ofertaUID = detalles.ofertaUID
                                                        const fechaInicio = detalles.fechaInicio
                                                        const fechaFinal = detalles.fechaFinal
                                                        const estadoIDV = detalles.estadoIDV
                                                        const zonaIDV = detalles.zonaIDV

                                                        const contenedorOfertaUI = document.createElement("div")
                                                        contenedorOfertaUI.setAttribute("ofertaUID", ofertaUID)
                                                        contenedorOfertaUI.classList.add(
                                                            "borderRadius12",
                                                            "width100",
                                                            "flexVertical",
                                                            "backgroundGrey1",
                                                            "padding6",
                                                            "gap6"
                                                        )

                                                        const contenedorGlobal = document.createElement("div")

                                                        const nombreOfertaUI = document.createElement("div")
                                                        nombreOfertaUI.classList.add("negrita")
                                                        nombreOfertaUI.innerText = nombreOferta
                                                        contenedorGlobal.appendChild(nombreOfertaUI)

                                                        const estadoTitulo = document.createElement("div")
                                                        estadoTitulo.innerText = "Estado de la oferta"
                                                        contenedorGlobal.appendChild(estadoTitulo)

                                                        const estadoUI = document.createElement("div")
                                                        estadoUI.classList.add("negrita")
                                                        estadoUI.innerText = estadoUI_(estadoIDV)
                                                        contenedorGlobal.appendChild(estadoUI)
                                                        contenedorOfertaUI.appendChild(contenedorGlobal)

                                                        const contendorBotones = document.createElement("div")
                                                        contendorBotones.classList.add(
                                                            "flexHorizontal",
                                                            "gap6",
                                                        )

                                                        const botonInsertar = document.createElement("div")
                                                        botonInsertar.classList.add(
                                                            "borderRadius8",
                                                            "backgroundGrey1",
                                                            "comportamientoBoton",
                                                            "padding8"
                                                        )

                                                        botonInsertar.innerText = "Insertar descuento en la reserva"
                                                        botonInsertar.addEventListener("click", () => {
                                                            this.confirmarInsertarCompatible({
                                                                reservaUID,
                                                                ofertaUID,
                                                                instanciaUID_insertarDescuentosUI,
                                                                instanciaUID_contenedorFinanciero
                                                            })
                                                        })
                                                        contendorBotones.appendChild(botonInsertar)

                                                        const botonVerOferta = document.createElement("a")
                                                        botonVerOferta.classList.add(
                                                            "borderRadius8",
                                                            "backgroundGrey1",
                                                            "comportamientoBoton",
                                                            "padding8",
                                                            "limpiezaBotonA"
                                                        )
                                                        botonVerOferta.innerText = "Ir a la oferta"
                                                        botonVerOferta.setAttribute("href", "/administracion/gestion_de_ofertas/oferta:" + ofertaUID)
                                                        botonVerOferta.setAttribute("vista", "/administracion/gestion_de_ofertas/oferta:" + ofertaUID)
                                                        botonVerOferta.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                        contendorBotones.appendChild(botonVerOferta)

                                                        contenedorOfertaUI.appendChild(contendorBotones)

                                                        contenedorOfertas.appendChild(contenedorOfertaUI)
                                                    })
                                                    constructor.appendChild(this.botonCancelar())

                                                }

                                            },
                                            botonCancelar: () => {
                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("boton")
                                                botonCancelar.setAttribute("boton", "cancelar")
                                                botonCancelar.innerText = "Cerrar y volver a la reserva"
                                                botonCancelar.addEventListener("click", () => {
                                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                })
                                                return botonCancelar
                                            },
                                            confirmarInsertarCompatible: async function (data) {
                                                const reservaUID = data.reservaUID
                                                const ofertaUID = String(data.ofertaUID)
                                                const instanciaUID_insertarDescuentosUI = data.instanciaUID_insertarDescuentosUI
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero



                                                const ui = document.querySelector(`[instanciaUID="${instanciaUID_insertarDescuentosUI}"]`)
                                                const contenedor = ui.querySelector("[componente=contenedor]")
                                                contenedor.innerHTML = null

                                                const spinner = casaVitini.ui.componentes.spinner({
                                                    mensaje: "Insertando oferta en la reserva..."
                                                })
                                                contenedor.appendChild(spinner)

                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/descuentos/insertarDescuentoPorCompatible",
                                                    reservaUID,
                                                    ofertaUID
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                if (!uiRenderizada) { return }

                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                        instanciaUID_contenedorFinanciero,
                                                        reservaUID
                                                    })
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                }

                                            },

                                        },
                                        sobreControlPrecios: {
                                            componentesUI: {
                                                botonAlterarPrecio: () => {
                                                    const botonDeslegarOpciones = document.createElement("div")
                                                    botonDeslegarOpciones.classList.add(
                                                        "padding6",
                                                        "botonV1",
                                                        "comportamientoBoton"
                                                    )
                                                    botonDeslegarOpciones.innerText = "Alterar precio"
                                                    return botonDeslegarOpciones
                                                },
                                                nocheUI: async function (data) {
                                                    const fechaNoche = data.fechaNoche
                                                    const apartamentoIDV = data.apartamentoIDV
                                                    const main = document.querySelector("main")
                                                    const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                    const reservaUID = main.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                    const instanciaUID_sobreControlUI = ui.getAttribute("instanciaUID")
                                                    const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                    main.appendChild(ui)
                                                    const contenedor = ui.querySelector("[componente=contenedor]")
                                                    const spinner = casaVitini.ui.componentes.spinner({
                                                        mensaje: "Obteniendo detalles de la noche...",
                                                        textoBoton: "Cancelar"
                                                    })
                                                    contenedor.appendChild(spinner)

                                                    const transaccion = {
                                                        zona: "administracion/reservas/detallesReserva/sobreControlPrecios/obtenerDetallesSobreControlNoche",
                                                        reservaUID,
                                                        apartamentoIDV: apartamentoIDV,
                                                        fechaNoche: fechaNoche
                                                    }

                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    const uiRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_sobreControlUI}"]`)

                                                    if (!uiRenderizada) { return }
                                                    if (respuestaServidor?.error) {
                                                        uiRenderizada?.remove()
                                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                        return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor.ok) {
                                                        contenedor.innerHTML = null

                                                        const data = respuestaServidor.ok
                                                        const instantanea = data.instantaneaNetoApartamento
                                                        const apartamentoUI = instantanea.apartamentoUI
                                                        const precioNetoApartamento = instantanea.precioNetoApartamento

                                                        const sobreControl = data?.sobreControl
                                                        const detallesSobreControl = sobreControl.detallesSobreControl || {}
                                                        const operacion = detallesSobreControl?.operacion
                                                        const valorSobreControl = detallesSobreControl?.valor || "0.00"

                                                        const titulo = document.createElement("div")
                                                        titulo.classList.add(
                                                            "textSize16",
                                                            "textoCentrado"
                                                        )
                                                        titulo.innerText = `Detalles del ${apartamentoUI} en la noche de ${fechaNoche}`
                                                        contenedor.appendChild(titulo)

                                                        const contenedorValorOrigen = document.createElement("div")
                                                        contenedorValorOrigen.classList.add(
                                                            "flexVertical",
                                                            "backgroundGrey1",
                                                            "padding12",
                                                            "borderRadius8"
                                                        )
                                                        contenedor.appendChild(contenedorValorOrigen)

                                                        const tituloValorOrigen = document.createElement("div")
                                                        tituloValorOrigen.innerText = "Valor origen"
                                                        contenedorValorOrigen.appendChild(tituloValorOrigen)

                                                        const datoValorOrigen = document.createElement("div")
                                                        datoValorOrigen.classList.add(
                                                            "negrita"
                                                        )
                                                        datoValorOrigen.innerText = precioNetoApartamento
                                                        contenedorValorOrigen.appendChild(datoValorOrigen)

                                                        const selectorTipoSobreControl = document.createElement("select")
                                                        selectorTipoSobreControl.classList.add(
                                                            "selectorLista"
                                                        )
                                                        selectorTipoSobreControl.setAttribute("campo", "tipoOperacion")

                                                        const tituloSelector = document.createElement("option");
                                                        if (!operacion) {
                                                            tituloSelector.selected = true;
                                                        }
                                                        tituloSelector.disabled = true;
                                                        tituloSelector.text = "Seleccionar el tipo de sobre control";
                                                        selectorTipoSobreControl.appendChild(tituloSelector);

                                                        const opciones = [
                                                            { value: "aumentarPorPorcentaje", text: "Aumentar por porcentaje" },
                                                            { value: "reducirPorPorcentaje", text: "Reducir por porcentaje" },
                                                            { value: "aumentarPorCantidadFija", text: "Aumentar por cantidad fija" },
                                                            { value: "reducirPorCantidadFila", text: "Reducir por cantidad fila" },
                                                            { value: "establecerCantidad", text: "Establecer cantidad" }
                                                        ]
                                                        for (const opcionData of opciones) {
                                                            const value = opcionData.value
                                                            const text = opcionData.text
                                                            const opcion = document.createElement("option");
                                                            opcion.value = opcionData.value;
                                                            opcion.text = opcionData.text;
                                                            if (operacion === value) {
                                                                opcion.selected = true;
                                                            }
                                                            selectorTipoSobreControl.appendChild(opcion);
                                                        }
                                                        contenedor.appendChild(selectorTipoSobreControl)
                                                        const campoValor = document.createElement("input")
                                                        campoValor.classList.add(
                                                            "campoTexto"
                                                        )
                                                        campoValor.setAttribute("campo", "valor")
                                                        campoValor.placeholder = "Escribe la cantidad con dos decimales separados por punto, por ejemplo 0.00"
                                                        campoValor.value = valorSobreControl

                                                        contenedor.appendChild(campoValor)


                                                        if (Object.keys(detallesSobreControl).length > 0) {
                                                            const boton = document.createElement("div")
                                                            boton.classList.add("boton")
                                                            boton.innerText = "Actualizar sobre control de precio"
                                                            boton.addEventListener("click", () => {
                                                                this.confirmar({
                                                                    instanciaUID_sobreControlUI,
                                                                    instanciaUID_contenedorFinanciero,
                                                                    reservaUID,
                                                                    apartamentoIDV,
                                                                    tipoOperacion: selectorTipoSobreControl.value,
                                                                    fechaNoche,
                                                                    valorSobreControl: campoValor.value
                                                                })
                                                            })
                                                            contenedor.appendChild(boton)
                                                            const botonEliminar = document.createElement("div")
                                                            botonEliminar.classList.add("boton")
                                                            botonEliminar.innerText = "Eliminar sobre control de precio"
                                                            botonEliminar.addEventListener("click", () => {
                                                                this.eliminarSobreControl({
                                                                    instanciaUID_sobreControlUI,
                                                                    instanciaUID_contenedorFinanciero,
                                                                    reservaUID,
                                                                    apartamentoIDV,
                                                                    fechaNoche
                                                                })
                                                            })
                                                            contenedor.appendChild(botonEliminar)
                                                        } else {
                                                            const boton = document.createElement("div")
                                                            boton.classList.add("boton")
                                                            boton.innerText = "Crear sobre control de precio"
                                                            boton.addEventListener("click", () => {
                                                                this.confirmar({
                                                                    instanciaUID_sobreControlUI,
                                                                    instanciaUID_contenedorFinanciero,
                                                                    reservaUID,
                                                                    apartamentoIDV,
                                                                    tipoOperacion: selectorTipoSobreControl.value,
                                                                    fechaNoche,
                                                                    valorSobreControl: campoValor.value
                                                                })
                                                            })
                                                            contenedor.appendChild(boton)
                                                        }

                                                        const botonCancelar = document.createElement("div")
                                                        botonCancelar.classList.add("boton")
                                                        botonCancelar.innerText = "Cancelar y volver al desglose por noche."
                                                        botonCancelar.addEventListener("click", () => {
                                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                        })
                                                        contenedor.appendChild(botonCancelar)
                                                    }
                                                },
                                                confirmar: async (data) => {
                                                    const instanciaUID_sobreControlUI = data.instanciaUID_sobreControlUI
                                                    const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                    const reservaUID = data.reservaUID
                                                    const apartamentoIDV = data.apartamentoIDV
                                                    const tipoOperacion = data.tipoOperacion
                                                    const fechaNoche = data.fechaNoche
                                                    const valorSobreControl = data.valorSobreControl
                                                    const transaccion = {
                                                        zona: "administracion/reservas/detallesReserva/sobreControlPrecios/actualizarSobreControlNoche",
                                                        reservaUID,
                                                        apartamentoIDV,
                                                        fechaNoche,
                                                        tipoOperacion,
                                                        valorSobreControl
                                                    }
                                                    const uiRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_sobreControlUI}"]`)
                                                    const contenedor = uiRenderizada.querySelector("[componente=contenedor]")
                                                    //contenedor.innerHTML = null

                                                    const instanciaPantallaCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                    casaVitini.ui.componentes.pantallaDeCargaSuperPuesta({
                                                        mensaje: "Aplicando sobrecontrol de precio",
                                                        textoBoton: "ocultar",
                                                        instanciaUID: instanciaPantallaCarga
                                                    })

                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    const instanciaPantallaCargaUI = document.querySelector(`[instanciaUID="${instanciaPantallaCarga}"]`)
                                                    instanciaPantallaCargaUI?.remove()

                                                    const uiContenedorFinanciero = document.querySelector(`[instanciaUID="${instanciaUID_contenedorFinanciero}"]`)
                                                    //if (!uiContenedorFinanciero) { return }

                                                    if (respuestaServidor?.error) {
                                                        return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor.ok) {
                                                        const sobreControlUI = document.querySelector(`[instanciaUID="${instanciaUID_sobreControlUI}"]`)
                                                        if (sobreControlUI) {
                                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                        }

                                                        const selectorDesgloseEnPantalla = document.querySelector(`[reservaUID="${reservaUID}"] [componente=contenedorDesgloseTotal]`)
                                                        if (!selectorDesgloseEnPantalla) {
                                                            return
                                                        }
                                                        return casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                            instanciaUID_contenedorFinanciero,
                                                            reservaUID
                                                        })
                                                    }
                                                },
                                                eliminarSobreControl: async (data) => {
                                                    const instanciaUID_sobreControlUI = data.instanciaUID_sobreControlUI
                                                    const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                    const reservaUID = data.reservaUID
                                                    const apartamentoIDV = data.apartamentoIDV
                                                    const fechaNoche = data.fechaNoche
                                                    const transaccion = {
                                                        zona: "administracion/reservas/detallesReserva/sobreControlPrecios/eliminarSobreControlNoche",
                                                        reservaUID,
                                                        apartamentoIDV,
                                                        fechaNoche
                                                    }
                                                    const uiRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_sobreControlUI}"]`)
                                                    const contenedor = uiRenderizada.querySelector("[componente=contenedor]")

                                                    const instanciaPantallaCarga = casaVitini.utilidades.codigoFechaInstancia()
                                                    casaVitini.ui.componentes.pantallaDeCargaSuperPuesta({
                                                        mensaje: "Eliminado sobrecontrol de precio",
                                                        textoBoton: "ocultar",
                                                        instanciaUID: instanciaPantallaCarga
                                                    })

                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    const instanciaPantallaCargaUI = document.querySelector(`[instanciaUID="${instanciaPantallaCarga}"]`)
                                                    instanciaPantallaCargaUI?.remove()

                                                    if (respuestaServidor?.error) {
                                                        return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor.ok) {
                                                        const sobreControlUI = document.querySelector(`[instanciaUID="${instanciaUID_sobreControlUI}"]`)
                                                        if (sobreControlUI) {
                                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                        }

                                                        const selectorDesgloseEnPantalla = document.querySelector(`[reservaUID="${reservaUID}"] [componente=contenedorDesgloseTotal]`)
                                                        if (!selectorDesgloseEnPantalla) {
                                                            return
                                                        }
                                                        return casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                            instanciaUID_contenedorFinanciero,
                                                            reservaUID
                                                        })
                                                    }
                                                }
                                            },
                                        },
                                        eliminarOfertaEnReserva: {
                                            ui: async function (data) {

                                                const nombreOferta = data.nombreOferta
                                                const ofertaUID = data.ofertaUID
                                                const posicion = data.posicion
                                                const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const origen = data.origen

                                                const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                                const instanciaUID = pantallaInmersiva.getAttribute("instanciaUID")
                                                const constructor = pantallaInmersiva.querySelector("[componente=constructor]")

                                                const titulo = constructor.querySelector("[componente=titulo]")
                                                titulo.classList.add(
                                                    "negrita"
                                                )
                                                titulo.innerText = nombreOferta
                                                const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                                mensaje.innerText = `Confirmas o no la eliminación de la oferta de la reserva, ¿Estás de acuerdo?`

                                                const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                                botonAceptar.innerText = "Confirmar la eliminación de la oferta de esta reserva"
                                                botonAceptar.addEventListener("click", () => {
                                                    this.confirmar({
                                                        reservaUID,
                                                        ofertaUID,
                                                        posicion,
                                                        origen,
                                                        instanciaUID
                                                    })
                                                })
                                                const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                                botonCancelar.innerText = "Cancelar y volver a la reserva"
                                                document.querySelector("main").appendChild(pantallaInmersiva)

                                            },
                                            confirmar: async (data) => {

                                                const ofertaUID = data.ofertaUID
                                                const posicion = data.posicion
                                                const reservaUID = data.reservaUID
                                                const origen = data.origen

                                                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                                const mensaje = "Elimiando oferta de la reserva..."
                                                const datosPantallaSuperpuesta = {
                                                    instanciaUID: instanciaUID,
                                                    mensaje: mensaje
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/descuentos/eliminarDescuentoEnReserva",
                                                    reservaUID: String(reservaUID),
                                                    ofertaUID: String(ofertaUID),
                                                    origen,
                                                    posicion: String(posicion)
                                                }


                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const instanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                                instanciaRenderizada.remove()

                                                if (respuestaServidor?.error) {
                                                    return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {


                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                        reservaUID
                                                    })
                                                }
                                            }

                                        },
                                        actualizarEstadoAutorizacion: async (data) => {

                                            const ofertaUID = data.ofertaUID
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const e = data.e
                                            const area = e.target.closest("[ofertaUID][posicion]")
                                            const autorizacionUI = area.querySelector("[dato=autorizacion]")
                                            const estadoActualData = area.querySelector("[estadoActual]")
                                            const estadoActual = estadoActualData.getAttribute("estadoActual")




                                            const transaccion = {
                                                zona: "administracion/reservas/descuentos/actualizarAutorizacionDescuentoCompatible",
                                                reservaUID: String(reservaUID),
                                                ofertaUID: String(ofertaUID),
                                            }

                                            if (estadoActual === "aceptada") {
                                                autorizacionUI.innerText = "Rechazando..."
                                                transaccion.nuevaAutorizacion = "rechazada"
                                            } else if (estadoActual === "rechazada") {
                                                autorizacionUI.innerText = "Aceptando..."
                                                transaccion.nuevaAutorizacion = "aceptada"
                                            }



                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)

                                            if (respuestaServidor?.error) {
                                                casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                    reservaUID
                                                })
                                            }
                                            if (respuestaServidor?.ok) {
                                                const estadoAutorizado = respuestaServidor.autorizacion
                                                estadoActualData.setAttribute("estadoActual", estadoAutorizado)

                                                if (estadoAutorizado === "aceptada") {
                                                    autorizacionUI.innerText = "Aceptada"
                                                    estadoActualData.innerText = "Rechazar oferta"
                                                } else if (estadoAutorizado === "rechazada") {
                                                    autorizacionUI.innerText = "Rechazada"
                                                    estadoActualData.innerText = "Aceptar oferta"
                                                }
                                                casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                    reservaUID
                                                })
                                            }
                                        },
                                        insertarImpuesto: {
                                            ui: async function (data) {
                                                const main = document.querySelector("main")
                                                const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                const reservaUID = main.querySelector("[reservaUID]").getAttribute("reservaUID")
                                                const instanciaUID_insertarImpuestoUI = ui.getAttribute("instanciaUID")
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                main.appendChild(ui)
                                                const constructor = ui.querySelector("[componente=contenedor]")
                                                const spinner = casaVitini.ui.componentes.spinner({
                                                    mensaje: "Obteniendo impuestos...",
                                                    textoBoton: "Cancelar"
                                                })
                                                constructor.appendChild(spinner)

                                                const transaccion = {
                                                    zona: "administracion/impuestos/listarTodosLosImpuestos"
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const uiRenderizada = document.querySelectorAll(`[instanciaUID="${instanciaUID_insertarImpuestoUI}"]`)
                                                if (!uiRenderizada) { return }
                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    spinner.remove()
                                                    constructor.appendChild(this.botonCancelar())

                                                    const impuestos = respuestaServidor.impuestos

                                                    const contenedorOfertas = document.createElement("div")
                                                    contenedorOfertas.classList.add(
                                                        "maxWidth1280px",
                                                        "width100",
                                                        "flexVertical",
                                                        "gap6",
                                                    )
                                                    constructor.appendChild(contenedorOfertas)
                                                    const estadoUI_ = (estadoIDV) => {

                                                        if (estadoIDV === "activado") {
                                                            return "Activada"
                                                        } else if (estadoIDV === "desactivado") {
                                                            return "Desactivada"
                                                        }

                                                    }

                                                    impuestos.forEach((impuesto) => {
                                                        const impuestoUID = impuesto.impuestoUID
                                                        const nombre = impuesto.nombre
                                                        const tipoImpositivo = impuesto.tipoImpositivo
                                                        const tipoValorIDV = impuesto.tipoValorIDV
                                                        const entidadIDV = impuesto.entidadIDV
                                                        const estadoIDV = impuesto.estadoIDV


                                                        const contenedorOferta = document.createElement("div")
                                                        contenedorOferta.setAttribute("impuestoUID", impuestoUID)
                                                        contenedorOferta.classList.add(
                                                            "borderRadius12",
                                                            "width100",
                                                            "flexVertical",
                                                            "backgroundGrey1",
                                                            "padding6",
                                                            "gap6"
                                                        )

                                                        const contenedorGlobal = document.createElement("div")

                                                        const nombreOfertaUI = document.createElement("div")
                                                        nombreOfertaUI.classList.add("negrita")
                                                        nombreOfertaUI.innerText = nombre
                                                        contenedorGlobal.appendChild(nombreOfertaUI)

                                                        const estadoTitulo = document.createElement("div")
                                                        estadoTitulo.innerText = "Estado del impuesto"
                                                        contenedorGlobal.appendChild(estadoTitulo)


                                                        const estadoUI = document.createElement("div")
                                                        estadoUI.classList.add("negrita")
                                                        estadoUI.innerText = estadoUI_(estadoIDV)
                                                        contenedorGlobal.appendChild(estadoUI)
                                                        contenedorOferta.appendChild(contenedorGlobal)

                                                        const contendorBotones = document.createElement("div")
                                                        contendorBotones.classList.add(
                                                            "flexHorizontal",
                                                            "gap6",
                                                        )

                                                        const botonInsertar = document.createElement("div")
                                                        botonInsertar.classList.add(
                                                            "borderRadius8",
                                                            "backgroundGrey1",
                                                            "comportamientoBoton",
                                                            "padding8"
                                                        )
                                                        botonInsertar.innerText = "Insertar impuesto en la reserva"
                                                        botonInsertar.addEventListener("click", () => {
                                                            this.confirmarInsertar({
                                                                reservaUID,
                                                                impuestoUID,
                                                                instanciaUID_insertarImpuestoUI,
                                                                instanciaUID_contenedorFinanciero
                                                            })

                                                        })
                                                        contendorBotones.appendChild(botonInsertar)

                                                        const botonVerOferta = document.createElement("a")
                                                        botonVerOferta.classList.add(
                                                            "borderRadius8",
                                                            "backgroundGrey1",
                                                            "comportamientoBoton",
                                                            "padding8",
                                                            "limpiezaBotonA"
                                                        )
                                                        botonVerOferta.innerText = "Ir al impuesto"
                                                        botonVerOferta.setAttribute("href", "/administracion/impuestos/" + impuestoUID)
                                                        botonVerOferta.setAttribute("vista", "/administracion/impuestos/" + impuestoUID)
                                                        botonVerOferta.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                                                        contendorBotones.appendChild(botonVerOferta)


                                                        contenedorOferta.appendChild(contendorBotones)

                                                        contenedorOfertas.appendChild(contenedorOferta)
                                                    })
                                                    constructor.appendChild(this.botonCancelar())

                                                }

                                            },
                                            botonCancelar: () => {
                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("boton")
                                                botonCancelar.setAttribute("boton", "cancelar")
                                                botonCancelar.innerText = "Cerrar y volver a la reserva"
                                                botonCancelar.addEventListener("click", () => {
                                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                })
                                                return botonCancelar
                                            },
                                            confirmarInsertar: async function (data) {
                                                const reservaUID = data.reservaUID
                                                const impuestoUID = String(data.impuestoUID)
                                                const instanciaUID_insertarImpuestoUI = data.instanciaUID_insertarImpuestoUI
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero



                                                const ui = document.querySelector(`[instanciaUID="${instanciaUID_insertarImpuestoUI}"]`)
                                                const contenedor = ui.querySelector("[componente=contenedor]")
                                                contenedor.innerHTML = null

                                                const spinner = casaVitini.ui.componentes.spinner({
                                                    mensaje: "Insertando oferta en la reserva..."
                                                })
                                                contenedor.appendChild(spinner)

                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/impuestos/insertarImpuestoEnReserva",
                                                    reservaUID,
                                                    impuestoUID
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                if (!uiRenderizada) { return }

                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                        instanciaUID_contenedorFinanciero,
                                                        reservaUID
                                                    })
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                }

                                            },

                                        },
                                        eliminarImpuesto: {
                                            ui: async function (data) {
                                                const nombreImpuesto = data.nombreImpuesto
                                                const impuestoUID = data.impuestoUID
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                const reservaUID = document.querySelector("main").querySelector("[reservaUID]").getAttribute("reservaUID")

                                                const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                                const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                                const instanciaUID_eliminarImpuestoUI = pantallaInmersiva.getAttribute("instanciaUID")


                                                const titulo = constructor.querySelector("[componente=titulo]")
                                                titulo.innerText = `Confirmar eliminar impuesto ${nombreImpuesto} de la reserva`
                                                const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                                mensaje.innerText = "Var a eliminar el impuesto de la reserva, ¿Estas de acuerdo?"

                                                const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                                botonAceptar.innerText = "Comfirmar la eliminacion"
                                                botonAceptar.addEventListener("click", () => {
                                                    this.confirmarEliminar({
                                                        impuestoUID,
                                                        reservaUID,
                                                        instanciaUID_contenedorFinanciero,
                                                        instanciaUID_eliminarImpuestoUI
                                                    })
                                                })
                                                const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                                botonCancelar.innerText = "Cancelar y volver"

                                                document.querySelector("main").appendChild(pantallaInmersiva)

                                            },
                                            confirmarEliminar: async function (data) {
                                                const reservaUID = data.reservaUID
                                                const impuestoUID = String(data.impuestoUID)
                                                const instanciaUID_eliminarImpuestoUI = data.instanciaUID_eliminarImpuestoUI
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero



                                                const ui = document.querySelector(`[instanciaUID="${instanciaUID_eliminarImpuestoUI}"]`)
                                                const contenedor = ui.querySelector("[componente=constructor]")
                                                contenedor.innerHTML = null

                                                const spinner = casaVitini.ui.componentes.spinner({
                                                    mensaje: "Eliminado impuesto en la reserva..."
                                                })
                                                contenedor.appendChild(spinner)

                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/impuestos/eliminarImpuestoEnReserva",
                                                    reservaUID,
                                                    impuestoUID
                                                }

                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                if (!uiRenderizada) { return }

                                                if (respuestaServidor?.error) {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                        instanciaUID_contenedorFinanciero,
                                                        reservaUID
                                                    })
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                }

                                            },

                                        },
                                        crearImpuestoAdHoc: {
                                            ui: async function (data) {
                                                const nombreImpuesto = data.nombreImpuesto
                                                const impuestoUID = data.impuestoUID
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                const reservaUID = document.querySelector("main").querySelector("[reservaUID]").getAttribute("reservaUID")

                                                const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                                const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                                const instanciaUID_eliminarImpuestoUI = pantallaInmersiva.getAttribute("instanciaUID")
                                                const contenedor = pantallaInmersiva.querySelector("[componente=contenedor]")

                                                const titulo = constructor.querySelector("[componente=titulo]")
                                                titulo.innerText = `Crear impuesto dedicado solo para esta reserva`
                                                const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                                mensaje.innerText = "Rellena el formulario para crear un impuesto solo para esta reserva. Este impuesto creado solo existirá en esta reserva. Si necesitas crear un impuesto que quieras usar para insertar en reservas, pero que no se aplique, crea un impuesto en la sección de impuesto y mantenlo desactivado."

                                                const contenedorFormulario = document.createElement("div")
                                                contenedorFormulario.classList.add(
                                                    "flexVertical",
                                                    "gap6"
                                                )
                                                contenedor.appendChild(contenedorFormulario)


                                                const campoCraerNuevoImpuesto = document.createElement("input")
                                                campoCraerNuevoImpuesto.classList.add(
                                                    "padding10",
                                                    "borderRadius10"

                                                )
                                                campoCraerNuevoImpuesto.setAttribute("comNuevoImpuesto", "nombreImpuesto")
                                                campoCraerNuevoImpuesto.placeholder = "Escribo el nombre del nuevo impuesto"
                                                contenedorFormulario.appendChild(campoCraerNuevoImpuesto)

                                                const campoTipoImpositivo = document.createElement("input")
                                                campoTipoImpositivo.classList.add(
                                                    "padding10",
                                                    "borderRadius10"
                                                )
                                                campoTipoImpositivo.setAttribute("comNuevoImpuesto", "tipoImpositivo")
                                                campoTipoImpositivo.placeholder = "0.00"
                                                contenedorFormulario.appendChild(campoTipoImpositivo)

                                                const contenedorOpciones = document.createElement("select")
                                                contenedorOpciones.classList.add(
                                                    "padding10",
                                                    "borderRadius10"
                                                )
                                                contenedorOpciones.setAttribute("comNuevoImpuesto", "tipoValor")
                                                const tipoValorLista = [
                                                    {
                                                        tipoValorIDV: "",
                                                        tipoValorUI: "Selecciona el tipo de impuesto"
                                                    },
                                                    {
                                                        tipoValorIDV: "porcentaje",
                                                        tipoValorUI: "Porcentaje"
                                                    },
                                                    {
                                                        tipoValorIDV: "tasa",
                                                        tipoValorUI: "Tasa"
                                                    },

                                                ]
                                                tipoValorLista.forEach((contenedorTipoValor) => {
                                                    const tipoValorIDV = contenedorTipoValor.tipoValorIDV
                                                    const tipoValorUI = contenedorTipoValor.tipoValorUI
                                                    const opcion = document.createElement("option");
                                                    if (!tipoValorIDV) {
                                                        opcion.selected = true;
                                                        opcion.disabled = true;

                                                    }
                                                    opcion.value = tipoValorIDV;
                                                    opcion.text = tipoValorUI;
                                                    opcion.setAttribute("opcion", tipoValorIDV)
                                                    contenedorOpciones.add(opcion);
                                                })
                                                contenedorFormulario.appendChild(contenedorOpciones)


                                                const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                                botonAceptar.innerText = "Crear impuesto dedicado para esta reserva"
                                                botonAceptar.addEventListener("click", () => {
                                                    this.confirmarCrearImpuestoAdHoc({
                                                        reservaUID,
                                                        instanciaUID_contenedorFinanciero,
                                                        instanciaUID_eliminarImpuestoUI,
                                                        nombreImpuesto: campoCraerNuevoImpuesto.value,
                                                        tipoImpositivo: campoTipoImpositivo.value,
                                                        tipoValorIDV: contenedorOpciones.value

                                                    })
                                                })
                                                const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                                botonCancelar.innerText = "Cancelar y volver"

                                                document.querySelector("main").appendChild(pantallaInmersiva)

                                            },
                                            confirmarCrearImpuestoAdHoc: async function (data) {
                                                const reservaUID = data.reservaUID
                                                const nombreImpuesto = data.nombreImpuesto
                                                const tipoImpositivo = data.tipoImpositivo
                                                const tipoValorIDV = data.tipoValorIDV

                                                const instanciaUID_eliminarImpuestoUI = data.instanciaUID_eliminarImpuestoUI
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero

                                                const instanciaUID_pantallaDeCargaSuperPuesta = casaVitini.utilidades.codigoFechaInstancia()

                                                const datosPantallaSuperpuesta = {
                                                    instanciaUID: instanciaUID_pantallaDeCargaSuperPuesta,
                                                    mensaje: "Creando impuesto dedicado e insertando en la reserva..."
                                                }
                                                casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                                                const transaccion = {
                                                    zona: "administracion/reservas/detallesReserva/impuestos/insertarImpuestoDedicadoEnReserva",
                                                    reservaUID,
                                                    nombreImpuesto,
                                                    tipoImpositivo,
                                                    tipoValorIDV,
                                                }



                                                const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                document.querySelector(`[instanciaUID="${instanciaUID_pantallaDeCargaSuperPuesta}"]`)?.remove()

                                                const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                if (!uiRenderizada) { return }

                                                if (respuestaServidor?.error) {
                                                    return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                }
                                                if (respuestaServidor?.ok) {
                                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                        instanciaUID_contenedorFinanciero,
                                                        reservaUID
                                                    })
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                }
                                            },

                                        },

                                        reconstruirDesgloseFinanciero: {
                                            ui: async function (data) {
                                                const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                const reservaUID = document.querySelector("main").querySelector("[reservaUID]").getAttribute("reservaUID")

                                                const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                                                const contenedor = pantallaInmersiva.querySelector("[componente=contenedor]")
                                                const instanciaUID_reconstrucion = pantallaInmersiva.getAttribute("instanciaUID")
                                                document.querySelector("main").appendChild(pantallaInmersiva)



                                                const tituloUI = document.createElement("p")
                                                tituloUI.classList.add("titulo")
                                                tituloUI.setAttribute("componente", "titulo")
                                                tituloUI.innerText = `Elige el origen de la reconstrucción del desglose financiero de la reserva ${reservaUID}`
                                                contenedor.appendChild(tituloUI)



                                                const mensajeUI = document.createElement("div")
                                                mensajeUI.classList.add("mensajeUI")
                                                mensajeUI.setAttribute("componente", "mensajeUI")
                                                mensajeUI.innerText = "Esta operación reconstruye el desglose financiero. Reconstruir desde la instantánea, regenera el desglose financiero desde las instantáneas del contenedor financiero de la reserva. Esta operación es útil si no se ha reconstituido por alguna razón el desglose financiero correctamente tras alguna operación."
                                                contenedor.appendChild(mensajeUI)


                                                const botonDesdeInstantaneas = document.createElement("div")
                                                botonDesdeInstantaneas.classList.add("boton")
                                                botonDesdeInstantaneas.setAttribute("boton", "aceptar")
                                                botonDesdeInstantaneas.innerText = "Reconstruir desde instantáneas"
                                                botonDesdeInstantaneas.addEventListener("click", () => {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    this.desdeInstantaneas.ui({
                                                        reservaUID,
                                                        instanciaUID_contenedorFinanciero,
                                                        instanciaUID_reconstrucion
                                                    })
                                                })
                                                contenedor.appendChild(botonDesdeInstantaneas)


                                                const mensajeUI_ = document.createElement("div")
                                                mensajeUI_.classList.add("mensajeUI")
                                                mensajeUI_.setAttribute("componente", "mensajeUI")
                                                mensajeUI_.innerText = "Reconstruir el desglose financiero desde el hub, reconstruirá el desglose financiero actualizando las instantáneas de la reserva desde el hub de precios base, comportamiento de precios y ofertas actualmente configurados. Esta operación es irreversible y puede ser útil cuando necesito actualizar ciertos datos del contenedor financiero de la reserva desde los hubs de origen."
                                                contenedor.appendChild(mensajeUI_)

                                                const botonDesdeHub = document.createElement("div")
                                                botonDesdeHub.classList.add("boton")
                                                botonDesdeHub.setAttribute("boton", "aceptar")
                                                botonDesdeHub.innerText = "Reconstruir desde el hub"
                                                botonDesdeHub.addEventListener("click", () => {
                                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    this.desdeHub.ui({
                                                        reservaUID,
                                                        instanciaUID_contenedorFinanciero,
                                                        instanciaUID_reconstrucion
                                                    })

                                                })

                                                contenedor.appendChild(botonDesdeHub)

                                                const botonCancelar = document.createElement("div")
                                                botonCancelar.classList.add("boton")
                                                botonCancelar.setAttribute("boton", "cancelar")
                                                botonCancelar.innerText = "Cancelar y volver"
                                                botonCancelar.addEventListener("click", () => {
                                                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                })
                                                contenedor.appendChild(botonCancelar)

                                            },
                                            desdeInstantaneas: {
                                                ui: async function (data) {
                                                    const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                    const reservaUID = document.querySelector("main").querySelector("[reservaUID]").getAttribute("reservaUID")

                                                    const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                                    const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                                    const instanciaUID_reconstrucion = pantallaInmersiva.getAttribute("instanciaUID")


                                                    const titulo = constructor.querySelector("[componente=titulo]")
                                                    titulo.innerText = `Confirmar reconstruir el desglose de la reserva ${reservaUID} de las instantáneas`
                                                    const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                                    mensaje.innerText = "Esta operación reconstruye el desglose financiero. Si ha ocurrido un algún tipo de error en algún cálculo durante la construcción del desglose financiero, esta opción podría recuperar la integridad del desglose financiero."

                                                    const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                                    botonAceptar.innerText = "Comfirmar la reconstrucción"
                                                    botonAceptar.addEventListener("click", () => {
                                                        this.confirmarReconstrucion({
                                                            reservaUID,
                                                            instanciaUID_contenedorFinanciero,
                                                            instanciaUID_reconstrucion
                                                        })
                                                    })
                                                    const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                                    botonCancelar.innerText = "Cancelar y volver"

                                                    document.querySelector("main").appendChild(pantallaInmersiva)

                                                },
                                                confirmarReconstrucion: async function (data) {
                                                    const reservaUID = data.reservaUID
                                                    const instanciaUID_reconstrucion = data.instanciaUID_reconstrucion
                                                    const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero

                                                    const ui = document.querySelector(`[instanciaUID="${instanciaUID_reconstrucion}"]`)
                                                    const contenedor = ui.querySelector("[componente=constructor]")
                                                    contenedor.innerHTML = null

                                                    const spinner = casaVitini.ui.componentes.spinner({
                                                        mensaje: "Reconstruyendo el desglose financiero desde las instantáneas de la reserva..."
                                                    })
                                                    contenedor.appendChild(spinner)

                                                    const transaccion = {
                                                        zona: "administracion/reservas/detallesReserva/contenedorFinanciero/reconstruirDesgloseDesdeInstantaneas",
                                                        reservaUID
                                                    }

                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                    if (!uiRenderizada) { return }

                                                    if (respuestaServidor?.error) {
                                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                        return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                                    }
                                                    if (respuestaServidor?.ok) {
                                                        casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                            instanciaUID_contenedorFinanciero,
                                                            reservaUID
                                                        })
                                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    }

                                                },
                                            },
                                            desdeHub: {
                                                ui: async function (data) {
                                                    const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero
                                                    const reservaUID = document.querySelector("main").querySelector("[reservaUID]").getAttribute("reservaUID")

                                                    const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                                    const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                                    const instanciaUID_reconstrucion = pantallaInmersiva.getAttribute("instanciaUID")
                                                    const contenedor = pantallaInmersiva.querySelector("[componente=contenedor]")
                                                    contenedor.classList.add(
                                                        "flexVertical"
                                                    )



                                                    const titulo = constructor.querySelector("[componente=titulo]")
                                                    titulo.innerText = `Confirmar reconstruir el desglose de la reserva ${reservaUID} desde el hub (Operación irreversible)`
                                                    const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                                    mensaje.innerText = "Esta operación reconstruye el desglose financiero, actualizando las instantáneas desde el hub de precios base, comportamientos de precio, ofertas e impuestos. Esta operación es irreversible porque sobrescribe los datos actuales de las instantáneas y reconstruye todo el contenedor financiero de la reserva. Para evitar falsos clics, por favor, escribe la palabra, reconstruir, en el campo de texto."

                                                    const campo = document.createElement("input")
                                                    campo.placeholder = "Escribe la palabra 'reconstruir'"
                                                    campo.classList.add(
                                                        "borderRadius10",
                                                        "padding10"
                                                    )
                                                    contenedor.appendChild(campo)
                                                    const botonAceptar = constructor.querySelector("[boton=aceptar]")
                                                    botonAceptar.innerText = "Confirmar la reconstrucción irreversible de todo el contenedor financiero de la reserva"
                                                    botonAceptar.addEventListener("click", () => {
                                                        this.confirmarReconstrucion({
                                                            reservaUID,
                                                            instanciaUID_contenedorFinanciero,
                                                            instanciaUID_reconstrucion,
                                                            palabra: campo.value
                                                        })
                                                    })
                                                    const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                                    botonCancelar.innerText = "Cancelar y volver"

                                                    document.querySelector("main").appendChild(pantallaInmersiva)

                                                },
                                                confirmarReconstrucion: async function (data) {
                                                    const reservaUID = data.reservaUID
                                                    const palabra = data.palabra
                                                    const instanciaUID_contenedorFinanciero = data.instanciaUID_contenedorFinanciero

                                                    const instanciaUID_pantallaDeCargaSuperPuesta = casaVitini.utilidades.codigoFechaInstancia()

                                                    const datosPantallaSuperpuesta = {
                                                        instanciaUID: instanciaUID_pantallaDeCargaSuperPuesta,
                                                        mensaje: "Reconstruyendo todo el contenedor financiero de la reserva desde los hubs..."
                                                    }
                                                    casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)

                                                    const transaccion = {
                                                        zona: "administracion/reservas/detallesReserva/contenedorFinanciero/reconstruirDesgloseDesdeHubs",
                                                        reservaUID,
                                                        palabra
                                                    }

                                                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                                    const pantallaDeCarga_renderizda = document.querySelector(`[instanciaUID="${instanciaUID_pantallaDeCargaSuperPuesta}"]`)
                                                    pantallaDeCarga_renderizda?.remove()

                                                    const uiRenderizada = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                                    if (!uiRenderizada) { return }

                                                    if (respuestaServidor?.error) {
                                                        if (pantallaDeCarga_renderizda) {
                                                            return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                                        }
                                                    }
                                                    if (respuestaServidor?.ok) {
                                                        casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.controladores.desplegarContenedorFinanciero({
                                                            instanciaUID_contenedorFinanciero,
                                                            reservaUID
                                                        })
                                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                    }

                                                },
                                            }

                                        },
                                    },
                                    controladores: {
                                        desplegarContenedorFinanciero: async (data) => {
                                            const reservaUID = data.reservaUID

                                            const transaccion = {
                                                zona: "miCasa/misReservas/detallesReserva",
                                                reservaUID: reservaUID,

                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            const instanciaRenderizada = document.querySelector(`[reservaUID="${reservaUID}"] [componente=contenedorDesgloseTotal]`)
                                            if (!instanciaRenderizada) {
                                                return
                                            }

                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                const contenedorFinanciero = respuestaServidor.ok.contenedorFinanciero
                                                casaVitini.ui.componentes.contenedorFinanciero.constructor({
                                                    destino: `[reservaUID="${reservaUID}"] [componente=contenedorDesgloseTotal]`,
                                                    contenedorFinanciero,
                                                    modoUI: "plaza"

                                                })
                                            }
                                        }
                                    }


                                },
                                cancelarReserva: {
                                    arranque: () => {
                                        document.body.style.overflow = 'hidden';
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        const advertenciaInmersivaIU = document.createElement("div")
                                        advertenciaInmersivaIU.setAttribute("class", "advertenciaInmersiva")
                                        advertenciaInmersivaIU.setAttribute("componente", "advertenciaInmersiva")
                                        advertenciaInmersivaIU.setAttribute("contenedor", "opcionesCancelacion")
                                        const contenedorAdvertenciaInmersiva = document.createElement("div")
                                        contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                                        const contenidoAdvertenciaInmersiva = document.createElement("div")
                                        contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                                        contenidoAdvertenciaInmersiva.setAttribute("contenedor", "contenidoAdvertenciaInmersiva")
                                        const contenedorCancelacion = document.createElement("div")
                                        contenedorCancelacion.classList.add("administracion_reservas_detallesReservas_cancelarReserva_contenedorCancelacion")
                                        const tituloCancelarReserva = document.createElement("p")
                                        tituloCancelarReserva.classList.add("detallesReservaTituloCancelarReserva")
                                        tituloCancelarReserva.innerText = "Cancelar reserva"
                                        contenedorCancelacion.appendChild(tituloCancelarReserva)
                                        const botonCancelarProcesoCancelacion = document.createElement("div")
                                        botonCancelarProcesoCancelacion.classList.add("detallesReservaCancelarBoton")
                                        botonCancelarProcesoCancelacion.innerText = "Cerrar y volver atras"
                                        botonCancelarProcesoCancelacion.addEventListener("click", () => {
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.salirDelProceso(reservaUID)
                                        })
                                        contenedorCancelacion.appendChild(botonCancelarProcesoCancelacion)
                                        const bloqueBloqueoApartamentos = document.createElement("div")
                                        bloqueBloqueoApartamentos.classList.add("detallesReservaCancelarReservaBloqueBloqueoApartamentos")
                                        const tituloBloquoApartamentos = document.createElement("div")
                                        tituloBloquoApartamentos.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                        tituloBloquoApartamentos.innerText = "Selecciona qué tipo de bloqueo quieres aplicar a los apartamentos de esta reserva tras la cancelación."
                                        bloqueBloqueoApartamentos.appendChild(tituloBloquoApartamentos)
                                        let opcionBloqueoApartamento = document.createElement("p")
                                        opcionBloqueoApartamento.classList.add("detallesReservaCancelarOcionBloqueoApartamentos")
                                        opcionBloqueoApartamento.setAttribute("componente", "cancelarReservaOpcionBloqueo")
                                        opcionBloqueoApartamento.setAttribute("cancelarReservatipoBloqueo", "rangoTemporal")
                                        opcionBloqueoApartamento.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.seleccionarOpcionBloqueoApartametos)
                                        opcionBloqueoApartamento.innerText = "Bloquear los apartamentos de esta reserva tras la cancelación durante el mismo rango que tiene esta reserva."
                                        bloqueBloqueoApartamentos.appendChild(opcionBloqueoApartamento)
                                        opcionBloqueoApartamento = document.createElement("p")
                                        opcionBloqueoApartamento.classList.add("detallesReservaCancelarOcionBloqueoApartamentos")
                                        opcionBloqueoApartamento.setAttribute("componente", "cancelarReservaOpcionBloqueo")
                                        opcionBloqueoApartamento.setAttribute("cancelarReservatipoBloqueo", "permanente")
                                        opcionBloqueoApartamento.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.seleccionarOpcionBloqueoApartametos)
                                        opcionBloqueoApartamento.innerText = "Bloquear los apartamentos de esta reserva tras la cancelación con un bloqueo permanente. Deberá liberarlos manualmente."
                                        bloqueBloqueoApartamentos.appendChild(opcionBloqueoApartamento)
                                        opcionBloqueoApartamento = document.createElement("p")
                                        opcionBloqueoApartamento.classList.add("detallesReservaCancelarOcionBloqueoApartamentos")
                                        opcionBloqueoApartamento.setAttribute("componente", "cancelarReservaOpcionBloqueo")
                                        opcionBloqueoApartamento.setAttribute("cancelarReservatipoBloqueo", "sinBloqueo")
                                        opcionBloqueoApartamento.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.seleccionarOpcionBloqueoApartametos)
                                        opcionBloqueoApartamento.innerText = "Liberar los apartamentos de esta reserva tras la cancelación para que pasen a estar disponibles para su reserva."
                                        bloqueBloqueoApartamentos.appendChild(opcionBloqueoApartamento)
                                        contenedorCancelacion.appendChild(bloqueBloqueoApartamentos)
                                        const bloqueBotones = document.createElement("div")
                                        bloqueBotones.classList.add("detallesReservaCancelarReservabloqueBotones")
                                        const entradaPalabraCancelar = document.createElement("input")
                                        entradaPalabraCancelar.classList.add("detallesReservaCancelarEntradaTextoCancelar")
                                        entradaPalabraCancelar.placeholder = "Escriba la palabra cancelar"
                                        //  advertenciaInmersivaIU.appendChild(entradaPalabraCancelar)
                                        const infoBotonCancelar = document.createElement("div")
                                        infoBotonCancelar.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                        infoBotonCancelar.innerText = "Para que se habilite el botón, tienes que seleccionar una de las tres opciones de arriba. Confirmar y cancelar reserva."
                                        bloqueBloqueoApartamentos.appendChild(infoBotonCancelar)
                                        const botonCancelar = document.createElement("div")
                                        botonCancelar.classList.add("detallesReservaCancelarBoton")
                                        botonCancelar.setAttribute("componente", "botonConfirmarCancelarReserva")
                                        botonCancelar.style.pointerEvents = "none"
                                        botonCancelar.style.color = "#313131"
                                        botonCancelar.innerText = "Confirmar y cancelar reserva"
                                        botonCancelar.addEventListener("click", () => {
                                            casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.confirmaCancelacion()
                                        })
                                        bloqueBloqueoApartamentos.appendChild(botonCancelar)
                                        const infoEliminarReserva = document.createElement("div")
                                        infoEliminarReserva.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                        //infoEliminarReserva.style.marginTop = "50px"
                                        infoEliminarReserva.innerText = "También puedes eliminar irreversiblemente una reserva. La eliminación irreversible de una reserva borra la información de la reserva, así como los pagos asociados a la reserva y toda la información relacionada con la reserva, menos los datos de los clientes y titulares que permanecen disponibles para otras reservas. A diferencia de la cancelación, los datos de la reserva dejarán de estar disponibles."
                                        bloqueBotones.appendChild(infoEliminarReserva)
                                        const botonEliminarReserva = document.createElement("div")
                                        botonEliminarReserva.classList.add("administracion_reservas_detallesReserva_cancelarReserva_botonV1")
                                        botonEliminarReserva.setAttribute("componente", "botonConfirmarCancelarReserva")
                                        botonEliminarReserva.innerText = "Eliminar irreversiblemente la reserva"
                                        botonEliminarReserva.addEventListener("click", casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.eliminarReservaIrreversiblemente.UI)
                                        bloqueBotones.appendChild(botonEliminarReserva)
                                        contenedorCancelacion.appendChild(bloqueBotones)
                                        contenidoAdvertenciaInmersiva.appendChild(contenedorCancelacion)
                                        contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                                        advertenciaInmersivaIU.appendChild(contenedorAdvertenciaInmersiva)
                                        document.querySelector("main").appendChild(advertenciaInmersivaIU)
                                    },
                                    seleccionarOpcionBloqueoApartametos: (opcion) => {
                                        let selectorOpciones = document.querySelectorAll("[componente=cancelarReservaOpcionBloqueo]")
                                        let opcionBloqueo = opcion.target
                                        let botonCancelar = document.querySelector("[componente=botonConfirmarCancelarReserva]")
                                        if (opcionBloqueo.getAttribute("estado") === "activo") {
                                            opcionBloqueo.removeAttribute("estado")
                                            botonCancelar.style.pointerEvents = "none"
                                            botonCancelar.style.color = "#313131"
                                            opcionBloqueo.removeAttribute("style")

                                        }
                                        selectorOpciones.forEach((opcionBloqueo) => {
                                            opcionBloqueo.removeAttribute("style")
                                            opcionBloqueo.removeAttribute("estado")
                                        })
                                        opcionBloqueo.style.background = "blue"
                                        opcionBloqueo.style.color = "white"
                                        opcionBloqueo.setAttribute("estado", "activo")
                                        botonCancelar.removeAttribute("style")
                                    },
                                    confirmaCancelacion: async function () {
                                        const instanciaUID_pantallaEspera = casaVitini.utilidades.codigoFechaInstancia()
                                        const metadatosPantallaCarga = {
                                            mensaje: "Cancelando reserva...",
                                            instanciaUID: instanciaUID_pantallaEspera,
                                        }
                                        casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)


                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        const tipoBloqueo = document.querySelector("[componente=cancelarReservaOpcionBloqueo][estado=activo]").getAttribute("cancelarReservatipoBloqueo")
                                        const transaccion = {
                                            zona: "administracion/reservas/detallesReserva/global/cancelarReserva",
                                            reservaUID: String(reservaUID),
                                            tipoBloqueo: tipoBloqueo
                                        }

                                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                        const selectorPantallaDeCarga = document.querySelector(`[instanciaUID="${instanciaUID_pantallaEspera}"]`)
                                        selectorPantallaDeCarga?.remove()

                                        const reservaUI = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                        if (!reservaUI) { return }

                                        if (respuestaServidor?.error) {
                                            casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                        } else if (respuestaServidor?.ok) {
                                            const m = "Reserva cancelada"
                                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                            casaVitini.ui.componentes.advertenciaInmersiva(m)
                                            document.querySelector("[dataReserva=estado]").innerText = "Cancelada"
                                            this.salirDelProceso(reservaUID)
                                        }
                                    },
                                    eliminarReservaIrreversiblemente: {
                                        UI: function () {
                                            const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                            const selectorContenedorOpcionesCancelacion = document.querySelector("[contenedor=opcionesCancelacion]")
                                            selectorContenedorOpcionesCancelacion.style.transition = "background 500ms"
                                            selectorContenedorOpcionesCancelacion.style.background = "rgba(255, 0, 0, 0.3)"
                                            selectorContenedorOpcionesCancelacion.setAttribute("instanciaUID", instanciaUID)
                                            const selectorContenido = selectorContenedorOpcionesCancelacion.querySelector("[contenedor=contenidoAdvertenciaInmersiva]")
                                            selectorContenido.innerHTML = null
                                            const contenedorCancelacion = document.createElement("div")
                                            contenedorCancelacion.classList.add("administracion_reservas_detallesReservas_cancelarReserva_contenedorCancelacion")
                                            const tituloCancelarReserva = document.createElement("p")
                                            tituloCancelarReserva.classList.add("detallesReservaTituloCancelarReserva")
                                            tituloCancelarReserva.innerText = "Eliminar irreversiblemente una reserva"
                                            tituloCancelarReserva.style.color = "red"
                                            contenedorCancelacion.appendChild(tituloCancelarReserva)
                                            const botonCancelarProcesoCancelacion = document.createElement("div")
                                            botonCancelarProcesoCancelacion.classList.add("detallesReservaCancelarBoton")
                                            botonCancelarProcesoCancelacion.innerText = "Cerrar y volver atras"
                                            botonCancelarProcesoCancelacion.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.salirDelProceso(reservaUID)
                                            })
                                            contenedorCancelacion.appendChild(botonCancelarProcesoCancelacion)
                                            const bloqueBloqueoApartamentos = document.createElement("div")
                                            bloqueBloqueoApartamentos.classList.add("detallesReservaCancelarReservaBloqueBloqueoApartamentos")
                                            const tituloBloquoApartamentos = document.createElement("div")
                                            tituloBloquoApartamentos.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                            tituloBloquoApartamentos.innerText = "Eliminar irreversiblemente una reserva, elimina de la base de datos la información de la reserva, los alojamientos asociados, los pernoctantes y el titular de la reserva (pero no sus datos como cliente), los pagos y los reembolsos. Esta eliminación es irreversible. Los datos desaparecerán de la base de datos y, si no existen en una copia de seguridad, no serán recuperables. Si solo desea cancelar una reserva para liberar los apartamentos y hacer que deje de tener vigencia, cancélela y podrá seguir teniendo acceso a los datos de esta sin que tenga vigencia pernoctativa y ocupacional.."
                                            bloqueBloqueoApartamentos.appendChild(tituloBloquoApartamentos)
                                            const infoSeguridad = document.createElement("div")
                                            infoSeguridad.classList.add("detallesReservaCancelarReservaTituloBloquoApartamentos")
                                            infoSeguridad.innerText = "Para eliminar una reserva irreversiblemente junto con toda su información relacionada, debe escribir su contraseña de usuario y su cuenta debe tener autorización administrativa."
                                            bloqueBloqueoApartamentos.appendChild(infoSeguridad)
                                            const campo = document.createElement("input")
                                            campo.classList.add("administracion_reserva_detallesReserva_cancelarReserva_eliminarReserva_campo")
                                            campo.setAttribute("campo", "clave")
                                            campo.type = "password"
                                            campo.placeholder = "Escriba la contraseña de su VitiniID"
                                            bloqueBloqueoApartamentos.appendChild(campo)
                                            contenedorCancelacion.appendChild(bloqueBloqueoApartamentos)
                                            const bloqueBotones = document.createElement("div")
                                            bloqueBotones.classList.add("detallesReservaCancelarReservabloqueBotones")
                                            const botonCancelar = document.createElement("div")
                                            botonCancelar.classList.add("administracion_reserva_detallesReserva_cancelarReserva_eliminarReserva_botonV1")
                                            botonCancelar.setAttribute("componente", "botonConfirmarCancelarReserva")
                                            botonCancelar.innerText = "Eliminar reseva irreversiblemente"
                                            botonCancelar.addEventListener("click", () => {
                                                casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.categoriasGlobales.cancelarReserva.eliminarReservaIrreversiblemente.confirmar({
                                                    instanciaUID,
                                                    reservaUID
                                                })
                                            })
                                            bloqueBloqueoApartamentos.appendChild(botonCancelar)
                                            contenedorCancelacion.appendChild(bloqueBotones)
                                            selectorContenido.appendChild(contenedorCancelacion)
                                            // selectorContenido.appendChild(selectorContenedorOpcionesCancelacion)
                                        },
                                        confirmar: async (data) => {

                                            const reservaUID = data.reservaUID
                                            const instanciaUID = data.instanciaUID

                                            const clave = document.querySelector(`[instanciaUID="${instanciaUID}"] [campo=clave]`)
                                            const instanciaUID_pantallDeCarga = casaVitini.utilidades.codigoFechaInstancia()
                                            const metadatosPantallaCarga = {
                                                mensaje: "Eliminado reserva...",
                                                instanciaUID: instanciaUID_pantallDeCarga,
                                            }
                                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(metadatosPantallaCarga)
                                            const transaccion = {
                                                zona: "administracion/reservas/detallesReserva/global/eliminarIrreversiblementeReserva",
                                                reservaUID: String(reservaUID),
                                                clave: clave?.value
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            const selectorPantallaDeCarga = document.querySelector(`[instanciaUID="${instanciaUID_pantallDeCarga}"]`)
                                            selectorPantallaDeCarga?.remove()

                                            const reservaUI = document.querySelector(`[reservaUID="${reservaUID}"]`)
                                            if (!reservaUI) { return }

                                            if (respuestaServidor?.error) {

                                                document.querySelector(`[instanciaUID="${instanciaUID}"] [campo=clave]`).value = ""
                                                return casaVitini.ui.componentes.advertenciaInmersivaSuperPuesta(respuestaServidor?.error)
                                            }
                                            if (respuestaServidor?.ok) {
                                                const granuladoURL = casaVitini.utilidades.granuladorURL()
                                                granuladoURL.rawArray.pop()
                                                const rawArray = granuladoURL.rawArray

                                                const main = document.querySelector("main")
                                                main.innerHTML = null

                                                const directoriosFusion = "/administracion/reservas"
                                                const componentesExistenteUID = "reservaUID_" + reservaUID
                                                const titulo = "Casa Vitini"
                                                const estado = {
                                                    zona: directoriosFusion,
                                                    EstadoInternoZona: "estado",
                                                    tipoCambio: "parcial",
                                                    componenteExistente: componentesExistenteUID,
                                                    funcionPersonalizada: "casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias"
                                                }
                                                window.history.pushState(estado, titulo, directoriosFusion);

                                                const info = document.createElement("div")
                                                info.classList.add(
                                                    "margin10",
                                                    "textoCentrado",
                                                    "negritas"
                                                )
                                                info.innerText = `Se ha eliminado la reserva ${reservaUID}`
                                                main.appendChild(info)


                                            }
                                        }
                                    },
                                    salirDelProceso: (reservaUID) => {
                                        casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas();
                                        const granuladoURL = casaVitini.utilidades.granuladorURL()
                                        granuladoURL.rawArray.pop()
                                        const rawArray = granuladoURL.rawArray

                                        const directoriosFusion = "/" + rawArray.join("/")
                                        const componentesExistenteUID = "reservaUID_" + reservaUID
                                        const titulo = "Casa Vitini"
                                        const estado = {
                                            zona: directoriosFusion,
                                            EstadoInternoZona: "estado",
                                            tipoCambio: "parcial",
                                            componenteExistente: componentesExistenteUID,
                                            funcionPersonalizada: "casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias"
                                        }
                                        window.history.pushState(estado, titulo, directoriosFusion);
                                    },
                                },
                                miscelanea: {
                                    arranque: async () => {
                                        casaVitini.ui.vistas.miCasa.cuenta.reservas.detallesReserva.reservaUI.categorias.limpiarMenusCategorias()
                                        document.querySelector(`[categoriaReserva=miscelanea]`).setAttribute("estadoCategoria", "actual")
                                        const reservaUID = document.querySelector("[reservaUID]").getAttribute("reservaUID")
                                        const obtenerPDF = async () => {


                                            const pantallaInmersiva = casaVitini.ui.componentes.pantallaInmersivaPersonalizadaMoldeada()
                                            const constructor = pantallaInmersiva.querySelector("[componente=constructor]")
                                            const instanciaUID = pantallaInmersiva.closest("[instanciaUID]").getAttribute("instanciaUID")


                                            const titulo = constructor.querySelector("[componente=titulo]")
                                            titulo.innerText = "Reserva en pdf"
                                            const mensaje = constructor.querySelector("[componente=mensajeUI]")
                                            mensaje.innerText = "Generando el pdf..."

                                            const contenedorEspacio = constructor.querySelector("[componente=contenedor]")
                                            const spinnerPorRenderizar = casaVitini.ui.componentes.spinnerSimple()
                                            contenedorEspacio.appendChild(spinnerPorRenderizar)

                                            const botonDescargar = constructor.querySelector("[boton=aceptar]")
                                            botonDescargar.style.display = "none"

                                            const botonCancelar = constructor.querySelector("[boton=cancelar]")
                                            botonCancelar.innerText = "Cancelar generacion del pdf..."

                                            document.querySelector("main").appendChild(pantallaInmersiva)
                                            const advertenciaInmersivaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)

                                            const transaccion = {
                                                zona: "miCasa/misReservas/obtenerPDF",
                                                reservaUID: reservaUID
                                            }
                                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                                            const pantallaInmersivaRenderizda = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                            if (!pantallaInmersivaRenderizda) {
                                                return
                                            }
                                            if (respuestaServidor?.error) {
                                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor.error)
                                            }
                                            if (respuestaServidor.ok) {
                                                const pdfBase64 = respuestaServidor.pdf
                                                const selectorZonaGestion = advertenciaInmersivaRenderizada.querySelector("[componente=contenedor]");
                                                selectorZonaGestion.innerHTML = null;
                                                mensaje.innerText = "Se ha generado el archivo PDF con el resumen de su reserva. Para descargar el PDF, pulsa en 'iniciar la descarga del PDF'";

                                                const botonDescargarPDF = document.createElement("a")
                                                botonDescargarPDF.classList.add(
                                                    "boton",
                                                    "areaSinDecoracionPredeterminada",
                                                    "ratonDefault"
                                                )
                                                botonDescargarPDF.innerText = "Descargar un resumen de la reserva en PDF"
                                                botonDescargarPDF.download = "Reserva.pdf"
                                                botonDescargarPDF.title = "Descargar PDF"
                                                botonDescargarPDF.href = `data:application/pdf;base64,${pdfBase64}`


                                                botonDescargar.parentNode.replaceChild(botonDescargarPDF, botonDescargar);
                                                botonCancelar.innerText = "Cancelar y volver"
                                            }

                                        }
                                        const botonEnlacesDePago = document.querySelector("[categoriaReserva=miscelanea]")
                                        botonEnlacesDePago.style.background = "blue"
                                        botonEnlacesDePago.querySelector("[componente=iconoLineaMiscelanea]").style.background = "white"
                                        const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                                        const contenedorDinamico = document.querySelector("[componente=contenedorDinamico]")
                                        contenedorDinamico.innerHTML = null
                                        const contenedorDesgloseDelTotal = document.createElement("div")
                                        contenedorDesgloseDelTotal.classList.add("administracion_reserver_detallesReserva_contenedorDesgloseTotal")
                                        contenedorDesgloseDelTotal.setAttribute("instanciaUID", instanciaUID)
                                        contenedorDesgloseDelTotal.setAttribute("componente", "contenedorDesgloseTotal")
                                        contenedorDinamico.appendChild(contenedorDesgloseDelTotal)
                                        const contenedorAdvertenciaInmersiva = document.createElement("div")
                                        contenedorAdvertenciaInmersiva.classList.add("administracion_reservas_detallesReserva_contenedorMisleanea")
                                        const titulo = document.createElement("p")
                                        titulo.classList.add("detallesReserva_reembolso_tituloGlobal")
                                        titulo.innerText = "Miscelánea"
                                        contenedorAdvertenciaInmersiva.appendChild(titulo)
                                        const infoGlobal = document.createElement("div")
                                        infoGlobal.classList.add("detallesReserva_reembolso_infoGlobal")
                                        infoGlobal.innerText = `En la miscelánea de la reserva encontrará operaciones y demás propósitos u opciones que, por su idiosincrasia específica, no requieren de un contexto dedicado.`
                                        contenedorAdvertenciaInmersiva.appendChild(infoGlobal)
                                        let boton = document.createElement("div")
                                        boton.classList.add("administracion_reservas_detallesReserfa_miscelanea_botonOpcion")
                                        boton.addEventListener("click", obtenerPDF)
                                        boton.innerText = "Generar un PDF del resumen de la reserva"
                                        contenedorAdvertenciaInmersiva.appendChild(boton)
                                        boton = document.createElement("div")
                                        boton.classList.add("administracion_reservas_detallesReserfa_miscelanea_botonOpcion")
                                        boton.innerText = "Generar un PDF del resumen de la reserva y enviar por mail (implementandose)"
                                        //contenedorAdvertenciaInmersiva.appendChild(boton)
                                        const instanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                                        instanciaRenderizada.innerHTML = null
                                        instanciaRenderizada.appendChild(contenedorAdvertenciaInmersiva)
                                    }
                                },
                            },
                        },
                    },
                    configuracionZonaHoraria: {
                        arranque: async () => { }
                    }
                },
                crearCuenta: {
                    portada: {
                        arranque: () => {
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "/micasa")
                            const boton = document.querySelector("[componente=botonCrearNuevaCuenta]")
                            boton.addEventListener("click", casaVitini.ui.vistas.miCasa.crearCuenta.portada.transactor)
                        },
                        transactor: async () => {
                            const usuarioIDX = document.querySelector("[campo=usuarioIDX]").value
                            const mail = document.querySelector("[campo=mail]").value
                            const claveNueva = document.querySelector("[campo=claveNueva]").value
                            const claveConfirmada = document.querySelector("[campo=claveConfirmada]").value
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Creando tu VitiniID..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const transaccion = {
                                zona: "miCasa/crearCuentaDesdeMiCasa",
                                usuarioIDX: usuarioIDX,
                                mail: mail,
                                claveNueva: claveNueva,
                                claveConfirmada: claveConfirmada
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            if (!pantallaDeCargaRenderizada) { return }
                            if (respuestaServidor?.error) {
                                pantallaDeCargaRenderizada.remove()
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok) {
                                const vista = {
                                    vista: "/micasa",
                                    tipoOrigen: "menuNavegador"
                                }
                                await casaVitini.shell.navegacion.controladorVista(vista)
                                const informacion = "Se ha creado la cuenta correctamente. Bienvenido a Casa Vitini. Ya puedes iniciar sesión con tu VitiniID."
                                casaVitini.ui.componentes.advertenciaInmersiva(informacion)
                            }
                        },
                    }
                },
                cerrarSession: async () => {
                    const selectorBotonCerrarSession = document.querySelector("[componente=botonCerrarSession]")
                    selectorBotonCerrarSession.innerText = "Cerrando session..."

                    const IDX = await casaVitini.shell.IDX.cerrarSession()
                    if (!IDX) {
                        selectorBotonCerrarSession.innerText = "Cerrar session"
                    } else if (IDX?.estadoIDV === "desconectado") {
                        const vista = {
                            vista: "/micasa",
                            tipoOrigen: "menuNavegador"
                        }
                        casaVitini.shell.navegacion.controladorVista(vista)
                    }
                },
                componentes: {
                    bannerIDX: (metadatos) => {
                        const usuarioIDX = metadatos.usuarioIDX

                        const rolIDV = metadatos.rolIDV
                        const rolUITexto = rolIDV.substring(0, 1).toUpperCase() + rolIDV.substring(1);
                        const contenedorUsuarioIDX = document.createElement("div")
                        contenedorUsuarioIDX.classList.add("detallesUsuario_contenedorUsuarioIDX")
                        contenedorUsuarioIDX.setAttribute("componente", "contenedorUsuarioUX")
                        const esferaUsuario = document.createElement("div")
                        esferaUsuario.classList.add("detallesUsuario_esferaUsuario")
                        esferaUsuario.setAttribute("componente", "esferaUsuario")
                        contenedorUsuarioIDX.appendChild(esferaUsuario)
                        const contenedorDatosGlobales = document.createElement("div")
                        contenedorDatosGlobales.classList.add("detallesUsuario_contenedorDatosGlobales")
                        contenedorDatosGlobales.setAttribute("componente", "contenedorDatosGlobales")
                        const usuarioIDXUI = document.createElement("div")
                        usuarioIDXUI.classList.add("detallesUsuario_usuarioUI")
                        usuarioIDXUI.setAttribute("usuarioIDX", usuarioIDX)
                        usuarioIDXUI.innerText = usuarioIDX
                        contenedorDatosGlobales.appendChild(usuarioIDXUI)
                        const rolUI = document.createElement("div")
                        rolUI.classList.add("detallesUsuario_rolUI")
                        rolUI.setAttribute("componente", "rolUI")
                        rolUI.innerText = rolUITexto
                        contenedorDatosGlobales.appendChild(rolUI)
                        contenedorUsuarioIDX.appendChild(contenedorDatosGlobales)
                        return contenedorUsuarioIDX
                    }
                },
                recuperarCuenta: {
                    arranque: async () => {
                        const main = document.querySelector("main")
                        main.setAttribute("zonaCSS", "/micasa")
                        const granuladoURL = casaVitini.utilidades.granuladorURL()
                        const comandoInicial = granuladoURL.directorios[granuladoURL.directorios.length - 1]
                        if (comandoInicial === "recuperar_cuenta") {
                            return casaVitini.ui.vistas.miCasa.recuperarCuenta.ui.formularioEnviarmail()
                        }
                        const comandoSecundario = granuladoURL.directorios[granuladoURL.directorios.length - 2]
                        if (comandoSecundario === "recuperar_cuenta") {
                            const transacccion = {
                                zona: "miCasa/recuperarCuenta/validarCodigo",
                                codigo: comandoInicial
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transacccion)
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.vistas.miCasa.recuperarCuenta.ui.codigoErroneo()
                            }
                            if (respuestaServidor?.ok) {
                                return casaVitini.ui.vistas.miCasa.recuperarCuenta.ui.restablecerClave(comandoInicial)
                            }
                        }
                    },
                    ui: {
                        formularioEnviarmail: () => {
                            // Crear elementos
                            const titulo = document.createElement('p');
                            titulo.className = 'titulo';
                            titulo.textContent = 'Recuperar mi cuenta de Casa Vitini';
                            const marcoElasticoRelativo = document.createElement('div');
                            marcoElasticoRelativo.className = 'marcoElasticoRelativo';
                            const marcoElastico = document.createElement('div');
                            marcoElastico.className = 'marcoElastico';
                            const contenedorCrearCuenta = document.createElement('form');
                            contenedorCrearCuenta.className = 'miCasa_crearCuenta_contenedorCrearCuenta';
                            const texto = document.createElement('p');
                            texto.className = 'texto padding6';
                            texto.textContent = 'Si olvidaste tu contraseña o, por el contrario, creaste tu VitiniID, pero no lo verificaste con tu cuenta de correo electrónico, por favor, proporciona la dirección de correo electrónico con la que creaste tu VitniniID. Te enviaremos un mensaje a tu buzón con un enlace temporal para restablecer tu contraseña o un enlace de verificación para verificar tu cuenta.';
                            const input = document.createElement('input');
                            input.type = 'text'
                            input.autocomplete = "mail"
                            input.className = 'miCasa_crearCuenta_campo';
                            input.setAttribute('campo', 'mail');
                            input.placeholder = 'Escribe tu direción de correo electroníco';
                            const contenedorBotones = document.createElement('div');
                            contenedorBotones.className = 'miCuenta_cambioClave_contenedorBotones';
                            const botonEnviar = document.createElement('div');
                            botonEnviar.className = 'miCuenta_cambiarClave_botonV1';
                            botonEnviar.setAttribute('componente', 'botonCrearNuevaCuenta');
                            botonEnviar.addEventListener("click", () => {
                                casaVitini.ui.vistas.miCasa.recuperarCuenta.transactores.enviarEnlaceRecuperacion()
                            })
                            botonEnviar.textContent = 'Enviar mensaje de recuperación a mi buzón';
                            // Adjuntar elementos al DOM
                            const secction = document.querySelector("main")
                            secction.appendChild(titulo);
                            contenedorCrearCuenta.appendChild(texto);
                            contenedorCrearCuenta.appendChild(input);
                            contenedorBotones.appendChild(botonEnviar);
                            contenedorCrearCuenta.appendChild(contenedorBotones);
                            marcoElastico.appendChild(contenedorCrearCuenta);
                            marcoElasticoRelativo.appendChild(marcoElastico);
                            secction.appendChild(marcoElasticoRelativo);
                        },
                        codigoErroneo: () => {
                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add("marcoElasticoRelativo")
                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            marcoElastico.style.alignItems = "stretch"
                            marcoElastico.style.gap = "4px"
                            const titulo = document.createElement("div")
                            titulo.classList.add("titulo")
                            titulo.innerText = "El código de recuperación es erróneo"
                            marcoElastico.appendChild(titulo)
                            // Añadir banner informativo
                            const contenedorBanner = document.createElement("a")
                            contenedorBanner.classList.add("plaza_reservas_reservaConfirmada_bannerV2")
                            contenedorBanner.innerText = "El código de recuperación es erróneo. Revisa el código introducido. Recuerda que los códigos de recuperación tienen una validez de una hora desde que se generan, se usen o no. También recuerda que los códigos de recuperación son de un solo uso. Si has generado varios códigos de recuperación, recuerda que también solo es válido un código a la vez. Eso quiere decir que si generaste varios códigos, el válido solo es el último código generado, el más nuevo."
                            marcoElastico.appendChild(contenedorBanner)
                            const botonIniciarReserva = document.createElement("a")
                            botonIniciarReserva.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIniciarReserva.innerText = "Ir a generar un nuevo código"
                            botonIniciarReserva.setAttribute("href", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.setAttribute("vista", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonIniciarReserva)
                            const botonIrARegistrarse = document.createElement("a")
                            botonIrARegistrarse.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIrARegistrarse.innerText = "Ir al portal de MiCasa"
                            botonIrARegistrarse.setAttribute("href", "/micasa")
                            botonIrARegistrarse.setAttribute("vista", "/micasa")
                            botonIrARegistrarse.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonIrARegistrarse)
                            const botonInciarSession = document.createElement("a")
                            botonInciarSession.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonInciarSession.innerText = "Ir a la página principal"
                            botonInciarSession.setAttribute("href", "/")
                            botonInciarSession.setAttribute("vista", "/")
                            botonInciarSession.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            //marcoElastico.appendChild(botonInciarSession)
                            marcoElasticoRelatico.appendChild(marcoElastico)
                            const seccion = document.querySelector("main")
                            seccion.innerHTML = null
                            seccion.appendChild(marcoElasticoRelatico)
                        },
                        mensajeEnviado: () => {
                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add("marcoElasticoRelativo")
                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            marcoElastico.style.alignItems = "stretch"
                            marcoElastico.style.gap = "4px"
                            const titulo = document.createElement("div")
                            titulo.classList.add("titulo")
                            titulo.innerText = "Mensaje enviado"
                            marcoElastico.appendChild(titulo)
                            // Añadir banner informativo
                            const contenedorBanner = document.createElement("a")
                            contenedorBanner.classList.add("plaza_miCasa_recuperarCuenta_contenedorInfo")
                            contenedorBanner.innerText = "Se ha enviado un mensaje a tu buzón con un enlace temporal de una hora de duración para que puedas restablecer tu contraseña y recuperar el acceso a tu VitiniID."
                            marcoElastico.appendChild(contenedorBanner)
                            const botonIniciarReserva = document.createElement("a")
                            botonIniciarReserva.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIniciarReserva.innerText = "Volver a generar otro código (Acabo de olvidar la nueva clave)"
                            botonIniciarReserva.setAttribute("href", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.setAttribute("vista", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            //marcoElastico.appendChild(botonIniciarReserva)
                            const botonIrARegistrarse = document.createElement("a")
                            botonIrARegistrarse.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIrARegistrarse.innerText = "Ir al portal de MiCasa"
                            botonIrARegistrarse.setAttribute("href", "/micasa")
                            botonIrARegistrarse.setAttribute("vista", "/micasa")
                            botonIrARegistrarse.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            //marcoElastico.appendChild(botonIrARegistrarse)
                            const botonInciarSession = document.createElement("a")
                            botonInciarSession.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonInciarSession.innerText = "Ir a la página principal"
                            botonInciarSession.setAttribute("href", "/")
                            botonInciarSession.setAttribute("vista", "/")
                            botonInciarSession.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            //marcoElastico.appendChild(botonInciarSession)
                            marcoElasticoRelatico.appendChild(marcoElastico)
                            const seccion = document.querySelector("main")
                            seccion.innerHTML = null
                            seccion.appendChild(marcoElasticoRelatico)
                        },
                        claveRestablecida: () => {
                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add("marcoElasticoRelativo")
                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            marcoElastico.style.alignItems = "stretch"
                            marcoElastico.style.gap = "4px"
                            const titulo = document.createElement("div")
                            titulo.classList.add("titulo")
                            titulo.innerText = "Cuenta reestablecida"
                            marcoElastico.appendChild(titulo)
                            // Añadir banner informativo
                            const contenedorBanner = document.createElement("a")
                            contenedorBanner.classList.add("plaza_miCasa_recuperarCuenta_contenedorInfo")
                            contenedorBanner.innerText = "Se ha restablecido tu contraseña. Ya puedes empezar a usarla."
                            marcoElastico.appendChild(contenedorBanner)
                            const botonIniciarReserva = document.createElement("a")
                            botonIniciarReserva.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIniciarReserva.innerText = "Volver a generar otro código (acabo de olvidar la nueva clave)"
                            botonIniciarReserva.setAttribute("href", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.setAttribute("vista", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            //marcoElastico.appendChild(botonIniciarReserva)
                            const botonIrARegistrarse = document.createElement("a")
                            botonIrARegistrarse.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIrARegistrarse.innerText = "Ir al portal de MiCasa"
                            botonIrARegistrarse.setAttribute("href", "/micasa")
                            botonIrARegistrarse.setAttribute("vista", "/micasa")
                            botonIrARegistrarse.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            //marcoElastico.appendChild(botonIrARegistrarse)
                            const botonInciarSession = document.createElement("a")
                            botonInciarSession.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonInciarSession.innerText = "Ir a la página principal"
                            botonInciarSession.setAttribute("href", "/")
                            botonInciarSession.setAttribute("vista", "/")
                            botonInciarSession.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            //marcoElastico.appendChild(botonInciarSession)
                            marcoElasticoRelatico.appendChild(marcoElastico)
                            const seccion = document.querySelector("main")
                            seccion.innerHTML = null
                            seccion.appendChild(marcoElasticoRelatico)
                        },
                        restablecerClave: (codigo) => {
                            // Crear elementos
                            const titulo = document.createElement('p');
                            titulo.className = 'titulo';
                            titulo.textContent = 'Restablecer contaseña';
                            const marcoElasticoRelativo = document.createElement('div');
                            marcoElasticoRelativo.className = 'marcoElasticoRelativo';
                            const marcoElastico = document.createElement('div');
                            marcoElastico.className = 'marcoElastico';
                            const contenedorCrearCuenta = document.createElement('form');
                            contenedorCrearCuenta.className = 'miCasa_crearCuenta_contenedorCrearCuenta';
                            const texto = document.createElement('p');
                            texto.className = 'texto padding6';
                            texto.textContent = 'Restablece la contraseña de tu VitiniID. Una vez la restablezcas, este enlace dejará de tener valides. Escoge una contraseña robusta y segura. Es recomendable usar un llavero de contraseñas tanto para generarlas como para gestionarlas. Este enlace te otorga una hora para restablecer tu contraseña.';
                            const clave = document.createElement('input');
                            clave.type = 'password';
                            clave.className = 'miCasa_crearCuenta_campo';
                            clave.autocomplete = "new-password"
                            clave.setAttribute('campo', 'clave');
                            clave.placeholder = 'Escribe tu nueva contraseña';
                            const claveConfirmada = document.createElement('input');
                            claveConfirmada.type = 'password';
                            claveConfirmada.className = 'miCasa_crearCuenta_campo';
                            claveConfirmada.autocomplete = "new-password"
                            claveConfirmada.setAttribute('campo', 'claveConfirmada');
                            claveConfirmada.placeholder = 'Escribe de nuevo tu contraseña';
                            const contenedorBotones = document.createElement('div');
                            contenedorBotones.className = 'miCuenta_cambioClave_contenedorBotones';
                            const botonEnviar = document.createElement('div');
                            botonEnviar.className = 'miCuenta_cambiarClave_botonV1';
                            botonEnviar.setAttribute('componente', 'botonCrearNuevaCuenta');
                            botonEnviar.addEventListener("click", () => {
                                casaVitini.ui.vistas.miCasa.recuperarCuenta.transactores.restablecerClave(codigo)
                            })
                            botonEnviar.textContent = 'Reestablecer contraseña';
                            // Adjuntar elementos al DOM
                            const secction = document.querySelector("main")
                            secction.appendChild(titulo);
                            contenedorCrearCuenta.appendChild(texto);
                            contenedorCrearCuenta.appendChild(clave);
                            contenedorCrearCuenta.appendChild(claveConfirmada);
                            contenedorBotones.appendChild(botonEnviar);
                            contenedorCrearCuenta.appendChild(contenedorBotones);
                            marcoElastico.appendChild(contenedorCrearCuenta);
                            marcoElasticoRelativo.appendChild(marcoElastico);
                            secction.appendChild(marcoElasticoRelativo);
                        },
                    },
                    transactores: {
                        enviarEnlaceRecuperacion: async () => {
                            const mail = document.querySelector("[campo=mail]").value
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Enviando enlace temporal..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            const transacccion = {
                                zona: "miCasa/recuperarCuenta/enviarCorreo",
                                mail: mail.trim()
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transacccion)
                            if (respuestaServidor?.error && pantallaDeCargaRenderizada) {
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok && pantallaDeCargaRenderizada) {
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                return casaVitini.ui.vistas.miCasa.recuperarCuenta.ui.mensajeEnviado()
                            }
                        },
                        restablecerClave: async (codigo) => {
                            const clave = document.querySelector("[campo=clave]").value
                            const claveConfirmada = document.querySelector("[campo=claveConfirmada]").value
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Reestableciendo la contraseña..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            const transacccion = {
                                zona: "miCasa/recuperarCuenta/restablecerClave",
                                codigo: codigo,
                                clave: clave,
                                claveConfirmada: claveConfirmada
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transacccion)
                            if (respuestaServidor?.error && pantallaDeCargaRenderizada) {
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok && pantallaDeCargaRenderizada) {
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                return casaVitini.ui.vistas.miCasa.recuperarCuenta.ui.claveRestablecida()
                            }
                        },
                    },
                },
                verificarCuenta: {
                    arranque: async () => {
                        const main = document.querySelector("main")
                        main.setAttribute("zonaCSS", "/micasa")
                        const granuladoURL = casaVitini.utilidades.granuladorURL()
                        const comandoInicial = granuladoURL.directorios[granuladoURL.directorios.length - 1]
                        if (comandoInicial === "verificar_cuenta") {
                            return casaVitini.ui.vistas.miCasa.verificarCuenta.ui.portadaUI()
                        }
                        const comandoSecundario = granuladoURL.directorios[granuladoURL.directorios.length - 2]
                        if (comandoSecundario === "verificar_cuenta") {
                            const transacccion = {
                                zona: "miCasa/verificarCuenta",
                                codigo: comandoInicial
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transacccion)
                            if (respuestaServidor?.error) {
                                return casaVitini.ui.vistas.miCasa.verificarCuenta.ui.codigoErroneo()
                            }
                            if (respuestaServidor?.ok) {
                                return casaVitini.ui.vistas.miCasa.verificarCuenta.ui.cuentaVerificada()
                            }
                        }
                    },
                    ui: {
                        portadaUI: () => {
                            const titulo = document.createElement('p');
                            titulo.className = 'titulo';
                            titulo.textContent = 'Verifica tu cuenta con tu dirección de correo electrónico';
                            const marcoElasticoRelativo = document.createElement('div');
                            marcoElasticoRelativo.className = 'marcoElasticoRelativo';
                            const marcoElastico = document.createElement('div');
                            marcoElastico.className = 'marcoElastico';
                            marcoElastico.style.alignItems = "stretch"
                            marcoElastico.style.gap = "4px"
                            const botonRecuperarCuenta = document.createElement("a")
                            botonRecuperarCuenta.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonRecuperarCuenta.innerText = "Ir a recuperar mi cuenta para mandar un enlace de verificación a mi correo"
                            botonRecuperarCuenta.setAttribute("href", "/micasa/recuperar_cuenta")
                            botonRecuperarCuenta.setAttribute("vista", "/micasa/recuperar_cuenta")
                            botonRecuperarCuenta.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            const contenedorCrearCuenta = document.createElement('div');
                            contenedorCrearCuenta.className = 'miCasa_crearCuenta_contenedorCrearCuenta';
                            const texto = document.createElement('p');
                            texto.className = 'texto padding6';
                            texto.textContent = 'Cuando creas una cuenta en Casa Vitini, debes verificar tu VitiniID. Para ello, debes acceder desde el enlace que se te envió al buzón de correo electrónico. Si ya no dispones de este enlace, puedes solicitar otro enlace de verificación. Para hacerlo, ve al portal de inicio de sesión y haz clic en "Recuperar tu cuenta". Si tu cuenta no está verificada, se te enviará un correo electrónico de verificación. Cuando recibas el mensaje con los enlaces de verificación, puedes hacer clic en los enlaces o escribir aquí el código de verificación.';
                            const input = document.createElement('input');
                            input.type = 'text';
                            input.className = 'miCasa_crearCuenta_campo';
                            input.setAttribute('campo', 'codigoVerificacion');
                            input.placeholder = 'Escribo aquí tu código de verificación';
                            const contenedorBotones = document.createElement('div');
                            contenedorBotones.className = 'miCuenta_cambioClave_contenedorBotones';
                            const botonEnviar = document.createElement('div');
                            botonEnviar.className = 'miCuenta_cambiarClave_botonV1';
                            botonEnviar.setAttribute('componente', 'botonVerificarCodigo');
                            botonEnviar.addEventListener("click", () => {
                                casaVitini.ui.vistas.miCasa.verificarCuenta.transactores.verificarCodigo()
                            })
                            botonEnviar.textContent = 'Verificar código';
                            // Adjuntar elementos al DOM
                            const secction = document.querySelector("main")
                            secction.appendChild(titulo);
                            marcoElastico.appendChild(botonRecuperarCuenta);
                            contenedorCrearCuenta.appendChild(texto);
                            contenedorCrearCuenta.appendChild(input);
                            contenedorBotones.appendChild(botonEnviar);
                            contenedorCrearCuenta.appendChild(contenedorBotones);
                            marcoElastico.appendChild(contenedorCrearCuenta);
                            marcoElasticoRelativo.appendChild(marcoElastico);
                            secction.appendChild(marcoElasticoRelativo);
                        },
                        codigoErroneo: () => {
                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add("marcoElasticoRelativo")
                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            marcoElastico.style.alignItems = "stretch"
                            marcoElastico.style.gap = "4px"
                            const titulo = document.createElement("div")
                            titulo.classList.add("titulo")
                            titulo.innerText = "El código de verificación es erróneo"
                            marcoElastico.appendChild(titulo)
                            // Añadir banner informativo
                            const contenedorBanner = document.createElement("a")
                            contenedorBanner.classList.add("plaza_reservas_reservaConfirmada_bannerV2")
                            contenedorBanner.innerText = "El código de verificación es erróneo. Revisa el código introducido."
                            marcoElastico.appendChild(contenedorBanner)
                            const botonIniciarReserva = document.createElement("a")
                            botonIniciarReserva.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIniciarReserva.innerText = "Ir a generar un nuevo código de verificación"
                            botonIniciarReserva.setAttribute("href", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.setAttribute("vista", "/micasa/recuperar_cuenta")
                            botonIniciarReserva.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonIniciarReserva)
                            marcoElasticoRelatico.appendChild(marcoElastico)
                            const seccion = document.querySelector("main")
                            seccion.innerHTML = null
                            seccion.appendChild(marcoElasticoRelatico)
                        },
                        cuentaVerificada: () => {
                            const marcoElasticoRelatico = document.createElement("div")
                            marcoElasticoRelatico.classList.add("marcoElasticoRelativo")
                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            marcoElastico.style.alignItems = "stretch"
                            marcoElastico.style.gap = "4px"
                            const titulo = document.createElement("div")
                            titulo.classList.add("titulo")
                            titulo.innerText = "Cuenta verificada"
                            marcoElastico.appendChild(titulo)
                            // Añadir banner informativo
                            const contenedorBanner = document.createElement("a")
                            contenedorBanner.classList.add("plaza_reservas_reservaConfirmada_bannerV2")
                            contenedorBanner.innerText = "Se ha verificado la cuenta correctamente, ya puedes usar tu cuenta para ver las reservas hechas."
                            marcoElastico.appendChild(contenedorBanner)

                            const botonIrARegistrarse = document.createElement("a")
                            botonIrARegistrarse.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonIrARegistrarse.innerText = "Ir al portal de MiCasa"
                            botonIrARegistrarse.setAttribute("href", "/micasa")
                            botonIrARegistrarse.setAttribute("vista", "/micasa")
                            botonIrARegistrarse.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonIrARegistrarse)
                            const botonInciarSession = document.createElement("a")
                            botonInciarSession.classList.add("plaza_reservas_reservaConfirmada_banner")
                            botonInciarSession.innerText = "Ir a la página principal"
                            botonInciarSession.setAttribute("href", "/")
                            botonInciarSession.setAttribute("vista", "/")
                            botonInciarSession.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                            marcoElastico.appendChild(botonInciarSession)
                            marcoElasticoRelatico.appendChild(marcoElastico)
                            const seccion = document.querySelector("main")
                            seccion.innerHTML = null
                            seccion.appendChild(marcoElasticoRelatico)
                        },
                    },
                    transactores: {
                        verificarCodigo: async () => {
                            const codigo = document.querySelector("[campo=codigoVerificacion]").value
                            const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                            const mensaje = "Comprobando código de verificación..."
                            const datosPantallaSuperpuesta = {
                                instanciaUID: instanciaUID,
                                mensaje: mensaje
                            }
                            casaVitini.ui.componentes.pantallaDeCargaSuperPuesta(datosPantallaSuperpuesta)
                            const pantallaDeCargaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            const transacccion = {
                                zona: "miCasa/verificarCuenta",
                                codigo: codigo.trim()
                            }
                            const respuestaServidor = await casaVitini.shell.servidor(transacccion)
                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()

                            if (respuestaServidor?.error && pantallaDeCargaRenderizada) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                            }
                            if (respuestaServidor?.ok && pantallaDeCargaRenderizada) {
                                return casaVitini.ui.vistas.miCasa.verificarCuenta.ui.cuentaVerificada()
                            }

                        }
                    }
                },
                portal: {
                    arranque: () => {
                        const main = document.querySelector("main")
                        main.setAttribute("zonaCSS", "/micasa")


                        document.body.style.height = "auto"

                        document.querySelector("[boton=iniciarSession]").addEventListener("click", () => {
                            casaVitini.ui.vistas.miCasa.portal.botonIniciarSession("iniciarSession")
                        })
                        document.querySelector("[IDX=usuario]").focus();
                        const campos = document.querySelectorAll("[componente=campoID]")
                        campos.forEach((campo) => {
                            campo.addEventListener("input", casaVitini.ui.vistas.miCasa.portal.controladorCampos)
                            campo.addEventListener("input", casaVitini.ui.vistas.miCasa.portal.reseteaBloqueRespuesta)
                            campo.addEventListener("keydown", (e) => {
                                if (e.key === "Enter") {
                                    casaVitini.ui.vistas.miCasa.portal.botonIniciarSession("iniciarSession")
                                }
                            });
                        })
                        const opciones = document.querySelectorAll("[opcion]")
                        opciones.forEach((opcion) => {
                            opcion.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                        })


                        casaVitini.shell.navegacion.controladorNavegacion({
                            tipo: "publico",
                            zona: "micasa"
                        })
                        const video = document.querySelector("[componente=video]")
                        if (video) {
                            video.addEventListener('loadedmetadata', () => {
                                const duration = video.duration;
                                const randomTime = Math.random() * duration;
                                video.currentTime = randomTime;
                                video.play();
                            });
                        }
                    },
                    controladorCampos: () => {
                        const campoUsuario = document.querySelector("[componente=campoID][IDX=usuario]")
                        const campoClave = document.querySelector("[componente=campoID][IDX=clave]")
                        const contenedorBotones = document.querySelector("[componente=contenedorBotones]")
                        if (campoUsuario.value.length === 0 || campoClave.value.length === 0) {
                            contenedorBotones.removeAttribute("style")
                        } else {
                            contenedorBotones.style.pointerEvents = "all"
                            contenedorBotones.style.visibility = "visible"
                        }
                    },
                    botonIniciarSession: (boton) => {
                        const bloqueRespuesta = document.getElementById("bloqueRespuesta")
                        bloqueRespuesta.innerText = null
                        bloqueRespuesta.removeAttribute("style")
                        if (boton === "iniciarSession") {
                            const usuario = document.querySelector("[IDX=usuario]")
                            const clave = document.querySelector("[IDX=clave]")
                            if (usuario.value.length === 0) {
                                const mensaje = "Por favor escribe tu usuario"
                                bloqueRespuesta.innerText = mensaje
                                bloqueRespuesta.style.display = "block"
                                return
                            }
                            if (clave.value.length === 0) {
                                const mensaje = "Por favor escribe tu contraseña"
                                bloqueRespuesta.innerText = mensaje
                                bloqueRespuesta.style.display = "block"
                                return
                            }
                            const transaccion = {
                                usuario: usuario.value,
                                clave: clave.value
                            }
                            return casaVitini.shell.IDX.iniciarSession(transaccion)
                        }
                    },
                    reseteaBloqueRespuesta: () => {
                        const bloqueRespuesta = document.getElementById("bloqueRespuesta")
                        bloqueRespuesta.innerText = "Identificate con tu VitiniID"
                        bloqueRespuesta.removeAttribute("style")
                        document.querySelectorAll("[componente=campoID]").forEach(campo => {
                            campo.removeAttribute("style")
                        });
                    },
                }
            },
            contacto: {
                arranque: () => {
                    document.body.style.backgroundImage = 'url("/componentes/imagenes/contacto.jpg")';
                    document.querySelector("#uiLogo").style.filter = "invert(1)"
                    document.querySelector("#botonMenuResponsivo").style.filter = "invert(1)"
                },
            },
            pagos: {
                portada: {
                    arranque: async () => {
                        const granuladoURL = casaVitini.utilidades.granuladorURL()
                        const comandoInicial = granuladoURL.directorios[granuladoURL.directorios.length - 1]
                        const instanciaUID = document.querySelector("main").getAttribute("instanciaUID")
                        if (comandoInicial === "pagos") {
                            return casaVitini.ui.vistas.pagos.pantallaInicial()
                        }
                        const contenedorEnlaceDePago = document.querySelector("main")
                        const transaccion = {
                            zona: "plaza/enlaceDePago/obtenerPago",
                            pagoUID: comandoInicial
                        }
                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                        if (respuestaServidor?.error) {
                            const tituloGlobal = document.createElement("div")
                            tituloGlobal.classList.add("titulo")
                            tituloGlobal.innerText = "Enlace de pago"
                            contenedorEnlaceDePago.appendChild(tituloGlobal)
                            const info = {
                                titulo: "Información acerca de este enlace de pago",
                                descripcion: respuestaServidor?.error
                            }
                            return casaVitini.ui.componentes.mensajeSimple(info)
                        }
                        if (respuestaServidor?.ok) {
                            const detallesDelPago = respuestaServidor?.ok
                            const pagoUID = detallesDelPago.codigo
                            const reservaUID = detallesDelPago.reserva
                            const totales = detallesDelPago.totales
                            const detallesPagoParcial = detallesDelPago.pagoParcial
                            // <p class="titulo">Realizar un pago</p>
                            // <div class="marcoElasticoRelativo">
                            // <div class="marcoElastico">
                            // <div class="marcoPago" espacio="marcoPago" componente="espacioPago">
                            const tituloGlobal = document.createElement("div")
                            tituloGlobal.classList.add("titulo")
                            tituloGlobal.innerText = "Realizar un pago"
                            contenedorEnlaceDePago.appendChild(tituloGlobal)
                            const marcoElasticoRelativo = document.createElement("div")
                            marcoElasticoRelativo.classList.add("marcoElasticoRelativo")
                            const marcoElastico = document.createElement("div")
                            marcoElastico.classList.add("marcoElastico")
                            const marcoPago = document.createElement("div")
                            marcoPago.classList.add("plaza_enlacesDePago_marcoPago")
                            marcoPago.setAttribute("espacio", "marcoPago")
                            marcoPago.setAttribute("componente", "espacioPago")
                            const info = document.createElement("p")
                            info.classList.add("pagoPorEnlace_info")
                            info.innerText = "Este enlace es un enlace para realizar un pago en Casa Vitini. El pago puede ser un pago completo de una reserva o un pago parcial si la reserva se paga a partes entre los pernoctantes. Por favor, revisa que los datos sean correctos y procede al pago. En esta página tienes dos secciones. La sección Detalles del pago, donde puedes ver el total bruto junto con el desglose de la cantidad que corresponde al neto como a la suma de impuestos aplicados. También tienes los detalles del total de la reserva a modo informativo para que tenga la visión global."
                            marcoPago.appendChild(info)
                            const contenedorReservaUID = document.createElement("div")
                            contenedorReservaUID.classList.add("enlaceDePago_contendorReservaUID")
                            const tituloReserva = document.createElement("div")
                            tituloReserva.classList.add("enlaceDePago_tituloReserva")
                            tituloReserva.classList.add("negrita")
                            tituloReserva.innerText = "Identificador de la reserva"
                            contenedorReservaUID.appendChild(tituloReserva)
                            const identificadorReserva = document.createElement("div")
                            identificadorReserva.classList.add("enlaceDePago_identificadorReserva")
                            identificadorReserva.innerText = reservaUID
                            contenedorReservaUID.appendChild(identificadorReserva)
                            marcoPago.appendChild(contenedorReservaUID)
                            const resolutorNombresTotales = {
                                promedioNetoPorNoche: "Promedio neto por noche",
                                totalReservaNetoSinOfertas: "Total neto de la reserva sin ofertas",
                                totalReservaNeto: "Total reserva neto",
                                totalDescuentos: "Total descuentos aplicados",
                                totalImpuestos: "Total de la suma de los impuestos aplicados",
                                totalConImpuestos: "Total bruto definitivo a pagar",
                            }
                            const resolutorNombresTotalesParciales = {
                                netoParcial: "Total neto",
                                impuestosParciales: "Impuestos",
                                cantidadParcial: "Total bruto a pagar",
                            }
                            const contenedorPagoGlobal = document.createElement("div")
                            contenedorPagoGlobal.classList.add("plaza_enlacesDePago_obtenerPago_contenedorPagoGlobal")
                            contenedorPagoGlobal.setAttribute("pasarelaZonaDePago", "enlaceDePago")
                            const contenedorPago = document.createElement("div")
                            contenedorPago.classList.add("plaza_enlacesDePago_obtenerPago_contenedor")
                            const tituloPago = document.createElement("div")
                            tituloPago.classList.add("plaza_enlacesDePago_obtenerPago_informacionPago")
                            tituloPago.classList.add("negrita")
                            tituloPago.innerText = "Detalles del pago"
                            contenedorPago.appendChild(tituloPago)
                            const informacionPago = document.createElement("div")
                            informacionPago.classList.add("plaza_enlacesDePago_obtenerPago_informacionPago")
                            informacionPago.innerText = `Aquí tienes los detalles del pago. En total, el pago tiene una suma total de ${detallesPagoParcial.cantidadParcial}$. De este total, ${detallesPagoParcial.impuestosParciales}$ son impuestos y ${detallesPagoParcial.netoParcial}$ es el neto de este pago.`
                            contenedorPago.appendChild(informacionPago)
                            for (const [totalIDV, valorTotal] of Object.entries(detallesPagoParcial)) {
                                const totalUI = resolutorNombresTotalesParciales[totalIDV]
                                const contenedorTotal = document.createElement("div")
                                contenedorTotal.classList.add("enlaceDePAgo_contenedorTotal")
                                const tituloTotal = document.createElement("div")
                                tituloTotal.classList.add("enlaceDePago_tituloTotal")
                                tituloTotal.classList.add("negrita")
                                tituloTotal.innerText = totalUI
                                contenedorTotal.appendChild(tituloTotal)
                                const valorTotalUI = document.createElement("div")
                                valorTotalUI.classList.add("enlaceDePago_valorTotal")
                                valorTotalUI.innerText = valorTotal + "$"
                                contenedorTotal.appendChild(valorTotalUI)
                                contenedorPago.appendChild(contenedorTotal)
                            }
                            contenedorPagoGlobal.appendChild(contenedorPago)
                            const contenedorTotales = document.createElement("div")
                            contenedorTotales.classList.add("plaza_enlacesDePago_obtenerPago_contenedor")
                            contenedorTotales.setAttribute("pagoUID", pagoUID)
                            const tituloPagoReserva = document.createElement("div")
                            tituloPagoReserva.classList.add("plaza_enlacesDePago_obtenerPago_informacionPago")
                            tituloPagoReserva.classList.add("negrita")
                            tituloPagoReserva.innerText = "Detalles del total de la reserva"
                            contenedorTotales.appendChild(tituloPagoReserva)
                            const informacionPagoReserva = document.createElement("div")
                            informacionPagoReserva.classList.add("plaza_enlacesDePago_obtenerPago_informacionPago")
                            informacionPagoReserva.innerText = `Este apartado muestra el total de reserva a modo de información. Este apartado está a modo de recordatorio. El detalle del pago está en Detalles del pago en el apartado contiguo a este.`
                            contenedorTotales.appendChild(informacionPagoReserva)
                            for (const [totalIDV, valorTotal] of Object.entries(totales)) {
                                const totalUI = resolutorNombresTotales[totalIDV]
                                const contenedorTotal = document.createElement("div")
                                contenedorTotal.classList.add("enlaceDePAgo_contenedorTotal")
                                const tituloTotal = document.createElement("div")
                                tituloTotal.classList.add("enlaceDePago_tituloTotal")
                                tituloTotal.classList.add("negrita")
                                tituloTotal.innerText = totalUI
                                contenedorTotal.appendChild(tituloTotal)
                                const valorTotalUI = document.createElement("div")
                                valorTotalUI.classList.add("enlaceDePago_tituloTotal")
                                valorTotalUI.innerText = valorTotal + "$"
                                contenedorTotal.appendChild(valorTotalUI)
                                if (valorTotal > 0) {
                                    contenedorTotales.appendChild(contenedorTotal)
                                }
                            }
                            contenedorPagoGlobal.appendChild(contenedorTotales)
                            marcoPago.appendChild(contenedorPagoGlobal)
                            marcoElastico.appendChild(marcoPago)
                            marcoElasticoRelativo.appendChild(marcoElastico)
                            contenedorEnlaceDePago.appendChild(marcoElasticoRelativo)
                            const destino = "section [componente=espacioPago]"
                            casaVitini.componentes.square.uiForm(destino)
                            try {
                                await casaVitini.componentes.square.crearSesionPago(instanciaUID);
                                await casaVitini.componentes.square.inyectorSquareJS(instanciaUID);
                                await casaVitini.componentes.square.inyectorMetodosPago(instanciaUID);
                                await casaVitini.componentes.square.inyectorFlujoPago(instanciaUID);
                            } catch (errorCapturado) {
                                return casaVitini.ui.componentes.advertenciaInmersiva(errorCapturado.message)
                            }
                        }
                    }
                },
                pagoConfirmado: (detalles) => {
                    const pagoUID = detalles?.pagoUID
                    const contenedorEnlaceDePago = document.querySelector("section")
                    contenedorEnlaceDePago.innerHTML = null
                    const tituloGlobal = document.createElement("div")
                    tituloGlobal.classList.add("titulo")
                    tituloGlobal.innerText = "Pago realizado correctamente"
                    contenedorEnlaceDePago.appendChild(tituloGlobal)
                    const marcoElasticoRelativo = document.createElement("div")
                    marcoElasticoRelativo.classList.add("marcoElasticoRelativo")
                    const marcoElastico = document.createElement("div")
                    marcoElastico.classList.add("marcoElastico")
                    marcoElastico.style.gap = "6px"
                    //   marcoElastico.style.alignItems = "flex-start"
                    // gap: 6px;
                    // align-items: flex-start;
                    const marcoPago = document.createElement("div")
                    marcoPago.classList.add("plaza_enlacesDePago_marcoPago")
                    marcoPago.setAttribute("espacio", "marcoPago")
                    marcoPago.setAttribute("componente", "espacioPago")
                    const info = document.createElement("p")
                    info.classList.add("pagoPorEnlace_info")
                    info.innerText = "Gracias por finalizar el proceso de pago. Si lo necesita, puede ver en la parte inmediatamente inferior a este párrafo el código del pago por si lo necesita. El pago se ha asociado a su reserva."
                    marcoPago.appendChild(info)
                    const mensajeUI = document.createElement("p")
                    mensajeUI.classList.add("pagoPorEnlace_info")
                    mensajeUI.classList.add("negrita")
                    mensajeUI.setAttribute("componente", "mensajeError")
                    mensajeUI.innerText = "Identificador del pago: " + pagoUID
                    marcoPago.appendChild(mensajeUI)
                    marcoElastico.appendChild(marcoPago)
                    marcoElasticoRelativo.appendChild(marcoElastico)
                    contenedorEnlaceDePago.appendChild(marcoElasticoRelativo)
                },
                pantallaInicial: (metadatos) => {
                    const error = metadatos?.error
                    const codigo = metadatos?.codigo ? metadatos.codigo : ""
                    const contenedorEnlaceDePago = document.querySelector("section")
                    const tituloGlobal = document.createElement("div")
                    tituloGlobal.classList.add("titulo")
                    tituloGlobal.innerText = "Enlaces y codigos para realizar un pago"
                    contenedorEnlaceDePago.appendChild(tituloGlobal)
                    const marcoElasticoRelativo = document.createElement("div")
                    marcoElasticoRelativo.classList.add("marcoElasticoRelativo")
                    const marcoElastico = document.createElement("div")
                    marcoElastico.classList.add("marcoElastico")
                    marcoElastico.style.gap = "6px"
                    marcoElastico.style.alignItems = "flex-start"
                    // gap: 6px;
                    // align-items: flex-start;
                    const marcoPago = document.createElement("div")
                    marcoPago.classList.add("plaza_enlacesDePago_marcoPago")
                    marcoPago.setAttribute("espacio", "marcoPago")
                    marcoPago.setAttribute("componente", "espacioPago")
                    const info = document.createElement("p")
                    info.classList.add("pagoPorEnlace_info")
                    info.innerText = "En esta página puede realizar un pago con un código temporal asociado a su reserva. Si Casa Vitini le ha pasado un código temporal aleatorio para realizar un pago, insértelo en el formulario de abajo para iniciar el proceso de pago. Los enlaces caducan al cabo de un tiempo. Si tiene un enlace de pago y tras revisar que lo ha escrito correctamente, el sistema no encuentra los enlaces, puede que haya caducado."
                    marcoPago.appendChild(info)
                    if (error) {
                        const mensajeUI = document.createElement("p")
                        mensajeUI.classList.add("pagoPorEnlace_info")
                        mensajeUI.classList.add("negrita")
                        mensajeUI.setAttribute("componente", "mensajeError")
                        mensajeUI.innerText = error
                        marcoPago.appendChild(mensajeUI)
                    }
                    const campo = document.createElement("input")
                    campo.classList.add("plaza_enlacesDePago_campo")
                    campo.setAttribute("campo", "codigo")
                    campo.placeholder = "Inserte su codigo temporal"
                    campo.addEventListener("input", () => {
                        document.querySelector("[componente=mensajeError]")?.remove()
                    })
                    campo.value = codigo
                    marcoPago.appendChild(campo)
                    marcoElastico.appendChild(marcoPago)
                    const botonBuscar = document.createElement("div")
                    botonBuscar.classList.add("plaza_enlacesDePago_botonV1")
                    botonBuscar.innerText = "Comprobar codigo"
                    botonBuscar.addEventListener("click", async () => {
                        const selectorCampoCodigo = document.querySelector("[campo=codigo]")
                        const codigoEnviar = selectorCampoCodigo.value
                        if (codigoEnviar.length === 0) {
                            const error = "Escribe un código para empezar. No has escrito ningún código para comprobar."
                            return casaVitini.ui.componentes.advertenciaInmersiva(error)
                        }
                        const vista = "/pagos/" + codigoEnviar
                        const navegacion = {
                            vista: vista,
                            tipoOrigen: "menuNavegador"
                        }
                        return casaVitini.shell.navegacion.controladorVista(navegacion)
                    })
                    marcoElastico.appendChild(botonBuscar)
                    marcoElasticoRelativo.appendChild(marcoElastico)
                    contenedorEnlaceDePago.appendChild(marcoElasticoRelativo)
                }
            },
            conozcanos: {
                arranque: () => {
                    const body = document.body
                    document.querySelector("main").style.paddingBottom = "20px"
                    //body.style.background = "#e8e8e8"


                    //document.querySelector("#uiLogo").style.filter = "invert(1)"

                    // Crear un elemento script
                    // const scriptElement = document.createElement('script');
                    // // Asignar el atributo src
                    // scriptElement.src = "/componentes/javascript/simpleParallax.js";
                    // main.appendChild(scriptElement);

                    // const header = document.querySelector("header")
                    // const controladorAnchoRestante = () => {
                    //     const selectorAranqueConozcano = document.querySelector("[zonaUID=conozcanos]")
                    //     if (!selectorAranqueConozcano) {
                    //         //  observador.disconnect();
                    //         return
                    //     }
                    //     const anchoHeader = header.getBoundingClientRect().height
                    //     const contenedoresPalaraje = document.querySelector("[contenedor=paralaje]")
                    //     contenedoresPalaraje.style.marginTop = "-" + anchoHeader + "px"
                    // }
                    // //controladorAnchoRestante()
                    // //const observador = new ResizeObserver(controladorAnchoRestante)
                    // //observador.observe(header);
                    // // Agregar evento de desplazamiento
                    // window.removeEventListener('scroll', casaVitini.ui.vistas.conozcanos.scrollHandler);
                    // //window.addEventListener('scroll', casaVitini.ui.vistas.conozcanos.scrollHandler);
                    // window.removeEventListener('scroll', casaVitini.ui.vistas.conozcanos.controladorIconoMouse);
                    // //window.addEventListener('scroll', casaVitini.ui.vistas.conozcanos.controladorIconoMouse);


                    const loadScript = async (url) => {
                        return new Promise((resolve, reject) => {
                            const script = document.createElement('script');
                            script.src = url;
                            script.onload = () => resolve(script);
                            script.onerror = () => reject(new Error(`Error al cargar el script ${url}`));
                            document.querySelector('main').appendChild(script);
                        });
                    };

                    const arranqueParallax = async () => {
                        try {
                            const scriptElement = await loadScript("/componentes/javascript/simpleParallax.js");
                            const grupoImagenesPalarax = document.querySelectorAll('[imagenParalaje=imagen]');
                            casaVitini.ui.vistas.conozcanos.instanciasTemporales.parallaxControlador = new simpleParallax(grupoImagenesPalarax, {
                                delay: 0,
                                orientation: 'down',
                                scale: 1.5,
                                overflow: false,
                            });
                        } catch (errorCapturado) {
                            console.error(errorCapturado);
                        }
                    };

                    arranqueParallax();



                },
                controladorIconoMouse: () => {
                    const iconoRaton = document.querySelector("[icono=mouse]")
                    if (!iconoRaton) {
                        window.removeEventListener('scroll', casaVitini.ui.vistas.conozcanos.controladorIconoMouse);
                    }
                    const alturaScroll = window.scrollY
                    if (iconoRaton && alturaScroll > 10) {
                        iconoRaton.addEventListener("transitionend", (e) => {
                            // e.target.remove()
                        })
                        iconoRaton.style.opacity = "0"
                    } else {
                        iconoRaton.style.opacity = "1"
                    }
                },
                scrollHandler: () => {
                    let animationRunning = false;
                    if (!animationRunning) {
                        animationRunning = true;
                        requestAnimationFrame(function () {
                            casaVitini.ui.vistas.conozcanos.controladorParalaje();
                            animationRunning = false;
                        });
                    }
                    const contenedorParalaje = document.querySelector("[contenedor=paralaje]")
                    if (!contenedorParalaje) {
                        window.removeEventListener('scroll', casaVitini.ui.vistas.conozcanos.scrollHandler);
                    }
                },
                controladorParalaje: () => {
                    const contenedoresPalaraje = document.querySelectorAll("[contenedorParalaje]")
                    contenedoresPalaraje.forEach((contenedorParalaje) => {
                        const parallaxContainer2 = contenedorParalaje;
                        const parallaxImage2 = contenedorParalaje.querySelector('[imagenParalaje]');
                        const nombreImagen = parallaxImage2.getAttribute("nombre")
                        const textoAnimado = contenedorParalaje.querySelector('[elemento=textoAnimado]');
                        const containerRect2 = parallaxContainer2.getBoundingClientRect();
                        const windowInnerHeight = window.innerHeight
                        const containerBottom = containerRect2.bottom
                        const containerTop = containerRect2.top
                        requestAnimationFrame(() => {
                            if ((containerTop < 0 && containerBottom < windowInnerHeight) ||
                                (containerTop < windowInnerHeight && containerBottom > 0)) {
                                const parallaxTop2 = parallaxContainer2.offsetTop;
                                const parallaxHeight2 = parallaxContainer2.offsetHeight;
                                const conCero = (windowInnerHeight < parallaxTop2 + parallaxHeight2 ?
                                    windowInnerHeight : parallaxTop2 + parallaxHeight2) -
                                    (containerTop + parallaxHeight2);
                                if (
                                    (containerTop < 0 &&
                                        containerBottom < windowInnerHeight)
                                    ||
                                    (containerTop > 0 &&
                                        containerBottom > windowInnerHeight)
                                ) {
                                    //parallaxImage2.style.transform = 'translate3d(0 ,' + (conCero / 2) + 'px ,0)';
                                    if (textoAnimado) {
                                        textoAnimado.style.transform = 'translate3d(0 ,-' + (conCero) + 'px ,0)';
                                    }
                                }
                            }
                        })
                    })
                },
                instanciasTemporales: {
                    parallaxControlador: null,
                },
            },
            instalaciones: {
                arranque: () => {
                    const main = document.querySelector("main")
                    main.setAttribute("zonaCSS", "instalaciones")
                    document.body.style.background = "#fdefd9"
                    const imagenesAmpliables = document.querySelectorAll("[componente=fotoAmpliable]")
                    const cerrarImagen = () => {
                        const grupoActual = document.
                            querySelector(`[componente=contenedorImagenAmpliada][grupoActualIDV]`)
                            .getAttribute("grupoActualIDV")
                        const numeroImagen = document
                            .querySelector(`[componente=contenedorImagenAmpliada][numeroImagen]`)
                            .getAttribute("numeroImagen")
                        const imagenElemento = document.querySelector(`main [grupoIDV="${grupoActual}"] [numeroImagen="${numeroImagen}"]`)
                        const posicionImagen = imagenElemento.getBoundingClientRect();
                        const contenedorImagen = document.querySelector("main [componente=contenedorImagenAmpliada] [contenedor=imagenVolatil]")
                        contenedorImagen.addEventListener("transitionend", (e) => {
                            contenedorImagenAmpliada.remove()
                        })
                        document.querySelector("main [componente=contenedorBotones]").remove()
                        document.body.style.removeProperty("overflow")
                        const contenedorImagenAmpliada = document.querySelector("main [componente=contenedorImagenAmpliada]")
                        contenedorImagenAmpliada.style.pointerEvents = "none"
                        contenedorImagen.style.top = posicionImagen.y + "px"
                        contenedorImagen.style.left = posicionImagen.x + "px"
                        contenedorImagen.style.width = posicionImagen.width + "px"
                        contenedorImagen.style.height = posicionImagen.height + "px"
                        //contenedorImagenAmpliada.style.opacity = "0"
                    }
                    const cambiarImagen = (sentidoDireccion) => {
                        const grupoActual = document.
                            querySelector(`[componente=contenedorImagenAmpliada][grupoActualIDV]`)
                            .getAttribute("grupoActualIDV")
                        const imagenActual = document
                            .querySelector(`[componente=contenedorImagenAmpliada][numeroImagen]`)
                            .getAttribute("numeroImagen")
                        const numerosTotales = document.querySelector(`[componente=contenedorImagenAmpliada][numeroImagen]`)
                            .getAttribute("numerosTotales")
                        let imagenDestino
                        if (sentidoDireccion === "imagenSiguiente") {
                            const imagenSiguiente = Number(imagenActual) + 1
                            imagenDestino = imagenSiguiente > numerosTotales ? 0 : imagenSiguiente
                        }
                        if (sentidoDireccion === "imagenAnterior") {
                            const imagenAnterior = Number(imagenActual) - 1
                            imagenDestino = imagenAnterior < 0 ? numerosTotales : imagenAnterior
                        }
                        document.querySelector(`[componente=contenedorImagenAmpliada][numeroImagen]`)
                            .setAttribute("numeroImagen", imagenDestino)
                        const contenedorImagen = document
                            .querySelector(`[grupoIDV="${grupoActual}"] [numeroImagen="${imagenDestino}"]`)
                        const selectorImagenCSSResponsiva = contenedorImagen.getAttribute("imagenResponsiva")
                        const contenedorImagenAmpliada = document.querySelector(`[componente=contenedorImagenAmpliada] [contenedor=imagenVolatil]`)
                        const cssImagenObsoleto = contenedorImagenAmpliada.getAttribute("imagenAmpliadaClaseCSS")
                        contenedorImagenAmpliada.classList.remove(cssImagenObsoleto)
                        contenedorImagenAmpliada.classList.add(selectorImagenCSSResponsiva)
                        contenedorImagenAmpliada.setAttribute("imagenAmpliadaClaseCSS", selectorImagenCSSResponsiva)
                    }
                    const ampliarImagen = (imagen) => {
                        document.body.style.overflow = 'hidden';
                        const imagenElemento = imagen.target.closest("[imagenResponsiva]")
                        const fondoClaseCSS = imagenElemento.getAttribute("imagenResponsiva");
                        imagenesAmpliables.forEach((imagenAmpliable) => {
                            imagenAmpliable.removeAttribute("style")
                        })
                        const grupoIDV = imagenElemento.closest("[grupoIDV]").getAttribute("grupoIDV")
                        const imagenesDelApartamento = imagenElemento.closest("[grupoIDV]").querySelectorAll("[componente]")
                        let numerosTotales = 0
                        imagenesDelApartamento.forEach((imagenDelGrupo, numero) => {
                            numerosTotales = numero
                            imagenDelGrupo.setAttribute("numeroImagen", numero)
                        })

                        const numeroImagen = imagenElemento.getAttribute("numeroImagen")
                        const posicionImagen = imagenElemento.getBoundingClientRect();
                        const contenedorImagenAmpliada = document.createElement("div")
                        contenedorImagenAmpliada.classList.add("contenedorImagenAmpliada")
                        contenedorImagenAmpliada.setAttribute("componente", "contenedorImagenAmpliada")
                        contenedorImagenAmpliada.setAttribute("grupoActualIDV", grupoIDV)
                        contenedorImagenAmpliada.setAttribute("numeroImagen", numeroImagen)
                        contenedorImagenAmpliada.setAttribute("numerosTotales", numerosTotales)
                        const contenedorBotones = document.createElement("div")
                        contenedorBotones.classList.add("contenedorBotones")
                        contenedorBotones.setAttribute("componente", "contenedorBotones")
                        const botonAtras = document.createElement("div")
                        botonAtras.classList.add("boton")
                        botonAtras.innerText = "Atras"
                        botonAtras.addEventListener("click", () => {
                            cambiarImagen("imagenAnterior")
                        })
                        contenedorBotones.appendChild(botonAtras)
                        const botonCerrar = document.createElement("div")
                        botonCerrar.classList.add("boton")
                        botonCerrar.innerText = "Cerrar"
                        botonCerrar.addEventListener("click", cerrarImagen)
                        contenedorBotones.appendChild(botonCerrar)
                        const botonSiguiente = document.createElement("div")
                        botonSiguiente.classList.add("boton")
                        botonSiguiente.innerText = "Siguiente"
                        botonSiguiente.addEventListener("click", () => {
                            cambiarImagen("imagenSiguiente")
                        })
                        contenedorBotones.appendChild(botonSiguiente)
                        const marcoEspaciadorContenedorBotones = document.createElement("div")
                        marcoEspaciadorContenedorBotones.classList.add("marcoEspaciadoContenedorBotones")
                        marcoEspaciadorContenedorBotones.appendChild(contenedorBotones)
                        contenedorImagenAmpliada.appendChild(marcoEspaciadorContenedorBotones)
                        const contenedorImagenVolatil = document.createElement("div")
                        contenedorImagenVolatil.classList.add("contenedorImagenVolatil")
                        contenedorImagenVolatil.classList.add(fondoClaseCSS)
                        contenedorImagenVolatil.setAttribute("contenedor", "imagenVolatil")
                        contenedorImagenVolatil.setAttribute("imagenAmpliadaClaseCSS", fondoClaseCSS)
                        contenedorImagenVolatil.style.top = posicionImagen.y + "px"
                        contenedorImagenVolatil.style.left = posicionImagen.x + "px"
                        contenedorImagenVolatil.style.width = posicionImagen.width + "px"
                        contenedorImagenVolatil.style.height = posicionImagen.height + "px"
                        contenedorImagenAmpliada.appendChild(contenedorImagenVolatil)
                        document.querySelector("main").appendChild(contenedorImagenAmpliada)
                        // La version dos seria, la version con la imagen dentro de un recuadro sin estar bajo los botones:
                        // 1 - Se crea el grid, con dos filas y una columna, se renderiza pero oculto
                        // 2 - Se obtiene el alto renderizado del contenedor botones
                        // 3 - El top del elmento original, es decir a imagen a ampliar, menos el alto del contenedor botones renderizado es la altural del MARGIN de la imagen relativa dentro de cajon dos del grid
                        requestAnimationFrame(() => {
                            contenedorImagenAmpliada.style.backdropFilter = "blur(50px)";
                            contenedorImagenAmpliada.style["-webkit-backdrop-filter"] = "blur(50px)";
                            contenedorImagenAmpliada.style.opacity = "1";
                        });
                        let start = null;
                        const step = (timestamp) => {
                            if (!start) { start = timestamp } else {
                                contenedorImagenVolatil.style.top = "0px"
                                contenedorImagenVolatil.style.left = "0"
                                contenedorImagenVolatil.style.height = "100vh"
                                contenedorImagenVolatil.style.width = "100vw"
                            };
                            let progress = timestamp - start;
                            if (progress < 1) {
                                window.requestAnimationFrame(step);
                            }
                        }
                        requestAnimationFrame(step);
                    }
                    imagenesAmpliables.forEach((imagenAmpliable) => {
                        imagenAmpliable.addEventListener("click", ampliarImagen)
                    })
                }
            },
            politicas: {
                arranque: () => {
                    const opciones = document.querySelectorAll("[vista]")
                    opciones.forEach((opcion) => {
                        opcion.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    })
                },
                privacidad: {
                    arranque: async () => {
                        const main = document.querySelector("main")
                        main.setAttribute("zonaCSS", "privacidad")

                        const contenedorBotones = casaVitini.componentes.privacidad.ui.contenedorSecciones()
                        main.appendChild(contenedorBotones)

                        const privacidad = casaVitini.componentes.privacidad.arranque()
                        if (privacidad) {
                            const contenedorDecision = casaVitini.componentes.privacidad.ui.contenedorDecision()
                            main.appendChild(contenedorDecision)
                        } else {
                            const revocarDecision = casaVitini.componentes.privacidad.ui.revocarDecision()
                            main.appendChild(revocarDecision)
                        }
                    },
                    zonas: {
                        arranque: async () => {
                            const main = document.querySelector("main")
                            main.setAttribute("zonaCSS", "privacidad/zonaCompartida")
                            main.style.paddingLeft = "20px"
                            main.style.paddingRight = "20px"


                            const botones = document.querySelectorAll("[componente=boton]")
                            botones.forEach((boton) => {
                                boton.addEventListener("click", (boton) => {
                                    boton.preventDefault()
                                    const vista = boton.target.getAttribute("vista")
                                    const navegacion = {
                                        vista: vista,
                                        tipoOrigen: "menuNavegador"
                                    }
                                    casaVitini.shell.navegacion.controladorVista(navegacion)
                                })
                            })

                        }
                    }
                }

            },

        },
        componentes: {
            errorUI: () => {
                const selectorContenedorError = document.querySelector(`[identificadorVisual=errorConexion]`)
                if (selectorContenedorError) {
                    return
                }
                document.querySelectorAll("[tipoMenu=volatil]").forEach((menu) => {
                    menu.removeAttribute("style")
                })
                casaVitini.shell.controladoresUI.limpiarTodoElementoFlotante()

                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                const mensaje = "Se ha producido un error en la red y no se ha podido comunicar con el servidor. Si es por una causa circunstancial de la red, reinténtalo y debería funcionar. Comprueba que tienes acceso a la red. Por ejemplo, comprueba si puedes acceder a google.com o hacer un ping a google.com o a otros sitios conocidos. Si tienes acceso a sitios conocidos, es probable que el problema esté en el servidor de Casa Vitini."
                const advertenciaInmersivaUI = document.createElement("div")
                advertenciaInmersivaUI.setAttribute("class", "advertenciaInmersivaSuperpuesta")
                advertenciaInmersivaUI.setAttribute("identificadorVisual", "errorConexion")
                advertenciaInmersivaUI.setAttribute("pantallaSuperpuesta", "pantallaCargaSuperpuesta")
                advertenciaInmersivaUI.setAttribute("componente", "advertenciaInmersiva")
                advertenciaInmersivaUI.setAttribute("instanciaUID", instanciaUID)
                const marcoElastico = document.createElement("div")
                marcoElastico.classList.add("marcoElasticoError")
                const info = document.createElement("div")
                info.setAttribute("class", "advertenciaInfoFlujoPago")
                info.setAttribute("componente", "mensajeFlujoPasarela")
                info.innerText = mensaje
                marcoElastico.appendChild(info)
                const boton = document.createElement("div")
                boton.setAttribute("class", "errorBoton")
                boton.setAttribute("componente", "boton")
                boton.innerText = "Volver"
                boton.addEventListener("click", (e) => {
                    const rama = document.querySelector("main").getAttribute("rama")
                    const controladorZona = {
                        zona: rama
                    }


                    casaVitini.shell.navegacion.controladorNavegacion(controladorZona)
                    document.body.style.removeProperty("overflow");
                    e.target.parentNode.parentNode.remove()
                })
                marcoElastico.appendChild(boton)
                advertenciaInmersivaUI.appendChild(marcoElastico)
                document.querySelector("main").appendChild(advertenciaInmersivaUI)
            },
            urlDesconocida: function () {
                const main = document.querySelector("main")
                main.innerHTML = null

                const info = document.createElement("div")
                info.classList.add(
                    "textoCentrado",
                    "negrita",
                    "padding12"

                )
                info.innerText = "No existe nada en esta dirección :)"
                main.appendChild(info)

                const boton = document.createElement("a")
                boton.classList.add(
                    "botonV1",
                    "comportamientoBoton",
                    "areaSinDecoracionPredeterminada",
                    "margin10"
                )
                boton.innerText = "Ir a Administración"
                boton.setAttribute("href", "/administracion")
                boton.setAttribute("vista", "/administracion")
                boton.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                main.appendChild(boton)
            },
            errorRenderizacionVista: function () {
                casaVitini.shell.controladoresUI.limpiarMain()

                const main = document.querySelector("main")
                main.innerHTML = null

                const info = document.createElement("div")
                info.classList.add(
                    "textoCentrado",
                    "negrita",
                    "padding12"

                )
                info.innerText = "Se ha producido un error al renderizar la vista :)"
                main.appendChild(info)

            },
            errorVista: () => {
                let selectoresVistas = document.querySelectorAll("[vista")
                for (const vista of selectoresVistas) {
                    vista.style.backgroundColor = ""
                    vista.style.color = ""
                }
                let constructorSeccion = document.createElement("section")
                constructorSeccion.style.scale = "1";
                let vistaError = document.createElement("p")
                vistaError.setAttribute("id", "errorVista")
                vistaError.innerText = "Error, no se ha podido comunicar con el servidor. Reintentalo"
                vistaError.style.position = "relative"
                constructorSeccion.appendChild(vistaError);
                document.body.appendChild(constructorSeccion)
                document.getElementById("uiNavegacion").setAttribute("vistaActual", "error")
                document.getElementById("uiNavegacion").removeAttribute("arranqueVolatil")
                let espacio = document.body;
                espacio.style.background = ""
                espacio.style.backgroundSize = "cover"
                espacio.style.backgroundColor = "grey"
                let estado = {
                    zona: "Error",
                    "EstadoInternoZona": "estado"
                }
                let titulo = "Error"
                //  window.history.replaceState(Estado, Titulo, "/Error");
            },
            advertenciaInmersiva: (advertencia) => {
                document.body.style.overflow = 'hidden';
                const advertenciaInmersivaUI = document.createElement("dialog")
                advertenciaInmersivaUI.setAttribute("class", "errorUI")
                advertenciaInmersivaUI.setAttribute("componente", "advertenciaInmersiva")
                const marcoElastico = document.createElement("div")
                marcoElastico.classList.add("marcoElasticoError")
                const info = document.createElement("div")
                info.setAttribute("class", "errorInfo")
                info.innerText = advertencia
                marcoElastico.appendChild(info)
                const boton = document.createElement("div")
                boton.setAttribute("class", "errorBoton")
                boton.innerText = "Aceptar"
                boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                marcoElastico.appendChild(boton)
                advertenciaInmersivaUI.appendChild(marcoElastico)
                document.querySelector("main").appendChild(advertenciaInmersivaUI)
            },
            advertenciaInmersivaSuperPuesta: (advertencia) => {
                const advertenciaInmersivaUI = document.createElement("div")
                advertenciaInmersivaUI.setAttribute("class", "advertenciaInmersivaSuperpuesta")
                advertenciaInmersivaUI.setAttribute("componente", "advertenciaInmersiva")
                const marcoElastico = document.createElement("div")
                marcoElastico.classList.add("marcoElasticoError")
                const info = document.createElement("div")
                info.setAttribute("class", "errorInfo")
                info.innerText = advertencia
                marcoElastico.appendChild(info)
                const boton = document.createElement("div")
                boton.setAttribute("class", "errorBoton")
                boton.innerText = "Aceptar"
                boton.addEventListener("click", (e) => {
                    e.target.parentNode.parentNode.remove()
                })
                marcoElastico.appendChild(boton)
                advertenciaInmersivaUI.appendChild(marcoElastico)
                document.body.appendChild(advertenciaInmersivaUI)
            },
            errorConexion_noIvasivo: (advertencia) => {
                document.body.style.overflow = 'hidden';
                const advertenciaInmersivaUI = document.createElement("div")
                advertenciaInmersivaUI.setAttribute("class", "advertenciaInmersivaSuperpuesta")
                advertenciaInmersivaUI.setAttribute("componente", "advertenciaInmersiva")
                advertenciaInmersivaUI.setAttribute("errorUI", "conexion")
                const marcoElastico = document.createElement("div")
                marcoElastico.classList.add("marcoElasticoError")
                const info = document.createElement("div")
                info.setAttribute("class", "errorInfo")
                info.innerText = "No se puede establecer conexión con el servidor. Por favor, verifica que estás conectado y reinténtalo. Se ha producido un error en la red y no se ha podido comunicar con el servidor. Si es por una causa circunstancial de la red, reinténtalo y debería funcionar. Comprueba que tienes acceso a la red. Por ejemplo, comprueba si puedes acceder a google.com o hacer un ping a google.com o a otros sitios conocidos. Si tienes acceso a sitios conocidos, es probable que el problema esté en el servidor de Casa Vitini."
                marcoElastico.appendChild(info)
                const boton = document.createElement("div")
                boton.setAttribute("class", "errorBoton")
                boton.innerText = "Volver"
                boton.addEventListener("click", (e) => {
                    e.target.closest("[errorUI=conexion]").remove()
                })
                marcoElastico.appendChild(boton)
                advertenciaInmersivaUI.appendChild(marcoElastico)
                document.body.appendChild(advertenciaInmersivaUI)
            },
            pantallaDeCargaSuperPuesta: (metadatos) => {
                try {

                    const instanciaUID = metadatos.instanciaUID
                    const mensaje = metadatos.mensaje ? metadatos.mensaje : "Espere..."
                    const botonCancelar = metadatos.botonCancelar ? metadatos.botoCancelar : "mostrar"
                    const identificadorVisual = metadatos.identificadorVisual
                    const iconoSpinner = metadatos.iconoSpinner ? metadatos.iconoSpinner : "si"
                    const textoBoton = metadatos.textoBoton ? metadatos.textoBoton : "Cancelar"


                    const advertenciaInmersivaUI = document.createElement("div")
                    advertenciaInmersivaUI.setAttribute("class", "advertenciaInmersivaSuperpuesta")
                    advertenciaInmersivaUI.setAttribute("identificadorVisual", identificadorVisual)
                    advertenciaInmersivaUI.setAttribute("pantallaSuperpuesta", "pantallaCargaSuperpuesta")
                    advertenciaInmersivaUI.setAttribute("componente", "advertenciaInmersiva")
                    advertenciaInmersivaUI.setAttribute("instanciaUID", instanciaUID)
                    const marcoElastico = document.createElement("div")
                    marcoElastico.classList.add("marcoElasticoError")
                    if (iconoSpinner === "si") {
                        const spinnerContainer = document.createElement('div');
                        spinnerContainer.setAttribute("componente", "iconoCargaEnlace");
                        spinnerContainer.classList.add("lds-spinner");
                        for (let i = 0; i < 12; i++) {
                            const div = document.createElement('div');
                            spinnerContainer.appendChild(div);
                        }
                        marcoElastico.appendChild(spinnerContainer)
                    }
                    const info = document.createElement("div")
                    info.setAttribute("class", "advertenciaInfoFlujoPago")
                    info.setAttribute("componente", "mensajeFlujoPasarela")
                    info.innerText = mensaje
                    marcoElastico.appendChild(info)
                    const boton = document.createElement("div")
                    boton.setAttribute("class", "errorBoton")
                    boton.setAttribute("componente", "boton")
                    boton.innerText = textoBoton
                    boton.addEventListener("click", (e) => {
                        document.body.style.removeProperty("overflow");
                        e.target.parentNode.parentNode.remove()
                    })
                    if (botonCancelar === "mostrar") {
                        marcoElastico.appendChild(boton)
                    }
                    advertenciaInmersivaUI.appendChild(marcoElastico)
                    document.querySelector("main").appendChild(advertenciaInmersivaUI)
                } catch (errorCapturado) {
                    casaVitini.ui.componentes.advertenciaInmersiva(errorCapturado.message)
                }
            },
            grid: (metadatos) => {
                const filas = metadatos.filas
                const sentidoColumna = metadatos.sentidoColumna ? metadatos.sentidoColumna : ""
                const nombreColumna = metadatos.nombreColumna ? metadatos.nombreColumna : ""
                const tipoConstruccionGrid = metadatos.tipoConstruccionGrid
                const buscar = metadatos.buscar
                const pagina = metadatos.pagina
                const metodoFila = metadatos.metodoFila
                const metodoColumna = metadatos.metodoColumna
                const numeroColumnas = metadatos.numeroColumnas
                const mascaraHref = metadatos.mascaraHref
                const columnasGrid = metadatos.columnasGrid
                const gridUID = metadatos.gridUID
                const destino = metadatos.destino
                const mascaraURL = metadatos.mascaraURL
                const parametros = metadatos.parametros ? metadatos.parametros : {}
                if (!filas) {
                    const error = "No estoy recibiendo contenido para las filas, recuerda que constructorGridClientes, necesita el objeto ya procesador para el servidor, no lo envía"
                    return casaVitini.ui.componentes.advertenciaInmersiva(error)
                }
                if (tipoConstruccionGrid !== "soloLista" && tipoConstruccionGrid !== "total") {
                    const error = "El constructor del grid necesita saber el tipo de construcción, si es total o soloLista"
                    return casaVitini.ui.componentes.advertenciaInmersiva(error)
                }
                if (!metodoFila) {
                    const error = "No se está pasando un método para la fila."
                    return casaVitini.ui.componentes.advertenciaInmersiva(error)
                }
                if (!Number.isInteger(numeroColumnas) || numeroColumnas <= 0) {
                    const error = "Falta especificar el número de columnas."
                    return casaVitini.ui.componentes.advertenciaInmersiva(error)
                }
                const metadatosBusqueda = {
                    buscar: buscar,
                    pagina: pagina,
                    sentidoColumna: sentidoColumna,
                    nombreColumna: nombreColumna,
                    numeroColumnas: numeroColumnas,
                    metodoFila: metodoFila
                }
                const gridConstruido = document.querySelector(`[gridUID=${gridUID}]`)
                const constructorGrid = document.createElement("div")
                constructorGrid.classList.add(
                    "administracionGridReservas",
                    `gridColumnas${numeroColumnas}`
                )
                constructorGrid.setAttribute("gridUID", gridUID)
                constructorGrid.setAttribute("terminoBusqueda", buscar)
                constructorGrid.setAttribute("nombreColumnaSeleccionada", nombreColumna)
                constructorGrid.setAttribute("sentidoColumna", sentidoColumna)
                constructorGrid.setAttribute("numeroPagina", pagina)
                constructorGrid.setAttribute("parametros", JSON.stringify(parametros))
                constructorGrid.setAttribute("mascaraURL", mascaraURL)
                const selectorTitulosColumnas = document.querySelectorAll("[componenteGrid=celdaTituloColumna]")
                selectorTitulosColumnas.forEach((celdaTituloColumna) => {
                    celdaTituloColumna.style.removeProperty("background")
                    celdaTituloColumna.querySelector("[sentidoIconos]")?.remove()
                })
                let icononombreColumna
                let descripcionnombreColumna
                if (sentidoColumna) {
                    if (sentidoColumna === "ascendente") {
                        icononombreColumna = "/componentes/iconos/ascendente.svg"
                        descripcionnombreColumna = "Ordenar acendentemente esta columna"
                    }
                    if (sentidoColumna === "descendente") {
                        icononombreColumna = "/componentes/iconos/descendente.svg"
                        descripcionnombreColumna = "Ordenar descendentemente esta columna"
                    }
                }
                const selectorColumnasRenderizadas = document.querySelectorAll(`[gridUID=${gridUID}] [nombreColumna]`)
                selectorColumnasRenderizadas.forEach((columna) => {
                    columna.setAttribute("sentidoColumna", "")
                })
                if (tipoConstruccionGrid === "soloLista") {
                    if (nombreColumna) {

                        const columnaSeleccionada = document.querySelector(`[gridUID=${gridUID}] [componenteGrid=celdaTituloColumna][nombreColumna=${nombreColumna}]`)
                        columnaSeleccionada.setAttribute("sentidoColumna", sentidoColumna)
                        columnaSeleccionada.style.background = "grey"
                        const iconoColumna = document.createElement("img");
                        iconoColumna.src = icononombreColumna;
                        iconoColumna.alt = descripcionnombreColumna;
                        iconoColumna.classList.add("icononombreColumna");
                        iconoColumna.setAttribute("sentidoIconos", sentidoColumna)
                        columnaSeleccionada.appendChild(iconoColumna)
                        //gridConstruido.setAttribute("nombreColumna", nombreColumna)
                        gridConstruido.setAttribute("sentidoColumna", sentidoColumna)
                    }
                }
                columnasGrid.forEach((detallesColumna) => {
                    const columnaElemento = document.createElement("div")
                    columnaElemento.innerText = detallesColumna.columnaUI
                    columnaElemento.classList.add(detallesColumna.columnaClase)
                    columnaElemento.classList.add("administracionReservasColumnaTitulo")
                    columnaElemento.setAttribute("nombreColumna", detallesColumna.columnaIDV)
                    columnaElemento.setAttribute("componenteGrid", "celdaTituloColumna")
                    columnaElemento.addEventListener("click", eval(metodoColumna))
                    if (nombreColumna === detallesColumna.columnaIDV) {
                        if (nombreColumna) {
                            columnaElemento.style.background = "grey"
                            columnaElemento.setAttribute("nombreColumna", detallesColumna.columnaIDV)
                            columnaElemento.setAttribute("sentidoColumna", sentidoColumna)
                            const iconoColumna = document.createElement("img");
                            iconoColumna.src = icononombreColumna;
                            iconoColumna.alt = descripcionnombreColumna;
                            iconoColumna.classList.add("icononombreColumna");
                            iconoColumna.setAttribute("sentidoIconos", sentidoColumna)
                            columnaElemento.appendChild(iconoColumna)
                        }
                    }
                    if (tipoConstruccionGrid === "total") {
                        constructorGrid.appendChild(columnaElemento)
                    }
                })
                if (tipoConstruccionGrid === "soloLista") {
                    const selectorFilasGrid = document.querySelectorAll("[componenteGrid=fila]")
                    selectorFilasGrid.forEach((filaGrid) => {
                        filaGrid.remove()
                    })
                }
                filas.forEach((detallesFila) => {
                    const fila = document.createElement("a")
                    fila.setAttribute("class", "adminitracionReservasFila")
                    fila.setAttribute("componenteGrid", "fila")
                    fila.setAttribute("href", mascaraHref?.urlStatica + detallesFila[mascaraHref?.parametro])
                    fila.addEventListener("click", eval(metodoFila))
                    for (const detallesObjeto of Object.entries(detallesFila)) {
                        const celdaIDV = detallesObjeto[0]
                        const celdaUI = detallesObjeto[1]
                        const celdaReserva = document.createElement("div")
                        celdaReserva.setAttribute("class", "administracionCeldaEstiloCompartido")
                        celdaReserva.setAttribute("celdaIDV", celdaIDV)
                        celdaReserva.innerText = celdaUI
                        fila.appendChild(celdaReserva)
                    }
                    if (tipoConstruccionGrid === "soloLista") {
                        gridConstruido.setAttribute("numeroPagina", pagina)
                        gridConstruido.setAttribute("nombreColumnaSeleccionada", nombreColumna)
                        gridConstruido.setAttribute("sentidoColumna", sentidoColumna)
                        gridConstruido.appendChild(fila)
                    } else {
                        constructorGrid.appendChild(fila)
                    }
                })
                if (tipoConstruccionGrid === "total") {
                    document.querySelector(`[gridUID=${gridUID}]`)?.remove()
                    document.querySelector(`${destino}`)?.appendChild(constructorGrid)
                }
            },
            paginador: (metadatos) => {
                const paginaActual = metadatos.paginaActual
                const moverHaciaAdelanteNavegacion = metadatos.moverHaciaAdelanteNavegacion
                const mueveNavegadorHaciaAtras = metadatos.mueveNavegadorHaciaAtras
                const sentidoNavegacion = metadatos.sentidoNavegacion
                const posicionRelativa = metadatos.posicionRelativa
                const paginasTotales = metadatos.paginasTotales
                const cambiarPagina = metadatos.cambiarPagina
                const gridUID = metadatos.gridUID
                const metodoBoton = metadatos.metodoBoton
                const destino = metadatos.destino
                const granuladoURL = metadatos.granuladoURL
                let inicioPaginacion = paginaActual
                const constructorURL = (granuladoURL, pagina) => {
                    if (!granuladoURL) {
                        const error = "El constructor URL dentro del paginador necesita el gridUID"
                        return casaVitini.ui.componentes.advertenciaInmersiva(error)
                    }
                    if (!pagina) {
                        const error = "El constructor URL dentro del paginador necesita el pagina"
                        return casaVitini.ui.componentes.advertenciaInmersiva(error)
                    }
                    const directoriosFusion = granuladoURL.directoriosFusion
                    const parametros = granuladoURL.parametros
                    parametros.pagina = pagina
                    const parametrosArray = []
                    for (const [parametro, valor] of Object.entries(parametros)) {
                        const estructura = `${parametro}:${valor}`
                        parametrosArray.push(estructura)
                    }
                    const parametrosFusion = directoriosFusion + "/" + parametrosArray.join("/")
                    return parametrosFusion
                }
                const navegacionPaginacion = document.createElement("div")
                navegacionPaginacion.classList.add("administracionNavegacionPaginacion")
                navegacionPaginacion.setAttribute("componenteID", "navegacionPaginacion")
                navegacionPaginacion.setAttribute("gridUID_enlazado", gridUID)
                if (moverHaciaAdelanteNavegacion === "Desactivado" && sentidoNavegacion === "Adelante") {
                    inicioPaginacion = Number(document.querySelector("[posicionRelativa='1']").getAttribute("navegacionPagina"))
                }
                if (mueveNavegadorHaciaAtras === "Desactivado" && sentidoNavegacion === "Atras") {
                    if (posicionRelativa === 1) {
                        inicioPaginacion = paginaActual - (9)
                    }
                    if (posicionRelativa > 1) {
                        inicioPaginacion = Number(document.querySelector("[posicionRelativa='1']").getAttribute("navegacionPagina"))
                    }
                }
                if (cambiarPagina === "porNumeroDePagina") {
                    inicioPaginacion = Number(document.querySelector("[posicionRelativa='1']").getAttribute("navegacionPagina"))
                }
                if (paginaActual > 1) {
                    const navegacionPaginacionbotonAtras = document.createElement("a")
                    navegacionPaginacionbotonAtras.classList.add("navegacionPaginacion")
                    navegacionPaginacionbotonAtras.classList.add("navegacionPaginacionbotonAtras")
                    navegacionPaginacionbotonAtras.setAttribute("href", constructorURL(granuladoURL, (paginaActual - 1)))
                    navegacionPaginacionbotonAtras.addEventListener("click", (e) => {
                        e.preventDefault()
                        const estructura = {
                            gridUID: gridUID,
                            componenteID: "botonAtrasPaginacion",
                            paginaTipo: "otra"
                        }
                        const x = eval(metodoBoton)
                        return x(estructura);
                    })
                    navegacionPaginacionbotonAtras.innerText = "Atras"
                    navegacionPaginacion.appendChild(navegacionPaginacionbotonAtras)
                } else {
                    document.querySelector("[componenteID=botonAtrasPaginacion]")?.remove()
                }
                let numRedondeado
                if ((Math.floor(inicioPaginacion / 10) * 10) === inicioPaginacion) {
                    numRedondeado = inicioPaginacion - 9
                } else {
                    numRedondeado = (Math.floor(inicioPaginacion / 10) * 10) + 1;
                }
                for (let ciclo = 0; ciclo < 10; ciclo++) {
                    const numeroPagina = numRedondeado + ciclo
                    const numeroPaginaElemento = document.createElement("a")
                    numeroPaginaElemento.classList.add("numeroPaginaElemento")
                    numeroPaginaElemento.setAttribute("href", constructorURL(granuladoURL, numeroPagina))
                    numeroPaginaElemento.setAttribute("posicionRelativa", ciclo + 1)
                    const estructura = {
                        gridUID: gridUID,
                        componenteID: "numeroPagina",
                        numeroPagina: numeroPagina
                    }
                    if (numeroPagina === paginaActual) {
                        numeroPaginaElemento.setAttribute("paginaTipo", "actual")
                        numeroPaginaElemento.style.background = "blue"
                        numeroPaginaElemento.style.color = "white"
                        estructura.paginaTipo = "actual"
                    } else {
                        numeroPaginaElemento.setAttribute("paginaTipo", "otra")
                        numeroPaginaElemento.style.removeProperty("color")
                        numeroPaginaElemento.style.removeProperty("background")
                        estructura.paginaTipo = "otra"
                    }
                    numeroPaginaElemento.addEventListener("click", (e) => {
                        e.preventDefault()
                        const x = eval(metodoBoton)
                        return x(estructura);
                    })
                    numeroPaginaElemento.innerText = numeroPagina
                    if (numeroPagina <= paginasTotales) {
                        navegacionPaginacion.appendChild(numeroPaginaElemento)
                    } else {
                        break
                    }
                }
                const listaPaginacionResponsiva = document.createElement("select")
                listaPaginacionResponsiva.classList.add(
                    "componentes_ui_paginador_listaResponsiva",
                    "selector",
                    "textoCentrado"
                )
                listaPaginacionResponsiva.addEventListener("change", (e) => {
                    e.preventDefault()
                    const elemento = e.target
                    const selectedOption = elemento.options[elemento.selectedIndex];

                    const estructura = {
                        gridUID: gridUID,
                        componenteID: "numeroPagina",
                        numeroPagina: e.target.value,
                        paginaTipo: selectedOption.getAttribute("paginaTipo")
                    }
                    const x = eval(metodoBoton)
                    return x(estructura);
                })
                for (let ciclo = 1; ciclo < (paginasTotales + 1); ciclo++) {
                    const numeroPagina = ciclo
                    const numeroPaginaElemento = document.createElement("option")
                    //numeroPaginaElemento.classList.add("numeroPaginaElemento")
                    numeroPaginaElemento.setAttribute("numeroPagina", numeroPagina)
                    numeroPaginaElemento.value = numeroPagina
                    //  numeroPaginaElemento.setAttribute("href", constructorURL(granuladoURL, numeroPagina))
                    if (numeroPagina === paginaActual) {
                        numeroPaginaElemento.setAttribute("paginaTipo", "actual")
                        numeroPaginaElemento.style.background = "blue"
                        numeroPaginaElemento.style.color = "white"
                        numeroPaginaElemento.selected = true
                        numeroPaginaElemento.disabled = true
                    } else {
                        numeroPaginaElemento.setAttribute("paginaTipo", "otra")
                        numeroPaginaElemento.style.removeProperty("color")
                        numeroPaginaElemento.style.removeProperty("background")
                    }
                    numeroPaginaElemento.innerText = "Página: " + numeroPagina
                    listaPaginacionResponsiva.appendChild(numeroPaginaElemento)
                }
                navegacionPaginacion.appendChild(listaPaginacionResponsiva)
                if (paginasTotales > 1 && paginaActual < paginasTotales) {
                    const navegacionPaginacionbotonAdelante = document.createElement("a")
                    navegacionPaginacionbotonAdelante.classList.add("navegacionPaginacion")
                    navegacionPaginacionbotonAdelante.classList.add("navegacionPaginacionbotonAdelante")
                    navegacionPaginacionbotonAdelante.setAttribute("href", constructorURL(granuladoURL, (paginaActual + 1)))
                    navegacionPaginacionbotonAdelante.addEventListener("click", (e) => {
                        e.preventDefault()
                        e.preventDefault()
                        const estructura = {
                            gridUID: gridUID,
                            componenteID: "botonAdelantePaginacion",
                            paginaTipo: "otra"
                        }
                        const x = eval(metodoBoton)
                        return x(estructura);
                    })
                    navegacionPaginacionbotonAdelante.innerText = "Adelante"
                    navegacionPaginacion.appendChild(navegacionPaginacionbotonAdelante)
                } else {
                    document.querySelector("[componenteID=botonAdelantePaginacion]")?.remove()
                }
                document.querySelector("[componenteID=navegacionPaginacion]")?.remove()
                if (Number(paginasTotales) > 1) {
                    document.querySelector(`${destino}`).appendChild(navegacionPaginacion)
                }
            },

            totales: (desgloseFinanciero) => {
                const totalesPorApartamento = desgloseFinanciero.totalesPorApartamento
                const totalesPorNoche = desgloseFinanciero.totalesPorNoche
                const totales = desgloseFinanciero.totales
                const desgloseImpuestos = desgloseFinanciero.impuestos
                const ofertas = desgloseFinanciero.ofertas
                const destino = desgloseFinanciero.destino
                const selectorDestino = document.querySelector(destino)
                if (!selectorDestino) {
                    const error = "Totales, no encuentra el elemento de destino. Revisa el identificador del elemento."
                    return casaVitini.ui.componentes.advertenciaInmersiva(error)
                }
                const simboloDescuento = {
                    porcentaje: "%",
                    cantidadFija: "$"
                }
                ////////////////////////////////////////////
                const contenedorDesgloseTotales = document.createElement("div")
                contenedorDesgloseTotales.classList.add("componentes_ui_desloseTotales_contenedor")
                const detallePorDiaUI = document.createElement("div")
                detallePorDiaUI.classList.add("reserva_resumen_desglose_pago_bloque")
                const detalleDiaUITitulo = document.createElement("div")
                detalleDiaUITitulo.classList.add("reserva_resumen_desglose_pago_titulo")
                detalleDiaUITitulo.innerText = "Detalle por noche"
                detallePorDiaUI.appendChild(detalleDiaUITitulo)
                const contenedorDesglosePorNoche = document.createElement("div")
                contenedorDesglosePorNoche.classList.add("reserva_resumen_desglose_porNoche")
                if (totalesPorNoche.length === 0) {
                    const info = document.createElement("div")
                    info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                    info.innerText = "No hay información financiera para desglosar por noche"
                    contenedorDesglosePorNoche.appendChild(info)
                }
                for (const detallePorNoche of totalesPorNoche) {
                    const fechaNoche = detallePorNoche.fechaDiaConNoche
                    const precioNetoNoche = detallePorNoche.precioNetoNoche
                    const apartamentosDetallesPorNoche = detallePorNoche.apartamentos
                    const apartamentoUI_ = document.createElement("div")
                    apartamentoUI_.classList.add("contenedorDiaConNoche")
                    const apartamentoUITitulo = document.createElement("div")
                    apartamentoUITitulo.classList.add("reserva_resumen_apartamentoIUTitulo")
                    apartamentoUITitulo.classList.add("negrita")
                    apartamentoUITitulo.innerText = fechaNoche
                    apartamentoUI_.appendChild(apartamentoUITitulo)
                    const totalNetoNocheUI = document.createElement("div")
                    totalNetoNocheUI.classList.add("reserva_resumen_apartamentoIUTitulo")
                    totalNetoNocheUI.classList.add("negrita")
                    totalNetoNocheUI.innerText = precioNetoNoche + "$ Total neto noche"
                    apartamentoUI_.appendChild(totalNetoNocheUI)
                    for (const detalleApartmentoPorNoche of apartamentosDetallesPorNoche) {
                        const apartamentoUI = detalleApartmentoPorNoche.apartamentoUI
                        const precioNetoPorNoche = detalleApartmentoPorNoche.precioNetoNoche
                        const detalleApartamentosUITitulo = document.createElement("div")
                        detalleApartamentosUITitulo.classList.add("reserva_resumen_apartamentoUIPrecio")
                        detalleApartamentosUITitulo.classList.add("negrita")
                        detalleApartamentosUITitulo.classList.add("colorGris")
                        detalleApartamentosUITitulo.innerText = apartamentoUI
                        apartamentoUI_.appendChild(detalleApartamentosUITitulo)
                        const detalleApartamentosUIPreciNetoNoche = document.createElement("div")
                        detalleApartamentosUIPreciNetoNoche.classList.add("reserva_resumen_apartamentoUIPrecio")
                        detalleApartamentosUIPreciNetoNoche.innerText = precioNetoPorNoche + "$ / Neto por noche"
                        apartamentoUI_.appendChild(detalleApartamentosUIPreciNetoNoche)
                    }
                    contenedorDesglosePorNoche.appendChild(apartamentoUI_)
                }
                detallePorDiaUI.appendChild(contenedorDesglosePorNoche)
                contenedorDesgloseTotales.appendChild(detallePorDiaUI)
                ////////////////////////////////////////////
                const contenedorTotalesPorApartamento = document.createElement("div")
                contenedorTotalesPorApartamento.classList.add("reserva_resumen_desglose_porNoche")
                const alojamientoUI = document.createElement("div")
                alojamientoUI.classList.add("reserva_resumen_desglose_pago_bloque")
                const alojamientoUITitulo = document.createElement("div")
                alojamientoUITitulo.classList.add("reserva_resumen_desglose_pago_titulo")
                alojamientoUITitulo.innerText = "Precio total neto por apartamento"
                alojamientoUI.appendChild(alojamientoUITitulo)
                if (totalesPorApartamento.length === 0) {
                    const info = document.createElement("div")
                    info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                    info.innerText = "No hay información financiera para desglosar por apartamento"
                    alojamientoUI.appendChild(info)
                }
                for (const detalleDesglosePorApartamento of totalesPorApartamento) {
                    const apartamentoUI_ = detalleDesglosePorApartamento.apartamentoUI
                    const totalNetoApartamento = detalleDesglosePorApartamento.totalNetoRango
                    const precioNetoMedioPorNoche = detalleDesglosePorApartamento.precioMedioNocheRango
                    const apartamentoUI = document.createElement("div")
                    apartamentoUI.classList.add("contenedorApartamento")
                    const apartamentoUITitulo = document.createElement("div")
                    apartamentoUITitulo.classList.add("contenedorTextoOferta")
                    apartamentoUITitulo.classList.add("negrita")
                    apartamentoUITitulo.innerText = apartamentoUI_
                    apartamentoUI.appendChild(apartamentoUITitulo)
                    const apartamentoUIPrecioNetoTotal = document.createElement("div")
                    apartamentoUIPrecioNetoTotal.classList.add("textoDetallesPorApartamento")
                    apartamentoUIPrecioNetoTotal.innerText = "Total neto: " + totalNetoApartamento + "$"
                    apartamentoUI.appendChild(apartamentoUIPrecioNetoTotal)
                    const apartamentoUIPrecioPromedioPorNoche = document.createElement("div")
                    apartamentoUIPrecioPromedioPorNoche.classList.add("textoDetallesPorApartamento")
                    apartamentoUIPrecioPromedioPorNoche.innerText = "Precio medio neto por noche: " + precioNetoMedioPorNoche + "$"
                    apartamentoUI.appendChild(apartamentoUIPrecioPromedioPorNoche)
                    alojamientoUI.appendChild(apartamentoUI)
                }
                contenedorTotalesPorApartamento.appendChild(alojamientoUI)
                contenedorDesgloseTotales.appendChild(contenedorTotalesPorApartamento)
                ////////////////////////////////////////////
                let controlContenido = "noDesplegar"
                const ofertasUI = document.createElement("div")
                ofertasUI.classList.add("reserva_resumen_desglose_pago_bloque")
                const ofertasUITitulo = document.createElement("div")
                ofertasUITitulo.classList.add("reserva_resumen_desglose_pago_titulo")
                ofertasUITitulo.innerText = "Ofertas aplicadas"
                ofertasUI.appendChild(ofertasUITitulo)
                for (const oferta of ofertas) {
                    const porNumeroDeApartamentos = oferta.porNumeroDeApartamentos
                    const porApartamentosEspecificos = oferta.porApartamentosEspecificos
                    const porDiasDeReserva = oferta.porDiasDeReserva
                    const porRangoDeFechas = oferta.porRangoDeFechas
                    const porDiasDeAntelacion = oferta.porDiasDeAntelacion
                    if (porNumeroDeApartamentos?.length) {
                        controlContenido = "desplegar"
                        const contenedorOfertaUI = document.createElement("div")
                        contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                        for (const detallesReserva of oferta.porNumeroDeApartamentos) {
                            const contenedorIndividualOferta = document.createElement("div")
                            contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                            const cantidad = detallesReserva.cantidad
                            const tipoDescuento = detallesReserva.tipoDescuento
                            const definicion = detallesReserva.definicion
                            const nombreOferta = detallesReserva.nombreOferta
                            const descuento = detallesReserva.descuento
                            let nombreOfertaUI = document.createElement("div")
                            nombreOfertaUI.classList.add("contenedorTextoOferta")
                            nombreOfertaUI.classList.add("negrita")
                            nombreOfertaUI.innerText = nombreOferta
                            contenedorIndividualOferta.appendChild(nombreOfertaUI)
                            const definicionOfertaUI = document.createElement("div")
                            definicionOfertaUI.classList.add("contenedorTextoOferta")
                            definicionOfertaUI.innerText = definicion
                            contenedorIndividualOferta.appendChild(definicionOfertaUI)
                            if (tipoDescuento === "porcentaje") {
                                const tipoDescuentoUI = document.createElement("div")
                                tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                tipoDescuentoUI.innerText = "Descuento del " + cantidad + simboloDescuento[tipoDescuento] + " rebajando el neto de la reserva en " + descuento + "$"
                                contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                            }
                            if (tipoDescuento === "cantidadFija") {
                                const tipoDescuentoUI = document.createElement("div")
                                tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                tipoDescuentoUI.innerText = "Descuento del " + cantidad + simboloDescuento[tipoDescuento] + " sobre el neto de la reserva"
                                contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                            }
                            contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                        }
                        ofertasUI.appendChild(contenedorOfertaUI)
                    }
                    if (porApartamentosEspecificos?.length) {
                        controlContenido = "desplegar"
                        const contenedorOfertaUI = document.createElement("div")
                        contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                        for (const detallesOferta of oferta.porApartamentosEspecificos) {
                            const nombreOferta = detallesOferta.nombreOferta
                            const cantidad = detallesOferta.cantidad
                            const tipoDescuento = detallesOferta.tipoDescuento
                            const definicion = detallesOferta.definicion
                            const descuentoOferta = detallesOferta.descuentoOferta
                            const descuentoAplicadoA = detallesOferta.descuentoAplicadoA
                            const contenedorIndividualOferta = document.createElement("div")
                            contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                            const nombreOfertaUI = document.createElement("div")
                            nombreOfertaUI.classList.add("contenedorTextoOferta")
                            nombreOfertaUI.classList.add("negrita")
                            nombreOfertaUI.innerText = nombreOferta
                            contenedorIndividualOferta.appendChild(nombreOfertaUI)
                            const definicionOfertaUI = document.createElement("div")
                            definicionOfertaUI.classList.add("contenedorTextoOferta")
                            definicionOfertaUI.innerText = definicion
                            contenedorIndividualOferta.appendChild(definicionOfertaUI)
                            if (descuentoAplicadoA === "totalNetoApartamentoDedicado") {
                                const apartamentosEspecificos = detallesOferta.apartamentosEspecificos
                                const contenedorApartamentosEspecificos = document.createElement("div")
                                contenedorApartamentosEspecificos.classList.add("componentes_ui_totales_ofertas_apartamentosEspecificos_contenedor")
                                for (const detallesApartamento of apartamentosEspecificos) {
                                    const apartamentoIDV = detallesApartamento.apartamentoIDV
                                    const apartamentoUI = detallesApartamento.apartamentoUI
                                    const tipoDescuento = detallesApartamento.tipoDescuento
                                    const cantidad = detallesApartamento.cantidad
                                    const descuento = detallesApartamento.descuento
                                    const bloqueDetalleOferta = document.createElement("div")
                                    bloqueDetalleOferta.classList.add("resumen_reserva_detalle_oferta_apartamentos_especificos")
                                    const tituloApartamentoUI = document.createElement("div")
                                    tituloApartamentoUI.classList.add("negrita")
                                    tituloApartamentoUI.innerHTML = apartamentoUI
                                    bloqueDetalleOferta.appendChild(tituloApartamentoUI)
                                    const tipoDescuentoApartamentoUI = document.createElement("div")
                                    tipoDescuentoApartamentoUI.innerText = tipoDescuento
                                    //   bloqueDetalleOferta.appendChild(tipoDescuentoApartamentoUI)
                                    const cantidadPorApartmento = document.createElement("div")
                                    cantidadPorApartmento.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                    bloqueDetalleOferta.appendChild(cantidadPorApartmento)
                                    contenedorApartamentosEspecificos.appendChild(bloqueDetalleOferta)
                                }
                                contenedorIndividualOferta.appendChild(contenedorApartamentosEspecificos)
                            }
                            if (descuentoAplicadoA === "totalNetoReserva") {
                                const descuentoOfertaUI = document.createElement("div")
                                descuentoOfertaUI.classList.add("contenedorTextoOferta")
                                descuentoOfertaUI.innerText = descuentoOferta
                                contenedorIndividualOferta.appendChild(descuentoOfertaUI)
                                if (tipoDescuento === "porcentaje") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                                if (tipoDescuento === "cantidadFija") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                            }
                            contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                        }
                        ofertasUI.appendChild(contenedorOfertaUI)
                    }
                    if (porDiasDeReserva?.length) {
                        controlContenido = "desplegar"
                        const contenedorOfertaUI = document.createElement("div")
                        contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                        for (const detatllesReserva of oferta.porDiasDeReserva) {
                            const cantidad = detatllesReserva.cantidad
                            const tipoDescuento = detatllesReserva.tipoDescuento
                            const nombreOferta = detatllesReserva.nombreOferta
                            const numero = detatllesReserva.numero
                            const simboloNumero = detatllesReserva.simboloNumero
                            const definicion = detatllesReserva.definicion
                            const descuento = detatllesReserva.descuento
                            const contenedorIndividualOferta = document.createElement("div")
                            contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                            const nombreOfertaUI = document.createElement("div")
                            nombreOfertaUI.classList.add("contenedorTextoOferta")
                            nombreOfertaUI.classList.add("negrita")
                            nombreOfertaUI.innerText = nombreOferta
                            contenedorIndividualOferta.appendChild(nombreOfertaUI)
                            const definicionUI = document.createElement("div")
                            definicionUI.classList.add("contenedorTextoOferta")
                            definicionUI.innerText = definicion
                            contenedorIndividualOferta.appendChild(definicionUI)
                            if (tipoDescuento === "porcentaje") {
                                const tipoDescuentoUI = document.createElement("div")
                                tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento] + " rebajando el neto de la reserva en " + descuento + "$"
                                contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                            }
                            if (tipoDescuento === "cantidadFija") {
                                const tipoDescuentoUI = document.createElement("div")
                                tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                            }
                            const definicionOfertaUI = document.createElement("div")
                            definicionOfertaUI.classList.add("contenedorTextoOferta")
                            definicionOfertaUI.innerText = definicion
                            //contenedorIndividualOferta.appendChild(definicionOfertaUI)
                            contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                        }
                        ofertasUI.appendChild(contenedorOfertaUI)
                    }
                    if (porRangoDeFechas?.length) {
                        controlContenido = "desplegar"
                        const contenedorOfertaUI = document.createElement("div")
                        contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                        for (const detallesOferta of oferta.porRangoDeFechas) {
                            const cantidad = detallesOferta.cantidad
                            const tipoDescuento = detallesOferta.tipoDescuento
                            const definicion = detallesOferta.definicion
                            const nombreOferta = detallesOferta.nombreOferta
                            const diasAfectados = detallesOferta.diasAfectados
                            const descuento = detallesOferta.descuento
                            const contenedorIndividualOferta = document.createElement("div")
                            contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                            const nombreOfertaUI = document.createElement("div")
                            nombreOfertaUI.classList.add("contenedorTextoOferta")
                            nombreOfertaUI.classList.add("negrita")
                            nombreOfertaUI.innerText = nombreOferta
                            contenedorIndividualOferta.appendChild(nombreOfertaUI)
                            const definicionOfertaUI = document.createElement("div")
                            definicionOfertaUI.classList.add("contenedorTextoOferta")
                            definicionOfertaUI.innerText = definicion
                            contenedorIndividualOferta.appendChild(definicionOfertaUI)
                            const tipoDescuentoUI = document.createElement("div")
                            tipoDescuentoUI.classList.add("contenedorTextoOferta")
                            tipoDescuentoUI.innerText = "Descuento total de la oferta: " + descuento + "$"
                            contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                            const contenedorDiasEspecificos = document.createElement("div")
                            contenedorDiasEspecificos.classList.add("componentes_ui_totales_ofertas_diasEspecificos_contenedor")
                            for (const detalleDelDia of diasAfectados) {
                                const dia = detalleDelDia.dia
                                const totaDiaNetoConOferta = detalleDelDia.totaDiaNetoConOferta
                                const descuento = detalleDelDia.descuento
                                const bloque = document.createElement("div")
                                bloque.classList.add("resumen_reserva_detalle_oferta_apartamentos_especificos")
                                const tituloUI = document.createElement("div")
                                tituloUI.classList.add("negrita")
                                tituloUI.innerHTML = dia
                                bloque.appendChild(tituloUI)
                                const totalSinOferta = document.createElement("div")
                                totalSinOferta.innerText = "Total día con oferta: " + totaDiaNetoConOferta + "$"
                                bloque.appendChild(totalSinOferta)
                                const totalConOferta = document.createElement("div")
                                totalConOferta.innerText = "Descuento: " + descuento + "$"
                                bloque.appendChild(totalConOferta)
                                contenedorDiasEspecificos.appendChild(bloque)
                            }
                            contenedorIndividualOferta.appendChild(contenedorDiasEspecificos)
                            contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                        }
                        ofertasUI.appendChild(contenedorOfertaUI)
                    }
                    if (porDiasDeAntelacion?.length) {
                        controlContenido = "desplegar"
                        const contenedorOfertaUI = document.createElement("div")
                        contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                        for (const detallesOferta of oferta.porDiasDeAntelacion) {
                            const cantidad = detallesOferta.cantidad
                            const tipoDescuento = detallesOferta.tipoDescuento
                            const definicion = detallesOferta.definicion
                            const nombreOferta = detallesOferta.nombreOferta
                            const descuento = detallesOferta.descuento
                            const contenedorIndividualOferta = document.createElement("div")
                            contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                            const nombreOfertaUI = document.createElement("div")
                            nombreOfertaUI.classList.add("contenedorTextoOferta")
                            nombreOfertaUI.classList.add("negrita")
                            nombreOfertaUI.innerText = nombreOferta
                            contenedorIndividualOferta.appendChild(nombreOfertaUI)
                            const definicionOfertaUI = document.createElement("div")
                            definicionOfertaUI.classList.add("contenedorTextoOferta")
                            definicionOfertaUI.innerText = definicion
                            contenedorIndividualOferta.appendChild(definicionOfertaUI)
                            if (tipoDescuento === "porcentaje") {
                                const tipoDescuentoUI = document.createElement("div")
                                tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                tipoDescuentoUI.innerText = "Descuento del " + cantidad + "% sobre el neto de la reserva."
                                contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                            }
                            if (tipoDescuento === "cantidadFija") {
                                const tipoDescuentoUI = document.createElement("div")
                                tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                tipoDescuentoUI.innerText = "Descuento de " + cantidad + "$ sobre el neto de la reserva"
                                contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                            }
                            contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                        }
                        ofertasUI.appendChild(contenedorOfertaUI)
                    }
                }
                if (controlContenido === "desplegar") {
                    contenedorDesgloseTotales.appendChild(ofertasUI)
                }


                const impuestoUI = document.createElement("div")
                impuestoUI.classList.add("reserva_resumen_desglose_pago_bloque")
                const impuestoUITituloBloque = document.createElement("div")
                impuestoUITituloBloque.classList.add("reserva_resumen_desglose_pago_titulo")
                impuestoUITituloBloque.innerText = "Impuestos"
                impuestoUI.appendChild(impuestoUITituloBloque)




                if (desgloseImpuestos.length === 0) {
                    const info = document.createElement("div")
                    info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                    info.innerText = "No hay información financiera sobre impuestos para mostrar"
                    impuestoUI.appendChild(info)
                }
                desgloseImpuestos.forEach((impuesto) => {
                    const impuestoTitulo = impuesto.nombreImpuesto
                    const tipoValor = impuesto.tipoValor
                    const tipoImpositivo = impuesto.tipoImpositivo
                    const calculoImpuestoPorcentaje = impuesto.calculoImpuestoPorcentaje
                    const impuestoUITitulo = document.createElement("div")
                    impuestoUITitulo.classList.add("reserva_resumen_desglose_pago_elemento")
                    const impuestoUITitulo_ = document.createElement("div")
                    impuestoUITitulo_.classList.add("reserva_resumen_apartamentoIUTitulo")
                    impuestoUITitulo_.classList.add("negrita")
                    impuestoUITitulo_.innerText = impuestoTitulo
                    impuestoUITitulo.appendChild(impuestoUITitulo_)
                    let simboloTipoImpuesto;
                    if (tipoValor === "porcentaje") {
                        simboloTipoImpuesto = "%";
                    }
                    if (tipoValor === "tasa") {
                        simboloTipoImpuesto = "$";
                    }
                    const impuestoUITipoImpositivo = document.createElement("div")
                    impuestoUITipoImpositivo.classList.add("reserva_resumen_impuestoUITipoImpositivo")
                    impuestoUITipoImpositivo.innerText = tipoImpositivo + simboloTipoImpuesto
                    impuestoUITitulo.appendChild(impuestoUITipoImpositivo)
                    const impuestoUITipoValor = document.createElement("div")
                    impuestoUITipoValor.classList.add("resumen_reserva_impuestoUITipoValor")
                    impuestoUITipoValor.innerText = tipoValor
                    // impuestoUITitulo.appendChild(impuestoUITipoValor)
                    if (calculoImpuestoPorcentaje) {
                        const impuestoUICalculoImpuestoPorcentaje = document.createElement("div")
                        impuestoUICalculoImpuestoPorcentaje.classList.add("resumen_reserva_impuestoUICalculoImpuestoPorcentaje")
                        impuestoUICalculoImpuestoPorcentaje.innerText = calculoImpuestoPorcentaje + "$"
                        impuestoUITitulo.appendChild(impuestoUICalculoImpuestoPorcentaje)
                    }
                    impuestoUI.appendChild(impuestoUITitulo)
                })


                if (desgloseImpuestos.length > 0) {
                    contenedorDesgloseTotales.appendChild(impuestoUI)
                }

                const totalesUI = document.createElement("div")
                totalesUI.classList.add("reserva_resumen_desglose_pago_bloque")
                const totalesUITituloBloque = document.createElement("div")
                totalesUITituloBloque.classList.add("reserva_resumen_desglose_pago_titulo")
                totalesUITituloBloque.innerText = "Totales"
                totalesUI.appendChild(totalesUITituloBloque)
                const totalPromedioNetoPorNoche = totales.promedioNetoPorNoche ?
                    totales.promedioNetoPorNoche + "$" :
                    "No hay información del total promedio neto por noche";
                const totalReservaNeto = totales.totalReservaNeto ? totales.totalReservaNeto + "$" : "No hay información del total neto de la reserva"
                const totalImpuestos = totales.totalImpuestos ? totales.totalImpuestos + "$" : "No hay información del total de los impuestos"
                const totalDescuentos = totales.totalDescuentos ? totales.totalDescuentos + "$" : "No hay información del total desconectado."
                const totalReservaNetoSinDescuentos = totales.totalReservaNetoSinOfertas ? totales.totalReservaNetoSinOfertas + "$" : "No hay información del total de la reserva sin descuentos."
                if (totales.totalReservaNeto) {
                    const totalReservaNetoDiaUI = document.createElement("div")
                    totalReservaNetoDiaUI.classList.add("detalleDelTotal")
                    totalReservaNetoDiaUI.innerText = "Precio medio neto de la reserva por noche: " + totalPromedioNetoPorNoche
                    // totalesUI.appendChild(totalReservaNetoDiaUI)
                    if (totales.totalDescuentos) {
                        const totalDescuentosAplicadosUI = document.createElement("div")
                        totalDescuentosAplicadosUI.classList.add("detalleDelTotal")
                        totalDescuentosAplicadosUI.innerText = "Descuento total por todas las ofertas aplicadas: " + totalDescuentos
                        totalesUI.appendChild(totalDescuentosAplicadosUI)
                        const totalReservaNetoSinOfertasUI = document.createElement("div")
                        totalReservaNetoSinOfertasUI.classList.add("detalleDelTotal")
                        totalReservaNetoSinOfertasUI.innerText = "Total neto sin ofertas aplicadas: " + totalReservaNetoSinDescuentos
                        totalesUI.appendChild(totalReservaNetoSinOfertasUI)
                    }
                    const totalReservaNetoUI = document.createElement("div")
                    totalReservaNetoUI.classList.add("detalleDelTotal")
                    totalReservaNetoUI.innerText = "Total reserva neto: " + totalReservaNeto
                    totalesUI.appendChild(totalReservaNetoUI)
                    const totalImpuestosUI = document.createElement("div")
                    totalImpuestosUI.classList.add("detalleDelTotal")
                    totalImpuestosUI.innerText = "Total impuestos aplicados: " + totalImpuestos
                    totalesUI.appendChild(totalImpuestosUI)
                    const totalConImpuestosUI = document.createElement("div")
                    totalConImpuestosUI.classList.add("detalleDelTotal")
                    totalConImpuestosUI.classList.add("negrita")
                    totalConImpuestosUI.innerText = "Total final: " + totales.totalConImpuestos + "$"
                    totalesUI.appendChild(totalConImpuestosUI)
                } else {
                    const info = document.createElement("div")
                    info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                    info.innerText = "No hay información de totales"
                    totalesUI.appendChild(info)
                }
                contenedorDesgloseTotales.appendChild(totalesUI)
                selectorDestino.appendChild(contenedorDesgloseTotales)
            },
            pantallaInmersivaPersonalizada: (data) => {

                const alineacion = data?.alineacion
                document.body.style.overflow = 'hidden';
                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                const pantallaInmersivaPersonalizadaUI = document.createElement("div")
                pantallaInmersivaPersonalizadaUI.setAttribute("class", "advertenciaInmersiva")
                pantallaInmersivaPersonalizadaUI.setAttribute("componente", "advertenciaInmersiva")
                if (alineacion === "arriba") {
                    pantallaInmersivaPersonalizadaUI.classList.add("flextJustificacion_arriba")
                } else {
                    pantallaInmersivaPersonalizadaUI.classList.add("flextJustificacion_center")
                }
                pantallaInmersivaPersonalizadaUI.setAttribute("instanciaUID", instanciaUID)
                const contenedorAdvertenciaInmersiva = document.createElement("div")
                contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                const contenidoAdvertenciaInmersiva = document.createElement("div")
                contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")

                contenidoAdvertenciaInmersiva.setAttribute("contenedor", "contenidoAdvertenciaInmersiva")
                contenidoAdvertenciaInmersiva.setAttribute("destino", "inyector")
                contenidoAdvertenciaInmersiva.setAttribute("componente", "contenedor")

                contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                pantallaInmersivaPersonalizadaUI.appendChild(contenedorAdvertenciaInmersiva)
                return pantallaInmersivaPersonalizadaUI
            },
            pantallaInmersivaPersonalizadaMoldeada: () => {
                document.body.style.overflow = 'hidden';
                const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                const pantallaInmersivaPersonalizadaUI = document.createElement("div")
                pantallaInmersivaPersonalizadaUI.setAttribute("class", "advertenciaInmersiva")
                pantallaInmersivaPersonalizadaUI.setAttribute("componente", "advertenciaInmersiva")
                pantallaInmersivaPersonalizadaUI.setAttribute("instanciaUID", instanciaUID)
                const contenedorAdvertenciaInmersiva = document.createElement("div")
                contenedorAdvertenciaInmersiva.classList.add("contenedorAdvertencaiInmersiva")
                const contenidoAdvertenciaInmersiva = document.createElement("div")
                contenidoAdvertenciaInmersiva.classList.add("contenidoAdvertenciaInmersiva")
                contenidoAdvertenciaInmersiva.setAttribute("contenedor", "contenidoAdvertenciaInmersiva")
                contenidoAdvertenciaInmersiva.setAttribute("destino", "inyector")
                contenidoAdvertenciaInmersiva.setAttribute("componente", "constructor")

                const tituloUI = document.createElement("p")
                tituloUI.classList.add("titulo")
                tituloUI.setAttribute("componente", "titulo")
                contenidoAdvertenciaInmersiva.appendChild(tituloUI)


                const mensajeUI = document.createElement("div")
                mensajeUI.classList.add("mensajeUI")
                mensajeUI.setAttribute("componente", "mensajeUI")
                contenidoAdvertenciaInmersiva.appendChild(mensajeUI)

                const contenedorEspacio = document.createElement("div")
                contenedorEspacio.setAttribute("componente", "contenedor")
                contenidoAdvertenciaInmersiva.appendChild(contenedorEspacio)

                const botonAceptar = document.createElement("div")
                botonAceptar.classList.add("boton")
                botonAceptar.setAttribute("boton", "aceptar")
                contenidoAdvertenciaInmersiva.appendChild(botonAceptar)

                const botonCancelar = document.createElement("div")
                botonCancelar.classList.add("boton")
                botonCancelar.setAttribute("boton", "cancelar")
                botonCancelar.addEventListener("click", () => {
                    return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                })
                contenidoAdvertenciaInmersiva.appendChild(botonCancelar)

                contenedorAdvertenciaInmersiva.appendChild(contenidoAdvertenciaInmersiva)
                pantallaInmersivaPersonalizadaUI.appendChild(contenedorAdvertenciaInmersiva)
                return pantallaInmersivaPersonalizadaUI
            },
            spinner: (data) => {
                const mensaje = data.mensaje || ""
                const textoBoton = data.textoBoton || "Ocultar"

                const contenedorSpinner = document.createElement("div")
                contenedorSpinner.classList.add("contenedorSpinner")
                contenedorSpinner.setAttribute("componente", "spinnerListaDeEnlaces")
                contenedorSpinner.setAttribute("contenedor", "spinner")
                const spinnerContainer = document.createElement('div');
                spinnerContainer.setAttribute("componente", "iconoCargaEnlace");
                spinnerContainer.classList.add("lds-spinner");
                for (let i = 0; i < 12; i++) {
                    const div = document.createElement('div');
                    spinnerContainer.appendChild(div);
                }
                const info = document.createElement("div")
                info.setAttribute("class", "advertenciaInfoFlujoPago")
                info.setAttribute("componente", "mensajeFlujoPasarela")
                info.innerText = mensaje
                const botoCancelar = document.createElement("div")
                botoCancelar.setAttribute("class", "botonV1AdvertenciaInmersiva")
                botoCancelar.setAttribute("boton", "cancelar")
                botoCancelar.innerText = textoBoton
                botoCancelar.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                contenedorSpinner.appendChild(spinnerContainer)
                contenedorSpinner.appendChild(info)
                contenedorSpinner.appendChild(botoCancelar)
                return contenedorSpinner
            },
            spinnerSimple: () => {
                const contenedorSpinner = document.createElement("div")
                contenedorSpinner.classList.add("contenedorSpinner")
                contenedorSpinner.setAttribute("componente", "spinnerSimple")
                contenedorSpinner.setAttribute("contenedor", "spinner")
                const spinnerContainer = document.createElement('div');
                spinnerContainer.setAttribute("componente", "iconoCargaEnlace");
                spinnerContainer.classList.add("lds-spinner");
                for (let i = 0; i < 12; i++) {
                    const div = document.createElement('div');
                    spinnerContainer.appendChild(div);
                }
                contenedorSpinner.appendChild(spinnerContainer)
                return contenedorSpinner
            },
            mensajeSimple: (data) => {

                const titulo = data?.titulo
                const descripcion = data?.descripcion

                const contenedor = document.createElement("div")
                contenedor.classList.add("componentes_contenedor_mensajeSimple")
                const contenedorIntermedio = document.createElement("div")
                contenedorIntermedio.classList.add("componentes_contenedor_contenedorIntermedio")
                contenedorIntermedio.setAttribute("espacio", "formularioCrearEnlaceDePago")
                const contenedorBloque = document.createElement("div")
                contenedorBloque.classList.add("componentes_contenedor_contenido")

                if (titulo) {
                    const tituloUI = document.createElement("div")
                    tituloUI.classList.add("componentes_contenedor_mensajeSimple_titulo")
                    tituloUI.classList.add("negrita")
                    tituloUI.innerText = titulo
                    contenedorBloque.appendChild(tituloUI)
                }

                if (descripcion) {
                    const descripcionUI = document.createElement("div")
                    descripcionUI.classList.add("mensajeDelError")
                    descripcionUI.innerText = descripcion
                    contenedorBloque.appendChild(descripcionUI)
                }

                contenedorIntermedio.appendChild(contenedorBloque)
                contenedor.appendChild(contenedorIntermedio)
                const main = document.querySelector("main")
                main.removeAttribute("instanciaUID")
                main.innerHTML = null
                main.appendChild(contenedor)
            },
            iconoProceso: () => {
                const iconoProcesoDiv = document.createElement('div');
                iconoProcesoDiv.className = 'iconoProceso';
                iconoProcesoDiv.setAttribute("componente", "iconoProceso")
                for (let i = 0; i < 12; i++) {
                    const divInterno = document.createElement('div');
                    iconoProcesoDiv.appendChild(divInterno);
                }
                return iconoProcesoDiv;
            },

            calendario: {
                constructorCalendarioNuevo: (metadatos) => {
                    try {
                        const almacenamientoVolatilUID = metadatos.almacenamientoCalendarioID
                        if (!almacenamientoVolatilUID) {
                            const error = "El constructor del calendario, necesita un nombre para el almacenamiento volátil"
                            throw new Error(error)
                        }
                        const tipoFecha = metadatos.tipoFecha
                        if (!tipoFecha) {
                            const error = "El constructor del calendario, necesita un tipoFecha, ya sea entrada o salida"
                            throw new Error(error)
                        }
                        const calendarioIO = metadatos.calendarioIO
                        if (!calendarioIO) {
                            const error = "El constructor del calendario, necesita un calendarioIO, ya sea entrada o salida"
                            throw new Error(error)
                        }
                        const perfilMes = metadatos.perfilMes
                        if (!perfilMes) {
                            const error = "El constructor del calendario, necesita un perfilMes, consulte los perfiles en constructorMes"
                            throw new Error(error)
                        }
                        const mensajeInfo = metadatos.mensajeInfo
                        if (!mensajeInfo) {
                            const error = "El constructor del calendario, necesita un mensajeInfo, para informar de para que es este calendario"
                            throw new Error(error)
                        }
                        const alturaDinamica = metadatos.alturaDinamica
                        if (!alturaDinamica) {
                            const error = "El constructor del calendario necesita una altura dinámica para colorar el contenedor del calendario."
                            throw new Error(error)
                        }
                        const instanciaUID = metadatos.instanciaUID
                        if (!instanciaUID) {
                            const error = "El constructor del calendario necesita una instanciaUID para el contenedor del calendario"
                            throw new Error(error)
                        }
                        const instanciaUID_contenedorFechas = metadatos.instanciaUID_contenedorFechas
                        if (!instanciaUID_contenedorFechas) {
                            const error = "El constructor del calendario necesita una instanciaUID_contenedorFechas para calendario"
                            throw new Error(error)
                        }
                        const metodoSelectorDia = metadatos.metodoSelectorDia
                        if (!metodoSelectorDia) {
                            const error = "El constructor del calendario necesita un metodoSelectorDia para el contenedor del calendario"
                            throw new Error(error)
                        } else {
                            try {
                                eval(metodoSelectorDia)
                            } catch (errorCapturado) {
                                const error = "El metodoSelectorDia hace referencia a nada, revisa la dirección del árbol del objeto:" + errorCapturado.message
                                throw new Error(error)
                            }
                        }
                        const seleccionableDiaLimite = metadatos.seleccionableDiaLimite || "si"

                        const calendario = document.createElement("div")
                        calendario.setAttribute("class", "calendarioNuevo")
                        //calendario.setAttribute("campo", "calendario")
                        calendario.setAttribute("contenedor", "calendario")
                        calendario.setAttribute("componente", "marcoCalendario")
                        calendario.setAttribute("almacenamientoCalendarioID", almacenamientoVolatilUID)
                        calendario.setAttribute("tipoCalendario", tipoFecha)
                        calendario.setAttribute("calendarioIO", calendarioIO)
                        calendario.setAttribute("metodoSelectorDia", metodoSelectorDia)

                        calendario.setAttribute("seleccionableDiaLimite", seleccionableDiaLimite)

                        calendario.setAttribute("elemento", "flotante")
                        calendario.setAttribute("perfilMes", perfilMes)
                        calendario.setAttribute("IO", calendarioIO)
                        calendario.style.display = "none"
                        const cartelInfoCalendarioEstado = document.createElement("div")
                        cartelInfoCalendarioEstado.setAttribute("class", "cartelInfoCalendarioEstado")
                        cartelInfoCalendarioEstado.setAttribute("componente", "infoCalendario")
                        cartelInfoCalendarioEstado.setAttribute("campo", "calendario")
                        cartelInfoCalendarioEstado.innerText = mensajeInfo
                        const navegacionMes = document.createElement("nav")
                        navegacionMes.setAttribute("class", "navegacionMes")
                        calendario.appendChild(navegacionMes)
                        calendario.appendChild(cartelInfoCalendarioEstado)
                        const botonNavegacionMesAtras = document.createElement("div")
                        botonNavegacionMesAtras.setAttribute("class", "botonNavegacionMes")
                        botonNavegacionMesAtras.setAttribute("id", "botonAtras")
                        botonNavegacionMesAtras.setAttribute("sentido", "atras")
                        botonNavegacionMesAtras.innerText = "Atrás"
                        botonNavegacionMesAtras.addEventListener("click", casaVitini.ui.componentes.calendario.navegacionCalendarioNuevo)
                        navegacionMes.appendChild(botonNavegacionMesAtras)
                        const navegacionMesReferencia = document.createElement("div")
                        navegacionMesReferencia.setAttribute("id", "navegacionMesReferencia")
                        navegacionMesReferencia.setAttribute("class", "navegacionMesReferencia")
                        navegacionMesReferencia.setAttribute("componente", "mesReferencia")
                        navegacionMes.appendChild(navegacionMesReferencia)
                        const botonNavegacionMesAdelante = document.createElement("div")
                        botonNavegacionMesAdelante.setAttribute("class", "botonNavegacionMes")
                        botonNavegacionMesAdelante.setAttribute("id", "botonAdelante")
                        botonNavegacionMesAdelante.innerText = "Adelante"
                        botonNavegacionMesAdelante.setAttribute("sentido", "adelante")
                        botonNavegacionMesAdelante.addEventListener("click", casaVitini.ui.componentes.calendario.navegacionCalendarioNuevo)
                        navegacionMes.appendChild(botonNavegacionMesAdelante)
                        const marcoMes = document.createElement("ol")
                        marcoMes.setAttribute("id", "marcoMes")
                        marcoMes.setAttribute("class", "marcoMes")
                        marcoMes.setAttribute("componente", "marcoMes")
                        calendario.appendChild(marcoMes)
                        const pilaDias = ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"]
                        for (const nombreDia of pilaDias) {
                            let diaSemana = document.createElement("li")
                            diaSemana.setAttribute("class", "nombreDia")
                            diaSemana.setAttribute("tipoNombreDia", "extendido")
                            diaSemana.innerText = nombreDia
                            marcoMes.appendChild(diaSemana)
                        }
                        const pilaDiasAbreviados = ["L", "M", "X", "J", "V", "S", "D"]
                        for (const nombreDia of pilaDiasAbreviados) {
                            let diaSemana = document.createElement("li")
                            diaSemana.setAttribute("class", "nombreDia")
                            diaSemana.setAttribute("tipoNombreDia", "abreviado")
                            diaSemana.innerText = nombreDia
                            marcoMes.appendChild(diaSemana)
                        }
                        const seccion = document.querySelector("section:not([estado=obsoleto])")
                        const bloqueCalendario = document.createElement("div")
                        bloqueCalendario.setAttribute("class", "bloqueCalendarioNuevo")
                        bloqueCalendario.setAttribute("instanciaUID", instanciaUID)
                        bloqueCalendario.setAttribute("instanciaUID_contenedorFechas", instanciaUID_contenedorFechas)
                        bloqueCalendario.setAttribute("componente", "bloqueCalendario")
                        bloqueCalendario.style.top = alturaDinamica + "px"
                        const contenedoCalendarioIntermedio = document.createElement("div")
                        contenedoCalendarioIntermedio.setAttribute("class", "componentes_calendario_contenedorCalentadioIntermedio")
                        const mensajeSpinner = "Construyendo calendario..."
                        const spinner = casaVitini.ui.componentes.spinner(mensajeSpinner)
                        const contenedorCarga = document.createElement("div")
                        contenedorCarga.classList.add("componente_calendario_contenedoCarga")
                        contenedorCarga.setAttribute("contenedor", "construyendoCalendario")
                        contenedorCarga.setAttribute("elemento", "flotante")
                        contenedorCarga.appendChild(spinner)
                        contenedoCalendarioIntermedio.appendChild(calendario)
                        contenedoCalendarioIntermedio.appendChild(contenedorCarga)
                        bloqueCalendario.appendChild(contenedoCalendarioIntermedio)
                        document.querySelector("main").appendChild(bloqueCalendario)
                    } catch (errorCapturado) {
                        throw errorCapturado
                    }
                },
                configurarCalendario: async (data) => {
                    const metodoAlternativo = data.metodoAlternativo
                    const instanciaUID_contenedorFechas = data.instanciaUID_contenedorFechas
                    const contenedorOrigenIDV = data.contenedorOrigenIDV
                    const perfilMes = data.perfilMes
                    const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                    const metodoSelectorDia = data?.metodoSelectorDia || "casaVitini.ui.componentes.calendario.calendarioCompartido.seleccionarDia"
                    const areaContenedorFechas = document.querySelector(`[instanciaUID_contenedorFechas="${instanciaUID_contenedorFechas}"]`)
                    const rangoIDV = data.rangoIDV
                    const seleccionableDiaLimite = data.seleccionableDiaLimite

                    const contenedorOrigen = areaContenedorFechas.querySelector(contenedorOrigenIDV)
                    const alturaDinamicaArriba = casaVitini.utilidades.observador.medirPorJerarquiaDom.vertical.desdeAbajoDelElemento(contenedorOrigen) + 20
                    const selectorCalendario = document.querySelector("[contenedor=calendario]")

                    const bloqueCalendario = document.querySelectorAll("[componente=bloqueCalendario]")
                    bloqueCalendario.forEach((calendarioObsoelto) => {
                        calendarioObsoelto.remove()
                    })

                    const fechasSeleccionadas = () => {
                        const fechaEntradaVolatil = areaContenedorFechas.querySelector("[calendario=entrada]").
                            getAttribute("memoriaVolatil")
                        const fechaEntradaAarray = fechaEntradaVolatil?.split("-") ? fechaEntradaVolatil?.split("-") : []
                        const diaSeleccionadoEntrada = Number(fechaEntradaAarray[2])
                        const mesSeleccionadoEntrada = Number(fechaEntradaAarray[1])
                        const anoSeleccionadoEntrada = Number(fechaEntradaAarray[0])

                        const fechaSalidaVolatil = areaContenedorFechas.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")

                        const fechaSaliraArray = fechaSalidaVolatil?.split("-") ? fechaSalidaVolatil?.split("-") : []
                        const diaSeleccionadoSalida = Number(fechaSaliraArray[2])
                        const mesSeleccionadoSalida = Number(fechaSaliraArray[1])
                        const anoSeleccionadoSalida = Number(fechaSaliraArray[0])

                        const contenedorFechas = {
                            fechaEntrada: {
                                volatil: fechaEntradaVolatil,
                                dia: diaSeleccionadoEntrada,
                                mes: mesSeleccionadoEntrada,
                                ano: anoSeleccionadoEntrada
                            },
                            fechaSalida: {
                                volatil: fechaSalidaVolatil,
                                dia: diaSeleccionadoSalida,
                                mes: mesSeleccionadoSalida,
                                ano: anoSeleccionadoSalida
                            }
                        }
                        return contenedorFechas
                    }
                    const resolverCalendario = {
                        comando: "construyeObjeto"
                    }
                    const configuracionCalendario = {
                        almacenamientoCalendarioID: "almacenamientoCalendario",
                        perfilMes,
                        alturaDinamica: alturaDinamicaArriba,
                        instanciaUID,
                        instanciaUID_contenedorFechas,
                        metodoAlternativo,
                        metodoSelectorDia,
                        seleccionableDiaLimite
                    }
                    if (rangoIDV === "inicioRango") {
                        const tituloCalendario = data?.tituloCalendario || "Selecciona una fecha de entrada para buscar reservas por un rango"
                        if (selectorCalendario?.getAttribute("calendarioIO") === "entrada") {
                            return
                        }
                        if (fechasSeleccionadas().fechaEntrada?.volatil) {

                            resolverCalendario.tipo = "personalizado"
                            resolverCalendario.tipoFecha = "entrada"
                            resolverCalendario.diaSeleccionado = fechasSeleccionadas().fechaEntrada.dia
                            resolverCalendario.mes = Number(fechasSeleccionadas().fechaEntrada.mes)
                            resolverCalendario.ano = Number(fechasSeleccionadas().fechaEntrada.ano)

                            configuracionCalendario.tipoFecha = "entrada"
                            configuracionCalendario.calendarioIO = "entrada"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                            //configuracionCalendario.seleccionableDiaLimite = "si"

                        } else if (fechasSeleccionadas().fechaSalida?.volatil) {
                            resolverCalendario.tipo = "personalizado"
                            resolverCalendario.tipoFecha = "entrada"
                            resolverCalendario.diaSeleccionado = fechasSeleccionadas().fechaSalida.dia
                            resolverCalendario.mes = Number(fechasSeleccionadas().fechaSalida.mes)
                            resolverCalendario.ano = Number(fechasSeleccionadas().fechaSalida.ano)

                            configuracionCalendario.tipoFecha = "entrada"
                            configuracionCalendario.calendarioIO = "entrada"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                            // configuracionCalendario.seleccionableDiaLimite = "si"

                        } else {
                            resolverCalendario.tipo = "actual"
                            resolverCalendario.tipoFecha = "entrada"

                            configuracionCalendario.tipoFecha = "entrada"
                            configuracionCalendario.calendarioIO = "entrada"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                            //configuracionCalendario.seleccionableDiaLimite = "si"
                        }
                    } else if (rangoIDV === "finalRango") {
                        const tituloCalendario = data?.tituloCalendario || "Selecciona una fecha de salida para buscar reservas por un rango"

                        if (selectorCalendario?.getAttribute("calendarioIO") === "salida") {
                            return
                        }
                        if (fechasSeleccionadas().fechaSalida?.volatil) {
                            resolverCalendario.tipo = "personalizado"
                            resolverCalendario.tipoFecha = "salida"
                            resolverCalendario.diaSeleccionado = fechasSeleccionadas().fechaSalida.dia
                            resolverCalendario.mes = Number(fechasSeleccionadas().fechaSalida.mes)
                            resolverCalendario.ano = Number(fechasSeleccionadas().fechaSalida.ano)

                            configuracionCalendario.tipoFecha = "salida"
                            configuracionCalendario.calendarioIO = "salida"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                            //configuracionCalendario.seleccionableDiaLimite = "si"

                        } else if (fechasSeleccionadas().fechaEntrada?.volatil) {

                            resolverCalendario.tipo = "personalizado"
                            resolverCalendario.tipoFecha = "salida"
                            resolverCalendario.diaSeleccionado = fechasSeleccionadas().fechaEntrada.dia
                            resolverCalendario.mes = Number(fechasSeleccionadas().fechaEntrada.mes)
                            resolverCalendario.ano = Number(fechasSeleccionadas().fechaEntrada.ano)
                            configuracionCalendario.tipoFecha = "salida"
                            configuracionCalendario.calendarioIO = "salida"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                            //  configuracionCalendario.seleccionableDiaLimite = "si"

                        } else {
                            resolverCalendario.tipo = "actual"
                            resolverCalendario.tipoFecha = "salida"
                            configuracionCalendario.tipoFecha = "salida"
                            configuracionCalendario.calendarioIO = "salida"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                            // configuracionCalendario.seleccionableDiaLimite = "si"
                        }
                    } else if (rangoIDV === "unico") {
                        const tituloCalendario = data?.tituloCalendario || "Selecciona una fecha"
                        if (selectorCalendario?.getAttribute("calendarioIO") === "unico") {
                            return
                        }
                        const fechaUnica = areaContenedorFechas.querySelector("[calendario=unico]").getAttribute("memoriaVolatil") | []

                        const diaSeleccionado = Number(fechaUnica[2])
                        const mesSeleccionado = Number(fechaUnica[1])
                        const anoSeleccionado = Number(fechaUnica[0])

                        if (fechaUnica) {
                            resolverCalendario.tipo = "personalizado"
                            resolverCalendario.tipoFecha = "salida"
                            resolverCalendario.diaSeleccionado = diaSeleccionado
                            resolverCalendario.mes = Number(mesSeleccionado)
                            resolverCalendario.ano = Number(anoSeleccionado)
                            configuracionCalendario.tipoFecha = "unico"
                            configuracionCalendario.calendarioIO = "unico"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                        } else {
                            resolverCalendario.tipo = "actual"
                            resolverCalendario.tipoFecha = "unico"
                            configuracionCalendario.tipoFecha = "unico"
                            configuracionCalendario.calendarioIO = "unico"
                            configuracionCalendario.mensajeInfo = tituloCalendario
                            //configuracionCalendario.seleccionableDiaLimite = "si"
                        }

                    } else {
                        const m = "configurarCalendario no reconoce el rango, puede ser inicioRango, finalRango o unico"
                        return casaVitini.ui.componentes.advertenciaInmersiva(m)
                    }
                    casaVitini.ui.componentes.calendario.constructorCalendarioNuevo(configuracionCalendario)
                    document.addEventListener("click", casaVitini.shell.controladoresUI.ocultarElementos)

                    const calendarioResuelvo = await casaVitini.ui.componentes.calendario.resolverCalendarioNuevo(resolverCalendario)

                    calendarioResuelvo.instanciaUID = instanciaUID
                    calendarioResuelvo.instanciaUID_contenedorFechas = instanciaUID_contenedorFechas
                    await casaVitini.ui.componentes.calendario.constructorMesNuevo(calendarioResuelvo)
                },
                constructorCalendarioIncrustado: (metadatos) => {
                    try {
                        const almacenamientoVolatilUID = metadatos.almacenamientoCalendarioID
                        if (!almacenamientoVolatilUID) {
                            const error = "El constructor del calendario, necesita un nombre para el almacenamiento volatil"
                            throw new Error(error)
                        }
                        const tipoFecha = metadatos.tipoFecha
                        if (!tipoFecha) {
                            const error = "El constructor del calendario, necesita un tipoFecha, ya sea entrada o salida"
                            throw new Error(error)
                        }
                        const calendarioIO = metadatos.calendarioIO
                        if (!calendarioIO) {
                            const error = "El constructor del calendario, necesita un calendarioIO, ya sea entrada o salida"
                            throw new Error(error)
                        }
                        const perfilMes = metadatos.perfilMes
                        if (!perfilMes) {
                            const error = "El constructor del calendario, necesita un perfilMes, consulte los perfiles en constructorMes"
                            throw new Error(error)
                        }
                        const mensajeInfo = metadatos.mensajeInfo
                        if (!mensajeInfo) {
                            const error = "El constructor del calendario, necesita un mensajeInfo, para informar de para que es este calendario"
                            throw new Error(error)
                        }
                        const alturaDinamica = metadatos.alturaDinamica
                        if (!alturaDinamica) {
                            const error = "EEl constructor del calendario necesita una altura dinamica para colora el contenedor del calendario"
                            throw new Error(error)
                        }
                        const instanciaUID = metadatos.instanciaUID
                        if (!instanciaUID) {
                            const error = "El constructor del calendario necesita una instanciaUID para el contenedor del calendario"
                            throw new Error(error)
                        }
                        const metodoSelectorDia = metadatos.metodoSelectorDia
                        if (!metodoSelectorDia) {
                            const error = "El constructor del calendario necesita un metodoSelectorDia para el contenedor del calendario"
                            throw new Error(error)
                        } else {
                            try {
                                eval(metodoSelectorDia)
                            } catch (errorCapturado) {
                                const error = "El metodoSelectorDia hace refencia a nada, revisa la direcion del arbol del objeto: " + errorCapturado.message
                                throw new Error(error)
                            }
                        }
                        const calendario = document.createElement("div")
                        calendario.setAttribute("class", "calendarioIncrustado")
                        calendario.setAttribute("campo", "calendario")
                        calendario.setAttribute("contenedor", "calendario")
                        calendario.setAttribute("componente", "marcoCalendario")
                        calendario.setAttribute("almacenamientoCalendarioID", almacenamientoVolatilUID)
                        calendario.setAttribute("tipoCalendario", tipoFecha)
                        calendario.setAttribute("calendarioIO", calendarioIO)
                        calendario.setAttribute("metodoSelectorDia", metodoSelectorDia)
                        calendario.setAttribute("elemento", "flotante")
                        calendario.setAttribute("perfilMes", perfilMes)
                        calendario.setAttribute("IO", calendarioIO)
                        calendario.style.display = "none"
                        const cartelInfoCalendarioEstado = document.createElement("div")
                        cartelInfoCalendarioEstado.setAttribute("class", "cartelInfoCalendarioEstado")
                        cartelInfoCalendarioEstado.setAttribute("componente", "infoCalendario")
                        cartelInfoCalendarioEstado.setAttribute("campo", "calendario")
                        cartelInfoCalendarioEstado.innerText = mensajeInfo
                        const navegacionMes = document.createElement("nav")
                        navegacionMes.setAttribute("class", "navegacionMes")
                        calendario.appendChild(navegacionMes)
                        calendario.appendChild(cartelInfoCalendarioEstado)
                        const botonNavegacionMesAtras = document.createElement("div")
                        botonNavegacionMesAtras.setAttribute("class", "botonNavegacionMes")
                        botonNavegacionMesAtras.setAttribute("id", "botonAtras")
                        botonNavegacionMesAtras.setAttribute("sentido", "atras")
                        botonNavegacionMesAtras.innerText = "Atras"
                        botonNavegacionMesAtras.addEventListener("click", casaVitini.componentes.navegacionCalendarioNuevo)
                        navegacionMes.appendChild(botonNavegacionMesAtras)
                        const navegacionMesReferencia = document.createElement("div")
                        navegacionMesReferencia.setAttribute("id", "navegacionMesReferencia")
                        navegacionMesReferencia.setAttribute("class", "navegacionMesReferencia")
                        navegacionMesReferencia.setAttribute("componente", "mesReferencia")
                        navegacionMes.appendChild(navegacionMesReferencia)
                        const botonNavegacionMesAdelante = document.createElement("div")
                        botonNavegacionMesAdelante.setAttribute("class", "botonNavegacionMes")
                        botonNavegacionMesAdelante.setAttribute("id", "botonAdelante")
                        botonNavegacionMesAdelante.innerText = "Adelante"
                        botonNavegacionMesAdelante.setAttribute("sentido", "adelante")
                        botonNavegacionMesAdelante.addEventListener("click", casaVitini.componentes.navegacionCalendarioNuevo)
                        navegacionMes.appendChild(botonNavegacionMesAdelante)
                        const marcoMes = document.createElement("ol")
                        marcoMes.setAttribute("id", "marcoMes")
                        marcoMes.setAttribute("class", "marcoMes")
                        marcoMes.setAttribute("componente", "marcoMes")
                        calendario.appendChild(marcoMes)
                        const pilaDias = ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"]
                        for (const nombreDia of pilaDias) {
                            let diaSemana = document.createElement("li")
                            diaSemana.setAttribute("class", "nombreDia")
                            diaSemana.setAttribute("tipoNombreDia", "extendido")
                            diaSemana.innerText = nombreDia
                            marcoMes.appendChild(diaSemana)
                        }
                        const pilaDiasAbreviados = ["L", "M", "X", "J", "V", "S", "D"]
                        for (const nombreDia of pilaDiasAbreviados) {
                            let diaSemana = document.createElement("li")
                            diaSemana.setAttribute("class", "nombreDia")
                            diaSemana.setAttribute("tipoNombreDia", "abreviado")
                            diaSemana.innerText = nombreDia
                            marcoMes.appendChild(diaSemana)
                        }
                        const seccion = document.querySelector("section:not([estado=obsoleto])")
                        const bloqueCalendario = document.createElement("div")
                        bloqueCalendario.setAttribute("class", "bloqueCalendarioNuevo")
                        //bloqueCalendario.setAttribute("instanciaUID", instanciaUID)
                        bloqueCalendario.setAttribute("componente", "bloqueCalendario")
                        bloqueCalendario.style.top = alturaDinamica + "px"
                        const contenedoCalendarioIntermedio = document.createElement("div")
                        contenedoCalendarioIntermedio.setAttribute("class", "administracion_calendario_contenedorCalentadioIntermedio")
                        contenedoCalendarioIntermedio.setAttribute("instanciaUID", instanciaUID)
                        //bloqueCalendario.appendChild(cartelInfoCalendarioEstado)
                        //bloqueCalendario.style.visibility = "hidden"
                        const spinner = casaVitini.ui.componentes.spinnerSimple()
                        const contenedorCarga = document.createElement("div")
                        contenedorCarga.classList.add("componente_calendario_contenedoCarga_calendarioIncrustado")
                        contenedorCarga.setAttribute("contenedor", "construyendoCalendario")
                        contenedorCarga.setAttribute("elemento", "flotante")
                        contenedorCarga.appendChild(spinner)
                        contenedoCalendarioIntermedio.appendChild(calendario)
                        contenedoCalendarioIntermedio.appendChild(contenedorCarga)
                        return contenedoCalendarioIntermedio
                        //document.body.appendChild(bloqueCalendario)
                    } catch (errorCapturado) {
                        throw errorCapturado
                    }
                },
                constructorMesNuevo: async (calendario) => {
                    try {
                        const instanciaUID = calendario.instanciaUID
                        const instanciaUID_contenedorFechas = calendario.instanciaUID_contenedorFechas

                        const selectorCalendarioRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                        const instanciaUID_procesoCambioMes = calendario.instanciaUID_procesoCambioMes

                        if (!selectorCalendarioRenderizado) {
                            return
                        }
                        const metodoSelectorDia = selectorCalendarioRenderizado.querySelector("[metodoSelectorDia]").getAttribute("metodoSelectorDia")
                        if (instanciaUID_procesoCambioMes) {
                            const selectorMarcoMesRenderizadoEnEspera = selectorCalendarioRenderizado
                                .querySelector(`[inctanciaUID_procesoCambioMes="${instanciaUID_procesoCambioMes}"]`)
                            if (!selectorMarcoMesRenderizadoEnEspera) {
                                return
                            }
                        }
                        const nombreMes = [
                            "Enero",
                            "Febrero",
                            "Marzo",
                            "Abrir",
                            "Mayo",
                            "Junio",
                            "Julio",
                            "Agost",
                            "Septiembre",
                            "Octubre",
                            "Noviembre",
                            "Diciembre"
                        ]
                        const nombreMesFinal = nombreMes[calendario.mes - 1]
                        const indicadorMesAno = nombreMesFinal + " " + calendario.ano
                        const navegacionMesReferencia = selectorCalendarioRenderizado.querySelector("[componente=mesReferencia]")
                        navegacionMesReferencia.innerText = indicadorMesAno
                        navegacionMesReferencia.setAttribute("ano", calendario.ano)
                        navegacionMesReferencia.setAttribute("mes", calendario.mes)
                        const infoCalendario = selectorCalendarioRenderizado.querySelector("[componente=infoCalendario]")
                        const posicionDia1 = calendario.posicionDia1
                        const numeroDiasPorMes = calendario.numeroDiasPorMes;
                        const diaActual_decimal = parseInt(calendario.dia, 10)
                        const marcoCalendario = selectorCalendarioRenderizado.querySelector("[componente=marcoCalendario]")
                        const tipoCalendario = marcoCalendario?.getAttribute("IO")
                        selectorCalendarioRenderizado.querySelectorAll("[dia]").forEach(diaObsoleto => {
                            diaObsoleto.remove()
                        });
                        const perfilMes = marcoCalendario?.getAttribute("perfilMes")
                        const controlDiasCompletos = {
                            zona: "componentes/diasOcupadosTotalmentePorMes",
                            mes: Number(calendario.mes),
                            ano: Number(calendario.ano)
                        }
                        // const diasOcupadosResuelto = await casaVitini.shell.servidor(controlDiasCompletos)
                        // const detallesDiasOcupacion = diasOcupadosResuelto.ok.dias || {} 
                        const detallesDiasOcupacion = {}
                        let marcoMes
                        if (instanciaUID_procesoCambioMes) {
                            marcoMes = selectorCalendarioRenderizado.querySelector(`[componente=marcoCalendario] [componente=marcoMes][inctanciaUID_procesoCambioMes="${instanciaUID_procesoCambioMes}"]`)
                            if (!marcoMes) {
                                return
                            }
                        } else {
                            marcoMes = selectorCalendarioRenderizado.querySelector(`[componente=marcoCalendario] [componente=marcoMes]`)
                        }
                        if (perfilMes === "calendario_entrada_publico_sinPasado") {
                            const mesActual_string = String(calendario.mes).padStart(2, '0')
                            const anoActual_string = String(calendario.ano).padStart(4, '0')
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const fechaEntradaVolatil_Humana = document.querySelector("[calendario=entrada]").getAttribute("memoriaVolatil")
                            const fechaEntradaSeleccionada = {}
                            if (fechaEntradaVolatil_Humana) {
                                const fechaEntradaAarray = fechaEntradaVolatil_Humana.split("-")
                                fechaEntradaSeleccionada.dia = parseInt(fechaEntradaAarray[2], 10)
                                fechaEntradaSeleccionada.mes = parseInt(fechaEntradaAarray[1], 10)
                                fechaEntradaSeleccionada.ano = parseInt(fechaEntradaAarray[0], 10)
                            }
                            const fechaSalidaVolatil_Humana = document.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")
                            const fechaSalidaSeleccionada = {}
                            if (fechaSalidaVolatil_Humana) {
                                const fechaSaliraArray = fechaSalidaVolatil_Humana.split("-")
                                fechaSalidaSeleccionada.dia = parseInt(fechaSaliraArray[2], 10)
                                fechaSalidaSeleccionada.mes = parseInt(fechaSaliraArray[1], 10)
                                fechaSalidaSeleccionada.ano = parseInt(fechaSaliraArray[0], 10)
                            }
                            const limitesPublicos = calendario.limites
                            const diasAntelacion = limitesPublicos.diasAntelacion
                            const limiteFuturo = limitesPublicos.limiteFuturo
                            const diasMaximoReserva = limitesPublicos.diasMaximoReserva
                            marcoCalendario?.setAttribute("perfilMes", perfilMes)
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            const fechaEntrada = `${fechaEntradaSeleccionada.ano}-${String(fechaEntradaSeleccionada.mes).padStart(2, "0")}-${String(fechaEntradaSeleccionada.dia).padStart(2, "0")}`
                            const fechaSalida = `${fechaSalidaSeleccionada.ano}-${String(fechaSalidaSeleccionada.mes).padStart(2, "0")}-${String(fechaSalidaSeleccionada.dia).padStart(2, "0")}`
                            const fechaLimitePorDiasDeDuracion = (fechaSeleccionada_ISO, diasMaximos) => {
                                const ok = {
                                    arbol: {},
                                    fecha: {}
                                }
                                if (fechaSeleccionada_ISO) {
                                    const fechaLimitePorSeleccion = new Date(fechaSeleccionada_ISO); // Asegúrate de que el formato de la fecha sea 'YYYY-MM-DD'
                                    // Definir el número de días que deseas sumar
                                    const numeroDeDiasASumar = Number(diasMaximos);
                                    // Sumar los días a la fecha inicial
                                    fechaLimitePorSeleccion.setDate(fechaLimitePorSeleccion.getDate() - numeroDeDiasASumar);
                                    const fechaAdelantada = fechaLimitePorSeleccion
                                    const dia = fechaLimitePorSeleccion.getDate();
                                    const mes = fechaLimitePorSeleccion.getMonth() + 1; // Los meses se indexan desde 0 (enero) a 11 (diciembre)
                                    const ano = fechaLimitePorSeleccion.getFullYear();
                                    // Imprimir la nueva fecha
                                    ok.fecha.ano = ano
                                    ok.fecha.mes = mes
                                    ok.fecha.dia = dia
                                    ok.arbol[ano] = {
                                        [mes]: {
                                            [dia]: true
                                        }
                                    }
                                }
                                return ok
                            }


                            const objetoFechaLimitePorDias = fechaLimitePorDiasDeDuracion(fechaSalida, diasMaximoReserva)

                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = parseInt(numeroDia + 1, 10);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal < diaActual_decimal) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        bloqueDia.setAttribute("estadoDia", "noDisponible")
                                    }
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaParcial") {
                                    bloqueDia.classList.add("calendarioDiaParcial")
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaCompleto") {
                                    bloqueDia.classList.add("calendarioDiaCompleto")
                                }
                                if (diasAntelacion[anoActual_decimal] &&
                                    diasAntelacion[anoActual_decimal][mesActual_decimal] &&
                                    diasAntelacion[anoActual_decimal][mesActual_decimal][diaFinal_decimal]) {
                                    bloqueDia.classList.add("calendarioDiaNoDisponiblePorAntelacion")
                                    bloqueDia.setAttribute("estadoDia", "noDisponible")
                                }
                                if (anoActual_decimal === limiteFuturo.ano && mesActual_decimal === limiteFuturo.mes) {
                                    if (diaFinal_decimal > limiteFuturo.dia) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        bloqueDia.setAttribute("estadoDia", "noDisponible")
                                    }
                                }
                                if (!Object.keys(fechaEntradaSeleccionada).length && !Object.keys(fechaSalidaSeleccionada).length) {
                                    if (calendario.tiempo === "presente") {
                                        if (diaActual_decimal <= diaFinal_decimal) {
                                            if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                            }
                                        }
                                    }
                                    if (calendario.tiempo === "futuro") {
                                        if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                        }
                                    }
                                }
                                else if (Object.keys(fechaEntradaSeleccionada).length && Object.keys(fechaSalidaSeleccionada).length) {
                                    if (
                                        (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)
                                        &&
                                        (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano)
                                    ) {
                                        // si es mes de entrada y salida
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")

                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia && diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")
                                        }
                                    } else if ((mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)) {
                                        // Si es mes de entrada
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (calendario.tiempo === "futuro") {
                                            if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                                bloqueDia.setAttribute("estadoDia", "disponible")

                                            }
                                        }
                                    } else if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        // si es mes de salida pero no de entrada
                                        if (diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")

                                        }
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")
                                        }
                                    } else {
                                        // Entonces ver si es mes intermedio
                                        if (verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        } else {
                                            if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                            }
                                        }
                                    }
                                }
                                else if (Object.keys(fechaEntradaSeleccionada).length && !Object.keys(fechaSalidaSeleccionada).length) {
                                    if (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano) {
                                        if (
                                            (
                                                diaFinal_decimal < fechaEntradaSeleccionada.dia
                                                ||
                                                diaFinal_decimal > fechaEntradaSeleccionada.dia
                                            ) &&
                                            bloqueDia.getAttribute("estadoDia") !== "noDisponible"
                                        ) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.removeAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                    } else {
                                        if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.removeAttribute("estadoDia", "disponible")
                                        }
                                    }
                                }
                                else if (Object.keys(fechaSalidaSeleccionada).length && !Object.keys(fechaEntradaSeleccionada).length) {
                                    if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        }
                                        if (
                                            diaFinal_decimal < fechaSalidaSeleccionada.dia
                                            &&
                                            bloqueDia.getAttribute("estadoDia") !== "noDisponible"
                                        ) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.removeAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")
                                        }
                                    } else {
                                        if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.removeAttribute("estadoDia", "disponible")
                                        }
                                    }
                                }
                                if (Object.keys(fechaSalidaSeleccionada).length) {
                                    if (objetoFechaLimitePorDias.arbol[anoActual_decimal] &&
                                        objetoFechaLimitePorDias.arbol[anoActual_decimal][mesActual_decimal]) {
                                        const diaEntradaLimiteReserva = objetoFechaLimitePorDias.fecha.dia
                                        if (diaFinal_decimal < diaEntradaLimiteReserva) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")

                                        }
                                    }
                                }
                                if (calendario.tiempo === "presente" && diaActual_decimal === diaFinal_decimal) {
                                    bloqueDia.style.border = "3px solid white";
                                    bloqueDia.setAttribute("tipoDia", "hoy")
                                }
                                bloqueDia.innerText = diaFinal_decimal
                                marcoMes.appendChild(bloqueDia)
                            }
                            if (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano) {
                                let patronConsulta = `[dia='${fechaEntradaSeleccionada.dia}']`
                            }
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"

                            if (calendario.tiempo === "presente") {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"

                                if ((mesActual_decimal >= limiteFuturo.mes) && (anoActual_decimal >= limiteFuturo.ano)) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                                } else if (anoActual_decimal >= fechaSalidaSeleccionada.ano && mesActual_decimal >= fechaSalidaSeleccionada.mes) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                                } else {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                                }
                            } else if (calendario.tiempo === "futuro") {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                                if ((mesActual_decimal >= limiteFuturo.mes) && (anoActual_decimal >= limiteFuturo.ano)) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"

                                } else if (anoActual_decimal >= fechaSalidaSeleccionada.ano && mesActual_decimal >= fechaSalidaSeleccionada.mes) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                                } else if (Object.keys(fechaSalidaSeleccionada).length) {
                                    if (objetoFechaLimitePorDias.arbol[anoActual_decimal] &&
                                        objetoFechaLimitePorDias.arbol[anoActual_decimal][mesActual_decimal]) {
                                        selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                        selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                                        selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                        selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                                    }
                                } else {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                                }
                            }
                        }
                        if (perfilMes === "calendario_salida_publico_sinPasado") {
                            const mesActual_string = String(calendario.mes).padStart(2, '0')
                            const anoActual_string = String(calendario.ano).padStart(4, '0')
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            marcoCalendario.setAttribute("perfilMes", perfilMes)
                            const fechaEntradaVolatil_Humana = document.querySelector("[calendario=entrada]").getAttribute("memoriaVolatil")
                            const fechaEntradaSeleccionada = {}
                            if (fechaEntradaVolatil_Humana) {
                                const fechaEntradaAarray = fechaEntradaVolatil_Humana.split("-")
                                fechaEntradaSeleccionada.dia = parseInt(fechaEntradaAarray[2], 10)
                                fechaEntradaSeleccionada.mes = parseInt(fechaEntradaAarray[1], 10)
                                fechaEntradaSeleccionada.ano = parseInt(fechaEntradaAarray[0], 10)
                            }
                            const fechaSalidaVolatil_Humana = document.querySelector("[calendario=salida]").getAttribute("memoriaVolatil")
                            const fechaSalidaSeleccionada = {}
                            if (fechaSalidaVolatil_Humana) {
                                const fechaSaliraArray = fechaSalidaVolatil_Humana.split("-")
                                fechaSalidaSeleccionada.dia = parseInt(fechaSaliraArray[2], 10)
                                fechaSalidaSeleccionada.mes = parseInt(fechaSaliraArray[1], 10)
                                fechaSalidaSeleccionada.ano = parseInt(fechaSaliraArray[0], 10)
                            }
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            const fechaEntrada = `${fechaEntradaSeleccionada.ano}-${String(fechaEntradaSeleccionada.mes).padStart(2, "0")}-${String(fechaEntradaSeleccionada.dia).padStart(2, "0")}`
                            const fechaSalida = `${fechaSalidaSeleccionada.ano}-${String(fechaSalidaSeleccionada.mes).padStart(2, "0")}-${String(fechaSalidaSeleccionada.dia).padStart(2, "0")}`
                            const limitesPublicos = calendario.limites
                            const diasAntelacion = limitesPublicos.diasAntelacion
                            const limiteFuturo = limitesPublicos.limiteFuturo
                            const diasMaximoReserva = limitesPublicos.diasMaximoReserva
                            const fechaActualPublica = calendario.fechaActualPublica
                            const fechaLimitePorDiasDeDuracion = (fechaSeleccionada_ISO, diasMaximos) => {
                                // Definir la fecha inicial
                                const ok = {
                                    arbol: {},
                                    fecha: {}
                                }

                                if (fechaSeleccionada_ISO) {
                                    const fechaLimitePorSeleccion = new Date(fechaSeleccionada_ISO); // Asegúrate de que el formato de la fecha sea 'YYYY-MM-DD'
                                    // Definir el número de días que deseas sumar
                                    const numeroDeDiasASumar = Number(diasMaximos);
                                    // Sumar los días a la fecha inicial
                                    fechaLimitePorSeleccion.setDate(fechaLimitePorSeleccion.getDate() + numeroDeDiasASumar);
                                    const fechaAdelantada = fechaLimitePorSeleccion
                                    const dia = fechaLimitePorSeleccion.getDate();
                                    const mes = fechaLimitePorSeleccion.getMonth() + 1; // Los meses se indexan desde 0 (enero) a 11 (diciembre)
                                    const ano = fechaLimitePorSeleccion.getFullYear();
                                    // Imprimir la nueva fecha
                                    ok.fecha.ano = ano
                                    ok.fecha.mes = mes
                                    ok.fecha.dia = dia
                                    ok.arbol[ano] = {
                                        [mes]: {
                                            [dia]: true
                                        }
                                    }
                                }

                                return ok
                            }


                            const objetoFechaLimitePorDias = fechaLimitePorDiasDeDuracion(fechaEntrada, diasMaximoReserva)
                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = parseInt(numeroDia + 1, 10);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.classList.add("dia")
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal < diaActual_decimal) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        bloqueDia.setAttribute("estadoDia", "noDisponible")
                                    }
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaParcial") {
                                    bloqueDia.classList.add("calendarioDiaParcial")
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaCompleto") {
                                    bloqueDia.classList.add("calendarioDiaCompleto")
                                }
                                if (diasAntelacion[anoActual_decimal] &&
                                    diasAntelacion[anoActual_decimal][mesActual_decimal] &&
                                    diasAntelacion[anoActual_decimal][mesActual_decimal][diaFinal_decimal]) {
                                    bloqueDia.classList.add("calendarioDiaNoDisponiblePorAntelacion")
                                    bloqueDia.setAttribute("estadoDia", "noDisponible")
                                }
                                if (objetoFechaLimitePorDias.arbol[anoActual_decimal] &&
                                    objetoFechaLimitePorDias.arbol[anoActual_decimal][mesActual_decimal]) {
                                    const diaSalidaLimiteReserva = objetoFechaLimitePorDias.fecha.dia
                                    if (diaFinal_decimal > diaSalidaLimiteReserva) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        bloqueDia.setAttribute("estadoDia", "noDisponible")
                                    }
                                }
                                if (anoActual_decimal === limiteFuturo.ano && mesActual_decimal === limiteFuturo.mes) {
                                    if (diaFinal_decimal > limiteFuturo.dia) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        bloqueDia.setAttribute("estadoDia", "noDisponible")
                                    }
                                }
                                if (!Object.keys(fechaEntradaSeleccionada).length && !Object.keys(fechaSalidaSeleccionada).length) {
                                    if (calendario.tiempo === "presente") {
                                        if (diaActual_decimal <= diaFinal_decimal) {
                                            if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                            }
                                        }
                                    }
                                    if (calendario.tiempo === "futuro") {
                                        if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                        }
                                    }
                                } else if (Object.keys(fechaEntradaSeleccionada).length && Object.keys(fechaSalidaSeleccionada).length) {
                                    if (
                                        (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)
                                        &&
                                        (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano)
                                    ) {
                                        // si es mes de entrada y salida
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")

                                        }
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")

                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia && diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("destino", "1")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                    } else if ((mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)) {
                                        // Si es mes de entrada
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")

                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            // replicar esto
                                            if (bloqueDia.getAttribute("estadoDia") === "noDisponible") {
                                            }
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")

                                        }
                                        if (calendario.tiempo === "futuro") {
                                            if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                                // bloqueDia.classList.add("calendarioDiaDisponible")
                                            }
                                        }
                                    } else if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        // si es mes de salida pero no de entrada
                                        if (diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("estadoDia", "disponible")


                                        }
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                    } else {
                                        // Entonces ver si es mes intermedio
                                        if (verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                        } else {
                                            if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                                bloqueDia.setAttribute("estadoDia", "noDisponible")

                                            }
                                        }
                                    }
                                }
                                else if (Object.keys(fechaEntradaSeleccionada).length && !Object.keys(fechaSalidaSeleccionada).length) {
                                    if (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia &&
                                            bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.setAttribute("estadoDia", "noDisponible")
                                        }
                                    } else {
                                        if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                    }
                                }
                                else if (Object.keys(fechaSalidaSeleccionada).length && !Object.keys(fechaEntradaSeleccionada).length) {
                                    if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                        if (diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                    } else {
                                        if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.setAttribute("estadoDia", "disponible")

                                        }
                                    }
                                }
                                if (calendario.tiempo === "presente" && diaActual_decimal === diaFinal_decimal) {
                                    bloqueDia.style.border = "3px solid white";
                                    bloqueDia.setAttribute("tipoDia", "hoy")
                                }
                                bloqueDia.innerText = diaFinal_decimal
                                marcoMes.appendChild(bloqueDia)
                            }
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                            if (Object.keys(fechaEntradaSeleccionada).length) {
                                if (anoActual_decimal > fechaEntradaSeleccionada.ano) {
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                                } else if (anoActual_decimal === fechaEntradaSeleccionada.ano && mesActual_decimal > fechaEntradaSeleccionada.mes) {
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                                } else {
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                                }
                            } else if (calendario.tiempo === "futuro") {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            } else if (calendario.tiempo === "presente") {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                            }



                            if (objetoFechaLimitePorDias.arbol[anoActual_decimal]
                                &&
                                (Object.keys(fechaEntradaSeleccionada).length)
                                &&
                                (objetoFechaLimitePorDias.arbol[anoActual_decimal][mesActual_decimal])
                            ) {
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                            } else if (calendario.tiempo === "presente" || calendario.tiempo === "futuro") {
                                if (anoActual_decimal < limiteFuturo.ano) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                                } else if (anoActual_decimal === limiteFuturo.ano && mesActual_decimal < limiteFuturo.mes) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                                } else {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                                }
                            }
                        }
                        if (perfilMes === "calendario_entrada_asistido_detallesReserva_conPasado") {
                            const mesActual_string = String(calendario.mes).padStart(2, '0');
                            const anoActual_string = String(calendario.ano).padStart(4, '0');
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const reservaUID = document.querySelector("[reservaUID]")?.getAttribute("reservaUID")
                            const fechaSalidaReservaArray = document.querySelector("[calendario=salida]")?.getAttribute("memoriaVolatil").split("-")
                            const diaSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[2], 10)
                            const mesSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[1], 10)
                            const anoSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[0], 10)

                            const fechaEntradaReserva = document.querySelector("[calendario=entrada]")?.getAttribute("memoriaVolatil").split("-")
                            const diaEntradaReserva_decimal = parseInt(fechaEntradaReserva[2], 10)
                            const mesEntradaReserva_decimal = parseInt(fechaEntradaReserva[1], 10)
                            const anoEntradaReserva_decimal = parseInt(fechaEntradaReserva[0], 10)
                            const fechaEntrada = `${anoEntradaReserva_decimal}-${String(mesEntradaReserva_decimal).padStart(2, "0")}-${String(diaEntradaReserva_decimal).padStart(2, "0")}`
                            const fechaSalida = `${anoSalidaReserva_decimal}-${String(mesSalidaReserva_decimal).padStart(2, "0")}-${String(diaSalidaReserva_decimal).padStart(2, "0")}`
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            const controlLimitePasado = {
                                zona: "administracion/reservas/detallesReserva/global/obtenerElasticidadDelRango",
                                reservaUID: String(reservaUID),
                                mesCalendario: mesActual_string,
                                anoCalendario: anoActual_string,
                                sentidoRango: "pasado"
                            }
                            const resolverLimitePasado = await casaVitini.shell.servidor(controlLimitePasado)
                            if (resolverLimitePasado.error) {
                                const selectorCalendarioRenderizados = document.querySelectorAll("[componente=bloqueCalendario]")
                                selectorCalendarioRenderizados.forEach((calendario) => {
                                    calendario.remove()
                                })
                                return casaVitini.ui.componentes.advertenciaInmersiva(resolverLimitePasado.error)
                            }
                            const fechaLimitePasado = {}
                            const infoCalendario = selectorCalendarioRenderizado.querySelector("[componente=infoCalendario]")

                            if (resolverLimitePasado.ok === "rangoPasadoLibre") {
                                infoCalendario.innerText = "Todo el mes disponible para seleccionar la nueva fecha de entrada de esta reserva"
                            } else if (resolverLimitePasado.limitePasado) {
                                const fechaLimitePasado_Array = resolverLimitePasado.limitePasado.split("-")
                                if (resolverLimitePasado.ok === "noHayRangoPasado") {
                                    infoCalendario.innerText = "La fecha de entrada de esta reserva no puede ser inferior a la actual porque no hay rango disponible."
                                    fechaLimitePasado.dia = parseInt(fechaLimitePasado_Array[2], 10)
                                    fechaLimitePasado.mes = parseInt(fechaLimitePasado_Array[1], 10)
                                    fechaLimitePasado.ano = parseInt(fechaLimitePasado_Array[0], 10)
                                }
                                if (resolverLimitePasado.ok === "rangoPasadoLimitado") {
                                    infoCalendario.innerText = "Una parte de este mes está disponible para seleccionar la nueva fecha de entrada para esta reserva."
                                    fechaLimitePasado.dia = parseInt(fechaLimitePasado_Array[2], 10)
                                    fechaLimitePasado.mes = parseInt(fechaLimitePasado_Array[1], 10)
                                    fechaLimitePasado.ano = parseInt(fechaLimitePasado_Array[0], 10)
                                }
                            }
                            marcoCalendario.setAttribute("perfilMes", perfilMes)
                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = parseInt(numeroDia + 1, 10);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                bloqueDia.innerText = diaFinal_decimal
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal === diaActual_decimal) {
                                        bloqueDia.style.border = "3px solid ghostwhite"
                                    }
                                }
                                if (
                                    (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal)
                                    &&
                                    (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal)
                                ) {
                                    // si es mes de entrada y salida
                                    if (diaFinal_decimal === diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                    if (diaFinal_decimal < diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal === diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaSeleccionado")
                                        bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                    if (diaFinal_decimal > diaEntradaReserva_decimal && diaFinal_decimal < diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal > diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                    }
                                } else if ((mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal)) {
                                    // Si es mes de entrada
                                    if (diaFinal_decimal === diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaSeleccionado")
                                        bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                    if (diaFinal_decimal > diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal < diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                } else if (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal) {
                                    // si es mes de salida pero no de entrada
                                    if (diaFinal_decimal < diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal > diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                    }
                                    if (diaFinal_decimal === diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                } else {
                                    // Entonces ver si es mes intermedio
                                    if (verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    } else {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                }
                                if (resolverLimitePasado.limitePasado) {
                                    if (mesActual_decimal === fechaLimitePasado.mes && anoActual_decimal === fechaLimitePasado.ano) {
                                        if (fechaLimitePasado.dia === diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                            bloqueDia.removeEventListener("click", eval(metodoSelectorDia))
                                        }
                                        if (fechaLimitePasado.dia > diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                            bloqueDia.removeEventListener("click", eval(metodoSelectorDia))
                                        }
                                    }
                                }
                                marcoMes.appendChild(bloqueDia)
                            }
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            if (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal) {
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                            }
                            if (mesActual_decimal === fechaLimitePasado.mes && anoActual_decimal === fechaLimitePasado.ano) {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                            }
                        }
                        if (perfilMes === "calendario_salida_asistido_detallesReserva_conPasado") {
                            const mesActual_string = String(calendario.mes).padStart(2, '0');
                            const anoActual_string = String(calendario.ano).padStart(4, '0');
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const reservaUID = document.querySelector("[reservaUID]")?.getAttribute("reservaUID")
                            const fechaSalidaReservaArray = document.querySelector("[calendario=salida]")?.getAttribute("memoriaVolatil").split("-")
                            const diaSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[2], 10)
                            const mesSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[1], 10)
                            const anoSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[0], 10)
                            const fechaEntradaReserva = document.querySelector("[calendario=entrada]")?.getAttribute("memoriaVolatil").split("-")
                            const diaEntradaReserva_decimal = parseInt(fechaEntradaReserva[2], 10)
                            const mesEntradaReserva_decimal = parseInt(fechaEntradaReserva[1], 10)
                            const anoEntradaReserva_decimal = parseInt(fechaEntradaReserva[0], 10)
                            const fechaEntrada = `${anoEntradaReserva_decimal}-${String(mesEntradaReserva_decimal).padStart(2, "0")}-${String(diaEntradaReserva_decimal).padStart(2, "0")}`
                            const fechaSalida = `${anoSalidaReserva_decimal}-${String(mesSalidaReserva_decimal).padStart(2, "0")}-${String(diaSalidaReserva_decimal).padStart(2, "0")}`
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            const controlLimiteFuturo = {
                                zona: "administracion/reservas/detallesReserva/global/obtenerElasticidadDelRango",
                                reservaUID: String(reservaUID),
                                mesCalendario: mesActual_string,
                                anoCalendario: anoActual_string,
                                sentidoRango: "futuro"
                            }
                            const resolverLimiteFuturo = await casaVitini.shell.servidor(controlLimiteFuturo)
                            if (resolverLimiteFuturo.error) {
                                const selectorCalendarioRenderizados = document.querySelectorAll("[componente=bloqueCalendario]")
                                selectorCalendarioRenderizados.forEach((calendario) => {
                                    calendario.remove()
                                })
                                return casaVitini.ui.componentes.advertenciaInmersiva(resolverLimiteFuturo.error)
                            }
                            const fechaLimiteFuturo = {}
                            if (resolverLimiteFuturo.ok === "rangoFuturoLibre") {
                                infoCalendario.innerText = "Todo el mes disponible para seleccionar la nueva fecha de salida de esta reserva"
                            } else if (resolverLimiteFuturo.limiteFuturo) {
                                const fechaLimiteFuturo_Array = resolverLimiteFuturo.limiteFuturo.split("-")
                                if (resolverLimiteFuturo.ok === "noHayRangoFuturo") {
                                    infoCalendario.innerText = "La fecha de salida de esta reserva no puede ser superior a la actual por que no hay rango disponible"
                                    fechaLimiteFuturo.dia = parseInt(fechaLimiteFuturo_Array[2], 10)
                                    fechaLimiteFuturo.mes = parseInt(fechaLimiteFuturo_Array[1], 10)
                                    fechaLimiteFuturo.ano = parseInt(fechaLimiteFuturo_Array[0], 10)
                                }
                                if (resolverLimiteFuturo.ok === "rangoFuturoLimitado") {
                                    infoCalendario.innerText = "Una parte de este mes está disponible para seleccionar la nueva fecha de salida para esta reserva"
                                    fechaLimiteFuturo.dia = parseInt(fechaLimiteFuturo_Array[2], 10)
                                    fechaLimiteFuturo.mes = parseInt(fechaLimiteFuturo_Array[1], 10)
                                    fechaLimiteFuturo.ano = parseInt(fechaLimiteFuturo_Array[0], 10)
                                }
                            }
                            marcoCalendario?.setAttribute("perfilMes", perfilMes)
                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = parseInt(numeroDia + 1, 10);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                bloqueDia.innerText = diaFinal_decimal
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal === diaActual_decimal) {
                                        bloqueDia.style.border = "3px solid ghostwhite"
                                    }
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaParcial") {
                                    bloqueDia.classList.add("calendarioDiaParcial")
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaCompleto") {
                                    bloqueDia.classList.add("calendarioDiaCompleto")
                                }
                                if (
                                    (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal)
                                    &&
                                    (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal)
                                ) {
                                    // si es mes de entrada y salida
                                    if (diaFinal_decimal === diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        //bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                    if (diaFinal_decimal < diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                    if (diaFinal_decimal === diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                    if (diaFinal_decimal > diaEntradaReserva_decimal && diaFinal_decimal < diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal > diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                } else if ((mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal)) {
                                    // Si es mes de entrada
                                    if (diaFinal_decimal === diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                    if (diaFinal_decimal > diaEntradaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal < diaEntradaReserva_decimal) {
                                        // replicar esto
                                        if (bloqueDia.getAttribute("estadoDia") === "noDisponible") {
                                        }
                                        bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                    if (calendario.tiempo === "futuro") {
                                        if (diaFinal_decimal < diaEntradaReserva_decimal) {
                                            // bloqueDia.classList.add("calendarioDiaDisponible")
                                        }
                                    }
                                } else if (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal) {
                                    // si es mes de salida pero no de entrada
                                    if (diaFinal_decimal < diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal > diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaFinal_decimal === diaSalidaReserva_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "none"
                                    }
                                } else {
                                    // Entonces ver si es mes intermedio
                                    if (verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    } else {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                }
                                if (resolverLimiteFuturo.limiteFuturo) {
                                    if (mesActual_decimal === fechaLimiteFuturo.mes && anoActual_decimal === fechaLimiteFuturo.ano) {
                                        if (fechaLimiteFuturo.dia === diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                            bloqueDia.removeEventListener("click", eval(metodoSelectorDia))
                                        }
                                        if (fechaLimiteFuturo.dia <= diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                            bloqueDia.removeEventListener("click", eval(metodoSelectorDia))
                                        }
                                    }
                                }
                                marcoMes?.appendChild(bloqueDia)
                            }
                            // calendario_salida_asistido_detallesReserva_conPasado   
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            if (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal) {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                            }
                            if (mesActual_decimal === fechaLimiteFuturo.mes && anoActual_decimal === fechaLimiteFuturo.ano) {
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                            }
                        }
                        if (perfilMes === "calendario_entrada_asistido_detallesReserva_checkIn_conPasado") {
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const fechaCheckIN = document
                                .querySelector(`[instanciaUID="${instanciaUID}"]`)
                                .closest("[fechaCheckIn]")
                                ?.getAttribute("fechaCheckIn")
                            const fechaCheckOutAdelantado = document
                                .querySelector(`[instanciaUID="${instanciaUID}"]`)
                                .closest("[fechaCheckOut]")
                                ?.getAttribute("fechaCheckOut")
                            const fechaSalidaReservaArray = document.querySelector("[calendario=salida]")?.getAttribute("memoriaVolatil").split("-")
                            const diaSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[2], 10)
                            const mesSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[1], 10)
                            const anoSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[0], 10)
                            const fechaEntradaReserva = document.querySelector("[calendario=entrada]")?.getAttribute("memoriaVolatil").split("-")
                            const diaEntradaReserva_decimal = parseInt(fechaEntradaReserva[2], 10)
                            const mesEntradaReserva_decimal = parseInt(fechaEntradaReserva[1], 10)
                            const anoEntradaReserva_decimal = parseInt(fechaEntradaReserva[0], 10)
                            const fechaEntrada = `${anoEntradaReserva_decimal}-${String(mesEntradaReserva_decimal).padStart(2, "0")}-${String(diaEntradaReserva_decimal).padStart(2, "0")}`
                            const fechaSalida = `${anoSalidaReserva_decimal}-${String(mesSalidaReserva_decimal).padStart(2, "0")}-${String(diaSalidaReserva_decimal).padStart(2, "0")}`
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            marcoCalendario.setAttribute("perfilMes", perfilMes)
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            // calendario_entrada_asistido_detallesReserva_conPasado
                            if (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal) {
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                            }
                            if (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal) {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                            }
                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = Number(numeroDia + 1);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                bloqueDia.innerText = diaFinal_decimal
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                bloqueDia.style.pointerEvents = "none"
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal === diaActual_decimal) {
                                        bloqueDia.style.border = "3px solid ghostwhite"
                                    }
                                }
                                const mesEntradaRenderizado = (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal)
                                const mesSalidaRenderzado = (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal)
                                const mesInternoRango = verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)
                                const mesEntradaSalidaRenderizado = (
                                    (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal) &&
                                    (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal)
                                )
                                if (mesEntradaSalidaRenderizado) {
                                    if (diaEntradaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                    if (diaEntradaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.style.pointerEvents = "all"
                                        //bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaEntradaReserva_decimal < diaFinal_decimal && diaSalidaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.style.pointerEvents = "all"
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaSalidaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        //bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                    }
                                    if (diaSalidaReserva_decimal < diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                }
                                else if (mesEntradaRenderizado) {
                                    if (diaEntradaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                    if (diaEntradaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        //bloqueDia.style.pointerEvents = "none"
                                        //bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "all"
                                    }
                                    if (diaEntradaReserva_decimal < diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.style.pointerEvents = "all"
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                }
                                else if (mesSalidaRenderzado) {
                                    if (diaSalidaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.style.pointerEvents = "all"
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaSalidaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                    }
                                    if (diaSalidaReserva_decimal < diaFinal_decimal) {
                                        // bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        //bloqueDia.style.pointerEvents = "all"
                                        //bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                }
                                else if (mesInternoRango) {
                                    bloqueDia.classList.add("calendarioDiaReserva")
                                    bloqueDia.style.pointerEvents = "all"
                                    bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                }
                                if (fechaCheckIN) {
                                    const fechaCheckIN_array = fechaCheckIN.split("-")
                                    const diaCheckIn = Number(fechaCheckIN_array[2])
                                    const mesCheckIn = Number(fechaCheckIN_array[1])
                                    const anoCheckIn = Number(fechaCheckIN_array[0])
                                    if (mesActual_decimal === mesCheckIn && anoActual_decimal === anoCheckIn) {
                                        if (diaCheckIn === diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        }
                                    }
                                }
                                if (fechaCheckOutAdelantado) {
                                    const fechaCheckOutAdelantado_array = fechaCheckOutAdelantado.split("-")
                                    const diaCheckOut = Number(fechaCheckOutAdelantado_array[2])
                                    const mesCheckOut = Number(fechaCheckOutAdelantado_array[1])
                                    const anoCheckOut = Number(fechaCheckOutAdelantado_array[0])
                                    if (mesActual_decimal === mesCheckOut && anoActual_decimal === anoCheckOut) {
                                        if (diaCheckOut === diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            bloqueDia.innerText = "COa " + diaFinal_decimal
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        }
                                        if (diaCheckOut < diaFinal_decimal && diaSalidaReserva_decimal > diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        } else if (diaCheckOut < diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        }
                                        selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                        selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                                    }
                                }
                                marcoMes.appendChild(bloqueDia)
                            }
                        }
                        if (perfilMes === "calendario_salida_asistido_detallesReserva_checkOut_conPasado") {
                            const mesActual_string = String(calendario.mes).padStart(2, '0');
                            const anoActual_string = String(calendario.ano).padStart(4, '0');
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const fechaCheckOut = document
                                .querySelector(`[instanciaUID="${instanciaUID}"]`)
                                .closest("[fechaCheckOut]")
                                ?.getAttribute("fechaCheckOut")
                            const fechaCheckIN = document
                                .querySelector(`[instanciaUID="${instanciaUID}"]`)
                                .closest("[fechaCheckIn]")
                                ?.getAttribute("fechaCheckIn")
                            const fechaSalidaReservaArray = document.querySelector("[calendario=salida]")?.getAttribute("memoriaVolatil").split("-")
                            const diaSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[2], 10)
                            const mesSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[1], 10)
                            const anoSalidaReserva_decimal = parseInt(fechaSalidaReservaArray[0], 10)
                            const fechaEntradaReserva = document.querySelector("[calendario=entrada]")?.getAttribute("memoriaVolatil").split("-")
                            const diaEntradaReserva_decimal = parseInt(fechaEntradaReserva[2], 10)
                            const mesEntradaReserva_decimal = parseInt(fechaEntradaReserva[1], 10)
                            const anoEntradaReserva_decimal = parseInt(fechaEntradaReserva[0], 10)
                            const fechaEntrada = `${anoEntradaReserva_decimal}-${String(mesEntradaReserva_decimal).padStart(2, "0")}-${String(diaEntradaReserva_decimal).padStart(2, "0")}`
                            const fechaSalida = `${anoSalidaReserva_decimal}-${String(mesSalidaReserva_decimal).padStart(2, "0")}-${String(diaSalidaReserva_decimal).padStart(2, "0")}`
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            marcoCalendario.setAttribute("perfilMes", perfilMes)
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            // calendario_entrada_asistido_detallesReserva_conPasado
                            if (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal) {
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                            }
                            if (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal) {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                            }
                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = Number(numeroDia + 1);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                bloqueDia.innerText = diaFinal_decimal
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)

                                bloqueDia.style.pointerEvents = "none"
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal === diaActual_decimal) {
                                        bloqueDia.style.border = "3px solid ghostwhite"
                                    }
                                }
                                const mesEntradaRenderizado = (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal)
                                const mesSalidaRenderzado = (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal)
                                const mesInternoRango = verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)
                                const mesEntradaSalidaRenderizado = (
                                    (mesActual_decimal === mesEntradaReserva_decimal && anoActual_decimal === anoEntradaReserva_decimal) &&
                                    (mesActual_decimal === mesSalidaReserva_decimal && anoActual_decimal === anoSalidaReserva_decimal)
                                )
                                if (mesEntradaSalidaRenderizado) {

                                    if (diaEntradaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                    if (diaEntradaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        //bloqueDia.style.pointerEvents = "none"
                                        //bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                    }
                                    if (diaEntradaReserva_decimal < diaFinal_decimal && diaSalidaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.style.pointerEvents = "all"
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaSalidaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        //bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                    }
                                    if (diaSalidaReserva_decimal < diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                }
                                else if (mesEntradaRenderizado) {


                                    if (diaEntradaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                    }
                                    if (diaEntradaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                        //bloqueDia.style.pointerEvents = "none"
                                        //bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "E " + diaFinal_decimal
                                        bloqueDia.style.pointerEvents = "all"
                                    }
                                    if (diaEntradaReserva_decimal < diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.style.pointerEvents = "all"
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                }
                                else if (mesSalidaRenderzado) {


                                    if (diaSalidaReserva_decimal > diaFinal_decimal) {
                                        bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.style.pointerEvents = "all"
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                    if (diaSalidaReserva_decimal === diaFinal_decimal) {
                                        bloqueDia.style.pointerEvents = "none"
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        bloqueDia.innerText = "S " + diaFinal_decimal
                                        bloqueDia.classList.add("calendarioDiaReservaLimite")
                                    }
                                    if (diaSalidaReserva_decimal < diaFinal_decimal) {
                                        // bloqueDia.classList.add("calendarioDiaReserva")
                                        bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        // bloqueDia.style.pointerEvents = "all"
                                        // bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                    }
                                }
                                else if (mesInternoRango) {


                                    bloqueDia.classList.add("calendarioDiaReserva")
                                    bloqueDia.style.pointerEvents = "all"
                                    bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                }
                                if (fechaCheckIN) {
                                    const fechaCheckIN_Array = fechaCheckIN.split("-")
                                    const diaCheckIn = Number(fechaCheckIN_Array[2])
                                    const mesCheckIn = Number(fechaCheckIN_Array[1])
                                    const anoCheckIn = Number(fechaCheckIN_Array[0])
                                    if (mesActual_decimal === mesCheckIn && anoActual_decimal === anoCheckIn) {
                                        if (diaCheckIn === diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            bloqueDia.innerText = "CI " + diaFinal_decimal
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        }
                                        if (diaCheckIn > diaFinal_decimal && diaEntradaReserva_decimal < diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        } else if (diaCheckIn > diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaReserva")
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            //    bloqueDia.classList.add("calendarioDiaNoDisponible")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        }
                                        selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                        selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                                    }
                                }
                                if (fechaCheckOut) {
                                    const fechaCheckOut_array = fechaCheckOut.split("-")
                                    const diaCheckOut = Number(fechaCheckOut_array[2])
                                    const mesCheckOut = Number(fechaCheckOut_array[1])
                                    const anoCheckOut = Number(fechaCheckOut_array[0])
                                    if (mesActual_decimal === mesCheckOut && anoActual_decimal === anoCheckOut) {
                                        if (diaCheckOut === diaFinal_decimal) {
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.style.pointerEvents = "none"
                                            bloqueDia.setAttribute("estadoDia", "deshabilitado")
                                        }
                                    }
                                }

                                marcoMes.appendChild(bloqueDia)
                            }
                        }
                        if (perfilMes === "calendario_entrada_perfilSimple") {
                            const contenedorFechas = document.querySelector(`[instanciaUID_contenedorFechas="${instanciaUID_contenedorFechas}"]`)
                            if (!contenedorFechas) {
                                const error = "El perfil de calendario_entrada_perfilSimple no encuentra el contenedor de fechas de destino"
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                casaVitini.ui.componentes.advertenciaInmersiva(error)

                            }
                            const seleccionableDiaLimite = marcoCalendario?.getAttribute("seleccionableDiaLimite")
                            // Si hay fecha de entrada, posicionar el calendario en la fecha de entrada
                            // Si hay fecha de salida, limitar el calendario de entrada por la fecha de salida
                            const mesActual_string = String(calendario.mes).padStart(2, '0')
                            const anoActual_string = String(calendario.ano).padStart(4, '0')
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const fechaEntradaSelecionda = contenedorFechas.querySelector("[calendario=entrada]")?.getAttribute("memoriaVolatil")
                            const fechaEntradaSeleccionada = {}
                            if (fechaEntradaSelecionda) {
                                fechaEntradaSeleccionada.dia = parseInt(fechaEntradaSelecionda.split("-")[2], 10)
                                fechaEntradaSeleccionada.mes = parseInt(fechaEntradaSelecionda.split("-")[1], 10)
                                fechaEntradaSeleccionada.ano = parseInt(fechaEntradaSelecionda.split("-")[0], 10)
                            }
                            const fechaSalidaSelecionda = contenedorFechas.querySelector("[calendario=salida]")?.getAttribute("memoriaVolatil")
                            const fechaSalidaSeleccionada = {}
                            if (fechaSalidaSelecionda) {
                                fechaSalidaSeleccionada.dia = parseInt(fechaSalidaSelecionda.split("-")[2], 10)
                                fechaSalidaSeleccionada.mes = parseInt(fechaSalidaSelecionda.split("-")[1], 10)
                                fechaSalidaSeleccionada.ano = parseInt(fechaSalidaSelecionda.split("-")[0], 10)
                            }
                            marcoCalendario?.setAttribute("perfilMes", perfilMes)
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            const fechaEntrada = `${fechaEntradaSeleccionada.ano}-${String(fechaEntradaSeleccionada.mes).padStart(2, "0")}-${String(fechaEntradaSeleccionada.dia).padStart(2, "0")}`
                            const fechaSalida = `${fechaSalidaSeleccionada.ano}-${String(fechaSalidaSeleccionada.mes).padStart(2, "0")}-${String(fechaSalidaSeleccionada.dia).padStart(2, "0")}`
                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = parseInt(numeroDia + 1, 10);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                bloqueDia.innerText = diaFinal_decimal
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal === diaActual_decimal) {
                                        bloqueDia.style.border = "3px solid ghostwhite"
                                    }
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaParcial") {
                                    bloqueDia.classList.add("calendarioDiaParcial")
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaCompleto") {
                                    bloqueDia.classList.add("calendarioDiaCompleto")
                                }
                                if (Object.keys(fechaEntradaSeleccionada).length && Object.keys(fechaSalidaSeleccionada).length) {
                                    if (
                                        (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)
                                        &&
                                        (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano)
                                    ) {
                                        // si es mes de entrada y salida
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            if (seleccionableDiaLimite === "si") {
                                                bloqueDia.classList.add("calendarioDiaReserva")
                                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                                bloqueDia.setAttribute("estadoDia", "seleccionado")
                                            } else {
                                                bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            }
                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia && diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        }
                                    } else if ((mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)) {
                                        // Si es mes de entrada
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                    } else if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        // si es mes de salida pero no de entrada
                                        if (diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        }
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            if (seleccionableDiaLimite === "si") {
                                                bloqueDia.classList.add("calendarioDiaReserva")
                                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                            } else {
                                                bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            }
                                        }
                                    } else {
                                        // Entonces ver si es mes intermedio
                                        if (verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        } else {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                    }
                                }
                                else if (Object.keys(fechaEntradaSeleccionada).length && !Object.keys(fechaSalidaSeleccionada).length) {
                                    if (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        } else {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                    } else {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        bloqueDia.setAttribute("estadoDia", "disponible")
                                    }
                                }
                                else if (Object.keys(fechaSalidaSeleccionada).length && !Object.keys(fechaEntradaSeleccionada).length) {
                                    if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            if (seleccionableDiaLimite === "si") {
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                            } else {
                                                bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            }
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        }
                                        if (diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                    } else {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        bloqueDia.setAttribute("estadoDia", "disponible")
                                    }
                                } else if (!Object.keys(fechaSalidaSeleccionada).length && !Object.keys(fechaEntradaSeleccionada).length) {
                                    if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        bloqueDia.setAttribute("estadoDia", "disponible")
                                    }
                                }
                                marcoMes?.appendChild(bloqueDia)
                            }
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            if (Object.keys(fechaSalidaSeleccionada).length) {
                                if (anoActual_decimal < fechaSalidaSeleccionada.ano) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                                } else if (anoActual_decimal === fechaSalidaSeleccionada.ano && mesActual_decimal < fechaSalidaSeleccionada.mes) {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                                } else {
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "none"
                                }
                            } else {
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                                selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                            }
                        }
                        if (perfilMes === "calendario_salida_perfilSimple") {

                            const contenedorFechas = document.querySelector(`[instanciaUID_contenedorFechas="${instanciaUID_contenedorFechas}"]`)
                            if (!contenedorFechas) {
                                const error = "El perfil de calendario_salida_perfilSimple no encuentra el contenedor de fechas de destino"
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                casaVitini.ui.componentes.advertenciaInmersiva(error)

                            }

                            const seleccionableDiaLimite = marcoCalendario?.getAttribute("seleccionableDiaLimite")
                            // Si hay fecha de salida, limitar el calendario de entrada por la fecha de salida
                            const mesActual_string = String(calendario.mes).padStart(2, '0')
                            const anoActual_string = String(calendario.ano).padStart(4, '0')
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const fechaEntradaSelecionda = contenedorFechas.querySelector("[calendario=entrada]")?.getAttribute("memoriaVolatil")
                            const fechaEntradaSeleccionada = {}
                            if (fechaEntradaSelecionda) {
                                fechaEntradaSeleccionada.dia = parseInt(fechaEntradaSelecionda.split("-")[2], 10)
                                fechaEntradaSeleccionada.mes = parseInt(fechaEntradaSelecionda.split("-")[1], 10)
                                fechaEntradaSeleccionada.ano = parseInt(fechaEntradaSelecionda.split("-")[0], 10)
                            }
                            const fechaSalidaSelecionda = contenedorFechas.querySelector("[calendario=salida]")?.getAttribute("memoriaVolatil")
                            const fechaSalidaSeleccionada = {}
                            if (fechaSalidaSelecionda) {
                                fechaSalidaSeleccionada.dia = parseInt(fechaSalidaSelecionda.split("-")[2], 10)
                                fechaSalidaSeleccionada.mes = parseInt(fechaSalidaSelecionda.split("-")[1], 10)
                                fechaSalidaSeleccionada.ano = parseInt(fechaSalidaSelecionda.split("-")[0], 10)
                            }
                            marcoCalendario.setAttribute("perfilMes", perfilMes)
                            const verificaRangoInternamente = (
                                mesActual,
                                anoActual,
                                fechaInicio,
                                fechaSalida
                            ) => {
                                const inicio = new Date(fechaInicio);
                                const fin = new Date(fechaSalida);
                                const inicioMesAno = new Date(inicio.getFullYear(), inicio.getMonth());
                                const finMesAno = new Date(fin.getFullYear(), fin.getMonth());
                                const fechaMesAno = new Date(anoActual, mesActual - 1);
                                return fechaMesAno >= inicioMesAno && fechaMesAno <= finMesAno;
                            };
                            const fechaEntrada = `${fechaEntradaSeleccionada.ano}-${String(fechaEntradaSeleccionada.mes).padStart(2, "0")}-${String(fechaEntradaSeleccionada.dia).padStart(2, "0")}`
                            const fechaSalida = `${fechaSalidaSeleccionada.ano}-${String(fechaSalidaSeleccionada.mes).padStart(2, "0")}-${String(fechaSalidaSeleccionada.dia).padStart(2, "0")}`
                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = parseInt(numeroDia + 1, 10);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                bloqueDia.innerText = diaFinal_decimal
                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal === diaActual_decimal) {
                                        bloqueDia.style.border = "3px solid ghostwhite"
                                    }
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaParcial") {
                                    bloqueDia.classList.add("calendarioDiaParcial")
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaCompleto") {
                                    bloqueDia.classList.add("calendarioDiaCompleto")
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaCompleto") {
                                    //  bloqueDia.classList.remove("calendarioDiaDisponible")
                                    bloqueDia.classList.add("calendarioDiaCompleto")
                                }
                                if (Object.keys(fechaEntradaSeleccionada).length && Object.keys(fechaSalidaSeleccionada).length) {
                                    if (
                                        (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)
                                        &&
                                        (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano)
                                    ) {
                                        // si es mes de entrada y salida
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        }
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            if (seleccionableDiaLimite === "si") {
                                                bloqueDia.classList.add("calendarioDiaReserva")
                                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                            } else {
                                                bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            }
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia && diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                    } else if ((mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano)) {
                                        // Si es mes de entrada
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            if (seleccionableDiaLimite === "si") {
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                            } else {
                                                bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            }
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            // replicar esto
                                            if (bloqueDia.getAttribute("estadoDia") === "noDisponible") {
                                            }
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        }
                                        if (calendario.tiempo === "futuro") {
                                            if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                                // bloqueDia.classList.add("calendarioDiaDisponible")
                                            }
                                        }
                                    } else if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        // si es mes de salida pero no de entrada
                                        if (diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                    } else {
                                        // Entonces ver si es mes intermedio
                                        if (verificaRangoInternamente(mesActual_decimal, anoActual_decimal, fechaEntrada, fechaSalida)) {
                                            bloqueDia.classList.add("calendarioDiaReserva")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        } else {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                    }
                                }
                                else if (Object.keys(fechaEntradaSeleccionada).length && !Object.keys(fechaSalidaSeleccionada).length) {
                                    if (mesActual_decimal === fechaEntradaSeleccionada.mes && anoActual_decimal === fechaEntradaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaEntradaSeleccionada.dia) {
                                            if (seleccionableDiaLimite === "si") {
                                                bloqueDia.classList.add("calendarioDiaDisponible")
                                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                                bloqueDia.setAttribute("estadoDia", "disponible")
                                            } else {
                                                bloqueDia.classList.add("calendarioDiaReservaLimite")
                                            }
                                        }
                                        if (diaFinal_decimal > fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal < fechaEntradaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaNoDisponible")
                                        }
                                    } else {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        bloqueDia.setAttribute("estadoDia", "disponible")
                                    }
                                }
                                else if (Object.keys(fechaSalidaSeleccionada).length && !Object.keys(fechaEntradaSeleccionada).length) {
                                    if (mesActual_decimal === fechaSalidaSeleccionada.mes && anoActual_decimal === fechaSalidaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                        if (diaFinal_decimal > fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                        if (diaFinal_decimal < fechaSalidaSeleccionada.dia) {
                                            bloqueDia.classList.add("calendarioDiaDisponible")
                                            bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                            bloqueDia.setAttribute("estadoDia", "disponible")
                                        }
                                    } else {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        bloqueDia.setAttribute("estadoDia", "disponible")
                                    }
                                } else if (!Object.keys(fechaSalidaSeleccionada).length && !Object.keys(fechaEntradaSeleccionada).length) {
                                    if (bloqueDia.getAttribute("estadoDia") !== "noDisponible") {
                                        bloqueDia.classList.add("calendarioDiaDisponible")
                                        bloqueDia.addEventListener("click", eval(metodoSelectorDia))
                                        bloqueDia.setAttribute("estadoDia", "disponible")
                                    }
                                }
                                marcoMes.appendChild(bloqueDia)
                            }
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"
                            if (Object.keys(fechaEntradaSeleccionada).length) {
                                if (anoActual_decimal > fechaEntradaSeleccionada.ano) {
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                                } else if (anoActual_decimal === fechaEntradaSeleccionada.ano && mesActual_decimal > fechaEntradaSeleccionada.mes) {
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                                } else {
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 0
                                    selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "none"
                                }
                            } else {
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                                selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            }
                        }
                        if (perfilMes === "calendario_unico_perfilSimple") {
                            const contenedorFechas = document.querySelector(`[instanciaUID_contenedorFechas="${instanciaUID_contenedorFechas}"]`)
                            if (!contenedorFechas) {
                                const error = "El perfil de calendario_unico_perfilSimple no encuentra el contenedor de fechas de destino"
                                casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                casaVitini.ui.componentes.advertenciaInmersiva(error)
                            }
                            const mesActual_decimal = parseInt(calendario.mes, 10)
                            const anoActual_decimal = parseInt(calendario.ano, 10)
                            const selectorFechaUnica = contenedorFechas.querySelector("[calendario=unico]")?.getAttribute("memoriaVolatil")
                            const fechaUnicaSeleccionada = {}
                            if (selectorFechaUnica) {
                                fechaUnicaSeleccionada.dia = parseInt(selectorFechaUnica.split("-")[2], 10)
                                fechaUnicaSeleccionada.mes = parseInt(selectorFechaUnica.split("-")[1], 10)
                                fechaUnicaSeleccionada.ano = parseInt(selectorFechaUnica.split("-")[0], 10)
                            }

                            marcoCalendario?.setAttribute("perfilMes", perfilMes)

                            for (let numeroDia = 0; numeroDia < numeroDiasPorMes; numeroDia++) {
                                const diaFinal_decimal = parseInt(numeroDia + 1, 10);
                                const bloqueDia = document.createElement("li")
                                bloqueDia.setAttribute("class", "dia")
                                bloqueDia.innerText = diaFinal_decimal
                                bloqueDia.classList.add("calendarioDiaDisponible")
                                bloqueDia.addEventListener("click", eval(metodoSelectorDia))


                                if (diaFinal_decimal === 1) {
                                    bloqueDia.style.gridColumnStart = posicionDia1
                                }
                                bloqueDia.setAttribute("dia", diaFinal_decimal)
                                if (calendario.tiempo === "presente") {
                                    if (diaFinal_decimal === diaActual_decimal) {
                                        bloqueDia.style.border = "3px solid ghostwhite"
                                    }
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaParcial") {
                                    bloqueDia.classList.add("calendarioDiaParcial")
                                }
                                if (detallesDiasOcupacion[diaFinal_decimal]?.estadoDia === "diaCompleto") {
                                    bloqueDia.classList.add("calendarioDiaCompleto")
                                }

                                if (Object.keys(fechaUnicaSeleccionada).length) {
                                    if (mesActual_decimal === fechaUnicaSeleccionada.mes && anoActual_decimal === fechaUnicaSeleccionada.ano) {
                                        if (diaFinal_decimal === fechaUnicaSeleccionada.dia) {
                                            bloqueDia.classList.remove("calendarioDiaDisponible")
                                            bloqueDia.classList.add("calendarioDiaSeleccionado")
                                            bloqueDia.setAttribute("estadoDia", "seleccionado")
                                        }
                                    }
                                }
                                marcoMes?.appendChild(bloqueDia)
                            }
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAtras").style.pointerEvents = "all"
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.opacity = 1
                            selectorCalendarioRenderizado.querySelector("#botonAdelante").style.pointerEvents = "all"

                        }
                        if (instanciaUID_procesoCambioMes) {
                            const selectorMarcoMesRenderizadoEnEspera = selectorCalendarioRenderizado
                                .querySelector(`[inctanciaUID_procesoCambioMes="${instanciaUID_procesoCambioMes}"]`)
                            if (!selectorMarcoMesRenderizadoEnEspera) {
                                return
                            }
                        }
                        if (selectorCalendarioRenderizado) {
                            selectorCalendarioRenderizado.querySelector("[contenedor=construyendoCalendario]")?.remove()
                            selectorCalendarioRenderizado.querySelector("[contenedor=calendario]").removeAttribute("style")
                        }
                    } catch (errorCapturado) {
                        throw errorCapturado
                    }
                },
                resolverCalendarioNuevo: async (calendario) => {
                    calendario.zona = "componentes/calendario"

                    const respuestaServidor = await casaVitini.shell.servidor(calendario)
                    if (respuestaServidor?.error) {
                        const selectorContenedorCalendario = document.querySelectorAll("[componente=bloqueCalendario]")
                        selectorContenedorCalendario.forEach((bloqueCalendario) => {
                            bloqueCalendario.remove()
                        })
                        return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                    }
                    if (respuestaServidor?.calendario) {
                        return respuestaServidor;
                    }
                },
                navegacionCalendarioNuevo: async (calendario) => {
                    const boton = calendario.target.getAttribute("sentido")
                    const selectorBotones = calendario.target.closest("[contenedor=calendario]").querySelectorAll("[sentido]")
                    selectorBotones.forEach((botonRenderizado) => {
                        botonRenderizado.style.pointerEvents = "none"
                    })
                    const instanciaUID = calendario.target.closest("[instanciaUID]").getAttribute("instanciaUID")
                    const instanciaUID_contenedorFechas = calendario.target.closest("[instanciaUID]").getAttribute("instanciaUID_contenedorFechas")

                    let mesActual = Number(document.querySelector("[componente=mesReferencia]").getAttribute("mes"))
                    let anoActual = Number(document.querySelector("[componente=mesReferencia]").getAttribute("ano"))
                    const instanciaUID_procesoCambioMes = casaVitini.utilidades.codigoFechaInstancia()
                    if (boton === "adelante") {
                        if (mesActual + 1 < 13) {
                            mesActual = mesActual + 1
                        } else {
                            mesActual = 1
                            anoActual = anoActual + 1
                        }
                    }
                    if (boton === "atras") {
                        if (mesActual - 1 > 0) {
                            mesActual = mesActual - 1
                        } else {
                            mesActual = 12
                            anoActual = anoActual - 1
                        }
                    }
                    const calendarioconstruir = {
                        tipo: "personalizado",
                        comando: "construyeObjeto",
                        ano: anoActual,
                        mes: mesActual
                    }
                    const calendarioResuelto = await casaVitini.ui.componentes.calendario.resolverCalendarioNuevo(calendarioconstruir)
                    calendarioResuelto.instanciaUID = instanciaUID
                    calendarioResuelto.instanciaUID_contenedorFechas = instanciaUID_contenedorFechas
                    calendarioResuelto.instanciaUID_procesoCambioMes = instanciaUID_procesoCambioMes
                    const calendarioRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                    const selectorDiasRenderizados = calendarioRenderizado.querySelectorAll("[dia]")
                    selectorDiasRenderizados.forEach((diaRenderizado) => {
                        diaRenderizado.remove()
                    })
                    const contenedorCalendario = calendarioRenderizado.querySelector(`[contenedor=calendario]`)
                    const selectorMarcoMesRenderizado = calendarioRenderizado.querySelector(`[componente=marcoMes]`)
                    selectorMarcoMesRenderizado.setAttribute("inctanciaUID_procesoCambioMes", instanciaUID_procesoCambioMes)
                    const contenedorconstruyendoCalendarioRenderizado = calendarioRenderizado.querySelectorAll("[contenedor=construyendoCalendario]")
                    contenedorconstruyendoCalendarioRenderizado.forEach((contenedorRenderizado) => {
                        contenedorRenderizado.remove()
                    })
                    const mensajeSpinner = "Construyendo mes..."
                    const spinner = casaVitini.ui.componentes.spinner(mensajeSpinner)
                    const contenedorCarga = document.createElement("div")
                    contenedorCarga.classList.add("componente_calendario_contenedoCarga_Mes")
                    contenedorCarga.setAttribute("contenedor", "construyendoCalendario")
                    contenedorCarga.setAttribute("elemento", "flotante")
                    contenedorCarga.appendChild(spinner)
                    contenedorCalendario.appendChild(contenedorCarga)
                    casaVitini.ui.componentes.calendario.constructorMesNuevo(calendarioResuelto)
                },
                seleccionarDiaProcesadoNuevo: (metadatosDia) => {
                    let dia;
                    let estadoDia;
                    let diaSeleccionadoComoElemento;
                    if (metadatosDia.tipo === "desdeClick") {
                        dia = metadatosDia.diaSeleccionado
                        estadoDia = metadatosDia.estadoDia
                        diaSeleccionadoComoElemento = document.querySelector("li[dia='" + dia + "']")
                    }
                    if (typeof metadatosDia === "number") {
                        dia = metadatosDia;
                        diaSeleccionadoComoElemento = document.querySelector("li[dia='" + dia + "']")
                    }
                    let calendario = document.querySelector("[componente=bloqueCalendario] [componente=marcoCalendario]")
                    let calendarioIO = calendario.getAttribute("calendarioIO")
                    let botonAtras = document.querySelector("#botonAtras")
                    let botonAdelante = document.getElementById("botonAdelante")
                    let fechaEntrada = document.getElementById("fechaEntrada")
                    let fechaSalida = document.getElementById("fechaSalida")
                    let almacenamientoLocalID = calendario.getAttribute("almacenamientoCalendarioID")
                    let perfilMes = calendario.getAttribute("perfilMes")
                    // let InformacionProceso = document.getElementById("InfoProceso")
                    let tiempo = document.querySelector("[componente=mesReferencia]").getAttribute("tiempo")
                    let reserva = localStorage.getItem(almacenamientoLocalID) ? JSON.parse(localStorage.getItem(almacenamientoLocalID)) : {};
                    if (diaSeleccionadoComoElemento.getAttribute("estadoDia") === "seleccionado") {
                        if (diaSeleccionadoComoElemento.getAttribute("tipoDia") === "hoy") {
                            diaSeleccionadoComoElemento.style.background = "red"
                            diaSeleccionadoComoElemento.style.color = ""
                        } else {
                            diaSeleccionadoComoElemento.style.background = ""
                            diaSeleccionadoComoElemento.style.color = ""
                        }
                        if (calendarioIO === "entrada") {
                            fechaEntrada.innerText = 'Seleccionar dia de entrada'
                            delete reserva.entrada
                            document.querySelector("[calendario=entrada]").removeAttribute("memoriaVolatil")
                        }
                        if (calendarioIO === "salida") {
                            fechaSalida.innerText = 'Seleccionar dia de salida2'
                            delete reserva.salida
                            document.querySelector("[calendario=salida]").removeAttribute("memoriaVolatil")
                        }
                        diaSeleccionadoComoElemento.removeAttribute("estadoDia")
                        document.getElementById("botonSiguientePaso")?.remove()
                        localStorage.setItem(almacenamientoLocalID, JSON.stringify(reserva))
                        return
                    }
                    let diasDisponibles = document.querySelectorAll("[estado=disponible]")
                    for (const diaDisponible of diasDisponibles) {
                        if (diaDisponible.getAttribute("estado") !== "deshabilitado") {
                            diaDisponible.style.background = ""
                            diaDisponible.style.color = ""
                            diaDisponible.removeAttribute("estadoDia")
                            diaDisponible.style.pointerEvents = "all"
                        }
                        if (diaDisponible.getAttribute("tipoDia") === "hoy") {
                            // diaDisponible.style.background = "green"
                            // diaDisponible.style.color = ""
                            diaDisponible.removeAttribute("estadoDia")
                            diaDisponible.style.pointerEvents = "all"
                        }
                    }
                    diaSeleccionadoComoElemento.style.background = "black"
                    diaSeleccionadoComoElemento.style.color = "white"
                    diaSeleccionadoComoElemento.setAttribute("estadoDia", "seleccionado")
                    let anoSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("ano")
                    let mesSeleccionado = document.querySelector("[componente=mesReferencia]").getAttribute("mes")
                    let diaSeleccionado = dia
                    let botonSiguientePaso = document.createElement("p")
                    botonSiguientePaso.setAttribute("id", "botonSiguientePaso")
                    botonSiguientePaso.setAttribute("class", "reservaInformacion")
                    botonSiguientePaso.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    let constructorInformacion;
                    let diaIO;
                    let reserva_
                    if (calendarioIO === "entrada") {
                        const fechaEntrada_Humano = `${diaSeleccionado}/${mesSeleccionado}/${anoSeleccionado}`
                        fechaEntrada.innerText = fechaEntrada_Humano
                        constructorInformacion = "Entrada el " + diaSeleccionado + " del " + mesSeleccionado + " del " + anoSeleccionado
                        botonSiguientePaso.setAttribute("vista", "/reservas/salida")
                        botonSiguientePaso.innerText = "Ir a seleccionar el día de salida44"
                        document.querySelector("[calendario=entrada]").setAttribute("memoriaVolatil", fechaEntrada_Humano)
                    }
                    if (calendarioIO === "salida") {
                        const fechaSalida_humano = `${diaSeleccionado}/${mesSeleccionado}/${anoSeleccionado}`
                        fechaSalida.innerText = fechaSalida_humano
                        constructorInformacion = "Salida el " + diaSeleccionado + " del " + mesSeleccionado + " del " + anoSeleccionado
                        botonSiguientePaso.setAttribute("vista", "/reservas/alojamiento")
                        botonSiguientePaso.innerText = "Ir a seleccionar el alojamiento"
                        document.querySelector("[calendario=salida]").setAttribute("memoriaVolatil", fechaSalida_humano)
                    }
                },
                seleccionarDiaNuevo: (dia) => {
                    let diaSeleccionado
                    if (typeof dia === "number") {
                        metadatosDia = dia
                        casaVitini.componentes.seleccionarDiaProcesadoNuevo(metadatosDia)
                    }
                    if (dia?.target?.getAttribute("dia")) {
                        diaSeleccionado = dia.target.getAttribute("dia")
                        let estadoDia = dia.target.getAttribute("estadoDia")
                        let metadatosDia = {
                            "diaSeleccionado": diaSeleccionado,
                            "estadoDia": estadoDia,
                            "tipo": "desdeClick"
                        }
                        casaVitini.componentes.seleccionarDiaProcesadoNuevo(metadatosDia)
                    }
                },
                calendarioCompartido: {
                    seleccionarDia: (dia) => {

                        const diaSeleccionadoComoElemento = dia.target;
                        const contenedorCalendario = diaSeleccionadoComoElemento.closest("[componente=bloqueCalendario]")
                        const instanciaUID_contenedorFechas = contenedorCalendario.getAttribute("instanciaUID_contenedorFechas")
                        const calendario = contenedorCalendario.querySelector("[componente=marcoCalendario]")

                        const contendorDestino = document.querySelector(`[instanciaUID_contenedorFechas="${instanciaUID_contenedorFechas}"]`)

                        const calendarioIO = calendario.getAttribute("calendarioIO")
                        const marcoMes = dia.target.closest("[componente=marcoMes]")
                        const diaSeleccionado = dia.target.getAttribute("dia").padStart(2, "0")
                        const anoSeleccionado = contenedorCalendario.querySelector("[componente=mesReferencia]").getAttribute("ano").padStart(2, "0")
                        const mesSeleccionado = contenedorCalendario.querySelector("[componente=mesReferencia]").getAttribute("mes").padStart(2, "0")
                        const fechaSeleccionada_humana = `${diaSeleccionado}/${mesSeleccionado}/${anoSeleccionado}`
                        const fechaSeleccionada_ISO = `${anoSeleccionado}-${mesSeleccionado}-${diaSeleccionado}`

                        const diasDelCalendario = marcoMes.querySelectorAll("[dia]")
                        const selectorDias = document.querySelectorAll("[calendarioIO] [dia]")
                        selectorDias.forEach((dia) => {
                            // dia.classList.remove("calendarioDiaDisponible")
                            dia.classList.remove("calendarioDiaReserva")
                            dia.classList.remove("calendarioDiaSeleccionado")
                        })
                        if (diaSeleccionadoComoElemento.getAttribute("estadoDia") === "seleccionado") {
                            diaSeleccionadoComoElemento.setAttribute("estadoDia", "disponible")
                            if (calendarioIO === "entrada") {
                                contendorDestino.querySelector("[calendario=entrada]").removeAttribute("memoriaVolatil")
                                contendorDestino.querySelector("[fechaUI=fechaInicio]").innerText = "(Seleccionar)"
                            }
                            if (calendarioIO === "salida") {
                                contendorDestino.querySelector("[calendario=salida]").removeAttribute("memoriaVolatil")
                                contendorDestino.querySelector("[fechaUI=fechaFin]").innerText = "(Seleccionar)"
                            }
                            diasDelCalendario.forEach(dia => {
                                if (dia.getAttribute("estadoDia") === "disponible" ||
                                    dia.getAttribute("estadoDia") === "seleccionado") {
                                    dia.classList.remove("calendarioDiaSeleccionado")
                                    dia.classList.remove("calendarioDiaReserva")
                                    dia.classList.add("calendarioDiaDisponible")
                                    dia.setAttribute("estadoDia", "disponible")
                                }
                            });
                            return
                        }
                        diasDelCalendario.forEach(dia => {
                            if (dia.getAttribute("estadoDia") === "seleccionado") {
                                dia.setAttribute("estadoDia", "disponible")
                            }
                            if (dia.getAttribute("estadoDia") === "disponible") {
                                dia.classList.remove("calendarioDiaSeleccionado")
                                dia.classList.remove("calendarioDiaReserva")
                                dia.classList.add("calendarioDiaDisponible")
                            }
                        });
                        diaSeleccionadoComoElemento.setAttribute("estadoDia", "seleccionado")
                        diaSeleccionadoComoElemento.classList.add("calendarioDiaSeleccionado")
                        const fechasSeleccionadas = () => {
                            const fechaEntradaVolatil = contendorDestino.querySelector("[calendario=entrada]")?.getAttribute("memoriaVolatil")
                            const fechaEntradaAarray = fechaEntradaVolatil?.split("-") ? fechaEntradaVolatil?.split("-") : []
                            const diaSeleccionadoEntrada = Number(fechaEntradaAarray[2])
                            const mesSeleccionadoEntrada = Number(fechaEntradaAarray[1])
                            const anoSeleccionadoEntrada = Number(fechaEntradaAarray[0])

                            const fechaSalidaVolatil = contendorDestino.querySelector("[calendario=salida]")?.getAttribute("memoriaVolatil")

                            const fechaSaliraArray = fechaSalidaVolatil?.split("-") ? fechaSalidaVolatil?.split("-") : []
                            const diaSeleccionadoSalida = Number(fechaSaliraArray[2])
                            const mesSeleccionadoSalida = Number(fechaSaliraArray[1])
                            const anoSeleccionadoSalida = Number(fechaSaliraArray[0])

                            const fechaUnicoVolatil = contendorDestino.querySelector("[calendario=unico]")?.getAttribute("memoriaVolatil")
                            const fechaUnicoAarray = fechaUnicoVolatil?.split("-") ? fechaUnicoVolatil?.split("-") : []
                            const diaSeleccionadoUnico = Number(fechaUnicoAarray[2])
                            const mesSeleccionadoUnico = Number(fechaUnicoAarray[1])
                            const anoSeleccionadoUnico = Number(fechaUnicoAarray[0])

                            const contenedorFechas = {
                                fechaEntrada: {
                                    volatil: fechaEntradaVolatil,
                                    dia: diaSeleccionadoEntrada,
                                    mes: mesSeleccionadoEntrada,
                                    ano: anoSeleccionadoEntrada
                                },
                                fechaSalida: {
                                    volatil: fechaSalidaVolatil,
                                    dia: diaSeleccionadoSalida,
                                    mes: mesSeleccionadoSalida,
                                    ano: anoSeleccionadoSalida
                                },
                                fechaUnico: {
                                    volatil: fechaUnicoVolatil,
                                    dia: diaSeleccionadoUnico,
                                    mes: mesSeleccionadoUnico,
                                    ano: anoSeleccionadoUnico
                                }

                            }
                            return contenedorFechas
                        }

                        if (calendarioIO === "entrada") {
                            contendorDestino.querySelector("[calendario=entrada]").setAttribute("memoriaVolatil", fechaSeleccionada_ISO)
                            contendorDestino.querySelector("[fechaUI=fechaInicio]").innerText = fechaSeleccionada_humana
                            if (fechasSeleccionadas().fechaSalida?.volatil) {
                                diasDelCalendario.forEach((dia) => {
                                    if (dia.getAttribute("estadoDia") === "disponible") {
                                        if (fechasSeleccionadas().fechaSalida.mes === Number(mesSeleccionado) && Number(anoSeleccionado) === fechasSeleccionadas().fechaSalida.ano) {
                                            if ((Number(dia.getAttribute("dia")) > diaSeleccionado &&
                                                Number(dia.getAttribute("dia")) <= fechasSeleccionadas().fechaSalida.dia)) {
                                                dia.classList.remove("calendarioDiaDisponible")
                                                dia.classList.add("calendarioDiaReserva")
                                            }
                                        } else {
                                            if (Number(dia.getAttribute("dia")) > diaSeleccionado) {
                                                dia.classList.remove("calendarioDiaDisponible")
                                                dia.classList.add("calendarioDiaReserva")
                                            }
                                        }
                                    }
                                })
                            } else if (fechasSeleccionadas().fechaSalida?.volatil) {
                                if (fechasSeleccionadas().fechaSalida.mes === Number(mesSeleccionado) && Number(anoSeleccionado) === fechasSeleccionadas().fechaSalida.ano) {
                                    selectorDias.forEach((dia) => {
                                        if ((Number(dia.getAttribute("dia")) > diaSeleccionado)
                                            &&
                                            (Number(dia.getAttribute("dia")) < fechasSeleccionadas().fechaSalida.dia)) {

                                            dia.classList.add("calendarioDiaReserva")
                                            dia.classList.remove("calendarioDiaDisponible")
                                        }
                                    })
                                } else {
                                    selectorDias.forEach((dia) => {
                                        if (Number(dia.getAttribute("dia")) >= diaSeleccionado) {
                                            dia.classList.add("calendarioDiaReserva")
                                            dia.classList.remove("calendarioDiaDisponible")
                                        }
                                    })
                                }
                            }
                        } else if (calendarioIO === "salida") {
                            // Falta repllicar estoi en calendario de entrada
                            contendorDestino.querySelector("[calendario=salida]").setAttribute("memoriaVolatil", fechaSeleccionada_ISO)
                            contendorDestino.querySelector("[fechaUI=fechaFin]").innerText = fechaSeleccionada_humana

                            if (fechasSeleccionadas().fechaEntrada?.volatil) {
                                diasDelCalendario.forEach((dia) => {
                                    if (dia.getAttribute("estadoDia") === "disponible") {
                                        if (fechasSeleccionadas().fechaEntrada.mes === Number(mesSeleccionado) && Number(anoSeleccionado) === fechasSeleccionadas().fechaEntrada.ano) {
                                            if (Number(dia.getAttribute("dia")) < Number(diaSeleccionado) &&
                                                Number(dia.getAttribute("dia")) >= fechasSeleccionadas().fechaEntrada.dia) {
                                                dia.classList.remove("calendarioDiaDisponible")
                                                dia.classList.add("calendarioDiaReserva")
                                            }
                                        } else {
                                            if (Number(dia.getAttribute("dia")) < Number(diaSeleccionado)) {
                                                dia.classList.remove("calendarioDiaDisponible")
                                                dia.classList.add("calendarioDiaReserva")
                                            }
                                        }
                                    }
                                })
                            } else if (fechasSeleccionadas().fechaEntrada?.volatil) {
                                if (fechasSeleccionadas().fechaEntrada.mes === Number(mesSeleccionado) && Number(anoSeleccionado) === fechasSeleccionadas().fechaEntrada.ano) {
                                    selectorDias.forEach((dia) => {
                                        if ((Number(dia.getAttribute("dia")) > fechasSeleccionadas().fechaEntrada.dia)
                                            &&
                                            (Number(dia.getAttribute("dia")) < Number(diaSeleccionado))) {

                                            dia.classList.add("calendarioDiaReserva")
                                            dia.classList.remove("calendarioDiaDisponible")
                                        }
                                    })
                                } else {
                                    selectorDias.forEach((dia) => {
                                        if (Number(dia.getAttribute("dia")) <= Number(diaSeleccionado)) {
                                            dia.classList.add("calendarioDiaReserva")
                                            dia.classList.remove("calendarioDiaDisponible")
                                        }
                                    })
                                }
                            }
                        } else if (calendarioIO === "unico") {
                            // Falta repllicar estoi en calendario de entrada
                            contendorDestino.querySelector("[calendario=unico]").setAttribute("memoriaVolatil", fechaSeleccionada_ISO)
                            contendorDestino.querySelector("[fechaUI=unico]").innerText = fechaSeleccionada_humana

                            if (fechasSeleccionadas().fechaUnico?.volatil) {
                                diasDelCalendario.forEach((dia) => {
                                    if (dia.getAttribute("estadoDia") === "disponible") {
                                        if (fechasSeleccionadas().fechaUnico.mes === Number(mesSeleccionado) && Number(anoSeleccionado) === fechasSeleccionadas().fechaUnico.ano) {
                                            if (Number(dia.getAttribute("dia")) < Number(diaSeleccionado) &&
                                                Number(dia.getAttribute("dia")) >= fechasSeleccionadas().fechaUnico.dia) {
                                                dia.classList.remove("calendarioDiaDisponible")
                                                dia.classList.add("calendarioDiaReserva")
                                            }
                                        } else {
                                            if (Number(dia.getAttribute("dia")) < Number(diaSeleccionado)) {
                                                dia.classList.remove("calendarioDiaDisponible")
                                                dia.classList.add("calendarioDiaReserva")
                                            }
                                        }
                                    }
                                })
                            }
                        }
                    },
                },
                diasOcupadosTotalmentePorMes: async (metadatos) => {
                    const mes = metadatos.mes
                    const ano = metadatos.ano
                    const instanciaUID_mes = metadatos.instanciaUID_mes
                    const controlDiasCompletos = {
                        zona: "componentes/diasOcupadosTotalmentePorMes",
                        mes: Number(mes),
                        ano: Number(ano)
                    }
                    const respuestaServidor = await casaVitini.shell.servidor(controlDiasCompletos)
                    if (respuestaServidor?.error) {
                        return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                    }
                    if (respuestaServidor.ok) {
                        const dias = respuestaServidor.ok.dias
                        const selectorMarcoMesRenderizadoEnEspera = document
                            .querySelector(`[inctanciaUID_procesoCambioMes="${instanciaUID_mes}"]`)
                        if (!selectorMarcoMesRenderizadoEnEspera) {
                            return
                        }
                        for (const detallesDia of Object.entries(dias)) {
                            const dia = detallesDia[0]
                            const estadoDia = detallesDia[1].estadoDia
                            const selectorDia = selectorMarcoMesRenderizadoEnEspera.querySelector(`[dia="${dia}"]`)
                            if (estadoDia === "diaCompleto") {
                                selectorDia.classList.add("calendarioDiaCompleto")
                            }
                            if (estadoDia === "diaParcial") {
                                selectorDia.classList.add("calendarioDiaParcial")
                            }
                        }
                    }
                },
            },
            contenedorFinanciero: {
                constructor: function (data) {

                    try {
                        const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()
                        const destino = data.destino
                        const modoUI = data.modoUI
                        const contenedorFinanciero = data.contenedorFinanciero
                        const global = contenedorFinanciero.desgloseFinanciero.global
                        const entidades = contenedorFinanciero.desgloseFinanciero.entidades
                        const contenedorOfertas = contenedorFinanciero.desgloseFinanciero.contenedorOfertas
                        const impuestos = contenedorFinanciero.desgloseFinanciero.impuestos
                        const totales = global.totales

                        this.control({
                            destino,
                            modoUI
                        })
                        this.componentesUI.contenedor({
                            destino,
                            modoUI,
                            instanciaUID
                        })
                        this.componentesUI.navegacion.ui({
                            destino,
                        })
                        this.componentesUI.entidades.hub({
                            destino,
                            entidades,
                            instanciaUID,
                        })
                        this.componentesUI.ofertas.hub({
                            destino,
                            contenedorOfertas,
                            instanciaUID
                        })

                        this.componentesUI.impuestos({
                            destino,
                            impuestos,
                            instanciaUID
                        })
                        this.componentesUI.totalesGlobales({
                            destino,
                            totales,
                            instanciaUID
                        })
                    } catch (error) {
                        throw error
                    }
                },
                control: (data) => {
                    try {
                        const destino = data.destino
                        const modoUI = data.modoUI
                        if (!document.querySelector(destino)) {
                            throw new Error("El constructor del contenedor financiero no encuentra el elemento del destino")
                        }
                        if (modoUI !== "plaza" && modoUI !== "administracion" && modoUI !== "simulador") {
                            throw new Error("El constructor del contenedor financiero necesita modoUI en plaza, administracion o simulador")
                        }

                    } catch (error) {
                        throw error
                    }

                },
                componentesUI: {
                    contenedor: function (data) {
                        const destino = data.destino
                        const modoUI = data.modoUI

                        const instanciaUID = data.instanciaUID
                        const selector = document.querySelector(destino).querySelector("[contenedor=financiero]")
                        if (!selector) {
                            const contenedor = document.createElement("div")
                            contenedor.classList.add("componentes_ui_desloseTotales_contenedor")
                            contenedor.setAttribute("contenedor", "financiero")
                            contenedor.setAttribute("modoUI", modoUI)
                            contenedor.setAttribute("instanciaUID", instanciaUID)
                            document.querySelector(destino).appendChild(contenedor)
                        } else {
                            selector.setAttribute("instanciaUID", instanciaUID)
                        }


                    },
                    navegacion: {
                        ui: function (data) {
                            const destino = data.destino

                            const contenedor_selector = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[componente=navegador]")
                            if (contenedor_selector) {
                                return
                            }
                            const contenedor = document.createElement("div")
                            contenedor.setAttribute("componente", "navegador")
                            contenedor.classList.add(
                                "padding6",
                                "flexVertical",
                                "gap6"
                            )

                            const ui = document.createElement("div")
                            ui.classList.add(
                                "navegador",
                                "backgroundWhite5"
                            )
                            contenedor.appendChild(ui)

                            const botonTodo = document.createElement("div")
                            botonTodo.setAttribute("comando", "todo")
                            botonTodo.classList.add(
                                "botonV2",
                                "comportamientoBoton",
                            )
                            botonTodo.innerText = "Ver todo"
                            botonTodo.addEventListener("click", this.controlador)
                            //ui.appendChild(botonTodo)

                            const botonPorNoche = document.createElement("div")
                            botonPorNoche.setAttribute("comando", "porNoche")
                            botonPorNoche.classList.add(
                                "botonV2",
                                "comportamientoBoton",
                            )
                            botonPorNoche.innerText = "Desglose por noche"
                            botonPorNoche.addEventListener("click", this.controlador)

                            ui.appendChild(botonPorNoche)

                            const botonPorApartamento = document.createElement("div")
                            botonPorApartamento.setAttribute("comando", "porApartamento")
                            botonPorApartamento.classList.add(
                                "botonV2",
                                "comportamientoBoton",
                            )
                            botonPorApartamento.innerText = "Desglose por apartamento"
                            botonPorApartamento.addEventListener("click", this.controlador)

                            ui.appendChild(botonPorApartamento)

                            const botonServicios = document.createElement("div")
                            botonServicios.setAttribute("comando", "porServicio")
                            botonServicios.classList.add(
                                "botonV2",
                                "comportamientoBoton",
                            )
                            botonServicios.innerText = "Servicios"
                            botonServicios.addEventListener("click", this.controlador)

                            ui.appendChild(botonServicios)


                            const botonOfertas = document.createElement("div")
                            botonOfertas.setAttribute("comando", "ofertas")
                            botonOfertas.classList.add(
                                "botonV2",
                                "comportamientoBoton",
                            )
                            botonOfertas.innerText = "Ofertas aplicadas"
                            botonOfertas.addEventListener("click", this.controlador)

                            ui.appendChild(botonOfertas)

                            const botonImpuestos = document.createElement("div")
                            botonImpuestos.setAttribute("comando", "impuestos")
                            botonImpuestos.classList.add(
                                "botonV2",
                                "comportamientoBoton",
                            )
                            botonImpuestos.innerText = "Impuestos"
                            botonImpuestos.addEventListener("click", this.controlador)
                            ui.appendChild(botonImpuestos)


                            const botonTotales = document.createElement("div")
                            botonTotales.setAttribute("comando", "totales")
                            botonTotales.classList.add(
                                "botonV2",
                                "comportamientoBoton",
                            )
                            botonTotales.innerText = "Totales"
                            botonTotales.addEventListener("click", this.controlador)

                            ui.appendChild(botonTotales)

                            document.querySelector(destino).querySelector("[contenedor=financiero]").appendChild(contenedor)


                        },
                        controlador: (data) => {
                            const boton = data.target
                            const comando = boton.getAttribute("comando")
                            const estadoActual = boton.getAttribute("estado")
                            const contenedorFinancieroArea = boton.closest("[contenedor=financiero]")
                            const selectorContenedores = contenedorFinancieroArea.querySelectorAll("[componente=plegable]")
                            const navegadorArea = contenedorFinancieroArea.querySelector("[componente=navegador]")
                            const selectorBotones = navegadorArea.querySelectorAll("[comando]")

                            const estadoInicial = () => {
                                selectorContenedores.forEach((contenedorPlegable) => {
                                    contenedorPlegable.removeAttribute("style")
                                })
                                selectorBotones.forEach((boton) => {
                                    boton.classList.remove("selecionAzul")
                                    boton.removeAttribute("estado")
                                })
                            }

                            if (comando === "todo") {
                                estadoInicial()
                                return
                            }
                            if (estadoActual === "activo") {
                                boton.classList.remove("selecionAzul")
                                boton.removeAttribute("estado")

                            } else {
                                boton.classList.add("selecionAzul")
                                boton.setAttribute("estado", "activo")
                            }

                            const botonesActivos = []
                            contenedorFinancieroArea.querySelector("[componente=navegador]").querySelectorAll("[estado=activo]").forEach((botonActivo) => {
                                botonesActivos.push(botonActivo.getAttribute("comando"))
                            })
                            if (botonesActivos.length === 0) {
                                return estadoInicial()
                            }


                            selectorContenedores.forEach((contenedorPlegable) => {
                                const contenedorIDV = contenedorPlegable.getAttribute("contenedor")

                                if (botonesActivos.includes(contenedorIDV)) {

                                    contenedorPlegable.removeAttribute("style")
                                } else {
                                    contenedorPlegable.style.display = "none"

                                }
                            })

                        }
                    },
                    entidades: {
                        hub: function (data) {
                            const destino = data.destino
                            const entidades = data.entidades
                            const instanciaUID = data.instanciaUID
                            console.log("entidades", entidades)
                            for (const [entidadIDV, entidad] of Object.entries(entidades)) {
                                if (entidadIDV === "reserva") {
                                    const desglosePorNoche = entidad.desglosePorNoche
                                    const desglosePorApartamento = entidad.desglosePorApartamento
                                    const contenedorSobreControles = entidad.contenedorSobreControles
                                    const totales = entidad.global.totales
                                    this.reserva.contenedor({
                                        destino
                                    })
                                    this.reserva.porNoche({
                                        destino,
                                        instanciaUID,
                                        desglosePorNoche,
                                        contenedorSobreControles
                                    })
                                    this.reserva.porApartamento({
                                        destino,
                                        desglosePorApartamento
                                    })
                                    this.reserva.totales({
                                        destino,
                                        totales
                                    })
                                }
                                if (entidadIDV === "servicios") {
                                    const desglosePorServicios = entidad.desglosePorServicios
                                    const totales = entidad.global.totales

                                    this.servicios.contenedor({
                                        destino
                                    })
                                    this.servicios.porServicio({
                                        destino,
                                        desglosePorServicios
                                    })
                                    this.reserva.totales({
                                        destino,
                                        totales
                                    })
                                }


                            }
                        },
                        reserva: {
                            contenedor: (data) => {
                                const destino = data.destino
                                const selector = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=reserva]")
                                if (!selector) {
                                    const contenedorPlegable = document.createElement('details');
                                    contenedorPlegable.classList.add("contenedorEntidad")
                                    contenedorPlegable.setAttribute("entidad", "reserva")

                                    // Crear el elemento <summary>
                                    const tituloContenedorPlegable = document.createElement('summary');
                                    tituloContenedorPlegable.classList.add(
                                        "padding12",
                                        "textSize16"
                                    )
                                    tituloContenedorPlegable.textContent = 'Alojamiento';
                                    contenedorPlegable.appendChild(tituloContenedorPlegable)

                                    // const contenedor = document.createElement("div")
                                    // contenedor.classList.add("contenedorEntidad")
                                    // contenedor.setAttribute("entidad", "reserva")
                                    document.querySelector(destino).querySelector("[contenedor=financiero]").appendChild(contenedorPlegable)
                                }
                            },
                            porNoche: (data) => {
                                const destino = data.destino
                                const desglosePorNoche = data.desglosePorNoche
                                const contenedorSobreControles = data.contenedorSobreControles
                                const instanciaUID = data.instanciaUID
                                const contenedorFinanciero = document.querySelector(destino).querySelector("[contenedor=financiero]")
                                const contenedorEntidadReserva = contenedorFinanciero.querySelector("[entidad=reserva]")
                                const conntenedorPorNoche_selector = contenedorEntidadReserva.querySelector("[contenedor=porNoche]")
                                const modoUI = contenedorFinanciero.getAttribute("modoUI")

                                if (!conntenedorPorNoche_selector) {
                                    const contenedorPorNoche = document.createElement("div")
                                    contenedorPorNoche.classList.add("reserva_resumen_desglose_pago_bloque")
                                    contenedorPorNoche.setAttribute("contenedor", "porNoche")
                                    contenedorPorNoche.setAttribute("componente", "plegable")

                                    contenedorEntidadReserva.appendChild(contenedorPorNoche)

                                    const detalleDiaUITitulo = document.createElement("div")
                                    detalleDiaUITitulo.classList.add("reserva_resumen_desglose_pago_titulo")
                                    detalleDiaUITitulo.innerText = "Desglose por noche"
                                    contenedorPorNoche.appendChild(detalleDiaUITitulo)

                                    if (modoUI === "administracion") {
                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6",
                                        )

                                        const botonSobreControlDePrecios = document.createElement("div")
                                        botonSobreControlDePrecios.classList.add(
                                            "botonV1",
                                            "comportamientoBoton"
                                        )
                                        botonSobreControlDePrecios.innerText = "Alterar precios neto de la reserva"
                                        botonSobreControlDePrecios.addEventListener("click", casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.sobreControlPrecios.arranque)
                                        // contenedorBotones.appendChild(botonSobreControlDePrecios)
                                        contenedorPorNoche.appendChild(contenedorBotones)
                                    }

                                    if (modoUI === "simulador") {
                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6",
                                        )

                                        const botonSobreControlDePrecios = document.createElement("div")
                                        botonSobreControlDePrecios.classList.add(
                                            "botonV1",
                                            "comportamientoBoton"
                                        )
                                        botonSobreControlDePrecios.innerText = "Alterar precios neto de la simulación"
                                        botonSobreControlDePrecios.addEventListener("click", casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.sobreControlPrecios.arranque)
                                        // contenedorBotones.appendChild(botonSobreControlDePrecios)
                                        contenedorPorNoche.appendChild(contenedorBotones)
                                    }

                                    const contenedorDesglosePorNoche = document.createElement("div")
                                    contenedorDesglosePorNoche.classList.add("reserva_resumen_desglose_porNoche")
                                    contenedorDesglosePorNoche.setAttribute("contenedor", "deslosePorNoche")
                                    contenedorPorNoche.appendChild(contenedorDesglosePorNoche)
                                }
                                const contenedorDesglosePorNoche_renderizado = contenedorEntidadReserva.querySelector("[contenedor=deslosePorNoche]")
                                // Acabar esto, es fundamental, luego se podra poner lo del sobrecontrol con interactividad
                                const fechasDelDesgloseArray = Object.keys(desglosePorNoche)
                                const selectorNochesRenderizados = contenedorDesglosePorNoche_renderizado.querySelectorAll(`[noche]`)
                                selectorNochesRenderizados.forEach((nocheRenderizada) => {
                                    const fechaNocheRenderizada = nocheRenderizada.getAttribute("noche")
                                    if (!fechasDelDesgloseArray.includes(fechaNocheRenderizada)) {
                                        nocheRenderizada?.remove()
                                    }
                                })
                                let posicion = 0
                                for (const [fechaNoche, desglose] of Object.entries(desglosePorNoche)) {
                                    const precioNetoNoche = desglose.precioNetoNoche
                                    const apartamentosPorNoche = desglose.apartamentosPorNoche
                                    const nochesRenderizdas = contenedorDesglosePorNoche_renderizado.querySelectorAll("[noche]")

                                    const contenedorNoche_selector = contenedorDesglosePorNoche_renderizado.querySelector(`[noche="${fechaNoche}"]`)
                                    if (!contenedorNoche_selector) {
                                        const contenedorNoche = document.createElement("div")
                                        contenedorNoche.setAttribute("noche", fechaNoche)
                                        contenedorNoche.classList.add(
                                            "contenedorDiaConNoche",
                                        )
                                        const titulo = document.createElement("div")
                                        titulo.classList.add(
                                            "reserva_resumen_apartamentoIUTitulo",
                                            "textoCentrado"
                                        )
                                        titulo.classList.add("negrita")
                                        titulo.innerText = fechaNoche
                                        contenedorNoche.appendChild(titulo)

                                        //contenedorDesglosePorNoche_renderizado.appendChild(contenedorNoche)

                                        if (posicion < nochesRenderizdas.length) {
                                            const elementosArray = Array.from(nochesRenderizdas);
                                            contenedorDesglosePorNoche_renderizado.insertBefore(contenedorNoche, elementosArray[posicion]);
                                        } else {
                                            contenedorDesglosePorNoche_renderizado.appendChild(contenedorNoche);
                                        }

                                        const totalesNoche = document.createElement("div")
                                        totalesNoche.classList.add("padding6")
                                        totalesNoche.setAttribute("contenedor", "totalesNoche")

                                        const totalNetoNocheUI = document.createElement("div")
                                        totalNetoNocheUI.setAttribute("componente", "totalNetoNoche")
                                        totalNetoNocheUI.classList.add("negrita")
                                        // totalNetoNocheUI.innerText = precioNetoNoche + "$ Total neto noche"
                                        totalesNoche.appendChild(totalNetoNocheUI)
                                        contenedorNoche.appendChild(totalesNoche)


                                    }
                                    posicion++

                                    const contenedorNoche_renderizado = contenedorDesglosePorNoche_renderizado.querySelector(`[noche="${fechaNoche}"]`)
                                    const totalNetoNocheUI = contenedorNoche_renderizado.querySelector(`[componente=totalNetoNoche]`)
                                    totalNetoNocheUI.innerText = precioNetoNoche + "$ Total neto noche"

                                    const apartamentosIDVArray = Object.keys(apartamentosPorNoche)
                                    const selectorApartamentosRenderizados = contenedorNoche_renderizado.querySelectorAll(`[apartamentoIDV]`)
                                    selectorApartamentosRenderizados.forEach((apartamentoRenderizado) => {
                                        const apartamentoIDVRenderizado = apartamentoRenderizado.getAttribute("apartamentoIDV")
                                        if (!apartamentosIDVArray.includes(apartamentoIDVRenderizado)) {
                                            apartamentoRenderizado?.remove()
                                        }
                                    })


                                    for (const [apartamentoIDV, desglosePorApartamento] of Object.entries(apartamentosPorNoche)) {
                                        const apartamentoUI = desglosePorApartamento.apartamentoUI
                                        const precioNetoApartamento = desglosePorApartamento.precioNetoApartamento

                                        const contenedorApartamento_selector = contenedorNoche_renderizado.querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)
                                        if (!contenedorApartamento_selector) {

                                            const contenedorApartamento = document.createElement("div")
                                            contenedorApartamento.classList.add(
                                                "contenedorApartamento",
                                            )
                                            contenedorApartamento.setAttribute("apartamentoIDV", apartamentoIDV)
                                            contenedorNoche_renderizado.appendChild(contenedorApartamento)
                                            if (modoUI === "administracion") {
                                                contenedorApartamento.classList.add("comportamientoBotonApartamento")
                                                contenedorApartamento.addEventListener("click", () => {
                                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.sobreControlPrecios.componentesUI.nocheUI({
                                                        fechaNoche,
                                                        apartamentoIDV,
                                                        instanciaUID_contenedorFinanciero: instanciaUID
                                                    })
                                                })
                                            }
                                            if (modoUI === "simulador") {
                                                contenedorApartamento.classList.add("comportamientoBotonApartamento")
                                                contenedorApartamento.addEventListener("click", () => {
                                                    casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.sobreControlPrecios.nocheUI({
                                                        fechaNoche,
                                                        apartamentoIDV,
                                                        instanciaUID_contenedorFinanciero: instanciaUID
                                                    })
                                                })
                                            }

                                            const contenedorApartamentoYTotal = document.createElement("div")
                                            contenedorApartamentoYTotal.classList.add("padding6")
                                            contenedorApartamentoYTotal.setAttribute("contenedor", "tituloApartamentoYTotales")

                                            const tituloApartamento = document.createElement("div")
                                            tituloApartamento.setAttribute("apartamentoIDV", apartamentoIDV)
                                            tituloApartamento.classList.add(
                                                "reserva_resumen_apartamentoUIPrecio",
                                            )
                                            tituloApartamento.classList.add("negrita")
                                            tituloApartamento.classList.add("colorGris")
                                            tituloApartamento.innerText = apartamentoUI

                                            contenedorApartamentoYTotal.appendChild(tituloApartamento)
                                            const precioNetoApartamentoUI = document.createElement("div")
                                            precioNetoApartamentoUI.setAttribute("contenedor", "precioNetoApartamento")
                                            precioNetoApartamentoUI.classList.add(
                                                "reserva_resumen_apartamentoUIPrecio",
                                            )


                                            contenedorApartamentoYTotal.appendChild(precioNetoApartamentoUI)
                                            contenedorApartamento.appendChild(contenedorApartamentoYTotal)
                                        }
                                        const contenedorApartamento_renderizado = contenedorNoche_renderizado.querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)

                                        const contenedorTotalApartamentoYTotales_renderizado = contenedorApartamento_renderizado.querySelector("[contenedor=tituloApartamentoYTotales]")

                                        if (modoUI === "administracion") {
                                            if (contenedorSobreControles
                                                &&
                                                contenedorSobreControles.hasOwnProperty(fechaNoche)
                                                &&
                                                contenedorSobreControles[fechaNoche].hasOwnProperty(apartamentoIDV)) {
                                                const sobreControlUI_selector = contenedorTotalApartamentoYTotales_renderizado.querySelector("[contenedor=sobreControl]")
                                                if (!sobreControlUI_selector) {
                                                    const contenedorSobreControlUI = document.createElement("div")
                                                    contenedorSobreControlUI.setAttribute("contenedor", "sobreControl")
                                                    contenedorSobreControlUI.classList.add(
                                                        "negrita"
                                                    )
                                                    contenedorSobreControlUI.innerText = "Sobre control aplicado."
                                                    contenedorTotalApartamentoYTotales_renderizado.appendChild(contenedorSobreControlUI)
                                                }
                                            } else {
                                                contenedorTotalApartamentoYTotales_renderizado.querySelector("[contenedor=sobreControl]")?.remove()
                                            }
                                        }
                                        if (modoUI === "simulador") {
                                            if (contenedorSobreControles
                                                &&
                                                contenedorSobreControles.hasOwnProperty(fechaNoche)
                                                &&
                                                contenedorSobreControles[fechaNoche].hasOwnProperty(apartamentoIDV)) {
                                                const sobreControlUI_selector = contenedorTotalApartamentoYTotales_renderizado.querySelector("[contenedor=sobreControl]")
                                                if (!sobreControlUI_selector) {
                                                    const contenedorSobreControlUI = document.createElement("div")
                                                    contenedorSobreControlUI.setAttribute("contenedor", "sobreControl")
                                                    contenedorSobreControlUI.classList.add(
                                                        "negrita"
                                                    )
                                                    contenedorSobreControlUI.innerText = "Sobre control aplicado."
                                                    contenedorTotalApartamentoYTotales_renderizado.appendChild(contenedorSobreControlUI)
                                                }
                                            } else {
                                                contenedorTotalApartamentoYTotales_renderizado.querySelector("[contenedor=sobreControl]")?.remove()
                                            }
                                        }
                                        const precioNetoApartamentoSelector = contenedorApartamento_renderizado.querySelector("[contenedor=precioNetoApartamento]")
                                        precioNetoApartamentoSelector.innerText = precioNetoApartamento + "$ Neto del apartamento"

                                    }
                                }
                            },
                            porApartamento: (data) => {
                                const destino = data.destino
                                const desglosePorApartamento = data.desglosePorApartamento

                                const porApartamento_selector = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=reserva]").querySelector("[contenedor=porApartamento]")
                                if (!porApartamento_selector) {
                                    const contenedor = document.createElement("div")
                                    contenedor.classList.add("contenedorPorApartamento",
                                        "padding6",
                                        "flexVertical",
                                        "gap6"
                                    )
                                    contenedor.setAttribute("contenedor", "porApartamento")
                                    contenedor.setAttribute("componente", "plegable")


                                    const tituloContendor = document.createElement("div")
                                    tituloContendor.classList.add(
                                        "negrita",
                                        "textoCentrado",
                                        "padding6"
                                    )
                                    tituloContendor.innerText = "Desglose por apartamento"
                                    contenedor.appendChild(tituloContendor)
                                    document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=reserva]").appendChild(contenedor)

                                }
                                const porApartamento_renderizado = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=reserva]").querySelector("[contenedor=porApartamento]")



                                for (const [apartamentoIDV, detalles] of Object.entries(desglosePorApartamento)) {
                                    const apartamentoUI = detalles.apartamentoUI
                                    const totalNeto = detalles.totalNeto
                                    const precioMedioNetoNoche = detalles.precioMedioNetoNoche

                                    const contenedorApartamento_selector = porApartamento_renderizado.querySelector(`[apartamentoIDV=${apartamentoIDV}]`)
                                    if (!contenedorApartamento_selector) {
                                        const contenedorApartamento = document.createElement("div")
                                        contenedorApartamento.classList.add("contenedorApartamento")
                                        contenedorApartamento.setAttribute("apartamentoIDV", apartamentoIDV)
                                        porApartamento_renderizado.appendChild(contenedorApartamento)

                                        const contenedorTituloYtotal = document.createElement("div")
                                        contenedorTituloYtotal.setAttribute("contenedor", "tituloYTotal")
                                        contenedorTituloYtotal.classList.add(
                                            "padding6"
                                        )

                                        const apartamentoUITitulo = document.createElement("div")
                                        apartamentoUITitulo.classList.add("contenedorTextoOferta")
                                        apartamentoUITitulo.classList.add("negrita")
                                        apartamentoUITitulo.innerText = apartamentoUI
                                        contenedorTituloYtotal.appendChild(apartamentoUITitulo)
                                        const apartamentoUIPrecioNetoTotal = document.createElement("div")
                                        apartamentoUIPrecioNetoTotal.classList.add("textoDetallesPorApartamento")
                                        apartamentoUIPrecioNetoTotal.setAttribute("dato", "totalNeto")
                                        contenedorTituloYtotal.appendChild(apartamentoUIPrecioNetoTotal)

                                        const apartamentoUIPrecioPromedioPorNoche = document.createElement("div")
                                        apartamentoUIPrecioPromedioPorNoche.classList.add("textoDetallesPorApartamento")
                                        apartamentoUIPrecioPromedioPorNoche.setAttribute("dato", "precioMedioNetoNoche")
                                        contenedorTituloYtotal.appendChild(apartamentoUIPrecioPromedioPorNoche)
                                        contenedorApartamento.appendChild(contenedorTituloYtotal)
                                    }
                                    const contenedorApartamento_renderizado = porApartamento_renderizado.querySelector(`[apartamentoIDV=${apartamentoIDV}]`)

                                    const precioNetoApartamentoUI = contenedorApartamento_renderizado.querySelector("[dato=totalNeto]")
                                    precioNetoApartamentoUI.innerText = totalNeto + "$ Total neto"

                                    const precioMedioNetoNocheApartamentoUI = contenedorApartamento_renderizado.querySelector("[dato=precioMedioNetoNoche]")
                                    precioMedioNetoNocheApartamentoUI.innerText = precioMedioNetoNoche + "$ Precio medio neto por noche"

                                }

                            },
                            totales: (data) => {
                                const destino = data.destino
                                const totales = data.totales
                                const instanciaUID = data.instanciaUID

                                const totalNeto = totales?.totalNeto
                                const totalFinal = totales?.totalFinal
                                const totalDescuento = totales?.totalDescuento
                                const impuestosAplicados = totales?.impuestosAplicados
                                const promedioNocheNeto = totales?.promedioNocheNeto
                                const promedioNocheNetoConDescuentos = totales?.promedioNocheNetoConDescuentos
                                const totalNetoConDescuentos = totales?.totalNetoConDescuentos
                                const contenedorFinanciero = document.querySelector(destino).querySelector("[contenedor=financiero]")
                                const modoUI = contenedorFinanciero.getAttribute("modoUI")

                                const contenedorTotales_selector = document.querySelector(destino).querySelector("[contenedor=financiero] [entidad=reserva]").querySelector("[contenedor=totales]")
                                if (!contenedorTotales_selector) {

                                    const totalesUI = document.createElement("div")
                                    totalesUI.classList.add("reserva_resumen_desglose_pago_bloque")
                                    totalesUI.setAttribute("contenedor", "totales")
                                    totalesUI.setAttribute("componente", "plegable")
                                    document.querySelector(destino).querySelector("[contenedor=financiero] [entidad=reserva]").appendChild(totalesUI)

                                    const totalesUITituloBloque = document.createElement("div")
                                    totalesUITituloBloque.classList.add("reserva_resumen_desglose_pago_titulo")
                                    totalesUITituloBloque.innerText = "Totales reserva (Alojamieinto)"
                                    totalesUI.appendChild(totalesUITituloBloque)

                                    if (modoUI === "administracion") {
                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6",
                                        )

                                        // const botonInsertarDescuento = document.createElement("div")
                                        // botonInsertarDescuento.classList.add(
                                        //     "botonV1",
                                        //     "comportamientoBoton"
                                        // )
                                        // botonInsertarDescuento.innerText = "Reconstruir desglose financerio"
                                        // botonInsertarDescuento.addEventListener("click", () => {
                                        //     casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.reconstruirDesgloseFinanciero.ui({
                                        //         instanciaUID_contenedorFinanciero: instanciaUID,
                                        //     })
                                        // })
                                        // contenedorBotones.appendChild(botonInsertarDescuento)

                                        totalesUI.appendChild(contenedorBotones)
                                    }
                                    if (modoUI === "simulador") {
                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6",
                                        )

                                        const botonInsertarDescuento = document.createElement("div")
                                        botonInsertarDescuento.classList.add(
                                            "botonV1",
                                            "comportamientoBoton"
                                        )
                                        botonInsertarDescuento.innerText = "Reconstruir desglose financerio"
                                        botonInsertarDescuento.addEventListener("click", () => {
                                            casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.reconstruirDesgloseFinanciero.ui({
                                                instanciaUID_contenedorFinanciero: instanciaUID,
                                            })
                                        })
                                        contenedorBotones.appendChild(botonInsertarDescuento)

                                        totalesUI.appendChild(contenedorBotones)
                                    }
                                }

                                const contenedorTotales_renderizado = document.querySelector(destino).querySelector("[contenedor=financiero] [entidad=reserva]").querySelector("[contenedor=totales]")

                                const contenedorTotalesNeto_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalesNeto]")
                                if (!contenedorTotalesNeto_selector) {
                                    const contenedorTotalesNeto = document.createElement("div")
                                    contenedorTotalesNeto.setAttribute("contenedor", "totalesNeto")
                                    contenedorTotalesNeto.classList.add(
                                        "backgroundGrey1",
                                        "borderRadius8",
                                        "flexVertical",
                                        "padding6",
                                        "gap6"
                                    )

                                    const contenedorTotalNetoUI = document.createElement("div")
                                    contenedorTotalNetoUI.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalReservaNetoUI = document.createElement("div")
                                    //totalReservaNetoUI.classList.add("detalleDelTotal")
                                    totalReservaNetoUI.innerText = "Total reserva neto"
                                    contenedorTotalNetoUI.appendChild(totalReservaNetoUI)

                                    const totalReservaNetoUI_ = document.createElement("div")
                                    totalReservaNetoUI_.setAttribute("dato", "totalNeto")
                                    totalReservaNetoUI_.classList.add(
                                        "negrita"
                                    )
                                    contenedorTotalNetoUI.appendChild(totalReservaNetoUI_)
                                    contenedorTotalesNeto.appendChild(contenedorTotalNetoUI)

                                    const contenedorPromedioNoche = document.createElement("div")
                                    contenedorPromedioNoche.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalReservaNetoDiaUI = document.createElement("div")
                                    //totalReservaNetoDiaUI.classList.add("detalleDelTotal")
                                    totalReservaNetoDiaUI.innerText = "Precio medio neto de la reserva por noche"
                                    contenedorPromedioNoche.appendChild(totalReservaNetoDiaUI)

                                    const totalReservaNetoDiaUI_ = document.createElement("div")
                                    totalReservaNetoDiaUI_.classList.add("negrita")
                                    totalReservaNetoDiaUI_.setAttribute("dato", "totalNetoNocheMedio")

                                    contenedorPromedioNoche.appendChild(totalReservaNetoDiaUI_)
                                    contenedorTotalesNeto.appendChild(contenedorPromedioNoche)
                                    contenedorTotales_renderizado.appendChild(contenedorTotalesNeto)

                                }
                                const contenedorTotalesNeto_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalesNeto]")

                                const totalNetoUI = contenedorTotalesNeto_renderizado.querySelector("[dato=totalNeto]")
                                totalNetoUI.innerText = totalNeto

                                const promedioNocheNetoUI = contenedorTotalesNeto_renderizado.querySelector("[dato=totalNetoNocheMedio]")
                                promedioNocheNetoUI.innerText = promedioNocheNeto

                                const totalesDescuentos_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalDescuentos]")
                                if (!totalesDescuentos_selector && totalDescuento) {
                                    const contenedorTotalesDescuentos = document.createElement("div")
                                    contenedorTotalesDescuentos.setAttribute("contenedor", "totalDescuentos")
                                    contenedorTotalesDescuentos.classList.add(
                                        "backgroundGrey1",
                                        "borderRadius8",
                                        "flexVertical",
                                        "padding6",
                                        "gap6"
                                    )
                                    contenedorTotales_renderizado.appendChild(contenedorTotalesDescuentos)

                                    const contenedorTotalDescuentosAplicados = document.createElement("div")
                                    contenedorTotalDescuentosAplicados.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalDescuentosAplicadosUI = document.createElement("div")
                                    //totalDescuentosAplicadosUI.classList.add("detalleDelTotal")
                                    totalDescuentosAplicadosUI.innerText = "Descuento total por todas las ofertas aplicadas"
                                    contenedorTotalDescuentosAplicados.appendChild(totalDescuentosAplicadosUI)

                                    const totalDescuentosAplicadosUI_ = document.createElement("div")
                                    totalDescuentosAplicadosUI_.classList.add("negrita")
                                    totalDescuentosAplicadosUI_.setAttribute("dato", "totalConDescuentoAplicado")
                                    contenedorTotalDescuentosAplicados.appendChild(totalDescuentosAplicadosUI_)
                                    contenedorTotalesDescuentos.appendChild(contenedorTotalDescuentosAplicados)

                                    const contenedorTotalNetoConDescuentos = document.createElement("div")
                                    contenedorTotalNetoConDescuentos.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalNetoConDescuentosUI = document.createElement("div")
                                    //totalNetoConDescuentosUI.classList.add("detalleDelTotal")
                                    totalNetoConDescuentosUI.innerText = "Total neto con descuentos aplicados"
                                    contenedorTotalNetoConDescuentos.appendChild(totalNetoConDescuentosUI)

                                    const totalNetoConDescuentosUI_ = document.createElement("div")
                                    totalNetoConDescuentosUI_.classList.add("negrita")
                                    totalNetoConDescuentosUI_.setAttribute("dato", "totalNetoConDescuentos")

                                    contenedorTotalNetoConDescuentos.appendChild(totalNetoConDescuentosUI_)
                                    contenedorTotalesDescuentos.appendChild(contenedorTotalNetoConDescuentos)


                                    const contenedorPromedio = document.createElement("div")
                                    contenedorPromedio.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const precioMedioConDescuentos = document.createElement("div")
                                    //precioMedioConDescuentos.classList.add("detalleDelTotal")
                                    precioMedioConDescuentos.innerText = "Precio medio neto de la reserva por noche con descuentos aplicados"
                                    contenedorPromedio.appendChild(precioMedioConDescuentos)

                                    const precioMedioConDescuentos_ = document.createElement("div")
                                    precioMedioConDescuentos_.classList.add("negrita")
                                    precioMedioConDescuentos_.setAttribute("dato", "precioMedioConDescuentos")

                                    contenedorPromedio.appendChild(precioMedioConDescuentos_)
                                    contenedorTotalesDescuentos.appendChild(contenedorPromedio)
                                }
                                const totalesDescuentos_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalDescuentos]")
                                if (!totalDescuento) {
                                    totalesDescuentos_renderizado?.remove()
                                } else {
                                    const totalConDescuentosAplicadosUI = totalesDescuentos_renderizado.querySelector("[dato=totalConDescuentoAplicado]")

                                    totalConDescuentosAplicadosUI.innerText = totalDescuento

                                    const totalConDescuentosUI = totalesDescuentos_renderizado.querySelector("[dato=totalNetoConDescuentos]")
                                    totalConDescuentosUI.innerText = totalNetoConDescuentos

                                    const promedioNocheNetoConDescuentosUI = totalesDescuentos_renderizado.querySelector("[dato=precioMedioConDescuentos]")
                                    promedioNocheNetoConDescuentosUI.innerText = promedioNocheNetoConDescuentos
                                }

                                const contenedorTotalesFinal_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalesFinal]")
                                if (!contenedorTotalesFinal_selector) {

                                    const contenedorTotalesFinal = document.createElement("div")
                                    contenedorTotalesFinal.setAttribute("contenedor", "totalesFinal")
                                    contenedorTotalesFinal.classList.add(
                                        "backgroundGrey1",
                                        "borderRadius8",
                                        "flexVertical",
                                        "padding6",
                                        "gap6"
                                    )
                                    contenedorTotales_renderizado.appendChild(contenedorTotalesFinal)
                                    const contenedorTotalImpuestosAplicados = document.createElement("div")
                                    contenedorTotalImpuestosAplicados.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalImpuestosUI = document.createElement("div")
                                    //totalImpuestosUI.classList.add("detalleDelTotal")
                                    totalImpuestosUI.innerText = "Total impuestos aplicados"
                                    contenedorTotalImpuestosAplicados.appendChild(totalImpuestosUI)

                                    const totalImpuestosUI_ = document.createElement("div")
                                    totalImpuestosUI_.classList.add("negrita")
                                    totalImpuestosUI_.setAttribute("dato", "impuestosAplicados")
                                    contenedorTotalImpuestosAplicados.appendChild(totalImpuestosUI_)

                                    contenedorTotalesFinal.appendChild(contenedorTotalImpuestosAplicados)

                                    const contenedorTotalFinal = document.createElement("div")
                                    contenedorTotalFinal.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalConImpuestosUI = document.createElement("div")
                                    totalConImpuestosUI.innerText = "Total final"
                                    contenedorTotalFinal.appendChild(totalConImpuestosUI)

                                    const totalConImpuestosUI_ = document.createElement("div")
                                    totalConImpuestosUI_.classList.add("negrita")
                                    totalConImpuestosUI_.setAttribute("dato", "totalFinal")
                                    //totalConImpuestosUI_.innerText = totalFinal
                                    contenedorTotalFinal.appendChild(totalConImpuestosUI_)
                                    contenedorTotalesFinal.appendChild(contenedorTotalFinal)
                                }
                                const contenedorTotalesFinal_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalesFinal]")


                                const impuestosAplicadosUI = contenedorTotalesFinal_renderizado.querySelector("[dato=impuestosAplicados]")
                                impuestosAplicadosUI.innerText = impuestosAplicados

                                const totalFinalUI = contenedorTotalesFinal_renderizado.querySelector("[dato=totalFinal]")
                                totalFinalUI.innerText = totalFinal

                            },
                        },
                        servicios: {
                            contenedor: (data) => {
                                const destino = data.destino
                                const selector = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=servicio]")
                                if (!selector) {

                                    const contenedorPlegable = document.createElement('details');
                                    contenedorPlegable.classList.add("contenedorEntidad")
                                    contenedorPlegable.setAttribute("entidad", "servicio")

                                    // Crear el elemento <summary>
                                    const tituloContenedorPlegable = document.createElement('summary');
                                    tituloContenedorPlegable.classList.add(
                                        "padding12",
                                        "textSize16"
                                    )
                                    tituloContenedorPlegable.textContent = 'Servicios';
                                    contenedorPlegable.appendChild(tituloContenedorPlegable)


                                    // const contenedor = document.createElement("div")
                                    // contenedor.classList.add("contenedorEntidad")
                                    // contenedor.setAttribute("entidad", "servicio")
                                    document.querySelector(destino).querySelector("[contenedor=financiero]").appendChild(contenedorPlegable)
                                }
                            },
                            porServicio: (data) => {
                                const destino = data.destino
                                const desglosePorServicios = data.desglosePorServicios

                                const porServicio_selector = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=servicio]").querySelector("[contenedor=porServicio]")
                                if (!porServicio_selector) {
                                    const contenedor = document.createElement("div")
                                    contenedor.classList.add("contenedorPorApartamento",
                                        "padding6",
                                        "flexVertical",
                                        "gap6"
                                    )
                                    contenedor.setAttribute("contenedor", "porServicio")
                                    contenedor.setAttribute("componente", "plegable")

                                    const tituloContendor = document.createElement("div")
                                    tituloContendor.classList.add(
                                        "negrita",
                                        "textoCentrado",
                                        "padding6"
                                    )
                                    tituloContendor.innerText = "Desglose por servicio"
                                    contenedor.appendChild(tituloContendor)
                                    document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=servicio]").appendChild(contenedor)

                                }
                                const porServicio_renderizado = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[entidad=servicio]").querySelector("[contenedor=porServicio]")

                                for (const servicio of desglosePorServicios) {
                                    const servicioUID_enReserva = servicio.servicioUID

                                    const contenedorServicio_selector = porServicio_renderizado.querySelector(`[servicioUID="${servicioUID_enReserva}"]`)
                                    if (!contenedorServicio_selector) {
                                        const contenedorServicio = document.createElement("div")
                                        contenedorServicio.classList.add("contenedorApartamento")
                                        contenedorServicio.setAttribute("servicioUID", servicioUID_enReserva)
                                        porServicio_renderizado.appendChild(contenedorServicio)

                                        const nombreInterno = servicio.nombre
                                        const contenedor = servicio.contenedor

                                        const precio = contenedor.precio
                                        const definicion = contenedor.definicion
                                        const fechaFinal = contenedor.fechaFinal
                                        const duracionIDV = contenedor.duracionIDV
                                        const fechaInicio = contenedor.fechaInicio
                                        const tituloPublico = contenedor.tituloPublico
                                        const disponibilidadIDV = contenedor.disponibilidadIDV

                                        const diccionario = {
                                            disponibilidad: {
                                                constante: "Disponible",
                                                variable: "Disponibilidad variable"
                                            }
                                        }

                                        const servicioUI = document.createElement("div")
                                        servicioUI.setAttribute("servicioUID_enReserva", servicioUID_enReserva)
                                        servicioUI.classList.add(
                                            "flexVertical",
                                            "padding14",
                                            "backgroundGrey1",
                                            "borderRadius14"
                                        )
                                        const contenedorInterno = document.createElement("div")
                                        contenedorInterno.classList.add(
                                            "flexVertical",
                                            "gap6"
                                        )
                                        servicioUI.appendChild(contenedorInterno)

                                        const nombreInternoUI = document.createElement("p")
                                        nombreInternoUI.innerText = `${nombreInterno}`
                                        contenedorInterno.appendChild(nombreInternoUI)

                                        const contenedorGlobal = document.createElement("div")
                                        contenedorGlobal.classList.add(
                                            "contenedorGlobal"
                                        )
                                        servicioUI.appendChild(contenedorGlobal)

                                        const esferaSeleccionable = document.createElement("div")
                                        esferaSeleccionable.classList.add(
                                            "esferaSeleccionable"
                                        )
                                        contenedorGlobal.appendChild(esferaSeleccionable)

                                        const indicadorDeSeleccion = document.createElement("div")
                                        indicadorDeSeleccion.setAttribute("componente", "indicadorSelecion")
                                        indicadorDeSeleccion.classList.add(
                                            "indicadorDeSeleccion"
                                        )
                                        esferaSeleccionable.appendChild(indicadorDeSeleccion)

                                        const titulo = document.createElement("p")
                                        titulo.classList.add(
                                            "padding6",
                                            "negrita"
                                        )
                                        titulo.innerText = tituloPublico
                                        contenedorGlobal.appendChild(titulo)


                                        const disponibilidadUI = document.createElement("p")
                                        disponibilidadUI.classList.add(
                                            "padding6"
                                        )
                                        disponibilidadUI.innerText = diccionario.disponibilidad[disponibilidadIDV]
                                        servicioUI.appendChild(disponibilidadUI)


                                        if (disponibilidadIDV === "variable") {

                                            const info = document.createElement("p")
                                            info.classList.add(
                                                "padding6"
                                            )
                                            info.innerText = `Este servicio tiene una disponibilidad limitada. Es por eso que si selecciona este servicio, nos pondremos en contacto con el titular de la reserva en las próximas horas para confirmarle la disponibilidad del servicio para su reserva.`
                                            servicioUI.appendChild(info)
                                        }

                                        const precioUI = document.createElement("p")
                                        precioUI.classList.add(
                                            "padding6",
                                            "negrita"
                                        )
                                        precioUI.innerText = precio + "$"
                                        servicioUI.appendChild(precioUI)

                                        if (duracionIDV === "rango") {
                                            const contenedorDuracion = document.createElement("div")
                                            contenedorDuracion.classList.add(
                                                "flexVertical",
                                                "padding6"

                                            )
                                            servicioUI.appendChild(contenedorDuracion)

                                            const info = document.createElement("p")
                                            info.classList.add("negrita")
                                            info.innerText = `Servicio disponible solo desde ${fechaInicio} hata ${fechaFinal}. Ambas fechas incluidas.`
                                            contenedorDuracion.appendChild(info)

                                        }
                                        const definicionUI = document.createElement("p")
                                        definicionUI.classList.add(
                                            "padding6"
                                        )
                                        definicionUI.innerText = definicion
                                        servicioUI.appendChild(definicionUI)

                                        contenedorServicio.appendChild(servicioUI)
                                    }


                                    // const contenedorApartamento_renderizado = porApartamento_renderizado.querySelector(`[apartamentoIDV=${apartamentoIDV}]`)

                                    // const precioNetoApartamentoUI = contenedorApartamento_renderizado.querySelector("[dato=totalNeto]")
                                    // precioNetoApartamentoUI.innerText = totalNeto + "$ Total neto"

                                    // const precioMedioNetoNocheApartamentoUI = contenedorApartamento_renderizado.querySelector("[dato=precioMedioNetoNoche]")
                                    // precioMedioNetoNocheApartamentoUI.innerText = precioMedioNetoNoche + "$ Precio medio neto por noche"

                                }

                            },
                            totales: (data) => {
                                const destino = data.destino
                                const totales = data.totales
                                const instanciaUID = data.instanciaUID

                                const totalNeto = totales?.totalNeto
                                const totalFinal = totales?.totalFinal
                                const totalDescuento = totales?.totalDescuento
                                const impuestosAplicados = totales?.impuestosAplicados
                                const promedioNocheNeto = totales?.promedioNocheNeto
                                const promedioNocheNetoConDescuentos = totales?.promedioNocheNetoConDescuentos
                                const totalNetoConDescuentos = totales?.totalNetoConDescuentos
                                const contenedorFinanciero = document.querySelector(destino).querySelector("[contenedor=financiero]")
                                const modoUI = contenedorFinanciero.getAttribute("modoUI")

                                const contenedorTotales_selector = document.querySelector(destino).querySelector("[contenedor=financiero] [entidad=reserva]").querySelector("[contenedor=totales]")
                                if (!contenedorTotales_selector) {

                                    const totalesUI = document.createElement("div")
                                    totalesUI.classList.add("reserva_resumen_desglose_pago_bloque")
                                    totalesUI.setAttribute("contenedor", "totales")
                                    totalesUI.setAttribute("componente", "plegable")
                                    document.querySelector(destino).querySelector("[contenedor=financiero] [entidad=reserva]").appendChild(totalesUI)

                                    const totalesUITituloBloque = document.createElement("div")
                                    totalesUITituloBloque.classList.add("reserva_resumen_desglose_pago_titulo")
                                    totalesUITituloBloque.innerText = "Totales reserva (Alojamieinto)"
                                    totalesUI.appendChild(totalesUITituloBloque)

                                    if (modoUI === "administracion") {
                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6",
                                        )

                                        // const botonInsertarDescuento = document.createElement("div")
                                        // botonInsertarDescuento.classList.add(
                                        //     "botonV1",
                                        //     "comportamientoBoton"
                                        // )
                                        // botonInsertarDescuento.innerText = "Reconstruir desglose financerio"
                                        // botonInsertarDescuento.addEventListener("click", () => {
                                        //     casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.reconstruirDesgloseFinanciero.ui({
                                        //         instanciaUID_contenedorFinanciero: instanciaUID,
                                        //     })
                                        // })
                                        // contenedorBotones.appendChild(botonInsertarDescuento)

                                        totalesUI.appendChild(contenedorBotones)
                                    }
                                    if (modoUI === "simulador") {
                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6",
                                        )

                                        const botonInsertarDescuento = document.createElement("div")
                                        botonInsertarDescuento.classList.add(
                                            "botonV1",
                                            "comportamientoBoton"
                                        )
                                        botonInsertarDescuento.innerText = "Reconstruir desglose financerio"
                                        botonInsertarDescuento.addEventListener("click", () => {
                                            casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.reconstruirDesgloseFinanciero.ui({
                                                instanciaUID_contenedorFinanciero: instanciaUID,
                                            })
                                        })
                                        contenedorBotones.appendChild(botonInsertarDescuento)

                                        totalesUI.appendChild(contenedorBotones)
                                    }
                                }

                                const contenedorTotales_renderizado = document.querySelector(destino).querySelector("[contenedor=financiero] [entidad=reserva]").querySelector("[contenedor=totales]")

                                const contenedorTotalesNeto_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalesNeto]")
                                if (!contenedorTotalesNeto_selector) {
                                    const contenedorTotalesNeto = document.createElement("div")
                                    contenedorTotalesNeto.setAttribute("contenedor", "totalesNeto")
                                    contenedorTotalesNeto.classList.add(
                                        "backgroundGrey1",
                                        "borderRadius8",
                                        "flexVertical",
                                        "padding6",
                                        "gap6"
                                    )

                                    const contenedorTotalNetoUI = document.createElement("div")
                                    contenedorTotalNetoUI.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalReservaNetoUI = document.createElement("div")
                                    //totalReservaNetoUI.classList.add("detalleDelTotal")
                                    totalReservaNetoUI.innerText = "Total reserva neto"
                                    contenedorTotalNetoUI.appendChild(totalReservaNetoUI)

                                    const totalReservaNetoUI_ = document.createElement("div")
                                    totalReservaNetoUI_.setAttribute("dato", "totalNeto")
                                    totalReservaNetoUI_.classList.add(
                                        "negrita"
                                    )
                                    contenedorTotalNetoUI.appendChild(totalReservaNetoUI_)
                                    contenedorTotalesNeto.appendChild(contenedorTotalNetoUI)

                                    const contenedorPromedioNoche = document.createElement("div")
                                    contenedorPromedioNoche.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalReservaNetoDiaUI = document.createElement("div")
                                    //totalReservaNetoDiaUI.classList.add("detalleDelTotal")
                                    totalReservaNetoDiaUI.innerText = "Precio medio neto de la reserva por noche"
                                    contenedorPromedioNoche.appendChild(totalReservaNetoDiaUI)

                                    const totalReservaNetoDiaUI_ = document.createElement("div")
                                    totalReservaNetoDiaUI_.classList.add("negrita")
                                    totalReservaNetoDiaUI_.setAttribute("dato", "totalNetoNocheMedio")

                                    contenedorPromedioNoche.appendChild(totalReservaNetoDiaUI_)
                                    contenedorTotalesNeto.appendChild(contenedorPromedioNoche)
                                    contenedorTotales_renderizado.appendChild(contenedorTotalesNeto)

                                }
                                const contenedorTotalesNeto_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalesNeto]")

                                const totalNetoUI = contenedorTotalesNeto_renderizado.querySelector("[dato=totalNeto]")
                                totalNetoUI.innerText = totalNeto

                                const promedioNocheNetoUI = contenedorTotalesNeto_renderizado.querySelector("[dato=totalNetoNocheMedio]")
                                promedioNocheNetoUI.innerText = promedioNocheNeto

                                const totalesDescuentos_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalDescuentos]")
                                if (!totalesDescuentos_selector && totalDescuento) {
                                    const contenedorTotalesDescuentos = document.createElement("div")
                                    contenedorTotalesDescuentos.setAttribute("contenedor", "totalDescuentos")
                                    contenedorTotalesDescuentos.classList.add(
                                        "backgroundGrey1",
                                        "borderRadius8",
                                        "flexVertical",
                                        "padding6",
                                        "gap6"
                                    )
                                    contenedorTotales_renderizado.appendChild(contenedorTotalesDescuentos)

                                    const contenedorTotalDescuentosAplicados = document.createElement("div")
                                    contenedorTotalDescuentosAplicados.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalDescuentosAplicadosUI = document.createElement("div")
                                    //totalDescuentosAplicadosUI.classList.add("detalleDelTotal")
                                    totalDescuentosAplicadosUI.innerText = "Descuento total por todas las ofertas aplicadas"
                                    contenedorTotalDescuentosAplicados.appendChild(totalDescuentosAplicadosUI)

                                    const totalDescuentosAplicadosUI_ = document.createElement("div")
                                    totalDescuentosAplicadosUI_.classList.add("negrita")
                                    totalDescuentosAplicadosUI_.setAttribute("dato", "totalConDescuentoAplicado")
                                    contenedorTotalDescuentosAplicados.appendChild(totalDescuentosAplicadosUI_)
                                    contenedorTotalesDescuentos.appendChild(contenedorTotalDescuentosAplicados)

                                    const contenedorTotalNetoConDescuentos = document.createElement("div")
                                    contenedorTotalNetoConDescuentos.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalNetoConDescuentosUI = document.createElement("div")
                                    //totalNetoConDescuentosUI.classList.add("detalleDelTotal")
                                    totalNetoConDescuentosUI.innerText = "Total neto con descuentos aplicados"
                                    contenedorTotalNetoConDescuentos.appendChild(totalNetoConDescuentosUI)

                                    const totalNetoConDescuentosUI_ = document.createElement("div")
                                    totalNetoConDescuentosUI_.classList.add("negrita")
                                    totalNetoConDescuentosUI_.setAttribute("dato", "totalNetoConDescuentos")

                                    contenedorTotalNetoConDescuentos.appendChild(totalNetoConDescuentosUI_)
                                    contenedorTotalesDescuentos.appendChild(contenedorTotalNetoConDescuentos)


                                    const contenedorPromedio = document.createElement("div")
                                    contenedorPromedio.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const precioMedioConDescuentos = document.createElement("div")
                                    //precioMedioConDescuentos.classList.add("detalleDelTotal")
                                    precioMedioConDescuentos.innerText = "Precio medio neto de la reserva por noche con descuentos aplicados"
                                    contenedorPromedio.appendChild(precioMedioConDescuentos)

                                    const precioMedioConDescuentos_ = document.createElement("div")
                                    precioMedioConDescuentos_.classList.add("negrita")
                                    precioMedioConDescuentos_.setAttribute("dato", "precioMedioConDescuentos")

                                    contenedorPromedio.appendChild(precioMedioConDescuentos_)
                                    contenedorTotalesDescuentos.appendChild(contenedorPromedio)
                                }
                                const totalesDescuentos_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalDescuentos]")
                                if (!totalDescuento) {
                                    totalesDescuentos_renderizado?.remove()
                                } else {
                                    const totalConDescuentosAplicadosUI = totalesDescuentos_renderizado.querySelector("[dato=totalConDescuentoAplicado]")

                                    totalConDescuentosAplicadosUI.innerText = totalDescuento

                                    const totalConDescuentosUI = totalesDescuentos_renderizado.querySelector("[dato=totalNetoConDescuentos]")
                                    totalConDescuentosUI.innerText = totalNetoConDescuentos

                                    const promedioNocheNetoConDescuentosUI = totalesDescuentos_renderizado.querySelector("[dato=precioMedioConDescuentos]")
                                    promedioNocheNetoConDescuentosUI.innerText = promedioNocheNetoConDescuentos
                                }

                                const contenedorTotalesFinal_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalesFinal]")
                                if (!contenedorTotalesFinal_selector) {

                                    const contenedorTotalesFinal = document.createElement("div")
                                    contenedorTotalesFinal.setAttribute("contenedor", "totalesFinal")
                                    contenedorTotalesFinal.classList.add(
                                        "backgroundGrey1",
                                        "borderRadius8",
                                        "flexVertical",
                                        "padding6",
                                        "gap6"
                                    )
                                    contenedorTotales_renderizado.appendChild(contenedorTotalesFinal)
                                    const contenedorTotalImpuestosAplicados = document.createElement("div")
                                    contenedorTotalImpuestosAplicados.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalImpuestosUI = document.createElement("div")
                                    //totalImpuestosUI.classList.add("detalleDelTotal")
                                    totalImpuestosUI.innerText = "Total impuestos aplicados"
                                    contenedorTotalImpuestosAplicados.appendChild(totalImpuestosUI)

                                    const totalImpuestosUI_ = document.createElement("div")
                                    totalImpuestosUI_.classList.add("negrita")
                                    totalImpuestosUI_.setAttribute("dato", "impuestosAplicados")
                                    contenedorTotalImpuestosAplicados.appendChild(totalImpuestosUI_)

                                    contenedorTotalesFinal.appendChild(contenedorTotalImpuestosAplicados)

                                    const contenedorTotalFinal = document.createElement("div")
                                    contenedorTotalFinal.classList.add(
                                        "flexVertical",
                                        "padding6"
                                    )

                                    const totalConImpuestosUI = document.createElement("div")
                                    totalConImpuestosUI.innerText = "Total final"
                                    contenedorTotalFinal.appendChild(totalConImpuestosUI)

                                    const totalConImpuestosUI_ = document.createElement("div")
                                    totalConImpuestosUI_.classList.add("negrita")
                                    totalConImpuestosUI_.setAttribute("dato", "totalFinal")
                                    //totalConImpuestosUI_.innerText = totalFinal
                                    contenedorTotalFinal.appendChild(totalConImpuestosUI_)
                                    contenedorTotalesFinal.appendChild(contenedorTotalFinal)
                                }
                                const contenedorTotalesFinal_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalesFinal]")


                                const impuestosAplicadosUI = contenedorTotalesFinal_renderizado.querySelector("[dato=impuestosAplicados]")
                                impuestosAplicadosUI.innerText = impuestosAplicados

                                const totalFinalUI = contenedorTotalesFinal_renderizado.querySelector("[dato=totalFinal]")
                                totalFinalUI.innerText = totalFinal

                            },

                        }

                    },
                    ofertas: {
                        hub: function (data) {
                            const destino = data.destino
                            const instanciaUID = data.instanciaUID
                            const contenedorOfertas = data.contenedorOfertas
                            const ofertas = contenedorOfertas.ofertas
                            const porTotal = contenedorOfertas.entidades.reserva.desgloses.porTotal
                            const entidades = contenedorOfertas.entidades


                            this.ofertaUI({
                                destino,
                                ofertas,
                                porTotal,
                                entidades,
                                instanciaUID

                            })
                        },
                        ofertaUI: function (data) {

                            const destino = data.destino
                            const ofertas = data.ofertas
                            const ofertasPorCondicion = ofertas.porCondicion
                            const ofertasPorAdministrador = ofertas.porAdministrador
                            const porTotal = data.porTotal
                            const entidades = data.entidades

                            const ofertasPorCondicionArray = Object.keys(ofertasPorCondicion)
                            const ofertasPorAdministradorArray = Object.keys(ofertasPorAdministrador)
                            const contenedorFinanciero = document.querySelector(destino).querySelector("[contenedor=financiero]")
                            const modoUI = contenedorFinanciero.getAttribute("modoUI")
                            const instanciaUID = data.instanciaUID

                            if (ofertasPorCondicionArray.length === 0
                                &&
                                ofertasPorAdministradorArray.length === 0
                                && modoUI === "plaza") {
                                document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=ofertas]")?.remove()
                                return
                            }

                            const contenedorOfertas_selector = contenedorFinanciero.querySelector("[contenedor=ofertas]")
                            if (!contenedorOfertas_selector) {
                                const contenedor = document.createElement("div")
                                contenedor.classList.add("contenedorOfertas")
                                contenedor.setAttribute("contenedor", "ofertas")
                                contenedor.setAttribute("componente", "plegable")
                                contenedor.classList.add(
                                    "flexVertical",
                                    "padding6",
                                    "gap6",
                                )
                                contenedorFinanciero.appendChild(contenedor)

                                const tituloContendor = document.createElement("div")
                                tituloContendor.classList.add(
                                    "negrita",
                                    "textoCentrado",
                                )
                                tituloContendor.innerText = "Ofertas aplicadas"
                                contenedor.appendChild(tituloContendor)

                                if (modoUI === "administracion") {
                                    const contenedorBotones = document.createElement("div")
                                    contenedorBotones.classList.add(
                                        "flexHorizontal",
                                        "gap6",
                                    )

                                    const botonInsertarDescuento = document.createElement("div")
                                    botonInsertarDescuento.classList.add(
                                        "botonV1",
                                        "comportamientoBoton"
                                    )
                                    botonInsertarDescuento.innerText = "Insertar descuento"
                                    botonInsertarDescuento.addEventListener("click", () => {
                                        casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.insertarDescuentos.ui({
                                            instanciaUID_contenedorFinanciero: instanciaUID
                                        })
                                    })
                                    contenedorBotones.appendChild(botonInsertarDescuento)
                                    contenedor.appendChild(contenedorBotones)

                                    const botonDescuentosCompatibles = document.createElement("div")
                                    botonDescuentosCompatibles.classList.add(
                                        "botonV1",
                                        "comportamientoBoton"
                                    )
                                    botonDescuentosCompatibles.innerText = "Descuentos compatibles"
                                    botonDescuentosCompatibles.addEventListener("click", () => {
                                        casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.insertarOfertasCompatibles.ui({
                                            instanciaUID_contenedorFinanciero: instanciaUID
                                        })
                                    })
                                    contenedorBotones.appendChild(botonDescuentosCompatibles)
                                    contenedor.appendChild(contenedorBotones)
                                }
                                if (modoUI === "simulador") {
                                    const contenedorBotones = document.createElement("div")
                                    contenedorBotones.classList.add(
                                        "flexHorizontal",
                                        "gap6",
                                    )

                                    const botonInsertarDescuento = document.createElement("div")
                                    botonInsertarDescuento.classList.add(
                                        "botonV1",
                                        "comportamientoBoton"
                                    )
                                    botonInsertarDescuento.innerText = "Insertar descuento"
                                    botonInsertarDescuento.addEventListener("click", () => {
                                        casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.insertarDescuentos.ui({
                                            instanciaUID_contenedorFinanciero: instanciaUID
                                        })
                                    })
                                    contenedorBotones.appendChild(botonInsertarDescuento)
                                    contenedor.appendChild(contenedorBotones)

                                    const botonDescuentosCompatibles = document.createElement("div")
                                    botonDescuentosCompatibles.classList.add(
                                        "botonV1",
                                        "comportamientoBoton"
                                    )
                                    botonDescuentosCompatibles.innerText = "Descuentos compatibles"
                                    botonDescuentosCompatibles.addEventListener("click", () => {
                                        casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.insertarOfertasCompatibles.ui({
                                            instanciaUID_contenedorFinanciero: instanciaUID
                                        })
                                    })
                                    contenedorBotones.appendChild(botonDescuentosCompatibles)
                                    contenedor.appendChild(contenedorBotones)
                                }
                                // Crear dos contenedors, uno para las oferta de dos tipos y otro para los totales
                                const contenedorListaOfertas = document.createElement("div")
                                contenedorListaOfertas.setAttribute("contenedor", "listaOfertas")
                                contenedorListaOfertas.classList.add(
                                    "flexVertical",
                                    "gap6"
                                )
                                contenedor.appendChild(contenedorListaOfertas)

                                const contenedorDescuentosAplicadosAlTotalNeto = document.createElement("div")
                                contenedorDescuentosAplicadosAlTotalNeto.setAttribute("contenedor", "listaDescuentosPorTotal")
                                contenedorDescuentosAplicadosAlTotalNeto.classList.add(
                                    "flexVertical",
                                    "gap6"

                                )
                                contenedor.appendChild(contenedorDescuentosAplicadosAlTotalNeto)

                            }
                            const contenedorOfertas_renderizado = document.querySelector(destino).querySelector("[contenedor=financiero]")
                                .querySelector("[contenedor=ofertas]")
                                .querySelector("[contenedor=listaOfertas]")

                            this.componentesUI.utilidades.limpiarOfertasObsoletas({
                                contenedores: ofertasPorCondicion,
                                origen: "porCondicion",
                                destino
                            })

                            this.componentesUI.utilidades.limpiarOfertasObsoletas({
                                contenedores: ofertasPorAdministrador,
                                origen: "porAdministrador",
                                destino
                            })

                            if (ofertasPorAdministradorArray.length === 0) {
                                contenedorOfertas_renderizado?.querySelector(`[contenedor=porAdministrador]`)?.remove()
                            }

                            if (ofertasPorCondicionArray.length === 0) {
                                contenedorOfertas_renderizado?.querySelector(`[contenedor=porCondicion]`)?.remove()
                            }
                            ofertasPorCondicion.forEach((contenedorOferta, posicion) => {

                                const selectorContenedorPorCondicion = contenedorOfertas_renderizado.querySelector(`[contenedor=porCondicion]`)
                                if (!selectorContenedorPorCondicion) {
                                    const contenedorPorCondicion = document.createElement("div")
                                    contenedorPorCondicion.setAttribute("contenedor", "porCondicion")
                                    contenedorPorCondicion.classList.add(
                                        "flexVertical",
                                        "padding6",
                                        "gap6",
                                        "borderGrey1",
                                        "borderRadius12"
                                    )

                                    const tituloContendor = document.createElement("div")
                                    tituloContendor.classList.add(
                                        "negrita",
                                        "textoCentrado",
                                    )
                                    tituloContendor.innerText = "Ofertas aplicadas por condición"
                                    contenedorPorCondicion.appendChild(tituloContendor)
                                    contenedorOfertas_renderizado.appendChild(contenedorPorCondicion)
                                }

                                this.componentesUI.globalUI({
                                    destino,
                                    destinoOrigenOferta: "porCondicion",
                                    contenedorOferta,
                                    posicion
                                })

                                this.componentesUI.condicionesUI({
                                    destino,
                                    contenedorOferta,
                                    destinoOrigenOferta: "porCondicion"
                                })

                                this.componentesUI.descuentosUI({
                                    destino,
                                    destinoOrigenOferta: "porCondicion",
                                    contenedorOferta
                                })
                            })

                            ofertasPorAdministrador.forEach((contenedorOferta, posicion) => {

                                const selectorContenedorPorAdministrador = contenedorOfertas_renderizado.querySelector(`[contenedor=porAdministrador]`)
                                if (!selectorContenedorPorAdministrador) {
                                    const contenedorPorAdministrador = document.createElement("div")
                                    contenedorPorAdministrador.setAttribute("contenedor", "porAdministrador")
                                    contenedorPorAdministrador.classList.add(
                                        "flexVertical",
                                        "padding6",
                                        "gap6",
                                        "borderGrey1",
                                        "borderRadius12"
                                    )

                                    const tituloContendor = document.createElement("div")
                                    tituloContendor.classList.add(
                                        "negrita",
                                        "textoCentrado",
                                    )
                                    tituloContendor.innerText = "Ofertas aplicadas por administrador"
                                    contenedorPorAdministrador.appendChild(tituloContendor)
                                    contenedorOfertas_renderizado.appendChild(contenedorPorAdministrador)
                                }

                                this.componentesUI.globalUI({
                                    destino,
                                    destinoOrigenOferta: "porAdministrador",
                                    contenedorOferta,
                                    posicion
                                })

                                this.componentesUI.condicionesUI({
                                    destino,
                                    contenedorOferta,
                                    destinoOrigenOferta: "porAdministrador"
                                })

                                this.componentesUI.descuentosUI({
                                    destino,
                                    destinoOrigenOferta: "porAdministrador",
                                    contenedorOferta
                                })
                            })

                            this.porTotal({
                                destino,
                                porTotal
                            })

                            this.entidades.hub({
                                destino,
                                entidades
                            })
                        },

                        componentesUI: {
                            globalUI: function (data) {

                                const destino = data.destino
                                const destinoOrigenOferta = data.destinoOrigenOferta
                                const posicion = data?.posicion + 1

                                const contenedorOferta = data.contenedorOferta
                                const oferta = contenedorOferta.oferta

                                const contenedorFinanciero = document.querySelector(destino).querySelector("[contenedor=financiero]")

                                const modoUI = contenedorFinanciero.getAttribute("modoUI")
                                const autorizacion = contenedorOferta?.autorizacion
                                const ofertaUID = oferta.ofertaUID


                                const entidadIDV = oferta.entidadIDV
                                const fechaFinal = oferta.fechaFinal
                                const fechaInicio = oferta.fechaInicio
                                const nombreOferta = oferta.nombreOferta


                                const autorizacionUI = (autorizacion) => {
                                    if (autorizacion === "aceptada") {
                                        return "Aceptada"
                                    } else if (autorizacion === "rechazada") {
                                        return "Rechazada"
                                    }
                                }

                                const entidadUI_ = (entidadIDV) => {
                                    if (entidadIDV === "reserva") {
                                        return "Reserva"
                                    }
                                }



                                const contenedorOfertaUI_selector = document.querySelector(destino)
                                    .querySelector("[contenedor=financiero]")
                                    .querySelector("[contenedor=ofertas]")
                                    .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                    .querySelector(`[ofertaUID="${ofertaUID}"][posicion="${posicion}"]`)


                                if (!contenedorOfertaUI_selector) {



                                    const contenedorOfertaUI = document.createElement("div")
                                    contenedorOfertaUI.classList.add("contenedorOfertaUI")
                                    contenedorOfertaUI.setAttribute("ofertaUID", ofertaUID)
                                    contenedorOfertaUI.setAttribute("posicion", posicion)
                                    contenedorOfertaUI.classList.add(
                                        "flexVertical",
                                        "padding6",
                                        "gap6",
                                        "borderGrey1",
                                        "borderRadius10"
                                    )
                                    document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=ofertas]")
                                        .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                        .appendChild(contenedorOfertaUI)

                                    const contenedorGlobalOferta = document.createElement("div")
                                    contenedorGlobalOferta.classList.add(
                                        "flexVertical",
                                        "gap6"
                                    )
                                    contenedorOfertaUI.appendChild(contenedorGlobalOferta)


                                    const nombreOfertaUI = document.createElement("div")
                                    nombreOfertaUI.setAttribute("dato", "nombre")

                                    nombreOfertaUI.classList.add(
                                        "negrita",
                                        "padding6"
                                    )

                                    contenedorGlobalOferta.appendChild(nombreOfertaUI)


                                    const contenedorUID = document.createElement("div")
                                    contenedorUID.classList.add(
                                        "padding6"
                                    )

                                    const tituloUID = document.createElement("div")
                                    tituloUID.innerText = "UID"
                                    contenedorUID.appendChild(tituloUID)

                                    const ofertaUID_UI = document.createElement("div")
                                    ofertaUID_UI.classList.add("negrita")
                                    ofertaUID_UI.setAttribute("dato", "ofertaUID")

                                    contenedorUID.appendChild(ofertaUID_UI)
                                    contenedorGlobalOferta.appendChild(contenedorUID)


                                    const contenedorEntidad = document.createElement("div")
                                    contenedorEntidad.classList.add(
                                        "padding6"
                                    )

                                    const tituloEntidad = document.createElement("div")
                                    tituloEntidad.innerText = "Entidad"
                                    contenedorEntidad.appendChild(tituloEntidad)

                                    const entidadUI = document.createElement("div")
                                    entidadUI.classList.add("negrita")
                                    entidadUI.setAttribute("dato", "entidad")

                                    contenedorEntidad.appendChild(entidadUI)
                                    contenedorGlobalOferta.appendChild(contenedorEntidad)

                                    if (destinoOrigenOferta === "porCondicion") {
                                        const contenedorAutorizacion = document.createElement("div")
                                        contenedorAutorizacion.classList.add(
                                            "padding6"
                                        )
                                        contenedorAutorizacion.setAttribute("contenedor", "autorizacion")

                                        const textoAutorizacion = document.createElement("div")
                                        textoAutorizacion.innerText = "Estado de la autorizacíón"
                                        contenedorAutorizacion.appendChild(textoAutorizacion)


                                        const estadoAutorizacionUI = document.createElement("div")
                                        estadoAutorizacionUI.classList.add("negrita")
                                        estadoAutorizacionUI.setAttribute("dato", "autorizacion")

                                        contenedorAutorizacion.appendChild(estadoAutorizacionUI)
                                        contenedorGlobalOferta.appendChild(contenedorAutorizacion)
                                    }

                                    if (modoUI === "administracion") {
                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6"
                                        )
                                        contenedorGlobalOferta.appendChild(contenedorBotones)


                                        if (destinoOrigenOferta === "porCondicion") {

                                            const botonRechazar = document.createElement("div")
                                            botonRechazar.setAttribute("boton", "autorizacionOferta")
                                            botonRechazar.setAttribute("estadoActual", autorizacion)
                                            botonRechazar.classList.add(
                                                "botonV1",
                                                "comportamientoBoton"
                                            )
                                            if (autorizacion === "aceptada") {
                                                botonRechazar.innerText = "Rechazar oferta"
                                            } else if (autorizacion === "rechazada") {
                                                botonRechazar.innerText = "Aceptar oferta"
                                            }
                                            botonRechazar.addEventListener("click", (e) => {
                                                casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.actualizarEstadoAutorizacion({
                                                    e,
                                                    ofertaUID
                                                })
                                            })
                                            contenedorBotones.appendChild(botonRechazar)
                                            contenedorGlobalOferta.appendChild(contenedorBotones)
                                        }

                                        const botonEliminar = document.createElement("div")
                                        botonEliminar.classList.add(
                                            "botonV1",
                                            "comportamientoBoton"
                                        )
                                        botonEliminar.innerText = "Eliminar oferta de la reserva " + posicion
                                        botonEliminar.addEventListener("click", () => {
                                            casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.eliminarOfertaEnReserva.ui({
                                                origen: destinoOrigenOferta,
                                                ofertaUID,
                                                posicion,
                                                nombreOferta
                                            })
                                        })
                                        contenedorBotones.appendChild(botonEliminar)
                                    }
                                    if (modoUI === "simulador") {

                                        const contenedorBotones = document.createElement("div")
                                        contenedorBotones.classList.add(
                                            "flexHorizontal",
                                            "gap6"
                                        )
                                        contenedorGlobalOferta.appendChild(contenedorBotones)


                                        if (destinoOrigenOferta === "porCondicion") {

                                            const botonRechazar = document.createElement("div")
                                            botonRechazar.setAttribute("boton", "autorizacionOferta")
                                            botonRechazar.setAttribute("estadoActual", autorizacion)
                                            botonRechazar.classList.add(
                                                "botonV1",
                                                "comportamientoBoton"
                                            )
                                            if (autorizacion === "aceptada") {
                                                botonRechazar.innerText = "Rechazar oferta"
                                            } else if (autorizacion === "rechazada") {
                                                botonRechazar.innerText = "Aceptar oferta"
                                            }
                                            botonRechazar.addEventListener("click", (e) => {
                                                casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.actualizarEstadoAutorizacion({
                                                    e,
                                                    ofertaUID
                                                })
                                            })
                                            contenedorBotones.appendChild(botonRechazar)
                                            contenedorGlobalOferta.appendChild(contenedorBotones)
                                        }

                                        const botonEliminar = document.createElement("div")
                                        botonEliminar.classList.add(
                                            "botonV1",
                                            "comportamientoBoton"
                                        )
                                        botonEliminar.innerText = "Eliminar oferta de la reserva " + posicion
                                        botonEliminar.addEventListener("click", () => {
                                            casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.eliminarOfertaEnReserva.ui({
                                                origen: destinoOrigenOferta,
                                                ofertaUID,
                                                posicion,
                                                nombreOferta
                                            })
                                        })
                                        contenedorBotones.appendChild(botonEliminar)
                                    }

                                    const contenedorFechas = document.createElement("div")
                                    contenedorFechas.classList.add(
                                        "flexHorizontal",
                                        "flexJustificacion_spacearound",
                                        "borderGrey1",
                                        "padding6",
                                        "borderRadius10"
                                    )

                                    const fechaInicioUI = document.createElement("div")
                                    fechaInicioUI.setAttribute("dato", "fechaInicio")
                                    fechaInicioUI.innerText = fechaInicio
                                    contenedorFechas.appendChild(fechaInicioUI)

                                    const fechaFinalUI = document.createElement("div")
                                    fechaFinalUI.setAttribute("dato", "fechaFinal")
                                    fechaFinalUI.innerText = fechaFinal
                                    contenedorFechas.appendChild(fechaFinalUI)
                                    contenedorGlobalOferta.appendChild(contenedorFechas)
                                    const contenedorDestino = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=ofertas]").querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                    //contenedorDestino.appendChild(contenedorOfertaUI)

                                    this.utilidades.posicionador({
                                        contenedorDestino,
                                        consultaContenedorInternos: "[ofertaUID][posicion]",
                                        nuevoContenedor: contenedorOfertaUI,
                                        posicionDestino: Number(posicion) + 1
                                    })
                                }


                                const contenedorOfertaUI_renderizador = document.querySelector(destino)
                                    .querySelector("[contenedor=financiero]")
                                    .querySelector("[contenedor=ofertas]")
                                    .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                    .querySelector(`[ofertaUID="${ofertaUID}"][posicion="${posicion}"]`)


                                const nombreOfertaUI = contenedorOfertaUI_renderizador.querySelector("[dato=nombre]")
                                nombreOfertaUI.innerText = nombreOferta


                                const entidadUI = contenedorOfertaUI_renderizador.querySelector("[dato=entidad]")
                                entidadUI.innerText = entidadUI_(entidadIDV)


                                const ofertaUIDUI = contenedorOfertaUI_renderizador.querySelector("[dato=ofertaUID]")
                                ofertaUIDUI.innerText = ofertaUID

                                if (destinoOrigenOferta === "porCondicion") {

                                    const autorizacionUI_ = contenedorOfertaUI_renderizador.querySelector("[dato=autorizacion]")
                                    autorizacionUI_.innerText = autorizacionUI(autorizacion)
                                }

                                const fechaInicioUI = contenedorOfertaUI_renderizador.querySelector("[dato=fechaInicio]")
                                fechaInicioUI.innerText = fechaInicio

                                const fechaFinalUI = contenedorOfertaUI_renderizador.querySelector("[dato=fechaFinal]")
                                fechaFinalUI.innerText = fechaFinal


                            },
                            condicionesUI: function (data) {
                                const contenedorOferta = data.contenedorOferta
                                const oferta = contenedorOferta.oferta
                                const condicionesArray = oferta.condicionesArray
                                const destino = data.destino
                                const ofertaUID = oferta.ofertaUID
                                const destinoOrigenOferta = data.destinoOrigenOferta

                                const contenedorCondiciones_selector = document.querySelector(destino)
                                    .querySelector("[contenedor=financiero]").
                                    querySelector("[contenedor=ofertas]")
                                    .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                    .querySelector(`[ofertaUID="${ofertaUID}"]`)
                                    .querySelector("[contenedor=condiciones]")

                                if (!contenedorCondiciones_selector) {
                                    const contenedorCondiciones = document.createElement("div")
                                    contenedorCondiciones.setAttribute("contenedor", "condiciones")
                                    contenedorCondiciones.classList.add(
                                        "flexVertical",
                                        "gap6",
                                        "backgroundGrey1",
                                        "padding6",
                                        "borderRadius8"
                                    )

                                    const tituloContendor = document.createElement("div")
                                    tituloContendor.classList.add(
                                        "negrita",
                                        "padding6",

                                    )
                                    tituloContendor.innerText = "Condiciones de la oferta"
                                    contenedorCondiciones.appendChild(tituloContendor)
                                    document.querySelector(destino)
                                        .querySelector("[contenedor=financiero]").
                                        querySelector("[contenedor=ofertas]")
                                        .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                        .querySelector(`[ofertaUID="${ofertaUID}"]`)
                                        .appendChild(contenedorCondiciones)

                                }
                                const contenedorCondiciones_renderizado = document.querySelector(destino)
                                    .querySelector("[contenedor=financiero]").
                                    querySelector("[contenedor=ofertas]")
                                    .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                    .querySelector(`[ofertaUID="${ofertaUID}"]`)
                                    .querySelector("[contenedor=condiciones]")

                                contenedorCondiciones_renderizado.querySelectorAll("[tipoCondicion]").forEach((contenedorTipoCondicion) => {
                                    contenedorTipoCondicion.remove()
                                })

                                condicionesArray.forEach((condicion) => {
                                    const tipoCondicion = condicion.tipoCondicion



                                    const contenedorCondicion = document.createElement("div")
                                    contenedorCondicion.classList.add("contenedorCondicion")
                                    contenedorCondicion.setAttribute("tipoCondicion", tipoCondicion)
                                    contenedorCondicion.classList.add(
                                        "flexVertical",
                                        "padding6",
                                    )
                                    document.querySelector(destino)
                                        .querySelector("[contenedor=financiero]")
                                        .querySelector("[contenedor=ofertas]")
                                        .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                        .querySelector(`[ofertaUID="${ofertaUID}"]`)
                                        .querySelector("[contenedor=condiciones]")
                                        .appendChild(contenedorCondicion)

                                    const definicionCondicion = this.definicionCondiciones({
                                        tipoCondicion,
                                        condicion
                                    })
                                    contenedorCondicion.appendChild(definicionCondicion)
                                    contenedorCondiciones_renderizado.appendChild(contenedorCondicion)

                                })
                            },
                            definicionCondiciones: (data) => {
                                const condicion = data.condicion
                                const tipoCondicion = data.tipoCondicion

                                const contenedorCondicion = document.createElement("div")

                                if (tipoCondicion === "conFechaEntradaEntreRango") {
                                    const fechaFinalRango_ISO = condicion.fechaFinalRango_ISO
                                    const fechaInicioRango_ISO = condicion.fechaInicioRango_ISO

                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por fecha de entrada"
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)


                                    const descripcionCondicion = document.createElement("div")
                                    descripcionCondicion.innerText = "Esta condición determina que la oferta se aplica cuando la fecha de entrada de la reserva está entre el rango de vigencia de la oferta."
                                    contenedorCondicion.appendChild(descripcionCondicion)

                                    const rangoVigencia = document.createElement("div")
                                    rangoVigencia.innerText = `${fechaInicioRango_ISO} >>> ${fechaFinalRango_ISO}`
                                    contenedorCondicion.appendChild(rangoVigencia)

                                } else if (tipoCondicion === "conFechaCreacionEntreRango") {
                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por fecha de creación entre el rango."
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)

                                    const descripcionCondicion = document.createElement("div")
                                    descripcionCondicion.innerText = "Esta condición determina que la oferta se aplica cuando la fecha de creación de la reserva está entre el rango de vigencia de la oferta."
                                    contenedorCondicion.appendChild(descripcionCondicion)


                                } else if (tipoCondicion === "porNumeroDeApartamentos") {
                                    const tipoConteo = condicion.tipoConteo
                                    const numeroDeApartamentos = condicion.numeroDeApartamentos

                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por número de apartamentos."
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)


                                    if (tipoConteo === "aPartirDe") {
                                        const descripcionCondicion = document.createElement("div")
                                        descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${numeroDeApartamentos} o más apartamentos`
                                        contenedorCondicion.appendChild(descripcionCondicion)

                                    } else if (tipoConteo === "numeroExacto") {
                                        const descripcionCondicion = document.createElement("div")
                                        if (numeroDeApartamentos === "1") {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${numeroDeApartamentos} apartamento exactamente. Ni más ni menos.`
                                            contenedorCondicion.appendChild(descripcionCondicion)
                                        } else {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${numeroDeApartamentos} apartamentos exactamente. Ni más ni menos.`
                                            contenedorCondicion.appendChild(descripcionCondicion)
                                        }
                                    } else if (tipoConteo === "hastaUnNumeroExacto") {
                                        const descripcionCondicion = document.createElement("div")
                                        descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene hasta ${numeroDeApartamentos} o menos apartamentos`
                                        contenedorCondicion.appendChild(descripcionCondicion)

                                    }


                                } else if (tipoCondicion === "porApartamentosEspecificos") {
                                    const apartamentos = condicion.apartamentos
                                    const tipoDeEspecificidad = condicion.tipoDeEspecificidad
                                    // exactamente, alguno, exactamenteEntreOtros, noDebeContenedorExactamente, noDebeContenedorAlguno,noDebeContenedorExactamenteEntreOtros
                                    const apartametnosFormateados = casaVitini.utilidades.cadenas.constructorComasEY({
                                        array: apartamentos,
                                        articulo: "el"
                                    })
                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por apartamentos específicos."
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)

                                    const descripcionCondicion = document.createElement("div")

                                    if (tipoDeEspecificidad === "exactamente") {
                                        descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva contiene los apartamentos en específico: ${apartametnosFormateados}`

                                    } else if (tipoDeEspecificidad === "alguno") {
                                        descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva contiene algunos de los apartamentos en específico: ${apartametnosFormateados}`

                                    } else if (tipoDeEspecificidad === "exactamenteEntreOtros") {
                                        descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva contiene exactamente los apartamentos en específico, entre otros: ${apartametnosFormateados}`

                                    } else if (tipoDeEspecificidad === "noDebeContenedorExactamente") {
                                        descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva NO contiene exactamente los apartamentos en específico: ${apartametnosFormateados}`

                                    } else if (tipoDeEspecificidad === "noDebeContenedorAlguno") {
                                        descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva NO contiene alguno de los apartamentos en específico: ${apartametnosFormateados}`

                                    }
                                    // else if (tipoDeEspecificidad === "exactamnoDebeContenedorExactamenteEntreOtrosente") {

                                    // } 
                                    contenedorCondicion.appendChild(descripcionCondicion)

                                } else if (tipoCondicion === "porDiasDeAntelacion") {
                                    const numeroDeDias = condicion.numeroDeDias
                                    const tipoConteo = condicion.tipoConteo

                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por días de antelación."
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)

                                    const descripcionCondicion = document.createElement("div")
                                    if (tipoConteo === "aPartirDe") {
                                        if (numeroDeDias === "1") {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${numeroDeDias} día de antelación o más.`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        } else {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${numeroDeDias} días de antelación o más.`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        }
                                    } else if (tipoConteo === "numeroExacto") {
                                        if (numeroDeDias === "1") {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${numeroDeDias} día de antelación exactamente`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        } else {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${numeroDeDias} días de antelación exactamente`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        }
                                    } else if (tipoConteo === "hastaUnNumeroExacto") {
                                        if (numeroDeDias === "1") {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene hasta ${numeroDeDias} día de antelación o más`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        } else {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene hasra ${numeroDeDias} días de antelación o más`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        }
                                    }

                                } else if (tipoCondicion === "porDiasDeReserva") {
                                    const diasDeReserva = condicion.diasDeReserva
                                    const tipoConteo = condicion.tipoConteo

                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por días de duración."
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)

                                    const descripcionCondicion = document.createElement("div")
                                    if (tipoConteo === "aPartirDe") {
                                        if (diasDeReserva === "1") {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${diasDeReserva} día de duración o más`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        } else {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${diasDeReserva} días de duración o más`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        }
                                    } else if (tipoConteo === "numeroExacto") {
                                        if (diasDeReserva === "1") {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${diasDeReserva} día de duración exactamente`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        } else {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene ${diasDeReserva} días de duración exactamente`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        }
                                    } else if (tipoConteo === "hastaUnNumeroExacto") {
                                        if (diasDeReserva === "1") {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene hasta ${diasDeReserva} día de duración o más`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        } else {
                                            descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando la reserva tiene hasta ${diasDeReserva} días de duración o más`
                                            contenedorCondicion.appendChild(descripcionCondicion)

                                        }
                                    }
                                } else if (tipoCondicion === "porRangoDeFechas") {
                                    const fechaFinalRango_ISO = condicion.fechaFinalRango_ISO
                                    const fechaInicioRango_ISO = condicion.fechaInicioRango_ISO

                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por rango de fechas."
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)

                                    const descripcionCondicion = document.createElement("div")
                                    descripcionCondicion.innerText = `Esta condición determina que la oferta se aplica cuando el rango de la reserva se cruza con el rango determinado en esta condición. Del ${fechaInicioRango_ISO} al ${fechaFinalRango_ISO}`
                                    contenedorCondicion.appendChild(descripcionCondicion)

                                } else if (tipoCondicion === "porCodigoDescuento") {
                                    const codigoDescuento = condicion.codigoDescuento
                                    const tituloCondicion = document.createElement("div")
                                    tituloCondicion.innerText = "Por código de descuento."
                                    tituloCondicion.classList.add(
                                        "negrita",
                                    )
                                    contenedorCondicion.appendChild(tituloCondicion)


                                    const codigoUI = document.createElement("div")
                                    codigoUI.innerText = atob(codigoDescuento)


                                    contenedorCondicion.appendChild(codigoUI)


                                    // const fechaFinalRango_ISO = condicion.fechaFinalRango_ISO
                                    // const fechaInicioRango_ISO = condicion.fechaInicioRango_ISO

                                    // const tituloCondicion = document.createElement("div")
                                    // tituloCondicion.innerText = "Por rango de fechas"
                                    // contenedorCondicion.appendChild(tituloCondicion)

                                    // const descripcionCondicion = document.createElement("div")
                                    // descripcionCondicion.innerText = `Esta condicion determina que la oferta se aplica cuando el rango de la reserva se cruza con el rango determinado en esta condicion. Del ${fechaInicioRango_ISO} al ${fechaFinalRango_ISO}`
                                    // contenedorCondicion.appendChild(descripcionCondicion)

                                } else {
                                    const error = "El renderizado de condiciones de oferta ha recibido un identificador no reconocido: " + tipoCondicion
                                    return casaVitini.ui.componentes.advertenciaInmersiva(error)
                                }

                                return contenedorCondicion
                            },
                            descuentosUI: function (data) {
                                const destino = data.destino
                                const contenedorOferta = data.contenedorOferta
                                const ofertaUID = contenedorOferta.oferta.ofertaUID

                                const destinoOrigenOferta = data.destinoOrigenOferta

                                const descuentosJSON = contenedorOferta.oferta.descuentosJSON
                                const tipoDescuento = descuentosJSON?.tipoDescuento
                                const subTipoDescuento = descuentosJSON?.subTipoDescuento

                                const contenedorDescuentos_selector = document.querySelector(destino)
                                    .querySelector("[contenedor=financiero]")
                                    .querySelector("[contenedor=ofertas]")
                                    .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                    .querySelector(`[ofertaUID="${ofertaUID}"]`)
                                    .querySelector("[contenedor=descuentos]")


                                if (!contenedorDescuentos_selector) {
                                    const contenedorDescuentos = document.createElement("div")
                                    contenedorDescuentos.setAttribute("contenedor", "descuentos")
                                    contenedorDescuentos.classList.add(
                                        "flexVertical",
                                        "backgroundGrey1",
                                        "padding6",
                                        "borderRadius8"
                                    )
                                    document.querySelector(destino)
                                        .querySelector("[contenedor=financiero]")
                                        .querySelector("[contenedor=ofertas]")
                                        .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                        .querySelector(`[ofertaUID="${ofertaUID}"]`)
                                        .appendChild(contenedorDescuentos)
                                }

                                const contenedorDescuentos_renderizado = document.querySelector(destino)

                                    .querySelector("[contenedor=financiero]")
                                    .querySelector("[contenedor=ofertas]")
                                    .querySelector(`[contenedor=${destinoOrigenOferta}]`)
                                    .querySelector(`[ofertaUID="${ofertaUID}"]`)
                                    .querySelector("[contenedor=descuentos]")

                                contenedorDescuentos_renderizado.innerHTML = null
                                const tituloContendor = document.createElement("div")
                                tituloContendor.classList.add(
                                    "negrita",
                                    "padding6",
                                )
                                tituloContendor.innerText = "Descuentos de la oferta"
                                contenedorDescuentos_renderizado.appendChild(tituloContendor)

                                const desfinicionDescuento = this.definicionDescuentos({
                                    tipoDescuento,
                                    subTipoDescuento,
                                    descuentosJSON
                                })
                                contenedorDescuentos_renderizado.appendChild(desfinicionDescuento)
                            },
                            definicionDescuentos: (data) => {
                                const tipoDescuento = data.tipoDescuento
                                const subTipoDescuento = data.subTipoDescuento
                                const descuentosJSON = data.descuentosJSON

                                const contenedorDescuento = document.createElement("div")

                                const descripcionDescuento = document.createElement("p")
                                descripcionDescuento.classList.add(
                                    // "padding6"
                                )
                                contenedorDescuento.appendChild(descripcionDescuento)


                                if (tipoDescuento === "porRango" && subTipoDescuento === "porDiasDelRango") {

                                    const fechaInicioRango_ISO = descuentosJSON.fechaInicioRango_ISO
                                    const fechaFinalRango_ISO = descuentosJSON.fechaFinalRango_ISO
                                    const descuentoPorDias = descuentosJSON.descuentoPorDias

                                    descripcionDescuento.innerText = `Esta oferta aplica un descuento a los días de la reserva. A continuación se detallan los días donde la oferta aplica descuentos y qué tipo de descuentos aplica en cada día.`
                                    contenedorDescuento.appendChild(descripcionDescuento)

                                    for (const descuentoPorDia of descuentoPorDias) {
                                        const tipoDescuentoPorDia = descuentoPorDia.tipoDescuento
                                        const descuentoTotal = descuentoPorDia.descuentoTotal
                                        const fechaNoche = descuentoPorDia.fecha


                                        const contenedorDia = document.createElement("div")
                                        contenedorDia.classList.add(
                                            "flexVertical"
                                        )
                                        const tituloContenedorDia = document.createElement("div")
                                        tituloContenedorDia.classList.add(
                                            "negrita",
                                            "padding6"
                                        )
                                        tituloContenedorDia.innerText = fechaNoche
                                        contenedorDia.appendChild(tituloContenedorDia)

                                        if (tipoDescuentoPorDia === "netoPorDia") {
                                            const tipoAplicacion = descuentoPorDia.tipoAplicacion
                                            const descripcionDescuentoTotalNeto = document.createElement("div")

                                            descripcionDescuentoTotalNeto.classList.add(
                                                "padding6"
                                            )
                                            if (tipoAplicacion === "porcentaje") {
                                                descripcionDescuentoTotalNeto.innerText = `Esta oferta aplica un descuento del ${descuentoTotal}% a los netos de los días de la reserva que están dentro del rango establecido entre en el ${fechaInicioRango_ISO} y el ${fechaFinalRango_ISO}.`
                                            } else if (tipoAplicacion === "cantidadFija") {
                                                descripcionDescuentoTotalNeto.innerText = `Esta oferta aplica un descuento del ${descuentoTotal} a los netos de los días de la reserva que están dentro del rango establecido entre en el ${fechaInicioRango_ISO} y el ${fechaFinalRango_ISO}.`
                                            }
                                            contenedorDia.appendChild(descripcionDescuentoTotalNeto)

                                        } else if (tipoDescuentoPorDia === "netoPorApartamentoDelDia") {

                                            const contenedorApartamentosDelDia = document.createElement("div")
                                            contenedorApartamentosDelDia.classList.add(
                                                "flexVertical",
                                                "gap6"
                                            )

                                            const apartamentos = descuentoPorDia.apartamentos
                                            for (const apartamento of apartamentos) {
                                                const apartamentoUI = apartamento.apartamentoUI
                                                const apartamentoIDV = apartamento.apartamentoIDV
                                                const descuentoTotal = apartamento.descuentoTotal
                                                const tipoAplicacion = apartamento.tipoAplicacion

                                                const contenedorApartamento = document.createElement("div")
                                                contenedorApartamento.classList.add(
                                                    "padding10",
                                                    "borderGrey1",
                                                    "borderRadius6"

                                                )
                                                contenedorApartamento.setAttribute("apartamentoIDV", apartamentoIDV)

                                                const tituloApartamento = document.createElement("div")
                                                tituloApartamento.classList.add("negrita")
                                                tituloApartamento.innerText = apartamentoUI
                                                contenedorApartamento.appendChild(tituloApartamento)


                                                const descuentoApartamento = document.createElement("div")
                                                if (tipoAplicacion === "porcentaje") {
                                                    descuentoApartamento.innerText = `Esta oferta aplica un descuento del ${descuentoTotal}% al ${apartamentoUI}`
                                                } else if (tipoAplicacion === "cantidadFija") {
                                                    descuentoApartamento.innerText = `Esta oferta aplica un descuento de ${descuentoTotal} al ${apartamentoUI}`
                                                }
                                                contenedorApartamento.appendChild(descuentoApartamento)
                                                contenedorApartamentosDelDia.appendChild(contenedorApartamento)

                                            }
                                            contenedorDia.appendChild(contenedorApartamentosDelDia)


                                        }

                                        contenedorDescuento.appendChild(contenedorDia)

                                    }
                                } else if (tipoDescuento === "porRango" && subTipoDescuento === "totalNetoPorRango") {

                                    const fechaInicioRango_ISO = descuentosJSON.fechaInicioRango_ISO
                                    const fechaFinalRango_ISO = descuentosJSON.fechaFinalRango_ISO
                                    const descuentoTotal = descuentosJSON.descuentoTotal
                                    const tipoAplicacion = descuentosJSON.tipoAplicacion

                                    if (tipoAplicacion === "porcentaje") {
                                        descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoTotal}% a los días de la reserva que están dentro del rango establecido entre en el ${fechaInicioRango_ISO} y el ${fechaFinalRango_ISO}.`
                                    } else if (tipoAplicacion === "cantidadFija") {
                                        descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoTotal}$ a los días de la reserva que están dentro del rango establecido entre en el ${fechaInicioRango_ISO} y el ${fechaFinalRango_ISO}.`
                                    }
                                    contenedorDescuento.appendChild(descripcionDescuento)

                                } else if (tipoDescuento === "totalNeto") {
                                    const descuentoTotal = descuentosJSON.descuentoTotal
                                    const tipoAplicacion = descuentosJSON.tipoAplicacion


                                    if (tipoAplicacion === "porcentaje") {
                                        descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoTotal}% al total neto de la reserva.`
                                    } else if (tipoAplicacion === "cantidadFija") {
                                        descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoTotal} al total neto de la reserva.`
                                    }
                                    contenedorDescuento.appendChild(descripcionDescuento)


                                } else if (tipoDescuento === "individualPorApartamento") {


                                    descripcionDescuento.innerText = `Esta oferta aplica un descuento al total de los apartamentos especificados. A continuación se detallan los apartamentos en los que esta oferta aplica descuentos. Si la reserva no tiene todos los apartamentos especificados en esta oferta, entonces solo aplicará el Descuento en los apartamentos que coincidan con la oferta en la reserva.`
                                    contenedorDescuento.appendChild(descripcionDescuento)

                                    const contenedorApartamentos = document.createElement("div")
                                    contenedorApartamentos.classList.add(
                                        "gap6",
                                        "flexVertical"
                                    )

                                    const apartamentos = descuentosJSON.apartamentos
                                    for (const apartamento of apartamentos) {
                                        const apartamentoIDV = apartamento.apartamentoIDV
                                        const apartamentoUI = apartamento.apartamentoUI
                                        const descuentoTotal = apartamento.descuentoTotal
                                        const tipoAplicacion = apartamento.tipoAplicacion

                                        const contenedorApartamento = document.createElement("div")
                                        contenedorApartamento.classList.add(
                                            "padding10",
                                            "borderGrey1",
                                            "borderRadius8"
                                        )
                                        contenedorApartamento.setAttribute("apartamentoIDV", apartamentoIDV)


                                        const apartamentoTitulo = document.createElement("div")
                                        apartamentoTitulo.classList.add("negrita")
                                        apartamentoTitulo.innerHTML = apartamentoUI
                                        contenedorApartamento.appendChild(apartamentoTitulo)

                                        const tipoAplicacionUI = document.createElement("div")
                                        tipoAplicacionUI.classList.add("tipoAplicacionUI")
                                        if (tipoAplicacion === "cantidadFija") {
                                            tipoAplicacionUI.innerText = `Descuento de ${descuentoTotal}$ sobre el neto del apartamento`
                                        } else if (tipoAplicacion === "porcentaje") {
                                            tipoAplicacionUI.innerText = `Descuento del ${descuentoTotal}% sobre el neto del apartamento`
                                        }
                                        contenedorApartamento.appendChild(tipoAplicacionUI)

                                        contenedorApartamentos.appendChild(contenedorApartamento)
                                    }

                                    contenedorDescuento.appendChild(contenedorApartamentos)


                                } else if (tipoDescuento === "mismoDescuentoParaCadaApartamento") {
                                    const descuentoTotal = descuentosJSON.descuentoTotal
                                    const tipoAplicacion = descuentosJSON.tipoAplicacion


                                    if (tipoAplicacion === "porcentaje") {
                                        descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoTotal}% al total neto de cada apartamento de la reserva.`
                                    } else if (tipoAplicacion === "cantidadFija") {
                                        descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoTotal} al total neto de cada apartamento individualmente de la reserva.`
                                    }
                                    contenedorDescuento.appendChild(descripcionDescuento)


                                } else {
                                    const mensaje = "No se reconoce el tipo de descuento recibido."
                                    return casaVitini.ui.componentes.advertenciaInmersiva(mensaje)
                                }
                                return contenedorDescuento

                            },
                            utilidades: {
                                limpiarOfertasObsoletas: (data) => {
                                    const contenedores = data.contenedores
                                    const origen = data.origen
                                    const destino = data.destino
                                    const paresActuales = []
                                    contenedores.forEach((contenedorOferta, posicion) => {
                                        paresActuales.push({
                                            oferta: String(contenedorOferta.oferta.ofertaUID),
                                            posicion: String(posicion)
                                        })
                                    })
                                    const selectorContenedorOfertas = document.querySelector(destino).querySelectorAll(`[contenedor="${origen}"] [ofertaUID][posicion]`);
                                    const elementosFiltrados = Array.from(selectorContenedorOfertas).filter(elemento => {
                                        const ofertaUID = elemento.getAttribute('ofertaUID');
                                        const posicion = elemento.getAttribute('posicion');
                                        return !paresActuales.some(par => par.ofertaUID === ofertaUID && par.posicion === posicion);
                                    })
                                    elementosFiltrados.forEach((ofertaObsoleta) => { ofertaObsoleta.remove() })
                                },
                                posicionador: (data) => {

                                    const contenedorDestino = data.contenedorDestino
                                    const consultaContenedorInternos = data.consultaContenedorInternos
                                    const selectorContenedorInternos = contenedorDestino.querySelectorAll(consultaContenedorInternos);

                                    const posicionDestino = data.posicionDestino
                                    const nuevoContenedor = data.nuevoContenedor

                                    if (posicionDestino < selectorContenedorInternos.length) {
                                        contenedorDestino.insertBefore(nuevoContenedor, selectorContenedorInternos[posicionDestino]);
                                    } else {
                                        contenedorDestino.appendChild(nuevoContenedor);
                                    }
                                }
                            },
                        },
                        porTotal: (data) => {

                            const destino = data.destino
                            const porTotal = data.porTotal

                            if (porTotal.length === 0) {
                                document.querySelector(destino)
                                    .querySelector("[contenedor=financiero]")
                                    .querySelector("[contenedor=ofertas]")
                                    ?.querySelector("[contenedor=listadescuentosAplicadosAlTotalNetoOfertas]")
                                    ?.querySelector("[contenedor=porTotal]")
                                    ?.remove()
                                return
                            }

                            const contenedorPorTotal_selector = document.querySelector(destino)
                                .querySelector("[contenedor=financiero]")
                                .querySelector("[contenedor=ofertas]")
                                .querySelector("[contenedor=listaDescuentosPorTotal]")
                                .querySelector("[contenedor=porTotal]")
                            if (!contenedorPorTotal_selector) {
                                const contenedor = document.createElement("div")
                                contenedor.classList.add("contenedorPorTotal")
                                contenedor.setAttribute("contenedor", "porTotal")
                                contenedor.classList.add(
                                    "flexVertical",
                                    "gap6"
                                )
                                document.querySelector(destino)
                                    .querySelector("[contenedor=financiero]")
                                    .querySelector("[contenedor=ofertas]")
                                    .querySelector("[contenedor=listaDescuentosPorTotal]")
                                    .appendChild(contenedor)

                                const tituloContendor = document.createElement("div")
                                tituloContendor.classList.add(
                                    "negrita",
                                    "textoCentrado",
                                )
                                tituloContendor.innerText = "Descuentos aplicados a total neto de la reserva"
                                contenedor.appendChild(tituloContendor)

                                const contenedorPorTotal = document.createElement("div")
                                contenedorPorTotal.setAttribute("contenedor", "descuentos")
                                contenedorPorTotal.classList.add(
                                    "flexVertical",
                                    "gap6"
                                )
                                contenedor.appendChild(contenedorPorTotal)
                            }
                            const contenedorPorTotal_renderizado = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=ofertas]").querySelector("[contenedor=porTotal]")
                            const contenedorDeDescuentos = contenedorPorTotal_renderizado.querySelector("[contenedor=descuentos]")
                            contenedorDeDescuentos.innerHTML = null

                            porTotal.forEach((detallesDelTotal) => {

                                const ofertaUID = detallesDelTotal.ofertaUID
                                const nombreOferta = detallesDelTotal.nombreOferta
                                const porcentaje = detallesDelTotal.porcentaje
                                const tipoAplicacion = detallesDelTotal.tipoAplicacion
                                const descuentoAplicado = detallesDelTotal.descuentoAplicado
                                const totalConDescuento = detallesDelTotal.totalConDescuento

                                const contenedorDescuentoTotal = document.createElement("div")
                                contenedorDescuentoTotal.classList.add("contenedorDelDescuentoDelTotal")
                                contenedorDescuentoTotal.classList.add(
                                    "borderRadius10",
                                    "padding10",
                                    "borderGrey1",
                                    "flexVertical",
                                    "gap6"
                                )
                                contenedorDescuentoTotal.setAttribute("ofertaUID", ofertaUID)

                                const tituloOferta = document.createElement("div")
                                tituloOferta.classList.add(
                                    "negrita",
                                )
                                tituloOferta.innerText = nombreOferta
                                contenedorDescuentoTotal.appendChild(tituloOferta)

                                if (tipoAplicacion === "porcentaje") {
                                    const porcentajeUI = document.createElement("div")
                                    porcentajeUI.innerText = `${porcentaje}%`
                                    contenedorDescuentoTotal.appendChild(porcentajeUI)


                                }
                                const descuentoAplicadoUI = document.createElement("div")
                                descuentoAplicadoUI.innerText = `Descuento aplicado: ${descuentoAplicado}`
                                contenedorDescuentoTotal.appendChild(descuentoAplicadoUI)

                                const totalConDescuentoUI = document.createElement("div")
                                totalConDescuentoUI.innerText = `Este descuento aplicado deja el total en ${totalConDescuento}`
                                contenedorDescuentoTotal.appendChild(totalConDescuentoUI)

                                contenedorDeDescuentos.appendChild(contenedorDescuentoTotal)


                            })
                        },
                        entidades: {
                            hub: function (data) {
                                const destino = data.destino
                                const entidades = data.entidades
                                Object.entries(entidades).forEach(([entidadIDV, detalleEntidad]) => {
                                    if (entidadIDV === "reserva") {
                                        this.reserva({
                                            destino,
                                            detalleEntidad
                                        })
                                    }
                                })
                            },
                            reserva: (data) => {
                                const destino = data.destino
                                const detalleEntidad = data.detalleEntidad.desgloses
                                const porDia = detalleEntidad.porDia
                                const porApartamento = detalleEntidad.porApartamento


                                const apartamentosIDVArray = Object.keys(porApartamento)
                                const selectorApartamentos = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=porNoche]").querySelectorAll(`[apartamentoIDV]`)
                                selectorApartamentos.forEach((apartamentoRenderizado) => {
                                    const apartamentoObosoleto = apartamentoRenderizado.getAttribute("apartamentoIDV")
                                    if (!apartamentoObosoleto.includes(apartamentosIDVArray)) {
                                        apartamentoRenderizado.querySelector("[contenedor=descuentosDelApartamento]")?.remove()
                                    }
                                })

                                if (Object.entries(porApartamento).length === 0) {
                                    const contenedorApartamento_obosoletos = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=porApartamento]").querySelectorAll("[apartamentoIDV]")

                                    contenedorApartamento_obosoletos.forEach((contenedorObsoleto) =>
                                        contenedorObsoleto.querySelector("[contenedor=descuentosDelApartamento]")?.remove()
                                    )
                                }

                                Object.entries(porApartamento).forEach(([apartamentoIDV, descuentosDelApartamento]) => {
                                    const contenedorApartamento = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=porApartamento]").querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)

                                    const descuentosAplicados = descuentosDelApartamento.descuentosAplicados
                                    const totalNetoConDescuentos = descuentosDelApartamento.totalNetoConDescuentos
                                    const totalNetoSinDescuentos = descuentosDelApartamento.totalNetoSinDescuentos
                                    const totalDescuentosAplicados = descuentosDelApartamento.totalDescuentosAplicados

                                    const contenedorDescuentosPorApartamento_selector = contenedorApartamento.querySelector("[contenedor=descuentosDelApartamento]")
                                    if (!contenedorDescuentosPorApartamento_selector) {
                                        const contenedorDescuentosPorApartamento = document.createElement("div")
                                        contenedorDescuentosPorApartamento.setAttribute("contenedor", "descuentosDelApartamento")
                                        contenedorDescuentosPorApartamento.classList.add(
                                            "padding6",
                                            "flexVertical",
                                            "gap6"
                                        )

                                        const totalesDescuentos = document.createElement("div")

                                        const totalDescuentosAplicadosUI = document.createElement("div")
                                        totalDescuentosAplicadosUI.setAttribute("dato", "totalConDescuentosAplicados")
                                        totalesDescuentos.appendChild(totalDescuentosAplicadosUI)

                                        const totalNetoConDescuentosUI = document.createElement("div")
                                        totalNetoConDescuentosUI.setAttribute("dato", "totalNetoConDescuentos")
                                        totalesDescuentos.appendChild(totalNetoConDescuentosUI)
                                        contenedorDescuentosPorApartamento.appendChild(totalesDescuentos)
                                        contenedorApartamento.appendChild(contenedorDescuentosPorApartamento)

                                        const contenedorDescuentosDelApartamento = document.createElement("div")
                                        contenedorDescuentosDelApartamento.setAttribute("contenedor", "descuentos")
                                        contenedorDescuentosDelApartamento.classList.add(
                                            "padding6",
                                            "flexVertical",
                                            "gap6",
                                            "borderRadius8",
                                            "borderGrey1"
                                        )

                                        const tituloContenedorDescuentos = document.createElement("div")
                                        tituloContenedorDescuentos.classList.add("negrita")
                                        tituloContenedorDescuentos.innerText = "Descuentos aplicados al total del apartamento"
                                        contenedorDescuentosDelApartamento.appendChild(tituloContenedorDescuentos)
                                        contenedorDescuentosPorApartamento.appendChild(contenedorDescuentosDelApartamento)

                                    }
                                    const contenedorDescuentosPorApartamento_renderizado = contenedorApartamento.querySelector("[contenedor=descuentosDelApartamento]")


                                    const totalConDescuentosAplicados = contenedorDescuentosPorApartamento_renderizado.querySelector("[dato=totalConDescuentosAplicados]")
                                    totalConDescuentosAplicados.innerText = `${totalDescuentosAplicados}$ Suma total de descuentos aplicados al apartamento`

                                    const totalNetoConDescuentosUI = contenedorDescuentosPorApartamento_renderizado.querySelector("[dato=totalNetoConDescuentos]")
                                    totalNetoConDescuentosUI.innerText = `${totalNetoConDescuentos}$ Neto del apartamento con descuentos aplicados`

                                    const contenedorDesgloseDescuentos = contenedorDescuentosPorApartamento_renderizado.querySelector("[contenedor=descuentos]")


                                    contenedorDesgloseDescuentos.innerHTML = null

                                    descuentosAplicados.forEach((detallesDelDescuento) => {
                                        const ofertaUID = detallesDelDescuento.ofertaUID
                                        const nombreOferta = detallesDelDescuento.nombreOferta
                                        const apartamentoIDV = detallesDelDescuento.apartamentoIDV
                                        const tipoAplicacion = detallesDelDescuento.tipoAplicacion
                                        const porcentaje = detallesDelDescuento.porcentaje
                                        const descuentoAplicado = detallesDelDescuento.descuentoAplicado
                                        const totalConDescuento = detallesDelDescuento.totalConDescuento



                                        const contenedor = document.createElement("div")
                                        contenedor.classList.add("porApartamento")
                                        contenedor.setAttribute("ofertaUID", ofertaUID)
                                        contenedor.classList.add(
                                            "padding6",
                                            "flexVertical",
                                            "borderRadius6",
                                            "backgroundGrey1"
                                        )

                                        const nombreOfertaUI = document.createElement("div")
                                        nombreOfertaUI.classList.add("negrita")
                                        nombreOfertaUI.innerText = nombreOferta
                                        contenedor.appendChild(nombreOfertaUI)

                                        const descripcionDescuento = document.createElement("div")
                                        if (tipoAplicacion === "porcentaje") {
                                            descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${porcentaje}% y generando un descuento del ${descuentoAplicado}.`
                                        } else if (tipoAplicacion === "cantidadFija") {
                                            descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoAplicado} sobre el total neto del apartamento.`
                                        }
                                        contenedor.appendChild(descripcionDescuento)
                                        contenedorDesgloseDescuentos.appendChild(contenedor)
                                    })

                                })

                                const fechasNocheObsoletas = Object.keys(porDia)
                                const selectorNochesRenderizadas = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=porNoche]").querySelectorAll(`[noche]`)
                                selectorNochesRenderizadas.forEach((nocheRenderizada) => {
                                    const fechaNocheRenderizada = nocheRenderizada.getAttribute("noche")
                                    if (!fechasNocheObsoletas.includes(fechaNocheRenderizada)) {
                                        nocheRenderizada.querySelector("[contenedor=descuentosAlNetoNoche]")?.remove()
                                    }
                                })

                                Object.entries(porDia).forEach(([fechaNoche, detallesDelDia]) => {

                                    const totalConDescuentos = detallesDelDia.totalConDescuentos
                                    const totalDescuentosAplicados = detallesDelDia.totalDescuentosAplicados
                                    const totalSinDescuentos = detallesDelDia.totalSinDescuentos
                                    const porApartamento = detallesDelDia.porApartamento ?? []
                                    const porTotalNetoDia = detallesDelDia.porTotalNetoDia ?? []

                                    const contendorNoche = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=porNoche]").querySelector(`[noche="${fechaNoche}"]`)
                                    const contendorTotalesNoche = contendorNoche.querySelector("[contenedor=totalesNoche]")

                                    const descuentosGlobales_selector = contendorNoche.querySelector("[contenedor=descuentosGlobales]")
                                    if (!descuentosGlobales_selector) {
                                        const descuentosGlobales = document.createElement("div")
                                        descuentosGlobales.setAttribute("contenedor", "descuentosGlobales")
                                        descuentosGlobales.classList.add(
                                            "flexVertical"
                                        )

                                        const contenedorGlobal = document.createElement("div")
                                        contenedorGlobal.classList.add(
                                            "padding6"
                                        )

                                        const totalDescuentosAplicados = document.createElement("p")
                                        totalDescuentosAplicados.setAttribute("dato", "totalDescuentosAplicados")
                                        totalDescuentosAplicados.innerText = totalDescuentosAplicados + "$ Suma total de los descuentos aplicados"
                                        contenedorGlobal.appendChild(totalDescuentosAplicados)

                                        const totalConDescuentosUI = document.createElement("p")
                                        totalConDescuentosUI.setAttribute("dato", "totalConDescuentos")
                                        totalConDescuentosUI.innerText = totalConDescuentos + "$ Total neto noche con descuentos aplicados"
                                        contenedorGlobal.appendChild(totalConDescuentosUI)
                                        descuentosGlobales.appendChild(contenedorGlobal)

                                        const contenedorDescuentosDelTotalNetoNoche = document.createElement("div")
                                        contenedorDescuentosDelTotalNetoNoche.setAttribute("contenedor", "descuentosNoche")
                                        contenedorDescuentosDelTotalNetoNoche.classList.add("contenedorTotalesNocheDescuentos")
                                        descuentosGlobales.appendChild(contenedorDescuentosDelTotalNetoNoche)

                                        const titulo = document.createElement("div")
                                        titulo.classList.add("negrita")
                                        titulo.innerText = "Descuentos aplicados al total neto de la noche."
                                        contenedorDescuentosDelTotalNetoNoche.appendChild(titulo)

                                        contendorNoche.insertBefore(descuentosGlobales, contendorTotalesNoche.nextSibling);
                                    }
                                    const descuentosGlobales_renderizado = contendorNoche.querySelector("[contenedor=descuentosGlobales]")

                                    const totalDescuentosAplicadosUI = descuentosGlobales_renderizado.querySelector("[dato=totalDescuentosAplicados]")
                                    totalDescuentosAplicadosUI.innerText = totalDescuentosAplicados + "$ Suma total de los descuentos aplicados"

                                    const totalConDescuentosUI = descuentosGlobales_renderizado.querySelector("[dato=totalConDescuentos]")
                                    totalConDescuentosUI.innerText = totalConDescuentos + "$ Total neto noche con descuentos aplicados"

                                    const selectorDescuentosObsoletos = descuentosGlobales_renderizado.querySelector("[contenedor=descuentosNoche]").querySelectorAll("[contenedor=descuento]")
                                    selectorDescuentosObsoletos.forEach((descuentoObosoleto) => {
                                        descuentoObosoleto?.remove()
                                    })

                                    const contenedorDescuentos = descuentosGlobales_renderizado.querySelector("[contenedor=descuentosNoche]")

                                    porTotalNetoDia.forEach((detallesDelNetoPorDia) => {

                                        const fecha = detallesDelNetoPorDia.fecha
                                        const ofertaUID = detallesDelNetoPorDia.ofertaUID
                                        const porcentaje = detallesDelNetoPorDia.porcentaje
                                        const nombreOferta = detallesDelNetoPorDia.nombreOferta
                                        const tipoAplicacion = detallesDelNetoPorDia.tipoAplicacion
                                        const descuentoAplicado = detallesDelNetoPorDia.descuentoAplicado
                                        const totalConDescuento = detallesDelNetoPorDia.totalConDescuento



                                        const contenedorDescuentosAlTotalNetoNoche = document.createElement("div")
                                        contenedorDescuentosAlTotalNetoNoche.setAttribute("contenedor", "descuento")
                                        contenedorDescuentosAlTotalNetoNoche.classList.add("contenedorDescuentosAlTotalNetoNoche")
                                        contenedorDescuentosAlTotalNetoNoche.setAttribute("ofertaUID", ofertaUID)

                                        const nombreOfertaUI = document.createElement("div")
                                        nombreOfertaUI.classList.add("negrita")
                                        nombreOfertaUI.innerText = nombreOferta
                                        contenedorDescuentosAlTotalNetoNoche.appendChild(nombreOfertaUI)


                                        const descripcionDescuento = document.createElement("div")
                                        if (tipoAplicacion === "porcentaje") {
                                            descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${porcentaje}% al total neto de la noche generando un descuento del ${descuentoAplicado}.`
                                        } else if (tipoAplicacion === "cantidadFija") {
                                            descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoAplicado} al total neto de la noche.`
                                        }
                                        contenedorDescuentosAlTotalNetoNoche.appendChild(descripcionDescuento)
                                        contenedorDescuentos.appendChild(contenedorDescuentosAlTotalNetoNoche)

                                    })




                                    const apartamentosIDVArray = Object.keys(porApartamento)
                                    const selectorApartamentosRenderizados = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=porNoche]").querySelector(`[noche="${fechaNoche}"]`).querySelectorAll(`[apartamentoIDV]`)
                                    selectorApartamentosRenderizados.forEach((apartamentoRenderizado) => {
                                        const apartamentoIDVRenderizado = apartamentoRenderizado.getAttribute("apartamentoIDV")
                                        if (!apartamentosIDVArray.includes(apartamentoIDVRenderizado)) {
                                            apartamentoRenderizado.querySelector("[contenedor=descuentosGlobal]")?.remove()
                                        }
                                    })


                                    Object.entries(porApartamento).forEach(([apartamentoIDV, desgloseDelApartamento]) => {

                                        const selectorApartamentoDelaNoche = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=porNoche]").querySelector(`[noche="${fechaNoche}"]`).querySelector(`[apartamentoIDV="${apartamentoIDV}"]`)

                                        const totalConDescuentos = desgloseDelApartamento.totalConDescuentos
                                        const totalSinDescuentos = desgloseDelApartamento.totalSinDescuentos
                                        const descuentosAplicados = desgloseDelApartamento.descuentosAplicados
                                        const totalDescuentosAplicados = desgloseDelApartamento.totalDescuentosAplicados

                                        const contenedorDescuentosGlobal_selector = selectorApartamentoDelaNoche.querySelector("[contenedor=descuentosAlNetoApartamento]")
                                        if (!contenedorDescuentosGlobal_selector) {
                                            const contenedorDescuentosGlobal = document.createElement("div")
                                            contenedorDescuentosGlobal.setAttribute("contenedor", "descuentosAlNetoApartamento")
                                            selectorApartamentoDelaNoche.appendChild(contenedorDescuentosGlobal)

                                            const contendorGlobal = document.createElement("div")
                                            contendorGlobal.classList.add("padding6")

                                            const totalDescuentosAplicadosUI = document.createElement("p")
                                            totalDescuentosAplicadosUI.setAttribute("dato", "totalDescuentosAplicados")
                                            contendorGlobal.appendChild(totalDescuentosAplicadosUI)

                                            const totalConDescuentosUI = document.createElement("p")
                                            totalConDescuentosUI.setAttribute("dato", "totalConDescuentos")
                                            contendorGlobal.appendChild(totalConDescuentosUI)
                                            contenedorDescuentosGlobal.appendChild(contendorGlobal)

                                            const contenedorDescuentos = document.createElement("div")
                                            contenedorDescuentos.setAttribute("contenedor", "descuentosPorApartamento")
                                            contenedorDescuentos.classList.add("contenedorDescuentosPorApartamento")
                                            contenedorDescuentosGlobal.appendChild(contenedorDescuentos)

                                            const titulo = document.createElement("div")
                                            titulo.classList.add("negrita")
                                            titulo.innerText = "Descuentos aplicados al total neto del apartamento1"
                                            contenedorDescuentos.appendChild(titulo)


                                        }

                                        const contenedorDescuentosGlobal_renderizado = selectorApartamentoDelaNoche.querySelector("[contenedor=descuentosAlNetoApartamento]")

                                        const totalDescuentosAplicadosUI = contenedorDescuentosGlobal_renderizado.querySelector("[dato=totalDescuentosAplicados]")
                                        totalDescuentosAplicadosUI.innerText = totalDescuentosAplicados + "$ Descuentos aplicados al neto del apartamento"

                                        const totalConDescuentos_ = contenedorDescuentosGlobal_renderizado.querySelector("[dato=totalConDescuentos]")
                                        totalConDescuentos_.innerText = totalConDescuentos + "$ Neto del apartamento con descuentos aplicados"

                                        const selectorDescuentosObsoletos = contenedorDescuentosGlobal_renderizado.querySelector("[contenedor=descuentosPorApartamento]").querySelectorAll("[contenedor=descuento]")
                                        selectorDescuentosObsoletos.forEach((descuentoObsoleto) => {
                                            descuentoObsoleto?.remove()
                                        })

                                        descuentosAplicados.forEach((detallesDelDescuento) => {
                                            const fecha = detallesDelDescuento.fecha
                                            const ofertaUID = detallesDelDescuento.ofertaUID
                                            const porcentaje = detallesDelDescuento.porcentaje
                                            const nombreOferta = detallesDelDescuento.nombreOferta
                                            const apartamentoIDV = detallesDelDescuento.apartamentoIDV
                                            const tipoAplicacion = detallesDelDescuento.tipoAplicacion
                                            const descuentoAplicado = detallesDelDescuento.descuentoAplicado
                                            const totalConDescuento = detallesDelDescuento.totalConDescuento

                                            const contenedor = document.createElement("div")
                                            contenedor.classList.add("contenedorDescuentoPorApartamento")
                                            contenedor.setAttribute("contenedor", "descuento")
                                            contenedor.setAttribute("ofertaUID", ofertaUID)

                                            const nombreOfertaUI = document.createElement("div")
                                            nombreOfertaUI.classList.add("negrita")
                                            nombreOfertaUI.innerText = nombreOferta
                                            contenedor.appendChild(nombreOfertaUI)

                                            const descripcionDescuento = document.createElement("div")
                                            if (tipoAplicacion === "porcentaje") {
                                                descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${porcentaje}% al total neto del apartamento, generando un descuento del ${descuentoAplicado}.`
                                            } else if (tipoAplicacion === "cantidadFija") {
                                                descripcionDescuento.innerText = `Esta oferta aplica un descuento del ${descuentoAplicado}, al total neto del apartamento`
                                            }
                                            contenedor.appendChild(descripcionDescuento)
                                            contenedorDescuentosGlobal_renderizado.querySelector("[contenedor=descuentosPorApartamento]").appendChild(contenedor)
                                        })



                                    })
                                })
                            }
                        }
                    },
                    sobreControlPrecios: () => { },
                    impuestos: (data) => {
                        const destino = data.destino
                        const impuestos = data.impuestos
                        const instanciaUID = data.instanciaUID
                        const contenedorFinanciero = document.querySelector(destino).querySelector("[contenedor=financiero]")
                        const modoUI = contenedorFinanciero.getAttribute("modoUI")

                        if (modoUI === "plaza" && impuestos.length === 0) {
                            return

                        }

                        const contenedorImpuestos_selector = contenedorFinanciero.querySelector("[contenedor=impuestos]")

                        if (!contenedorImpuestos_selector) {
                        const contenedor = document.createElement('details');
                                 contenedor.classList.add(
                                "contenedorImpuestos",
                                "flexVertical",
                                "gap6",
                                "padding6"
                            )
                            contenedor.setAttribute("contenedor", "impuestos")

                            // Crear el elemento <summary>
                            const tituloContenedorPlegable = document.createElement('summary');
                            tituloContenedorPlegable.setAttribute("elemento", "impuestos")
                            tituloContenedorPlegable.classList.add(
                                "padding12",
                                "textSize16"
                            )
                            tituloContenedorPlegable.textContent = 'Impuestos aplicados';
                            contenedor.appendChild(tituloContenedorPlegable)

                            contenedorFinanciero.appendChild(contenedor)

                            if (modoUI === "administracion") {

                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add(
                                    "flexHorizontal",
                                    "gap6",
                                )

                                const botonInsertarImpuesto = document.createElement("div")
                                botonInsertarImpuesto.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonInsertarImpuesto.innerText = "Insertar impuesto"
                                botonInsertarImpuesto.addEventListener("click", () => {
                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.insertarImpuesto.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID
                                    })
                                })
                                contenedorBotones.appendChild(botonInsertarImpuesto)
                                contenedor.appendChild(contenedorBotones)


                                const botonInsertarImpuestoAdHoc = document.createElement("div")
                                botonInsertarImpuestoAdHoc.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonInsertarImpuestoAdHoc.innerText = "Crear e insertar impuesto ad hoc"
                                botonInsertarImpuestoAdHoc.addEventListener("click", () => {
                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.crearImpuestoAdHoc.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID
                                    })
                                })
                                contenedorBotones.appendChild(botonInsertarImpuestoAdHoc)
                                contenedor.appendChild(contenedorBotones)
                            }

                            if (modoUI === "simulador") {

                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add(
                                    "flexHorizontal",
                                    "gap6",
                                )

                                const botonInsertarImpuesto = document.createElement("div")
                                botonInsertarImpuesto.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonInsertarImpuesto.innerText = "Insertar impuesto"
                                botonInsertarImpuesto.addEventListener("click", () => {
                                    casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.insertarImpuesto.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID
                                    })
                                })
                                contenedorBotones.appendChild(botonInsertarImpuesto)
                                contenedor.appendChild(contenedorBotones)


                                const botonInsertarImpuestoAdHoc = document.createElement("div")
                                botonInsertarImpuestoAdHoc.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonInsertarImpuestoAdHoc.innerText = "Crear e insertar impuesto ad hoc"
                                botonInsertarImpuestoAdHoc.addEventListener("click", () => {
                                    casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.crearImpuestoAdHoc.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID
                                    })
                                })
                                contenedorBotones.appendChild(botonInsertarImpuestoAdHoc)
                                contenedor.appendChild(contenedorBotones)
                            }
                        }
                        const contenedorImpuestos_renderizado = contenedorFinanciero.querySelector("[contenedor=impuestos]")
                        if (impuestos.length === 0) {
                            const impuestosRenderizadosObsoletos = contenedorImpuestos_renderizado.querySelectorAll("[contenedor=impuesto]")
                            impuestosRenderizadosObsoletos.forEach(impuestoRenderizado => { impuestoRenderizado.remove() })

                            const info = document.createElement("div")
                            info.setAttribute("elemento", "info")
                            info.classList.add(
                                "negrita",
                                "padding6",
                                "textoCentrado"
                            )
                            info.innerText = "No hay impuestos en este contenedor financiero."
                            const info_rederizado = contenedorImpuestos_renderizado.querySelector("[elemento=info]")
                            if (!info_rederizado) {
                                contenedorImpuestos_renderizado.appendChild(info)
                            }
                        } else {
                            contenedorImpuestos_renderizado.querySelector("[elemento=info]")?.remove()
                        }
                        const tasaUI = (tasaIDV) => {
                            if (tasaIDV === "porcentaje") {
                                return "Porcentaje"
                            } else if (tasaIDV === "tasa") {
                                return "Tasa"
                            }
                        }
                        const impuestosIDV = impuestos.map((impuesto) => {

                            return String(impuesto.impuestoUID)
                        })
                        const selectorImpuestosRenderizadosObsoletos = contenedorImpuestos_renderizado.querySelectorAll("[contenedor=impuesto]")
                        selectorImpuestosRenderizadosObsoletos.forEach((impuestoRenderizado) => {
                            const impuestoUID_renderizado = impuestoRenderizado.getAttribute("impuestoUID")
                            if (!impuestosIDV.includes(impuestoUID_renderizado)) {
                                impuestoRenderizado?.remove()
                            }
                        })

                        for (const impuesto of impuestos) {
                            const impuestoUID = impuesto.impuestoUID
                            const impuestoRenderizado = contenedorImpuestos_renderizado.querySelector(`[impuestoUID="${impuestoUID}"]`)
                            if (impuestoRenderizado) {
                                continue
                            }
                            const impuestoTitulo = impuesto.nombre
                            const tipoValor = impuesto.tipoValorIDV
                            const tipoImpositivo = impuesto.tipoImpositivo
                            const porcentaje = impuesto.porcentaje

                            const impuestoUI = document.createElement("div")
                            impuestoUI.classList.add(
                                "flexVertical",
                                "padding6",
                                "backgroundWhite5",
                                "borderRadius8",
                                "gap6"
                            )
                            impuestoUI.setAttribute("contenedor", "impuesto")
                            impuestoUI.setAttribute("impuestoUID", impuestoUID)
                            const nombreImpuestoUI = document.createElement("div")
                            nombreImpuestoUI.classList.add("negrita")
                            nombreImpuestoUI.innerText = impuestoTitulo
                            impuestoUI.appendChild(nombreImpuestoUI)


                            let simboloTipoImpuesto;
                            if (tipoValor === "porcentaje") {
                                simboloTipoImpuesto = "%";
                            }
                            if (tipoValor === "tasa") {
                                simboloTipoImpuesto = "$";
                            }

                            const contendorValor = document.createElement("div")


                            const valorUI = document.createElement("div")
                            valorUI.classList.add("resumen_reserva_impuestoUITipoValor")
                            valorUI.innerText = tasaUI(tipoValor)
                            contendorValor.appendChild(valorUI)


                            if (tipoValor === "porcentaje") {
                                const porcentajeCalculado = document.createElement("div")
                                porcentajeCalculado.classList.add("resumen_reserva_impuestoUICalculoImpuestoPorcentaje")
                                porcentajeCalculado.innerText = porcentaje + "%"
                                contendorValor.appendChild(porcentajeCalculado)
                            }

                            const tipoImpositivoUI = document.createElement("div")
                            tipoImpositivoUI.classList.add("reserva_resumen_impuestoUITipoImpositivo")
                            tipoImpositivoUI.innerText = tipoImpositivo + "$"
                            contendorValor.appendChild(tipoImpositivoUI)
                            impuestoUI.appendChild(contendorValor)



                            if (modoUI === "administracion") {
                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add(
                                    "flexHorizontal",
                                    "gap6",
                                )

                                const botonEliminarImpuesto = document.createElement("div")
                                botonEliminarImpuesto.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonEliminarImpuesto.innerText = "Eliminar impuesto de la reserva"
                                botonEliminarImpuesto.addEventListener("click", () => {
                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.eliminarImpuesto.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID,
                                        nombreImpuesto: impuestoTitulo,
                                        impuestoUID
                                    })
                                })
                                contenedorBotones.appendChild(botonEliminarImpuesto)
                                impuestoUI.appendChild(contenedorBotones)
                            }

                            if (modoUI === "simulador") {
                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add(
                                    "flexHorizontal",
                                    "gap6",
                                )

                                const botonEliminarImpuesto = document.createElement("div")
                                botonEliminarImpuesto.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonEliminarImpuesto.innerText = "Eliminar impuesto de la reserva"
                                botonEliminarImpuesto.addEventListener("click", () => {
                                    casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.eliminarImpuesto.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID,
                                        nombreImpuesto: impuestoTitulo,
                                        impuestoUID
                                    })
                                })
                                contenedorBotones.appendChild(botonEliminarImpuesto)
                                impuestoUI.appendChild(contenedorBotones)
                            }

                            contenedorImpuestos_renderizado.appendChild(impuestoUI)
                        }


                    },
                    totalesGlobales: (data) => {
                        const destino = data.destino
                        const totales = data.totales
                        const instanciaUID = data.instanciaUID

                        const totalNeto = totales?.totalNeto
                        const totalFinal = totales?.totalFinal
                        const totalDescuento = totales?.totalDescuento
                        const impuestosAplicados = totales?.impuestosAplicados
                        //const promedioNocheNeto = totales?.promedioNocheNeto
                        //const promedioNocheNetoConDescuentos = totales?.promedioNocheNetoConDescuentos
                        const totalNetoConDescuentos = totales?.totalNetoConDescuentos
                        const contenedorFinanciero = document.querySelector(destino).querySelector("[contenedor=financiero]")
                        const modoUI = contenedorFinanciero.getAttribute("modoUI")

                        const contenedorTotales_selector = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=totalesGlobales]")
                        if (!contenedorTotales_selector) {

                            const totalesUI = document.createElement("div")
                            totalesUI.classList.add("reserva_resumen_desglose_pago_bloque")
                            totalesUI.setAttribute("contenedor", "totalesGlobales")
                            totalesUI.setAttribute("componente", "plegable")
                            document.querySelector(destino).querySelector("[contenedor=financiero]").appendChild(totalesUI)

                            const totalesUITituloBloque = document.createElement("div")
                            totalesUITituloBloque.classList.add("reserva_resumen_desglose_pago_titulo")
                            totalesUITituloBloque.innerText = "Totales globales"
                            totalesUI.appendChild(totalesUITituloBloque)

                            if (modoUI === "administracion") {
                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add(
                                    "flexHorizontal",
                                    "gap6",
                                )

                                const botonInsertarDescuento = document.createElement("div")
                                botonInsertarDescuento.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonInsertarDescuento.innerText = "Reconstruir desglose financerio"
                                botonInsertarDescuento.addEventListener("click", () => {
                                    casaVitini.administracion.reservas.detallesReserva.categoriasGlobales.desgloseTotal.componentesUI.reconstruirDesgloseFinanciero.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID,
                                    })
                                })
                                contenedorBotones.appendChild(botonInsertarDescuento)

                                totalesUI.appendChild(contenedorBotones)
                            }
                            if (modoUI === "simulador") {
                                const contenedorBotones = document.createElement("div")
                                contenedorBotones.classList.add(
                                    "flexHorizontal",
                                    "gap6",
                                )

                                const botonInsertarDescuento = document.createElement("div")
                                botonInsertarDescuento.classList.add(
                                    "botonV1",
                                    "comportamientoBoton"
                                )
                                botonInsertarDescuento.innerText = "Reconstruir desglose financerio"
                                botonInsertarDescuento.addEventListener("click", () => {
                                    casaVitini.administracion.simuladorDePrecios.detallesSimulacion.componentesUI.reconstruirDesgloseFinanciero.ui({
                                        instanciaUID_contenedorFinanciero: instanciaUID,
                                    })
                                })
                                contenedorBotones.appendChild(botonInsertarDescuento)

                                totalesUI.appendChild(contenedorBotones)
                            }
                        }

                        const contenedorTotales_renderizado = document.querySelector(destino).querySelector("[contenedor=financiero]").querySelector("[contenedor=totalesGlobales]")

                        const contenedorTotalesNeto_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalesNeto]")
                        if (!contenedorTotalesNeto_selector) {
                            const contenedorTotalesNeto = document.createElement("div")
                            contenedorTotalesNeto.setAttribute("contenedor", "totalesNeto")
                            contenedorTotalesNeto.classList.add(
                                "backgroundGrey1",
                                "borderRadius8",
                                "flexVertical",
                                "padding6",
                                "gap6"
                            )

                            const contenedorTotalNetoUI = document.createElement("div")
                            contenedorTotalNetoUI.classList.add(
                                "flexVertical",
                                "padding6"
                            )

                            const totalReservaNetoUI = document.createElement("div")
                            //totalReservaNetoUI.classList.add("detalleDelTotal")
                            totalReservaNetoUI.innerText = "Total neto"
                            contenedorTotalNetoUI.appendChild(totalReservaNetoUI)

                            const totalReservaNetoUI_ = document.createElement("div")
                            totalReservaNetoUI_.setAttribute("dato", "totalNeto")
                            totalReservaNetoUI_.classList.add(
                                "negrita"
                            )
                            contenedorTotalNetoUI.appendChild(totalReservaNetoUI_)
                            contenedorTotalesNeto.appendChild(contenedorTotalNetoUI)

                            const contenedorPromedioNoche = document.createElement("div")
                            contenedorPromedioNoche.classList.add(
                                "flexVertical",
                                "padding6"
                            )

                            const totalReservaNetoDiaUI = document.createElement("div")
                            //totalReservaNetoDiaUI.classList.add("detalleDelTotal")
                            totalReservaNetoDiaUI.innerText = "Precio medio neto de la reserva por noche"
                            //   contenedorPromedioNoche.appendChild(totalReservaNetoDiaUI)

                            const totalReservaNetoDiaUI_ = document.createElement("div")
                            totalReservaNetoDiaUI_.classList.add("negrita")
                            totalReservaNetoDiaUI_.setAttribute("dato", "totalNetoNocheMedio")

                            contenedorPromedioNoche.appendChild(totalReservaNetoDiaUI_)
                            // contenedorTotalesNeto.appendChild(contenedorPromedioNoche)
                            contenedorTotales_renderizado.appendChild(contenedorTotalesNeto)

                        }
                        const contenedorTotalesNeto_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalesNeto]")

                        const totalNetoUI = contenedorTotalesNeto_renderizado.querySelector("[dato=totalNeto]")
                        totalNetoUI.innerText = totalNeto

                        //const promedioNocheNetoUI = contenedorTotalesNeto_renderizado.querySelector("[dato=totalNetoNocheMedio]")
                        //promedioNocheNetoUI.innerText = promedioNocheNeto

                        const totalesDescuentos_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalDescuentos]")
                        if (!totalesDescuentos_selector && totalDescuento) {
                            const contenedorTotalesDescuentos = document.createElement("div")
                            contenedorTotalesDescuentos.setAttribute("contenedor", "totalDescuentos")
                            contenedorTotalesDescuentos.classList.add(
                                "backgroundGrey1",
                                "borderRadius8",
                                "flexVertical",
                                "padding6",
                                "gap6"
                            )
                            contenedorTotales_renderizado.appendChild(contenedorTotalesDescuentos)

                            const contenedorTotalDescuentosAplicados = document.createElement("div")
                            contenedorTotalDescuentosAplicados.classList.add(
                                "flexVertical",
                                "padding6"
                            )

                            const totalDescuentosAplicadosUI = document.createElement("div")
                            //totalDescuentosAplicadosUI.classList.add("detalleDelTotal")
                            totalDescuentosAplicadosUI.innerText = "Descuento total por todas las ofertas aplicadas"
                            contenedorTotalDescuentosAplicados.appendChild(totalDescuentosAplicadosUI)

                            const totalDescuentosAplicadosUI_ = document.createElement("div")
                            totalDescuentosAplicadosUI_.classList.add("negrita")
                            totalDescuentosAplicadosUI_.setAttribute("dato", "totalConDescuentoAplicado")
                            contenedorTotalDescuentosAplicados.appendChild(totalDescuentosAplicadosUI_)
                            contenedorTotalesDescuentos.appendChild(contenedorTotalDescuentosAplicados)

                            const contenedorTotalNetoConDescuentos = document.createElement("div")
                            contenedorTotalNetoConDescuentos.classList.add(
                                "flexVertical",
                                "padding6"
                            )

                            const totalNetoConDescuentosUI = document.createElement("div")
                            //totalNetoConDescuentosUI.classList.add("detalleDelTotal")
                            totalNetoConDescuentosUI.innerText = "Total neto con descuentos aplicados"
                            contenedorTotalNetoConDescuentos.appendChild(totalNetoConDescuentosUI)

                            const totalNetoConDescuentosUI_ = document.createElement("div")
                            totalNetoConDescuentosUI_.classList.add("negrita")
                            totalNetoConDescuentosUI_.setAttribute("dato", "totalNetoConDescuentos")

                            contenedorTotalNetoConDescuentos.appendChild(totalNetoConDescuentosUI_)
                            contenedorTotalesDescuentos.appendChild(contenedorTotalNetoConDescuentos)


                            const contenedorPromedio = document.createElement("div")
                            contenedorPromedio.classList.add(
                                "flexVertical",
                                "padding6"
                            )

                            const precioMedioConDescuentos = document.createElement("div")
                            //precioMedioConDescuentos.classList.add("detalleDelTotal")
                            precioMedioConDescuentos.innerText = "Precio medio neto de la reserva por noche con descuentos aplicados"
                            contenedorPromedio.appendChild(precioMedioConDescuentos)

                            const precioMedioConDescuentos_ = document.createElement("div")
                            precioMedioConDescuentos_.classList.add("negrita")
                            precioMedioConDescuentos_.setAttribute("dato", "precioMedioConDescuentos")

                            contenedorPromedio.appendChild(precioMedioConDescuentos_)
                            contenedorTotalesDescuentos.appendChild(contenedorPromedio)
                        }
                        const totalesDescuentos_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalDescuentos]")
                        if (!totalDescuento) {
                            totalesDescuentos_renderizado?.remove()
                        } else {
                            const totalConDescuentosAplicadosUI = totalesDescuentos_renderizado.querySelector("[dato=totalConDescuentoAplicado]")

                            totalConDescuentosAplicadosUI.innerText = totalDescuento

                            const totalConDescuentosUI = totalesDescuentos_renderizado.querySelector("[dato=totalNetoConDescuentos]")
                            totalConDescuentosUI.innerText = totalNetoConDescuentos

                            //const promedioNocheNetoConDescuentosUI = totalesDescuentos_renderizado.querySelector("[dato=precioMedioConDescuentos]")
                            //promedioNocheNetoConDescuentosUI.innerText = promedioNocheNetoConDescuentos
                        }

                        const contenedorTotalesFinal_selector = contenedorTotales_renderizado.querySelector("[contenedor=totalesFinal]")
                        if (!contenedorTotalesFinal_selector) {

                            const contenedorTotalesFinal = document.createElement("div")
                            contenedorTotalesFinal.setAttribute("contenedor", "totalesFinal")
                            contenedorTotalesFinal.classList.add(
                                "backgroundGrey1",
                                "borderRadius8",
                                "flexVertical",
                                "padding6",
                                "gap6"
                            )
                            contenedorTotales_renderizado.appendChild(contenedorTotalesFinal)
                            const contenedorTotalImpuestosAplicados = document.createElement("div")
                            contenedorTotalImpuestosAplicados.classList.add(
                                "flexVertical",
                                "padding6"
                            )

                            const totalImpuestosUI = document.createElement("div")
                            //totalImpuestosUI.classList.add("detalleDelTotal")
                            totalImpuestosUI.innerText = "Total impuestos aplicados"
                            contenedorTotalImpuestosAplicados.appendChild(totalImpuestosUI)

                            const totalImpuestosUI_ = document.createElement("div")
                            totalImpuestosUI_.classList.add("negrita")
                            totalImpuestosUI_.setAttribute("dato", "impuestosAplicados")
                            contenedorTotalImpuestosAplicados.appendChild(totalImpuestosUI_)

                            contenedorTotalesFinal.appendChild(contenedorTotalImpuestosAplicados)

                            const contenedorTotalFinal = document.createElement("div")
                            contenedorTotalFinal.classList.add(
                                "flexVertical",
                                "padding6"
                            )

                            const totalConImpuestosUI = document.createElement("div")
                            totalConImpuestosUI.innerText = "Total final"
                            contenedorTotalFinal.appendChild(totalConImpuestosUI)

                            const totalConImpuestosUI_ = document.createElement("div")
                            totalConImpuestosUI_.classList.add("negrita")
                            totalConImpuestosUI_.setAttribute("dato", "totalFinal")
                            //totalConImpuestosUI_.innerText = totalFinal
                            contenedorTotalFinal.appendChild(totalConImpuestosUI_)
                            contenedorTotalesFinal.appendChild(contenedorTotalFinal)
                        }
                        const contenedorTotalesFinal_renderizado = contenedorTotales_renderizado.querySelector("[contenedor=totalesFinal]")


                        const impuestosAplicadosUI = contenedorTotalesFinal_renderizado.querySelector("[dato=impuestosAplicados]")
                        impuestosAplicadosUI.innerText = impuestosAplicados

                        const totalFinalUI = contenedorTotalesFinal_renderizado.querySelector("[dato=totalFinal]")
                        totalFinalUI.innerText = totalFinal

                    },
                },
                constructorContenedor: (contenedorFinanciero) => {
                    const desgloseFinanciero = contenedorFinanciero.desgloseFinanciero
                    const instantaneaNoches = contenedorFinanciero.instantaneaNoches
                    const instanneaOfertas = contenedorFinanciero.instantaneaOfertas
                    const preciosAlterados = contenedorFinanciero.preciosAlterados

                    const global = desgloseFinanciero.global
                    const entidades = desgloseFinanciero.entidades
                    const impuestos = desgloseFinanciero.impuestos
                    const ofertasAplicadas = desgloseFinanciero.ofertasAplicadas


                    const totalesPorApartamento = desgloseFinanciero.totalesPorApartamento
                    const totalesPorNoche = desgloseFinanciero.totalesPorNoche
                    const totales = desgloseFinanciero.totales
                    const desgloseImpuestos = desgloseFinanciero.impuestos
                    const ofertas = desgloseFinanciero.ofertas
                    const destino = desgloseFinanciero.destino
                    const selectorDestino = document.querySelector(destino).querySelector("[contenedor=financiero]")
                    if (!selectorDestino) {
                        const error = "totales no encuentra el elemento de destino, revisa el identificador del elemento"
                        return casaVitini.ui.componentes.advertenciaInmersiva(error)
                    }
                    const simboloDescuento = {
                        porcentaje: "%",
                        cantidadFija: "$"
                    }
                    ////////////////////////////////////////////
                    const contenedorDesgloseTotales = document.createElement("div")
                    contenedorDesgloseTotales.classList.add("componentes_ui_desloseTotales_contenedor")
                    const detallePorDiaUI = document.createElement("div")
                    detallePorDiaUI.classList.add("reserva_resumen_desglose_pago_bloque")
                    const detalleDiaUITitulo = document.createElement("div")
                    detalleDiaUITitulo.classList.add("reserva_resumen_desglose_pago_titulo")
                    detalleDiaUITitulo.innerText = "Detalle por noche"
                    detallePorDiaUI.appendChild(detalleDiaUITitulo)
                    const contenedorDesglosePorNoche = document.createElement("div")
                    contenedorDesglosePorNoche.classList.add("reserva_resumen_desglose_porNoche")
                    if (totalesPorNoche.length === 0) {
                        const info = document.createElement("div")
                        info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                        info.innerText = "No hay información financiera para desglosar por noche"
                        contenedorDesglosePorNoche.appendChild(info)
                    }
                    for (const detallePorNoche of totalesPorNoche) {
                        const fechaNoche = detallePorNoche.fechaDiaConNoche
                        const precioNetoNoche = detallePorNoche.precioNetoNoche
                        const apartamentosDetallesPorNoche = detallePorNoche.apartamentos
                        const apartamentoUI_ = document.createElement("div")
                        apartamentoUI_.classList.add("contenedorDiaConNoche")
                        const apartamentoUITitulo = document.createElement("div")
                        apartamentoUITitulo.classList.add("reserva_resumen_apartamentoIUTitulo")
                        apartamentoUITitulo.classList.add("negrita")
                        apartamentoUITitulo.innerText = fechaNoche
                        apartamentoUI_.appendChild(apartamentoUITitulo)
                        const totalNetoNocheUI = document.createElement("div")
                        totalNetoNocheUI.classList.add("reserva_resumen_apartamentoIUTitulo")
                        totalNetoNocheUI.classList.add("negrita")
                        totalNetoNocheUI.innerText = precioNetoNoche + "$ Total neto noche"
                        apartamentoUI_.appendChild(totalNetoNocheUI)
                        for (const detalleApartmentoPorNoche of apartamentosDetallesPorNoche) {
                            const apartamentoUI = detalleApartmentoPorNoche.apartamentoUI
                            const precioNetoPorNoche = detalleApartmentoPorNoche.precioNetoNoche
                            const detalleApartamentosUITitulo = document.createElement("div")
                            detalleApartamentosUITitulo.classList.add("reserva_resumen_apartamentoUIPrecio")
                            detalleApartamentosUITitulo.classList.add("negrita")
                            detalleApartamentosUITitulo.classList.add("colorGris")
                            detalleApartamentosUITitulo.innerText = apartamentoUI
                            apartamentoUI_.appendChild(detalleApartamentosUITitulo)
                            const detalleApartamentosUIPreciNetoNoche = document.createElement("div")
                            detalleApartamentosUIPreciNetoNoche.classList.add("reserva_resumen_apartamentoUIPrecio")
                            detalleApartamentosUIPreciNetoNoche.innerText = precioNetoPorNoche + "$ / Neto por noche"
                            apartamentoUI_.appendChild(detalleApartamentosUIPreciNetoNoche)
                        }
                        contenedorDesglosePorNoche.appendChild(apartamentoUI_)
                    }
                    detallePorDiaUI.appendChild(contenedorDesglosePorNoche)
                    contenedorDesgloseTotales.appendChild(detallePorDiaUI)
                    ////////////////////////////////////////////
                    const contenedorTotalesPorApartamento = document.createElement("div")
                    contenedorTotalesPorApartamento.classList.add("reserva_resumen_desglose_porNoche")
                    const alojamientoUI = document.createElement("div")
                    alojamientoUI.classList.add("reserva_resumen_desglose_pago_bloque")
                    const alojamientoUITitulo = document.createElement("div")
                    alojamientoUITitulo.classList.add("reserva_resumen_desglose_pago_titulo")
                    alojamientoUITitulo.innerText = "Precio total neto por apartamento"
                    alojamientoUI.appendChild(alojamientoUITitulo)
                    if (totalesPorApartamento.length === 0) {
                        const info = document.createElement("div")
                        info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                        info.innerText = "No hay información financiera para desglosar por apartamento"
                        alojamientoUI.appendChild(info)
                    }
                    for (const detalleDesglosePorApartamento of totalesPorApartamento) {
                        const apartamentoUI_ = detalleDesglosePorApartamento.apartamentoUI
                        const totalNetoApartamento = detalleDesglosePorApartamento.totalNetoRango
                        const precioNetoMedioPorNoche = detalleDesglosePorApartamento.precioMedioNocheRango
                        const apartamentoUI = document.createElement("div")
                        apartamentoUI.classList.add("contenedorApartamento")
                        const apartamentoUITitulo = document.createElement("div")
                        apartamentoUITitulo.classList.add("contenedorTextoOferta")
                        apartamentoUITitulo.classList.add("negrita")
                        apartamentoUITitulo.innerText = apartamentoUI_
                        apartamentoUI.appendChild(apartamentoUITitulo)
                        const apartamentoUIPrecioNetoTotal = document.createElement("div")
                        apartamentoUIPrecioNetoTotal.classList.add("textoDetallesPorApartamento")
                        apartamentoUIPrecioNetoTotal.innerText = "Total neto: " + totalNetoApartamento + "$"
                        apartamentoUI.appendChild(apartamentoUIPrecioNetoTotal)
                        const apartamentoUIPrecioPromedioPorNoche = document.createElement("div")
                        apartamentoUIPrecioPromedioPorNoche.classList.add("textoDetallesPorApartamento")
                        apartamentoUIPrecioPromedioPorNoche.innerText = "Precio medio neto por noche: " + precioNetoMedioPorNoche + "$"
                        apartamentoUI.appendChild(apartamentoUIPrecioPromedioPorNoche)
                        alojamientoUI.appendChild(apartamentoUI)
                    }
                    contenedorTotalesPorApartamento.appendChild(alojamientoUI)
                    contenedorDesgloseTotales.appendChild(contenedorTotalesPorApartamento)
                    ////////////////////////////////////////////
                    let controlContenido = "noDesplegar"
                    const ofertasUI = document.createElement("div")
                    ofertasUI.classList.add("reserva_resumen_desglose_pago_bloque")
                    const ofertasUITitulo = document.createElement("div")
                    ofertasUITitulo.classList.add("reserva_resumen_desglose_pago_titulo")
                    ofertasUITitulo.innerText = "Ofertas aplicadas"
                    ofertasUI.appendChild(ofertasUITitulo)
                    for (const oferta of ofertas) {
                        const porNumeroDeApartamentos = oferta.porNumeroDeApartamentos
                        const porApartamentosEspecificos = oferta.porApartamentosEspecificos
                        const porDiasDeReserva = oferta.porDiasDeReserva
                        const porRangoDeFechas = oferta.porRangoDeFechas
                        const porDiasDeAntelacion = oferta.porDiasDeAntelacion
                        if (porNumeroDeApartamentos?.length) {
                            controlContenido = "desplegar"
                            const contenedorOfertaUI = document.createElement("div")
                            contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                            for (const detallesReserva of oferta.porNumeroDeApartamentos) {
                                const contenedorIndividualOferta = document.createElement("div")
                                contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                                const cantidad = detallesReserva.cantidad
                                const tipoDescuento = detallesReserva.tipoDescuento
                                const definicion = detallesReserva.definicion
                                const nombreOferta = detallesReserva.nombreOferta
                                const descuento = detallesReserva.descuento
                                let nombreOfertaUI = document.createElement("div")
                                nombreOfertaUI.classList.add("contenedorTextoOferta")
                                nombreOfertaUI.classList.add("negrita")
                                nombreOfertaUI.innerText = nombreOferta
                                contenedorIndividualOferta.appendChild(nombreOfertaUI)
                                const definicionOfertaUI = document.createElement("div")
                                definicionOfertaUI.classList.add("contenedorTextoOferta")
                                definicionOfertaUI.innerText = definicion
                                contenedorIndividualOferta.appendChild(definicionOfertaUI)
                                if (tipoDescuento === "porcentaje") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento del " + cantidad + simboloDescuento[tipoDescuento] + " rebajando el neto de la reserva en " + descuento + "$"
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                                if (tipoDescuento === "cantidadFija") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento del " + cantidad + simboloDescuento[tipoDescuento] + " sobre el neto de la reserva"
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                                contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                            }
                            ofertasUI.appendChild(contenedorOfertaUI)
                        }
                        if (porApartamentosEspecificos?.length) {
                            controlContenido = "desplegar"
                            const contenedorOfertaUI = document.createElement("div")
                            contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                            for (const detallesOferta of oferta.porApartamentosEspecificos) {
                                const nombreOferta = detallesOferta.nombreOferta
                                const cantidad = detallesOferta.cantidad
                                const tipoDescuento = detallesOferta.tipoDescuento
                                const definicion = detallesOferta.definicion
                                const descuentoOferta = detallesOferta.descuentoOferta
                                const descuentoAplicadoA = detallesOferta.descuentoAplicadoA
                                const contenedorIndividualOferta = document.createElement("div")
                                contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                                const nombreOfertaUI = document.createElement("div")
                                nombreOfertaUI.classList.add("contenedorTextoOferta")
                                nombreOfertaUI.classList.add("negrita")
                                nombreOfertaUI.innerText = nombreOferta
                                contenedorIndividualOferta.appendChild(nombreOfertaUI)
                                const definicionOfertaUI = document.createElement("div")
                                definicionOfertaUI.classList.add("contenedorTextoOferta")
                                definicionOfertaUI.innerText = definicion
                                contenedorIndividualOferta.appendChild(definicionOfertaUI)
                                if (descuentoAplicadoA === "totalNetoApartamentoDedicado") {
                                    const apartamentosEspecificos = detallesOferta.apartamentosEspecificos
                                    const contenedorApartamentosEspecificos = document.createElement("div")
                                    contenedorApartamentosEspecificos.classList.add("componentes_ui_totales_ofertas_apartamentosEspecificos_contenedor")
                                    for (const detallesApartamento of apartamentosEspecificos) {
                                        const apartamentoIDV = detallesApartamento.apartamentoIDV
                                        const apartamentoUI = detallesApartamento.apartamentoUI
                                        const tipoDescuento = detallesApartamento.tipoDescuento
                                        const cantidad = detallesApartamento.cantidad
                                        const descuento = detallesApartamento.descuento
                                        const bloqueDetalleOferta = document.createElement("div")
                                        bloqueDetalleOferta.classList.add("resumen_reserva_detalle_oferta_apartamentos_especificos")
                                        const tituloApartamentoUI = document.createElement("div")
                                        tituloApartamentoUI.classList.add("negrita")
                                        tituloApartamentoUI.innerHTML = apartamentoUI
                                        bloqueDetalleOferta.appendChild(tituloApartamentoUI)
                                        const tipoDescuentoApartamentoUI = document.createElement("div")
                                        tipoDescuentoApartamentoUI.innerText = tipoDescuento
                                        //   bloqueDetalleOferta.appendChild(tipoDescuentoApartamentoUI)
                                        const cantidadPorApartmento = document.createElement("div")
                                        cantidadPorApartmento.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                        bloqueDetalleOferta.appendChild(cantidadPorApartmento)
                                        contenedorApartamentosEspecificos.appendChild(bloqueDetalleOferta)
                                    }
                                    contenedorIndividualOferta.appendChild(contenedorApartamentosEspecificos)
                                }
                                if (descuentoAplicadoA === "totalNetoReserva") {
                                    const descuentoOfertaUI = document.createElement("div")
                                    descuentoOfertaUI.classList.add("contenedorTextoOferta")
                                    descuentoOfertaUI.innerText = descuentoOferta
                                    contenedorIndividualOferta.appendChild(descuentoOfertaUI)
                                    if (tipoDescuento === "porcentaje") {
                                        const tipoDescuentoUI = document.createElement("div")
                                        tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                        tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                        contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                    }
                                    if (tipoDescuento === "cantidadFija") {
                                        const tipoDescuentoUI = document.createElement("div")
                                        tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                        tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                        contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                    }
                                }
                                contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                            }
                            ofertasUI.appendChild(contenedorOfertaUI)
                        }
                        if (porDiasDeReserva?.length) {
                            controlContenido = "desplegar"
                            const contenedorOfertaUI = document.createElement("div")
                            contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                            for (const detatllesReserva of oferta.porDiasDeReserva) {
                                const cantidad = detatllesReserva.cantidad
                                const tipoDescuento = detatllesReserva.tipoDescuento
                                const nombreOferta = detatllesReserva.nombreOferta
                                const numero = detatllesReserva.numero
                                const simboloNumero = detatllesReserva.simboloNumero
                                const definicion = detatllesReserva.definicion
                                const descuento = detatllesReserva.descuento
                                const contenedorIndividualOferta = document.createElement("div")
                                contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                                const nombreOfertaUI = document.createElement("div")
                                nombreOfertaUI.classList.add("contenedorTextoOferta")
                                nombreOfertaUI.classList.add("negrita")
                                nombreOfertaUI.innerText = nombreOferta
                                contenedorIndividualOferta.appendChild(nombreOfertaUI)
                                const definicionUI = document.createElement("div")
                                definicionUI.classList.add("contenedorTextoOferta")
                                definicionUI.innerText = definicion
                                contenedorIndividualOferta.appendChild(definicionUI)
                                if (tipoDescuento === "porcentaje") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento] + " rebajando el neto de la reserva en " + descuento + "$"
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                                if (tipoDescuento === "cantidadFija") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento: " + cantidad + simboloDescuento[tipoDescuento]
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                                const definicionOfertaUI = document.createElement("div")
                                definicionOfertaUI.classList.add("contenedorTextoOferta")
                                definicionOfertaUI.innerText = definicion
                                //contenedorIndividualOferta.appendChild(definicionOfertaUI)
                                contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                            }
                            ofertasUI.appendChild(contenedorOfertaUI)
                        }
                        if (porRangoDeFechas?.length) {
                            controlContenido = "desplegar"
                            const contenedorOfertaUI = document.createElement("div")
                            contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                            for (const detallesOferta of oferta.porRangoDeFechas) {
                                const cantidad = detallesOferta.cantidad
                                const tipoDescuento = detallesOferta.tipoDescuento
                                const definicion = detallesOferta.definicion
                                const nombreOferta = detallesOferta.nombreOferta
                                const diasAfectados = detallesOferta.diasAfectados
                                const descuento = detallesOferta.descuento
                                const contenedorIndividualOferta = document.createElement("div")
                                contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                                const nombreOfertaUI = document.createElement("div")
                                nombreOfertaUI.classList.add("contenedorTextoOferta")
                                nombreOfertaUI.classList.add("negrita")
                                nombreOfertaUI.innerText = nombreOferta
                                contenedorIndividualOferta.appendChild(nombreOfertaUI)
                                const definicionOfertaUI = document.createElement("div")
                                definicionOfertaUI.classList.add("contenedorTextoOferta")
                                definicionOfertaUI.innerText = definicion
                                contenedorIndividualOferta.appendChild(definicionOfertaUI)
                                const tipoDescuentoUI = document.createElement("div")
                                tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                tipoDescuentoUI.innerText = "Descuento total de la oferta: " + descuento + "$"
                                contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                const contenedorDiasEspecificos = document.createElement("div")
                                contenedorDiasEspecificos.classList.add("componentes_ui_totales_ofertas_diasEspecificos_contenedor")
                                for (const detalleDelDia of diasAfectados) {
                                    const dia = detalleDelDia.dia
                                    const totaDiaNetoConOferta = detalleDelDia.totaDiaNetoConOferta
                                    const descuento = detalleDelDia.descuento
                                    const bloque = document.createElement("div")
                                    bloque.classList.add("resumen_reserva_detalle_oferta_apartamentos_especificos")
                                    const tituloUI = document.createElement("div")
                                    tituloUI.classList.add("negrita")
                                    tituloUI.innerHTML = dia
                                    bloque.appendChild(tituloUI)
                                    const totalSinOferta = document.createElement("div")
                                    totalSinOferta.innerText = "Total día con oferta: " + totaDiaNetoConOferta + "$"
                                    bloque.appendChild(totalSinOferta)
                                    const totalConOferta = document.createElement("div")
                                    totalConOferta.innerText = "Descuento: " + descuento + "$"
                                    bloque.appendChild(totalConOferta)
                                    contenedorDiasEspecificos.appendChild(bloque)
                                }
                                contenedorIndividualOferta.appendChild(contenedorDiasEspecificos)
                                contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                            }
                            ofertasUI.appendChild(contenedorOfertaUI)
                        }
                        if (porDiasDeAntelacion?.length) {
                            controlContenido = "desplegar"
                            const contenedorOfertaUI = document.createElement("div")
                            contenedorOfertaUI.classList.add("compomentes_ui_totales_ofertas_contenedorConjuntoOferta")
                            for (const detallesOferta of oferta.porDiasDeAntelacion) {
                                const cantidad = detallesOferta.cantidad
                                const tipoDescuento = detallesOferta.tipoDescuento
                                const definicion = detallesOferta.definicion
                                const nombreOferta = detallesOferta.nombreOferta
                                const descuento = detallesOferta.descuento
                                const contenedorIndividualOferta = document.createElement("div")
                                contenedorIndividualOferta.classList.add("compomentes_ui_totales_ofertas_contenedorOferta")
                                const nombreOfertaUI = document.createElement("div")
                                nombreOfertaUI.classList.add("contenedorTextoOferta")
                                nombreOfertaUI.classList.add("negrita")
                                nombreOfertaUI.innerText = nombreOferta
                                contenedorIndividualOferta.appendChild(nombreOfertaUI)
                                const definicionOfertaUI = document.createElement("div")
                                definicionOfertaUI.classList.add("contenedorTextoOferta")
                                definicionOfertaUI.innerText = definicion
                                contenedorIndividualOferta.appendChild(definicionOfertaUI)
                                if (tipoDescuento === "porcentaje") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento del " + cantidad + "% sobre el neto de la reserva."
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                                if (tipoDescuento === "cantidadFija") {
                                    const tipoDescuentoUI = document.createElement("div")
                                    tipoDescuentoUI.classList.add("contenedorTextoOferta")
                                    tipoDescuentoUI.innerText = "Descuento de " + cantidad + "$ sobre el neto de la reserva"
                                    contenedorIndividualOferta.appendChild(tipoDescuentoUI)
                                }
                                contenedorOfertaUI.appendChild(contenedorIndividualOferta)
                            }
                            ofertasUI.appendChild(contenedorOfertaUI)
                        }
                    }
                    if (controlContenido === "desplegar") {
                        contenedorDesgloseTotales.appendChild(ofertasUI)
                    }


                    const impuestoUI = document.createElement("div")
                    impuestoUI.classList.add("reserva_resumen_desglose_pago_bloque")
                    const impuestoUITituloBloque = document.createElement("div")
                    impuestoUITituloBloque.classList.add("reserva_resumen_desglose_pago_titulo")
                    impuestoUITituloBloque.innerText = "Impuestos"
                    impuestoUI.appendChild(impuestoUITituloBloque)




                    if (desgloseImpuestos.length === 0) {
                        const info = document.createElement("div")
                        info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                        info.innerText = "No hay información financiera sobre impuestos para mostrar"
                        impuestoUI.appendChild(info)
                    }
                    desgloseImpuestos.forEach((impuesto) => {
                        const impuestoTitulo = impuesto.nombreImpuesto
                        const tipoValor = impuesto.tipoValor
                        const tipoImpositivo = impuesto.tipoImpositivo
                        const calculoImpuestoPorcentaje = impuesto.calculoImpuestoPorcentaje
                        const impuestoUITitulo = document.createElement("div")
                        impuestoUITitulo.classList.add("reserva_resumen_desglose_pago_elemento")
                        const impuestoUITitulo_ = document.createElement("div")
                        impuestoUITitulo_.classList.add("reserva_resumen_apartamentoIUTitulo")
                        impuestoUITitulo_.classList.add("negrita")
                        impuestoUITitulo_.innerText = impuestoTitulo
                        impuestoUITitulo.appendChild(impuestoUITitulo_)
                        let simboloTipoImpuesto;
                        if (tipoValor === "porcentaje") {
                            simboloTipoImpuesto = "%";
                        }
                        if (tipoValor === "tasa") {
                            simboloTipoImpuesto = "$";
                        }
                        const impuestoUITipoImpositivo = document.createElement("div")
                        impuestoUITipoImpositivo.classList.add("reserva_resumen_impuestoUITipoImpositivo")
                        impuestoUITipoImpositivo.innerText = tipoImpositivo + simboloTipoImpuesto
                        impuestoUITitulo.appendChild(impuestoUITipoImpositivo)
                        const impuestoUITipoValor = document.createElement("div")
                        impuestoUITipoValor.classList.add("resumen_reserva_impuestoUITipoValor")
                        impuestoUITipoValor.innerText = tipoValor
                        // impuestoUITitulo.appendChild(impuestoUITipoValor)
                        if (calculoImpuestoPorcentaje) {
                            const impuestoUICalculoImpuestoPorcentaje = document.createElement("div")
                            impuestoUICalculoImpuestoPorcentaje.classList.add("resumen_reserva_impuestoUICalculoImpuestoPorcentaje")
                            impuestoUICalculoImpuestoPorcentaje.innerText = calculoImpuestoPorcentaje + "$"
                            impuestoUITitulo.appendChild(impuestoUICalculoImpuestoPorcentaje)
                        }
                        impuestoUI.appendChild(impuestoUITitulo)
                    })


                    if (desgloseImpuestos.length > 0) {
                        contenedorDesgloseTotales.appendChild(impuestoUI)
                    }

                    const totalesUI = document.createElement("div")
                    totalesUI.classList.add("reserva_resumen_desglose_pago_bloque")
                    const totalesUITituloBloque = document.createElement("div")
                    totalesUITituloBloque.classList.add("reserva_resumen_desglose_pago_titulo")
                    totalesUITituloBloque.innerText = "Totales"
                    totalesUI.appendChild(totalesUITituloBloque)
                    const totalPromedioNetoPorNoche = totales.promedioNetoPorNoche ?
                        totales.promedioNetoPorNoche + "$" :
                        "No hay informacion del total promedio neto por noche";
                    const totalReservaNeto = totales.totalReservaNeto ? totales.totalReservaNeto + "$" : "No hay información del total neto de la reserva"
                    const totalImpuestos = totales.totalImpuestos ? totales.totalImpuestos + "$" : "No hay información del total de los impuestos"
                    const totalDescuentos = totales.totalDescuentos ? totales.totalDescuentos + "$" : "No hay infomración del total desconectado"
                    const totalReservaNetoSinDescuentos = totales.totalReservaNetoSinOfertas ? totales.totalReservaNetoSinOfertas + "$" : "No hay informacion del total de la reserva sin descuentos"
                    if (totales.totalReservaNeto) {
                        const totalReservaNetoDiaUI = document.createElement("div")
                        totalReservaNetoDiaUI.classList.add("detalleDelTotal")
                        totalReservaNetoDiaUI.innerText = "Precio medio neto de la reserva por noche: " + totalPromedioNetoPorNoche
                        totalesUI.appendChild(totalReservaNetoDiaUI)
                        if (totales.totalDescuentos) {
                            const totalDescuentosAplicadosUI = document.createElement("div")
                            totalDescuentosAplicadosUI.classList.add("detalleDelTotal")
                            totalDescuentosAplicadosUI.innerText = "Descuento total por todas las ofertas aplicadas: " + totalDescuentos
                            totalesUI.appendChild(totalDescuentosAplicadosUI)
                            const totalReservaNetoSinOfertasUI = document.createElement("div")
                            totalReservaNetoSinOfertasUI.classList.add("detalleDelTotal")
                            totalReservaNetoSinOfertasUI.innerText = "Total neto sin ofertas aplicadas: " + totalReservaNetoSinDescuentos
                            totalesUI.appendChild(totalReservaNetoSinOfertasUI)
                        }
                        const totalReservaNetoUI = document.createElement("div")
                        totalReservaNetoUI.classList.add("detalleDelTotal")
                        totalReservaNetoUI.innerText = "Total reserva neto: " + totalReservaNeto
                        totalesUI.appendChild(totalReservaNetoUI)
                        const totalImpuestosUI = document.createElement("div")
                        totalImpuestosUI.classList.add("detalleDelTotal")
                        totalImpuestosUI.innerText = "Total impuestos aplicados: " + totalImpuestos
                        totalesUI.appendChild(totalImpuestosUI)
                        const totalConImpuestosUI = document.createElement("div")
                        totalConImpuestosUI.classList.add("detalleDelTotal")
                        totalConImpuestosUI.classList.add("negrita")
                        totalConImpuestosUI.innerText = "Total final: " + totales.totalConImpuestos + "$"
                        totalesUI.appendChild(totalConImpuestosUI)
                    } else {
                        const info = document.createElement("div")
                        info.classList.add("componentes_ui_totales_mensajeInfoSinInformacion")
                        info.innerText = "No hay información de totales"
                        totalesUI.appendChild(info)
                    }
                    contenedorDesgloseTotales.appendChild(totalesUI)
                    selectorDestino.appendChild(contenedorDesgloseTotales)



                },
            },
            componentesComplejos: {
                selectorApartamentosEspecificosUI: {
                    despliegue: function (data) {
                        const textoContenedorVacio = data.textoContenedorVacio || 'Añade apartamentos'
                        const tipoDespliegue = data.tipoDespliegue
                        const metodoPersonalizado = data?.metodoPersonalizado
                        if (tipoDespliegue !== "total" && tipoDespliegue !== "parcial") {
                            const m = "en selectorApartamentosEspecificosUI el tipoDespliegue solo puede ser parcial o total"
                            return casaVitini.ui.componentes.advertenciaInmersiva(m)
                        }

                        const instanciaUID = casaVitini.utilidades.codigoFechaInstancia()

                        const contenedor = document.createElement('div')
                        contenedor.setAttribute("instanciaUID", instanciaUID)
                        contenedor.classList.add(
                            'flexVertical',
                            "gap6"
                        )

                        const contenedorSelectorApartamentos = document.createElement('div');
                        contenedorSelectorApartamentos.classList.add('crearOfertaConentenedor');
                        const boton = document.createElement('p');
                        boton.classList.add('crearOFertaBotonAnadirApartamento');
                        boton.setAttribute('componente', 'botonAnadirApartamentoOferta');
                        boton.textContent = 'Añadir apartamento';
                        boton.addEventListener("click", (e) => {
                            const data = {
                                e: e,
                                instanciaUID: instanciaUID,
                                tipoDespliegue: tipoDespliegue,
                                metodoPersonalizado
                            }
                            this.apartamentosDisponibles(data)
                        })
                        contenedorSelectorApartamentos.appendChild(boton);

                        const contenedorApartamentos = document.createElement('div');
                        contenedorApartamentos.classList.add('crearOfertaZonaAnadirApartamento');
                        contenedorApartamentos.setAttribute('componente', 'zonaAnadirApartamento');

                        const info = document.createElement('p');
                        info.classList.add('crearApartamentoInfoSinApartamento');
                        info.setAttribute('componente', 'infoSinApartamento');
                        info.textContent = textoContenedorVacio

                        contenedorApartamentos.appendChild(info);
                        contenedorSelectorApartamentos.appendChild(contenedorApartamentos);
                        contenedor.appendChild(contenedorSelectorApartamentos);
                        return contenedor
                    },
                    apartamentosDisponibles: async function (data) {
                        const metodoPersonalizado = data.metodoPersonalizado
                        const main = document.querySelector("main")
                        const ui = casaVitini.ui.componentes.pantallaInmersivaPersonalizada()
                        const instanciaUID_ui = ui.getAttribute("instanciaUID")
                        const contenedor = ui.querySelector("[componente=contenedor]")
                        main.appendChild(ui)

                        const e = data.e
                        const instanciaUID = data.instanciaUID
                        const tipoDespliegue = data.tipoDespliegue

                        const spinner = casaVitini.ui.componentes.spinner({
                            mensaje: "Obteniendo apartamentos..."
                        })
                        contenedor.appendChild(spinner)

                        const transaccion = {
                            zona: "administracion/componentes/apartamentosDisponiblesConfigurados"
                        }
                        const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                        const instanciaRenderizada = document.querySelector(`[instanciaUID="${instanciaUID_ui}"]`)
                        if (!instanciaRenderizada) { return }
                        spinner.remove()


                        if (respuestaServidor?.error) {
                            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                            casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                        }
                        if (respuestaServidor?.ok) {
                            contenedor.innerHTML = null
                            const apartamentosDisponibles = respuestaServidor?.ok
                            apartamentosDisponibles.forEach((apartamentoDisponible) => {
                                const apartamentoIDV = apartamentoDisponible.apartamentoIDV
                                const apartamentoUI = apartamentoDisponible.apartamentoUI
                                const estadoConfiguracionIDV = apartamentoDisponible.estadoConfiguracionIDV

                                let estadoUI
                                if (estadoConfiguracionIDV === "disponible") {
                                    estadoUI = "Disponible"
                                }
                                if (estadoConfiguracionIDV === "nodisponible") {
                                    estadoUI = "No disponible"
                                }
                                const apartamentoDetallesUI = document.createElement("div")
                                apartamentoDetallesUI.classList.add("crearOfertaApartamentoUI")
                                apartamentoDetallesUI.setAttribute("apartamentoIDV", apartamentoIDV)
                                apartamentoDetallesUI.setAttribute("apartamentoUI", apartamentoUI)
                                apartamentoDetallesUI.setAttribute("apartamentoComoOpcion", apartamentoIDV)
                                apartamentoDetallesUI.addEventListener("click", () => {
                                    casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                                    const configuracion = {
                                        instanciaUID,
                                        apartamentoIDV,
                                        apartamentoUI,
                                        tipoDespliegue,
                                        metodoPersonalizado
                                    }
                                    //this.insertarApartamento(configuracion)


                                    this.insertarApartamento(configuracion)



                                })

                                const apartamentoTitulo = document.createElement("p")
                                apartamentoTitulo.classList.add("crearOfertaApartamentoTItulo")
                                apartamentoTitulo.innerText = apartamentoUI
                                apartamentoDetallesUI.appendChild(apartamentoTitulo)

                                const apartamentoEstadoUI = document.createElement("p")
                                apartamentoEstadoUI.classList.add("crearOfertaApartamentoEstado")
                                apartamentoEstadoUI.setAttribute("estadouI", estadoUI)
                                apartamentoEstadoUI.innerText = estadoUI
                                apartamentoDetallesUI.appendChild(apartamentoEstadoUI)

                                const selectorApartamentoYaRenderizado = document.querySelector(`[instanciaUID="${instanciaUID}"] [apartamentoSeleccionado=${apartamentoIDV}]`)
                                if (!selectorApartamentoYaRenderizado) {
                                    contenedor.appendChild(apartamentoDetallesUI)
                                }
                            })
                            const selectorApartamentoYaRenderizado = document.querySelectorAll(`[instanciaUID="${instanciaUID_ui}"] [apartamentoComoOpcion]`)
                            if (selectorApartamentoYaRenderizado?.length === 0) {
                                const info = document.createElement("p")
                                info.classList.add("crearApartamentoInfoSinApartamento")
                                info.setAttribute("componente", "infoSinApartamento")
                                info.innerText = "Todos los apartamentos estan insertados en este contenedor de apartamentos"
                                contenedor.appendChild(info)
                            }

                            const botonCancelar = document.createElement("div")
                            botonCancelar.classList.add("boton")
                            botonCancelar.setAttribute("boton", "cancelar")
                            botonCancelar.innerText = "Cerrar y volver"
                            botonCancelar.addEventListener("click", () => {
                                return casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
                            })
                            contenedor.appendChild(botonCancelar)
                        }
                    },
                    insertarApartamento: async function (data) {
                        const apartamentoIDV = data.apartamentoIDV
                        const apartamentoUI = data.apartamentoUI
                        const instanciaUID = data.instanciaUID
                        const tipoDespliegue = data.tipoDespliegue
                        const metodoPersonalizado = data.metodoPersonalizado

                        document.querySelector(`[instanciaUID="${instanciaUID}"] [componente=infoSinApartamento]`).style.display = "none"

                        let apartamentoSeleccionadoUI
                        if (metodoPersonalizado === "comportamientoDePrecios") {
                            apartamentoSeleccionadoUI = casaVitini.administracion.comportamiento_de_precios.crearComportamiento.insertarOpcionesApartamento({
                                apartamentoIDV,
                                apartamentoUI,
                                instanciaUID,
                                tipoDespliegue
                            })
                            const zonaApartamentos = document.querySelector(`[instanciaUID="${instanciaUID}"] [componente=zonaAnadirApartamento]`)
                            zonaApartamentos.appendChild(apartamentoSeleccionadoUI)
                        } else if (metodoPersonalizado === "simulador") {
                            apartamentoSeleccionadoUI = casaVitini.administracion.simuladorDePrecios.componentes.apartamentoUI({
                                apartamentoIDV,
                                apartamentoUI,
                                instanciaUID,
                                tipoDespliegue
                            })
                            const zonaApartamentos = document.querySelector(`[instanciaUID="${instanciaUID}"] [componente=zonaAnadirApartamento]`)
                            zonaApartamentos.appendChild(apartamentoSeleccionadoUI)
                            casaVitini.administracion.simuladorDePrecios.componentes.actualizaSimulacion()
                        } else {
                            apartamentoSeleccionadoUI = this.apartamentoUI({
                                apartamentoIDV,
                                apartamentoUI,
                                instanciaUID,
                                tipoDespliegue
                            })
                            const zonaApartamentos = document.querySelector(`[instanciaUID="${instanciaUID}"] [componente=zonaAnadirApartamento]`)
                            zonaApartamentos.appendChild(apartamentoSeleccionadoUI)
                        }

                    },
                    apartamentoUI: (data) => {
                        const apartamentoIDV = data.apartamentoIDV
                        const apartamentoUI = data.apartamentoUI
                        const tipoDespliegue = data.tipoDespliegue
                        const seleccionadoInicial = data.seleccionadoInicial
                        const descuentoTotal = data.descuentoTotal || "0.00"


                        const apartamentoSeleccionadoUI = document.createElement("div")
                        apartamentoSeleccionadoUI.classList.add("crearOfertaApartamentoSeleccionadoUI")
                        apartamentoSeleccionadoUI.setAttribute("apartamentoSeleccionado", apartamentoIDV)
                        const tituloApartamento = document.createElement("div")
                        tituloApartamento.classList.add("crearOfertaApartamentoSeleccionadoUITitulo")
                        tituloApartamento.innerText = apartamentoUI
                        apartamentoSeleccionadoUI.appendChild(tituloApartamento)
                        const botonEliminarApartamento = document.createElement("div")
                        botonEliminarApartamento.classList.add("crearOfertaBoton")
                        botonEliminarApartamento.innerText = "Eliminar apartamento"
                        botonEliminarApartamento.addEventListener("click", (e) => {
                            const apartamentoRenderizado = e.target.closest("[apartamentoSeleccionado]")
                            apartamentoRenderizado.remove()
                            const instanciaUID = data.instanciaUID
                            const area = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            const conteoApartamentos = area.querySelectorAll(`[apartamentoSeleccionado]`)
                            if (conteoApartamentos.length === 0) {
                                area.querySelector("[componente=infoSinApartamento]").removeAttribute("style")
                            }
                        })
                        apartamentoSeleccionadoUI.appendChild(botonEliminarApartamento)

                        if (tipoDespliegue === "total") {
                            const cantidadUI = document.createElement("input")
                            cantidadUI.classList.add("crearOferDescuentoDedicadoCantidad")
                            cantidadUI.setAttribute("campoApartamentoSeleccionado", "descuentoTotal")
                            cantidadUI.placeholder = "Inserta la cantidad"
                            cantidadUI.value = descuentoTotal
                            apartamentoSeleccionadoUI.appendChild(cantidadUI)

                            const tipoDescuento = document.createElement("select")
                            tipoDescuento.classList.add("crearOfertaDescuentoDedicadoListaTipoDescuento")
                            tipoDescuento.setAttribute("campoApartamentoSeleccionado", "tipoDescuento")
                            const opcionPredeterminada = document.createElement("option")

                            opcionPredeterminada.disabled = true;
                            opcionPredeterminada.selected = true;
                            opcionPredeterminada.text = "Selecciona el tipo de descuento"
                            tipoDescuento.appendChild(opcionPredeterminada)
                            const tipoDescuentoOpciones = [
                                {
                                    nombreUI: "Selecciona el tipo de descuento",
                                },
                                {
                                    nombreUI: "Porcentaje",
                                    valorIDV: "porcentaje",
                                },
                                {
                                    nombreUI: "Cantidad fija",
                                    valorIDV: "cantidadFija",
                                }
                            ]
                            tipoDescuentoOpciones.forEach((tipoDescuentoOpcion) => {
                                const valorIDV = tipoDescuentoOpcion?.valorIDV || null
                                const nombreUI = tipoDescuentoOpcion.nombreUI

                                const opcion = document.createElement("option");
                                if (seleccionadoInicial === valorIDV) {
                                    opcion.selected = true;
                                } else {

                                }
                                opcion.value = valorIDV;
                                opcion.text = nombreUI;
                                opcion.setAttribute("tipoDescuentoIDV", valorIDV)
                                tipoDescuento.appendChild(opcion);
                            })
                            apartamentoSeleccionadoUI.appendChild(tipoDescuento)

                        }
                        return apartamentoSeleccionadoUI
                    },
                },
                contenedorFechasUI: (data) => {
                    const metodoSelectorDia = data?.metodoSelectorDia
                    const nombreContenedor = data?.nombreContenedor
                    const nombreFechaEntrada = data?.nombreFechaEntrada || "Fecha inicio"
                    const nombreFechaSalida = data?.nombreFechaSalida || "Fecha Final"
                    const instanciaUID_contenedorFechas = casaVitini.utilidades.codigoFechaInstancia()
                    const modo = data?.modo


                    if (modo !== "administracion" && modo !== "vision") {
                        const m = "contneedorFechaUI necesita un moodo."
                        return casaVitini.ui.componentes.advertenciaInmersiva(m)
                    }


                    const configuracionCalendarioInicio = data?.configuracionCalendarioInicio || {
                        rangoIDV: "inicioRango",
                        contenedorOrigenIDV: "[calendario=entrada]",
                        perfilMes: "calendario_entrada_perfilSimple",
                        metodoSelectorDia,
                    }
                    configuracionCalendarioInicio.instanciaUID_contenedorFechas = instanciaUID_contenedorFechas

                    const configuracionCalendarioFinal = data?.configuracionCalendarioFinal || {
                        rangoIDV: "finalRango",
                        contenedorOrigenIDV: "[calendario=salida]",
                        perfilMes: "calendario_salida_perfilSimple",
                        metodoSelectorDia,
                    }
                    configuracionCalendarioFinal.instanciaUID_contenedorFechas = instanciaUID_contenedorFechas


                    if (metodoSelectorDia) {
                        const error = "el constructorFechaUI no encuentra el metodoSelectorDia especificado"
                        try {
                            if (eval("typeof " + metodoSelectorDia) !== "function") {
                                casaVitini.ui.componentes.advertenciaInmersiva(error)
                            }
                        } catch (errorCapturado) {
                            return casaVitini.ui.componentes.advertenciaInmersiva(errorCapturado)
                        }
                    }
                    if (nombreContenedor) {
                        const selector = document.querySelector(nombreContenedor)
                        if (selector) {
                            const error = "Cuidado, el contenedor de fecha ui tiene un nombre de contenedor ya existente en el dom."
                            return casaVitini.ui.componentes.advertenciaInmersiva(error)
                        }
                    }

                    const divContenedor = document.createElement('div');
                    divContenedor.classList.add('contenedorFechasSobreBloque');
                    divContenedor.setAttribute("CSS", "selectorFechas")
                    divContenedor.setAttribute("instanciaUID_contenedorFechas", instanciaUID_contenedorFechas)
                    divContenedor.setAttribute('nombreContenedor', nombreContenedor);

                    const divContenedorHorizontal = document.createElement('div');
                    divContenedorHorizontal.classList.add('contenedorFechasCompartido');
                    const divContenedorFechaInicio = document.createElement('div');
                    divContenedorFechaInicio.classList.add('contenedorFecha');
                    divContenedorFechaInicio.setAttribute('calendario', 'entrada');
                    divContenedorFechaInicio.setAttribute('nombreContenedor', nombreContenedor);
                    divContenedorFechaInicio.setAttribute('componente', 'inicioOferta');
                    divContenedorFechaInicio.setAttribute('paralizadorEvento', 'ocultadorCalendarios');

                    if (modo === "administracion") {
                        divContenedorFechaInicio.addEventListener("click", (e) => {
                            casaVitini.ui.componentes.calendario.configurarCalendario(configuracionCalendarioInicio)
                        })
                    }

                    const pFechaInicio = document.createElement('p');
                    pFechaInicio.classList.add('negrita');
                    pFechaInicio.textContent = nombreFechaEntrada

                    const pFechaInicioSeleccionada = document.createElement('p');
                    pFechaInicioSeleccionada.classList.add('fechaInicio');
                    pFechaInicioSeleccionada.setAttribute('fechaUI', 'fechaInicio');
                    pFechaInicioSeleccionada.textContent = '(Seleccionar)';

                    divContenedorFechaInicio.appendChild(pFechaInicio);
                    divContenedorFechaInicio.appendChild(pFechaInicioSeleccionada);

                    const divContenedorFechaFin = document.createElement('div');
                    divContenedorFechaFin.classList.add('contenedorFecha');
                    divContenedorFechaFin.setAttribute('calendario', 'salida');
                    divContenedorFechaFin.setAttribute('paralizadorEvento', 'ocultadorCalendarios');
                    divContenedorFechaFin.setAttribute('componente', 'finOferta');
                    if (modo === "administracion") {
                        divContenedorFechaFin.addEventListener("click", () => {
                            casaVitini.ui.componentes.calendario.configurarCalendario(configuracionCalendarioFinal)
                        })

                    }


                    const pFechaFin = document.createElement('p');
                    pFechaFin.classList.add('negrita');
                    pFechaFin.textContent = nombreFechaSalida

                    const pFechaFinSeleccionada = document.createElement('p');
                    pFechaFinSeleccionada.classList.add('fechaFin');
                    pFechaFinSeleccionada.setAttribute('fechaUI', 'fechaFin');
                    pFechaFinSeleccionada.textContent = '(Seleccionar)';

                    divContenedorFechaFin.appendChild(pFechaFin);
                    divContenedorFechaFin.appendChild(pFechaFinSeleccionada);

                    divContenedorHorizontal.appendChild(divContenedorFechaInicio);
                    divContenedorHorizontal.appendChild(divContenedorFechaFin);

                    divContenedor.appendChild(divContenedorHorizontal);
                    return divContenedor
                },
            },
        }
    },
    componentes: {
        temporizador: null,
        pasarelas: {
            square: {
                crearSesionPago: async (instanciaUID) => {
                    const transaccion = {
                        zona: "componentes/pasarela/squareConstruyeCliente"
                    };
                    const respuestaServidor = await casaVitini.shell.servidor(transaccion)
                    if (respuestaServidor?.error) {
                        return casaVitini.ui.componentes.advertenciaInmersiva(respuestaServidor?.error)
                    }
                    const selectorSesionesPago = document.querySelectorAll("#sessionPagoSquare")
                    selectorSesionesPago.forEach(session => {
                        session.remove()
                    })
                    const metadataClienteSquare = document.createElement("script")
                    metadataClienteSquare.setAttribute("id", "sessionPagoSquare")
                    metadataClienteSquare.setAttribute("type", "text/javascript")
                    metadataClienteSquare.innerHTML = `
                window.applicationId="${respuestaServidor?.squareApplicationId}";
                window.locationId="${respuestaServidor?.squareLocationId}";
                window.currency="${respuestaServidor?.squareAccountCurrency}";
                window.country="${respuestaServidor?.squareAccountCountry}";
                window.idempotencyKey="${respuestaServidor?.idempotencyKey}"
                `
                    const selectorSquareJS = document.querySelector("section:not([estado=obsoleto])")
                    const instanciaUIDRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                    if (instanciaUIDRenderizada) {
                        selectorSquareJS.insertAdjacentElement("afterend", metadataClienteSquare);
                    }
                },
                inyectorSquareJS: async (instanciaUID) => {
                    return new Promise((resolve, reject) => {
                        const selectorMotorarranque = document.querySelector("[square=motorarranque]")
                        const squareJS = document.createElement("script");
                        squareJS.setAttribute("type", "text/javascript");
                        //squareJS.setAttribute("src", "https://web.squarecdn.com/v1/square.js");
                        squareJS.setAttribute("src", "https://sandbox.web.squarecdn.com/v1/square.js");
                        squareJS.setAttribute("id", "squareJS")
                        squareJS.onload = resolve;
                        squareJS.onerror = () => {
                            reject(new Error("Error al cargar el archivo square.js"))
                        }
                        const instanciaUIDRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                        if (instanciaUIDRenderizada) {
                            selectorMotorarranque.insertAdjacentElement("afterend", squareJS);
                        }
                    })
                },
                inyectorMetodosPago: async (instanciaUID) => {
                    return new Promise((resolve, reject) => {
                        const seccion = document.querySelector("section:not([estado=obsoleto])")
                        let metodoPagoCargadoCorrectamente = 0;
                        const totalMetodosPago = 4;
                        const metodosPago = [
                            "/componentes/javascript/square/sq-ach.js",
                            "/componentes/javascript/square/sq-apple-pay.js",
                            "/componentes/javascript/square/sq-google-pay.js",
                            "/componentes/javascript/square/sq-card-pay.js"
                        ];
                        metodosPago.forEach(metodoPago => {
                            const metodoPagoElemento = document.createElement('script');
                            metodoPagoElemento.setAttribute("type", "text/javascript")
                            metodoPagoElemento.src = metodoPago;
                            metodoPagoElemento.onload = () => {
                                metodoPagoCargadoCorrectamente++;
                                if (metodoPagoCargadoCorrectamente === totalMetodosPago) {
                                    resolve();
                                }
                            };
                            metodoPagoElemento.onerror = () => {
                                reject(new Error(`Error al cargar el metodo de pago: ${metodoPago}`));
                            };
                            const instanciaUIDRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                            if (instanciaUIDRenderizada) {
                                seccion.appendChild(metodoPagoElemento);
                            }
                        });
                    });
                },
                inyectorFlujoPago: async (instanciaUID) => {
                    return new Promise((resolve, reject) => {
                        const seccion = document.querySelector("section:not([estado=obsoleto])")
                        const flujoPago = document.createElement("script");
                        flujoPago.setAttribute("type", "text/javascript");
                        flujoPago.setAttribute("src", "/componentes/javascript/square/sq-payment-flow.js");
                        flujoPago.onload = resolve;
                        flujoPago.onerror = () => {
                            reject(new Error("Error al cargar el archivo sq-payment-flow.js"))
                        }
                        const instanciaUIDRenderizada = document.querySelector(`[instanciaUID="${instanciaUID}"]`)
                        if (instanciaUIDRenderizada) {
                            seccion.appendChild(flujoPago)
                        }
                    })
                },
                uiForm: (destino) => {
                    const selectorDestino = document.querySelector(destino);
                    if (selectorDestino === null) {
                        const error = "casaVitini.componentes.square.intectorFlujoPago no encuentra el elemento de destino"
                        return casaVitini.ui.componentes.advertenciaInmersiva(error)
                    }
                    // Crear el formulario
                    const paymentForm = document.createElement("form");
                    paymentForm.className = "payment-form";
                    paymentForm.id = "fast-checkout";
                    // Crear el contenedor principal
                    const wrapperDiv = document.createElement("div");
                    wrapperDiv.className = "wrapper";
                    paymentForm.appendChild(wrapperDiv);
                    // Crear el contenedor de Apple Pay
                    const applePayButton = document.createElement("div");
                    applePayButton.id = "apple-pay-button";
                    applePayButton.alt = "apple-pay";
                    applePayButton.type = "button";
                    wrapperDiv.appendChild(applePayButton);
                    // Crear el contenedor de Google Pay
                    const googlePayButton = document.createElement("div");
                    googlePayButton.id = "google-pay-button";
                    googlePayButton.alt = "google-pay";
                    googlePayButton.type = "button";
                    wrapperDiv.appendChild(googlePayButton);
                    // Crear el contenedor con borde y número
                    let borderDiv = document.createElement("div");
                    borderDiv.className = "border";
                    wrapperDiv.appendChild(borderDiv);
                    const numberSpan = document.createElement("span");
                    numberSpan.textContent = "O";
                    borderDiv.appendChild(numberSpan);
                    // Crear el contenedor de ACH
                    const achWrapperDiv = document.createElement("div");
                    achWrapperDiv.id = "ach-wrapper";
                    wrapperDiv.appendChild(achWrapperDiv);
                    const achLabel = document.createElement("label");
                    achLabel.htmlFor = "ach-account-holder-name";
                    achLabel.textContent = "Full Name";
                    achWrapperDiv.appendChild(achLabel);
                    const achInput = document.createElement("input");
                    achInput.id = "ach-account-holder-name";
                    achInput.type = "text";
                    achInput.placeholder = "Jane Doe";
                    achInput.name = "ach-account-holder-name";
                    achInput.autocomplete = "name";
                    achWrapperDiv.appendChild(achInput);
                    const achMessageSpan = document.createElement("span");
                    achMessageSpan.id = "ach-message";
                    achWrapperDiv.appendChild(achMessageSpan);
                    const achButton = document.createElement("button");
                    achButton.id = "ach-button";
                    achButton.type = "button";
                    achButton.textContent = "Pay with Bank Account";
                    achWrapperDiv.appendChild(achButton);
                    // Crear el segundo contenedor con borde y texto OR
                    borderDiv = document.createElement("div");
                    borderDiv.className = "border";
                    //wrapperDiv.appendChild(borderDiv);
                    const orSpan = document.createElement("span");
                    orSpan.textContent = "OR";
                    //borderDiv.appendChild(orSpan);
                    // Crear el contenedor de tarjeta
                    const cardContainerDiv = document.createElement("div");
                    cardContainerDiv.id = "card-container";
                    wrapperDiv.appendChild(cardContainerDiv);
                    // Crear el botón de tarjeta
                    const cardButton = document.createElement("button");
                    cardButton.id = "card-button";
                    cardButton.type = "button";
                    cardButton.textContent = "Pagar reserva y confirmarla";
                    wrapperDiv.appendChild(cardButton);
                    // Crear el mensaje de flujo de pago
                    const paymentFlowMessageSpan = document.createElement("span");
                    paymentFlowMessageSpan.id = "payment-flow-message";
                    wrapperDiv.appendChild(paymentFlowMessageSpan);
                    selectorDestino.appendChild(paymentForm);
                },
                flujoPagoUI: {
                    desplegarUI: (mensaje) => {
                        document.body.style.overflow = 'hidden';
                        const advertenciaInmersivaUI = document.createElement("section")
                        advertenciaInmersivaUI.setAttribute("class", "advertenciaInmersiva")
                        advertenciaInmersivaUI.setAttribute("componente", "advertenciaInmersiva")
                        const spinnerContainer = document.createElement('div');
                        spinnerContainer.setAttribute("componente", "iconoFlujoPago");
                        spinnerContainer.classList.add("lds-spinner");
                        for (let i = 0; i < 12; i++) {
                            const div = document.createElement('div');
                            spinnerContainer.appendChild(div);
                        }
                        advertenciaInmersivaUI.appendChild(spinnerContainer)
                        const info = document.createElement("div")
                        info.setAttribute("class", "advertenciaInfoFlujoPago")
                        info.setAttribute("componente", "mensajeFlujoPasarela")
                        info.innerText = mensaje
                        advertenciaInmersivaUI.appendChild(info)
                        document.body.appendChild(advertenciaInmersivaUI)
                    },
                    botonAcetpar: () => {
                        const boton = document.createElement("div")
                        boton.setAttribute("class", "errorBoton")
                        boton.innerText = "Aceptar"
                        boton.addEventListener("click", casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas)
                        return boton
                    },
                    infoDuranteFlujo: (mensaje) => {
                        const contenedorMensaje = document.querySelector("[componente=mensajeFlujoPasarela]")
                        contenedorMensaje.innerText = "Comprodando datos para realizar el pago..."
                    },
                    errorInfo: (mensaje) => {
                        document.querySelector("[componente=iconoFlujoPago]")?.remove()
                        const contenedorMensaje = document.querySelector("[componente=mensajeFlujoPasarela]")
                        contenedorMensaje.innerText = mensaje
                        const advertenciaInmersivaUI = document.querySelector("[componente=advertenciaInmersiva]")
                        const botonAceptar = casaVitini.componentes.flujoPagoUI.botonAcetpar()
                        advertenciaInmersivaUI.appendChild(botonAceptar)
                    }
                },
            },
        },

        loginUI: async () => {
            casaVitini.shell.controladoresUI.limpiarAdvertenciasInmersivas()
            const url = window.location.pathname;
            const zona = {
                vista: url,
                tipoOrigen: "historial",
            }
            await casaVitini.shell.navegacion.controladorVista(zona)
        },
        privacidad: {
            arranque: (vista) => {
                const filtro = /privacidad(\/.*)?$/
                const resultadoFiltro = filtro.test(vista)
                if (vista && resultadoFiltro) {
                    return false
                }

                const cookies = casaVitini.componentes.privacidad.obtenerCookies()
                if (cookies.privacidad !== "consentimientoAceptado") {
                    return true
                }
            },
            obtenerCookies: () => {
                const cookiesArray = document.cookie.split("; ")
                const cookiesObjeto = {}

                for (const cadenaDeLaCookie of cookiesArray) {
                    const arrayPorCookie = cadenaDeLaCookie.split("=")
                    const nombre = arrayPorCookie[0]
                    const valor = arrayPorCookie[1]
                    cookiesObjeto[nombre] = valor
                }
                return cookiesObjeto
            },
            borrarCookies: () => {
                localStorage.clear()
                const cookies = casaVitini.componentes.privacidad.obtenerCookies()
                for (const [nombreCookies, valorCookie] of Object.entries(cookies)) {
                    if ('cookieStore' in window) {
                        cookieStore?.delete(nombreCookies)
                    } else {
                        document.cookie = nombreCookies + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT";
                    }
                }
            },
            crearCookieConsentimiento: () => {
                const fecha = new Date();
                fecha.setTime(fecha.getTime() + (365 * 24 * 60 * 60 * 1000));  // 24 horas desde ahora
                const expira = "expires=" + fecha.toUTCString();
                document.cookie = "privacidad=consentimientoAceptado; " + expira + "; SameSite=Strict; path=/; Secure";
            },
            advertenciaPrivacidadInicial: () => {

                const main = document.querySelector("main")
                main.setAttribute("zonaCSS", "privacidad")

                const titulo = document.createElement("p")
                titulo.innerText = "Advertencia de privacidad y uso de cookies "
                titulo.classList.add("titulo")
                main.appendChild(titulo)

                const resumenInicial = document.createElement("p")
                resumenInicial.style.marginTop = "10px"
                resumenInicial.innerText = `Este sitio web usa cookies propias y de terceros para soportar la navegación, mejorar la experiencia de usuario, personalizar el contenido y realizar análisis estadísticos sobre los hábitos de navegación.`
                main.appendChild(resumenInicial)

                const contenedorBotones = casaVitini.componentes.privacidad.ui.contenedorSecciones()
                main.appendChild(contenedorBotones)

                const contenedorDecision = casaVitini.componentes.privacidad.ui.contenedorDecision()
                main.appendChild(contenedorDecision)


            },
            ui: {
                contenedorSecciones: () => {

                    const contenedorBotones = document.createElement("div")
                    contenedorBotones.classList.add("contenedorBotonesInicial")

                    const botonPoliticaCookies = document.createElement("a")
                    botonPoliticaCookies.classList.add("botonPrivacidad")
                    botonPoliticaCookies.innerText = "Política de cookies"
                    botonPoliticaCookies.setAttribute("href", "/politicas/privacidad/cookies")
                    botonPoliticaCookies.setAttribute("vista", "/politicas/privacidad/cookies")
                    botonPoliticaCookies.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    contenedorBotones.appendChild(botonPoliticaCookies)

                    const botonPoliticaPrivacidad = document.createElement("a")
                    botonPoliticaPrivacidad.classList.add("botonPrivacidad")
                    botonPoliticaPrivacidad.innerText = "Política de privacidad"
                    botonPoliticaPrivacidad.setAttribute("href", "/politicas/privacidad/politica_de_privacidad")
                    botonPoliticaPrivacidad.setAttribute("vista", "/politicas/privacidad/politica_de_privacidad")
                    botonPoliticaPrivacidad.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    contenedorBotones.appendChild(botonPoliticaPrivacidad)

                    const botonCondicionesDeUso = document.createElement("a")
                    botonCondicionesDeUso.classList.add("botonPrivacidad")
                    botonCondicionesDeUso.setAttribute("href", "/politicas/privacidad/condiciones_de_uso")
                    botonCondicionesDeUso.setAttribute("vista", "/politicas/privacidad/condiciones_de_uso")
                    botonCondicionesDeUso.addEventListener("click", casaVitini.shell.navegacion.cambiarVista)
                    botonCondicionesDeUso.innerText = "Condiciones de uso"
                    contenedorBotones.appendChild(botonCondicionesDeUso)

                    return contenedorBotones
                },
                contenedorDecision: () => {
                    const contenedorDecision = document.createElement("div")
                    contenedorDecision.classList.add("contenedorDecision")
                    contenedorDecision.setAttribute("contenedor", "botones")

                    const botonRechazar = document.createElement("a")
                    botonRechazar.classList.add("botonPrivacidad")
                    botonRechazar.innerText = "Rechazar todo"
                    botonRechazar.addEventListener("click", () => {
                        casaVitini.componentes.privacidad.borrarCookies()
                        window.location.href = "about:blank"
                    })
                    contenedorDecision.appendChild(botonRechazar)

                    const botonAceptar = document.createElement("a")
                    botonAceptar.classList.add("botonPrivacidad")
                    botonAceptar.innerText = "Aceptar todo"
                    botonAceptar.addEventListener("click", () => {

                        casaVitini.componentes.privacidad.crearCookieConsentimiento()
                        // casaVitini.shell.arranque()
                        const url = window.location.pathname;
                        if (url === "/") {
                            return casaVitini.shell.navegacion.controladorVista("portada")
                        } else {
                            return casaVitini.shell.navegacion.controladorVista(url)
                        }
                    })
                    contenedorDecision.appendChild(botonAceptar)
                    return contenedorDecision
                },
                revocarDecision: () => {
                    const contenedorDecision = document.createElement("div")
                    contenedorDecision.classList.add("contenedorRevocar")
                    contenedorDecision.setAttribute("contenedor", "botones")


                    const textoInfo = document.createElement("div")
                    textoInfo.classList.add("texto")
                    textoInfo.innerText = "Ha aceptado las políticas de privacidad y condiciones de uso de Casa Vitini, si quiere, puede revocarlas en cualquier momento borrando la cache de su navegador o pulsando en el botón de revocar de abajo."
                    contenedorDecision.appendChild(textoInfo)

                    const botonRechazar = document.createElement("a")
                    botonRechazar.classList.add("botonPrivacidad")
                    botonRechazar.innerText = "Revocar decisión y borrar cookies"
                    botonRechazar.addEventListener("click", () => {
                        casaVitini.componentes.privacidad.borrarCookies()
                        document.querySelector("[contenedor=botones]")?.remove()
                        const main = document.querySelector("main")
                        const contenedorDecision = casaVitini.componentes.privacidad.ui.contenedorDecision()
                        main.appendChild(contenedorDecision)


                    })
                    contenedorDecision.appendChild(botonRechazar)
                    return contenedorDecision


                }
            }
        },
    },
    utilidades: {
        cadenas: {
            snakeToCamel: (snake) => {
                return snake.replace(/_([a-z])/g, (match, group) => {
                    return group.toUpperCase();
                });
            },
            camelToSnake: (camel) => {
                return camel.replace(/[A-Z]/g, (match) => {
                    return '_' + match.toLowerCase();
                });
            },
            constructorComasEY: (data) => {
                const array = data.array
                const articulo = data.articulo
                if (array.length === 1) {
                    return array[0];
                } else {
                    const formattedString = array.slice(0, -1).join(', ' + articulo + " ") + ' y ' + articulo + " " + array.slice(-1);
                    return formattedString;
                }

            },
        },
        conversor: {
            fecha_humana_hacia_ISO: (fecha) => {
                const filtroFechaHumana = /^(0[1-9]|[12][0-9]|3[01])\/(0[1-9]|1[0-2])\/(\d{4})$/;
                if (filtroFechaHumana.test(fecha)) {
                    const fechaArray = fecha.split("/")
                    const dia = fechaArray[0]
                    const mes = fechaArray[1]
                    const ano = fechaArray[2]
                    const fechaISO = `${ano}-${mes}-${dia}`
                    return fechaISO
                } else {
                    const m = "En fecha_humana_hacia_ISO no se reconoce el formato humano"
                    return casaVitini.ui.componentes.advertenciaInmersiva(m)
                }
            },
            fecha_ISO_hacia_humana: (fecha) => {

                const filtroFechaISO = /^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;
                if (filtroFechaISO.test(fecha)) {
                    const fechaArray = fecha.split("-")
                    const dia = fechaArray[2]
                    const mes = fechaArray[1]
                    const ano = fechaArray[0]
                    const fechaHumana = `${dia}/${mes}/${ano}`
                    return fechaHumana
                } else {
                    const m = "En fecha_ISO_hacia_humana no se reconoce el formato ISO"
                    return casaVitini.ui.componentes.advertenciaInmersiva(m)
                }
            },
            extraerFechasInternas: (inicio, fin) => {
                const fechas = [];
                const inicio_objeto = new Date(inicio);
                const fin_objeto = new Date(fin);

                // Asegurarse de incluir la fecha final en el rango
                fin_objeto.setDate(fin_objeto.getDate() + 1);

                while (inicio_objeto < fin_objeto) {
                    fechas.push(inicio_objeto.toISOString().split("T")[0]);
                    inicio_objeto.setDate(inicio_objeto.getDate() + 1);
                }
                return fechas;
            },
            base64HaciaCadena: (base64) => {
                const binaryString = atob(base64);
                const asciiString = Array.from(binaryString, char => char).join('');
                return asciiString
            }
        },
        observador: {
            medirPorJerarquiaDom: {
                horizontal: (elemento) => {
                    let distancia = 0;
                    // Recorrer los elementos padres hasta llegar al cuerpo del documento
                    while (elemento) {
                        distancia += elemento.offsetLeft;
                        elemento = elemento.offsetParent;
                    }
                    return distancia;
                },
                vertical: {
                    desdeArribaDelElemento: (elemento) => {
                        let distancia = 0;
                        // Recorrer los elementos padres hasta llegar al cuerpo del documento
                        while (elemento) {
                            distancia += elemento.offsetTop;
                            elemento = elemento.offsetParent;
                        }
                        return distancia;
                    },
                    desdeAbajoDelElemento: (elemento) => {
                        let distancia = elemento.clientHeight;
                        // Recorrer los elementos padres hasta llegar al cuerpo del documento
                        while (elemento) {
                            distancia += (elemento.offsetTop);
                            elemento = elemento.offsetParent;
                        }
                        return distancia;
                    }
                }
            },
            anchoActualVentanad: window.innerWidth,
            menusFlotanes: (configuracion) => {
                const elementoParaObservar = configuracion.elementoParaObservar
                const elementoDestino = configuracion.elementoDestino

                // Define una función para borrar la instancia del observador
                const borrarInstancia = () => {
                    if (instanciaDelObservador) {
                        instanciaDelObservador.disconnect(); // Deja de observar el elemento
                        instanciaDelObservador = null; // Limpia la referencia a la instancia del observador
                    }
                };

                const selectorElementoOrigen = document.querySelector(elementoParaObservar);
                let instanciaDelObservador; // Declara la variable fuera del alcance de la función observador
                if (!selectorElementoOrigen) {
                    const mensaje = "No se encuentra el elemento a observar";
                    return casaVitini.ui.componentes.advertenciaInmersiva(mensaje);
                }
                const selectorElementoDestino = document.querySelector(elementoParaObservar);
                if (!selectorElementoDestino) {
                    const mensaje = "No se encuentra el elemento de destino";
                    borrarInstancia()
                    return casaVitini.ui.componentes.advertenciaInmersiva(mensaje);
                }

                instanciaDelObservador = new ResizeObserver(entries => {
                    for (let entry of entries) {
                        const { width, height, x, y } = entry.contentRect;
                        const contenedorRetorno = {
                            width: width,
                            height: height,
                            x: x,
                            y: y
                        }
                        const altoMenuFlotante = y + height
                        const ladoMenuFlotante = x
                    }
                });
                instanciaDelObservador.observe(selectorElementoOrigen);
            }

        },
        granuladorURL: () => {
            const urlActual = window.location.pathname
            const directoriosURL = []
            const parametrosURL = {}
            const parametrosArray = []
            let arrayURL = urlActual.split("/")
            arrayURL = arrayURL.filter((url) => url)
            arrayURL.forEach((bloque) => {
                if (bloque.includes(":")) {
                    const desgloseParametro = bloque.split(":")
                    parametrosURL[desgloseParametro[0]] = desgloseParametro[1]
                    const par = {
                        parametro: desgloseParametro[0],
                        valor: desgloseParametro[1]
                    }
                    parametrosArray.push(par)
                } else {
                    directoriosURL.push(bloque)
                }
            })
            const contenedorSeguroParaParametros = []
            for (const par of parametrosArray) {
                const parametro = par.parametro
                const valor = par.valor
                const estructura = parametro + ":" + valor
                contenedorSeguroParaParametros.push(estructura)
            }
            const contenedorParametrosParaFusion = []
            for (const [parametro, valor] of Object.entries(parametrosURL)) {
                const estructura = parametro + ":" + valor
                contenedorParametrosParaFusion.push(estructura)
            }
            const estructuraFinal = {
                rawArray: arrayURL,
                raw: urlActual,
                directorios: directoriosURL,
                parametros: parametrosURL,
                directoriosFusion: "/" + directoriosURL.join("/"),
                parametrosFusion: "/" + contenedorParametrosParaFusion.join("/"),
                contenedorSeguroParaParametros: contenedorSeguroParaParametros
            }
            return estructuraFinal
        },
        codigoFechaInstancia: function () {
            const generarUID = (() => {
                let ultimoUID = null;

                return () => {
                    let uid;
                    let fecha;
                    let año, mes, dia, horas, minutos, segundos, milisegundos;

                    do {
                        fecha = new Date();
                        año = fecha.getFullYear();
                        mes = String(fecha.getMonth() + 1).padStart(2, "0");
                        dia = String(fecha.getDate()).padStart(2, "0");
                        horas = String(fecha.getHours()).padStart(2, "0");
                        minutos = String(fecha.getMinutes()).padStart(2, "0");
                        segundos = String(fecha.getSeconds()).padStart(2, "0");
                        milisegundos = String(fecha.getMilliseconds()).padStart(3, "0");

                        // Generar el UID usando el timestamp
                        uid = `${año}${mes}${dia}${horas}${minutos}${segundos}${milisegundos}`;
                    } while (uid === ultimoUID)
                    ultimoUID = uid;

                    return uid;
                };
            })();

            const contenedorVolatil = casaVitini.utilidades.contenedorVolatil || {};
            let uid = generarUID();

            while (contenedorVolatil[uid]) {
                uid = generarUID();
            }

            Object.keys(contenedorVolatil).forEach((contenedorUID) => {
                delete contenedorVolatil[contenedorUID];
            });

            contenedorVolatil[uid] = true;
            casaVitini.utilidades.contenedorVolatil = contenedorVolatil;

            return uid;
        },
        contenedorVolatil: null,
        ralentizador: async (milisegundos) => {
            await new Promise(resolve => setTimeout(resolve, Number(milisegundos)));
        },
        fechas: {
            constructorObjetoEstructuraPrecioDia: (fechaEntrada, fechaSalida) => {
                const arregloFechas = []
                let fechaEntrada_Objeto = new Date(fechaEntrada)
                const fechaSalida_Objeto = new Date(fechaSalida)

                fechaEntrada_Objeto.setHours(0, 0, 0, 0)
                fechaSalida_Objeto.setHours(0, 0, 0, 0)

                while (fechaEntrada_Objeto <= fechaSalida_Objeto) {
                    arregloFechas.push(fechaEntrada_Objeto.toISOString().split('T')[0])
                    fechaEntrada_Objeto.setDate(fechaEntrada_Objeto.getDate() + 1)
                }

                return arregloFechas
            }
        },
        borrarPosicionDeArrayPorCandena: (data) => {
            const array = data.array
            const cadenaParaBorrar = data.cadenaParaBorrar
            const indice = array.indexOf(cadenaParaBorrar);
            if (indice !== -1) {
                array.splice(indice, 1);
            }
            return array
        }
    },
}
casaVitini.shell.arranque()