/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { Request } from '../model';
import { RequestStatus } from '../model';
import { Requests } from '../model';
/**
 * RequestsApi - axios parameter creator
 * @export
 */
export declare const RequestsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Retrieve the properties of the specified request.
     * @summary Retrieve requests
     * @param {string} requestId The unique ID of the request.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsFindById: (requestId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * List all API requests.
     * @summary List requests
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [filterStatus] Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedAfter] Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedBefore] Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedDate] Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterCreatedBy] Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterEtag] Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterRequestStatus] Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterMethod] Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterHeaders] Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterBody] Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterUrl] Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsGet: (pretty?: boolean, depth?: number, xContractNumber?: number, filterStatus?: string, filterCreatedAfter?: string, filterCreatedBefore?: string, filterCreatedDate?: string, filterCreatedBy?: string, filterEtag?: string, filterRequestStatus?: string, filterMethod?: string, filterHeaders?: string, filterBody?: string, filterUrl?: string, offset?: number, limit?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieve the status of the specified request.
     * @summary Retrieve request status
     * @param {string} requestId The unique ID of the request.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsStatusGet: (requestId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
};
/**
 * RequestsApi - functional programming interface
 * @export
 */
export declare const RequestsApiFp: (configuration?: Configuration) => {
    /**
     * Retrieve the properties of the specified request.
     * @summary Retrieve requests
     * @param {string} requestId The unique ID of the request.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsFindById(requestId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Request>>;
    /**
     * List all API requests.
     * @summary List requests
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [filterStatus] Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedAfter] Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedBefore] Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedDate] Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterCreatedBy] Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterEtag] Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterRequestStatus] Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterMethod] Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterHeaders] Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterBody] Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterUrl] Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsGet(pretty?: boolean, depth?: number, xContractNumber?: number, filterStatus?: string, filterCreatedAfter?: string, filterCreatedBefore?: string, filterCreatedDate?: string, filterCreatedBy?: string, filterEtag?: string, filterRequestStatus?: string, filterMethod?: string, filterHeaders?: string, filterBody?: string, filterUrl?: string, offset?: number, limit?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Requests>>;
    /**
     * Retrieve the status of the specified request.
     * @summary Retrieve request status
     * @param {string} requestId The unique ID of the request.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsStatusGet(requestId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RequestStatus>>;
};
/**
 * RequestsApi - factory interface
 * @export
 */
export declare const RequestsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Retrieve the properties of the specified request.
     * @summary Retrieve requests
     * @param {string} requestId The unique ID of the request.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsFindById(requestId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<Request>;
    /**
     * List all API requests.
     * @summary List requests
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [filterStatus] Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedAfter] Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedBefore] Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @param {string} [filterCreatedDate] Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterCreatedBy] Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterEtag] Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterRequestStatus] Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterMethod] Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterHeaders] Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterBody] Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {string} [filterUrl] Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsGet(pretty?: boolean, depth?: number, xContractNumber?: number, filterStatus?: string, filterCreatedAfter?: string, filterCreatedBefore?: string, filterCreatedDate?: string, filterCreatedBy?: string, filterEtag?: string, filterRequestStatus?: string, filterMethod?: string, filterHeaders?: string, filterBody?: string, filterUrl?: string, offset?: number, limit?: number, options?: any): AxiosPromise<Requests>;
    /**
     * Retrieve the status of the specified request.
     * @summary Retrieve request status
     * @param {string} requestId The unique ID of the request.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    requestsStatusGet(requestId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<RequestStatus>;
};
/**
 * Request parameters for requestsFindById operation in RequestsApi.
 * @export
 * @interface RequestsApiRequestsFindByIdRequest
 */
export interface RequestsApiRequestsFindByIdRequest {
    /**
     * The unique ID of the request.
     * @type {string}
     * @memberof RequestsApiRequestsFindById
     */
    readonly requestId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof RequestsApiRequestsFindById
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof RequestsApiRequestsFindById
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof RequestsApiRequestsFindById
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for requestsGet operation in RequestsApi.
 * @export
 * @interface RequestsApiRequestsGetRequest
 */
export interface RequestsApiRequestsGetRequest {
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof RequestsApiRequestsGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof RequestsApiRequestsGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof RequestsApiRequestsGet
     */
    readonly xContractNumber?: number;
    /**
     * Filter the list by request status [QUEUED, RUNNING, DONE, FAILED]. Filter is not affected by the depth query parameter.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterStatus?: string;
    /**
     * Filter the list to only include the requests created after the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterCreatedAfter?: string;
    /**
     * Filter the list to only include the requests created before the date, specified in the yyyy-MM-dd HH:mm:ss format. Filter is not affected by the depth query parameter.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterCreatedBefore?: string;
    /**
     * Filter the list to only include the requests that contain the createdDate, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterCreatedDate?: string;
    /**
     * Filter the list to only include the requests that contain the createdBy, specified in the yyyy-MM-dd HH:mm:ss format. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterCreatedBy?: string;
    /**
     * Filter the list to only include the requests that contain the specified etag. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterEtag?: string;
    /**
     * Filter the list to only include the requests that contain the specified requestStatus. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterRequestStatus?: string;
    /**
     * Filter the list to only include the requests that contain the specified method. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterMethod?: string;
    /**
     * Filter the list to only include the requests that contain the specified headers. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterHeaders?: string;
    /**
     * Filter the list to only include the requests that contain the specified body. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterBody?: string;
    /**
     * Filter the list to only include the requests that contain the specified URL. The value is not case-sensitive, and the filter requires that the depth query parameter value is greater than zero.
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly filterUrl?: string;
    /**
     * The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @type {number}
     * @memberof RequestsApiRequestsGet
     */
    readonly offset?: number;
    /**
     * The maximum number of elements to return (use together with offset for pagination).
     * @type {number}
     * @memberof RequestsApiRequestsGet
     */
    readonly limit?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof RequestsApiRequestsGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof RequestsApiRequestsGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof RequestsApiRequestsGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for requestsStatusGet operation in RequestsApi.
 * @export
 * @interface RequestsApiRequestsStatusGetRequest
 */
export interface RequestsApiRequestsStatusGetRequest {
    /**
     * The unique ID of the request.
     * @type {string}
     * @memberof RequestsApiRequestsStatusGet
     */
    readonly requestId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof RequestsApiRequestsStatusGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof RequestsApiRequestsStatusGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof RequestsApiRequestsStatusGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof RequestsApiRequestsStatusGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof RequestsApiRequestsStatusGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof RequestsApiRequestsStatusGet
     */
    filters?: Map<string, string>;
}
/**
 * RequestsApi - object-oriented interface
 * @export
 * @class RequestsApi
 * @extends {BaseAPI}
 */
export declare class RequestsApi extends BaseAPI {
    /**
     * Retrieve the properties of the specified request.
     * @summary Retrieve requests
     * @param {RequestsApiRequestsFindByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestsApi
     */
    requestsFindById(requestParameters: RequestsApiRequestsFindByIdRequest, options?: any): Promise<import("axios").AxiosResponse<Request>>;
    /**
     * List all API requests.
     * @summary List requests
     * @param {RequestsApiRequestsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestsApi
     */
    requestsGet(requestParameters?: RequestsApiRequestsGetRequest, options?: any): Promise<import("axios").AxiosResponse<Requests>>;
    /**
     * Retrieve the status of the specified request.
     * @summary Retrieve request status
     * @param {RequestsApiRequestsStatusGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RequestsApi
     */
    requestsStatusGet(requestParameters: RequestsApiRequestsStatusGetRequest, options?: any): Promise<import("axios").AxiosResponse<RequestStatus>>;
}
