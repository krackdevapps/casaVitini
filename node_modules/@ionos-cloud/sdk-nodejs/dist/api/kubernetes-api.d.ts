/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { KubernetesCluster } from '../model';
import { KubernetesClusterForPost } from '../model';
import { KubernetesClusterForPut } from '../model';
import { KubernetesClusters } from '../model';
import { KubernetesNode } from '../model';
import { KubernetesNodePool } from '../model';
import { KubernetesNodePoolForPost } from '../model';
import { KubernetesNodePoolForPut } from '../model';
import { KubernetesNodePools } from '../model';
import { KubernetesNodes } from '../model';
/**
 * KubernetesApi - axios parameter creator
 * @export
 */
export declare const KubernetesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Deletes the K8s cluster specified  by its ID.
     * @summary Delete a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sDelete: (k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the K8s cluster specified by its ID.
     * @summary Get a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the K8s cluster to be retrieved.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sFindByClusterId: (k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves a list of all K8s clusters provisioned under your account.
     * @summary Get Kubernetes Clusters
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sGet: (pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the configuration file for the specified K8s cluster. You can define the format (YAML or JSON) of the returned file in the Accept header. By default, \'application/yaml\' is specified.
     * @summary Get Kubernetes Configuration File
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sKubeconfigGet: (k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Deletes the K8s node pool specified by its ID.
     * @summary Delete a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsDelete: (k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the K8s node pool specified by its ID.
     * @summary Get a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsFindById: (k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves a list of K8s node pools of a cluster specified by its ID.
     * @summary Get Kubernetes Node Pools
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsGet: (k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Deletes the K8s node specified by its ID.
     * @summary Delete a Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesDelete: (k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the K8s node specified by its ID.
     * @summary Get Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesFindById: (k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the list of all K8s nodes of the specified node pool.
     * @summary Get Kubernetes Nodes
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesGet: (k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Recreates the K8s node specified by its ID.  If a node becomes unusable, Managed Kubernetes allows you to recreate it with a configuration based on the node pool template. Once the status is \'Active,\' all the pods from the failed node will be migrated to the new node. The node pool has an additional billable \'active\' node during this process.
     * @summary Recreate a Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesReplacePost: (k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Creates a node pool inside the specified K8s cluster.
     * @summary Create a Kubernetes Node Pool
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {KubernetesNodePoolForPost} kubernetesNodePool The Kubernetes node pool to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsPost: (k8sClusterId: string, kubernetesNodePool: KubernetesNodePoolForPost, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Modifies the K8s node pool specified by its ID.
     * @summary Modify a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {KubernetesNodePoolForPut} kubernetesNodePool Details of the Kubernetes Node Pool
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsPut: (k8sClusterId: string, nodepoolId: string, kubernetesNodePool: KubernetesNodePoolForPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Creates a K8s cluster provisioned under your account.
     * @summary Create a Kubernetes Cluster
     * @param {KubernetesClusterForPost} kubernetesCluster The Kubernetes cluster to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sPost: (kubernetesCluster: KubernetesClusterForPost, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Modifies the K8s cluster specified by its ID.
     * @summary Modify a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {KubernetesClusterForPut} kubernetesCluster The modified Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sPut: (k8sClusterId: string, kubernetesCluster: KubernetesClusterForPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the current default K8s version to be used by the clusters and node pools.
     * @summary Get Default Kubernetes Version
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sVersionsDefaultGet: (orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Lists available K8s versions.
     * @summary Get Kubernetes Versions
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sVersionsGet: (orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
};
/**
 * KubernetesApi - functional programming interface
 * @export
 */
export declare const KubernetesApiFp: (configuration?: Configuration) => {
    /**
     * Deletes the K8s cluster specified  by its ID.
     * @summary Delete a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sDelete(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieves the K8s cluster specified by its ID.
     * @summary Get a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the K8s cluster to be retrieved.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sFindByClusterId(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesCluster>>;
    /**
     * Retrieves a list of all K8s clusters provisioned under your account.
     * @summary Get Kubernetes Clusters
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sGet(pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesClusters>>;
    /**
     * Retrieves the configuration file for the specified K8s cluster. You can define the format (YAML or JSON) of the returned file in the Accept header. By default, \'application/yaml\' is specified.
     * @summary Get Kubernetes Configuration File
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sKubeconfigGet(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Deletes the K8s node pool specified by its ID.
     * @summary Delete a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsDelete(k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieves the K8s node pool specified by its ID.
     * @summary Get a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsFindById(k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesNodePool>>;
    /**
     * Retrieves a list of K8s node pools of a cluster specified by its ID.
     * @summary Get Kubernetes Node Pools
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsGet(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesNodePools>>;
    /**
     * Deletes the K8s node specified by its ID.
     * @summary Delete a Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesDelete(k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieves the K8s node specified by its ID.
     * @summary Get Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesFindById(k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesNode>>;
    /**
     * Retrieves the list of all K8s nodes of the specified node pool.
     * @summary Get Kubernetes Nodes
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesGet(k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesNodes>>;
    /**
     * Recreates the K8s node specified by its ID.  If a node becomes unusable, Managed Kubernetes allows you to recreate it with a configuration based on the node pool template. Once the status is \'Active,\' all the pods from the failed node will be migrated to the new node. The node pool has an additional billable \'active\' node during this process.
     * @summary Recreate a Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesReplacePost(k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Creates a node pool inside the specified K8s cluster.
     * @summary Create a Kubernetes Node Pool
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {KubernetesNodePoolForPost} kubernetesNodePool The Kubernetes node pool to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsPost(k8sClusterId: string, kubernetesNodePool: KubernetesNodePoolForPost, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesNodePool>>;
    /**
     * Modifies the K8s node pool specified by its ID.
     * @summary Modify a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {KubernetesNodePoolForPut} kubernetesNodePool Details of the Kubernetes Node Pool
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsPut(k8sClusterId: string, nodepoolId: string, kubernetesNodePool: KubernetesNodePoolForPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesNodePool>>;
    /**
     * Creates a K8s cluster provisioned under your account.
     * @summary Create a Kubernetes Cluster
     * @param {KubernetesClusterForPost} kubernetesCluster The Kubernetes cluster to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sPost(kubernetesCluster: KubernetesClusterForPost, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesCluster>>;
    /**
     * Modifies the K8s cluster specified by its ID.
     * @summary Modify a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {KubernetesClusterForPut} kubernetesCluster The modified Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sPut(k8sClusterId: string, kubernetesCluster: KubernetesClusterForPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<KubernetesCluster>>;
    /**
     * Retrieves the current default K8s version to be used by the clusters and node pools.
     * @summary Get Default Kubernetes Version
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sVersionsDefaultGet(orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>>;
    /**
     * Lists available K8s versions.
     * @summary Get Kubernetes Versions
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sVersionsGet(orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<string>>>;
};
/**
 * KubernetesApi - factory interface
 * @export
 */
export declare const KubernetesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Deletes the K8s cluster specified  by its ID.
     * @summary Delete a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sDelete(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieves the K8s cluster specified by its ID.
     * @summary Get a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the K8s cluster to be retrieved.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sFindByClusterId(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesCluster>;
    /**
     * Retrieves a list of all K8s clusters provisioned under your account.
     * @summary Get Kubernetes Clusters
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sGet(pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesClusters>;
    /**
     * Retrieves the configuration file for the specified K8s cluster. You can define the format (YAML or JSON) of the returned file in the Accept header. By default, \'application/yaml\' is specified.
     * @summary Get Kubernetes Configuration File
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sKubeconfigGet(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<string>;
    /**
     * Deletes the K8s node pool specified by its ID.
     * @summary Delete a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsDelete(k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieves the K8s node pool specified by its ID.
     * @summary Get a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsFindById(k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesNodePool>;
    /**
     * Retrieves a list of K8s node pools of a cluster specified by its ID.
     * @summary Get Kubernetes Node Pools
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsGet(k8sClusterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesNodePools>;
    /**
     * Deletes the K8s node specified by its ID.
     * @summary Delete a Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesDelete(k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieves the K8s node specified by its ID.
     * @summary Get Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesFindById(k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesNode>;
    /**
     * Retrieves the list of all K8s nodes of the specified node pool.
     * @summary Get Kubernetes Nodes
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesGet(k8sClusterId: string, nodepoolId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesNodes>;
    /**
     * Recreates the K8s node specified by its ID.  If a node becomes unusable, Managed Kubernetes allows you to recreate it with a configuration based on the node pool template. Once the status is \'Active,\' all the pods from the failed node will be migrated to the new node. The node pool has an additional billable \'active\' node during this process.
     * @summary Recreate a Kubernetes Node by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {string} nodeId The unique ID of the Kubernetes node.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsNodesReplacePost(k8sClusterId: string, nodepoolId: string, nodeId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Creates a node pool inside the specified K8s cluster.
     * @summary Create a Kubernetes Node Pool
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {KubernetesNodePoolForPost} kubernetesNodePool The Kubernetes node pool to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsPost(k8sClusterId: string, kubernetesNodePool: KubernetesNodePoolForPost, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesNodePool>;
    /**
     * Modifies the K8s node pool specified by its ID.
     * @summary Modify a Kubernetes Node Pool by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {string} nodepoolId The unique ID of the Kubernetes node pool.
     * @param {KubernetesNodePoolForPut} kubernetesNodePool Details of the Kubernetes Node Pool
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sNodepoolsPut(k8sClusterId: string, nodepoolId: string, kubernetesNodePool: KubernetesNodePoolForPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesNodePool>;
    /**
     * Creates a K8s cluster provisioned under your account.
     * @summary Create a Kubernetes Cluster
     * @param {KubernetesClusterForPost} kubernetesCluster The Kubernetes cluster to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sPost(kubernetesCluster: KubernetesClusterForPost, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesCluster>;
    /**
     * Modifies the K8s cluster specified by its ID.
     * @summary Modify a Kubernetes Cluster by ID
     * @param {string} k8sClusterId The unique ID of the Kubernetes cluster.
     * @param {KubernetesClusterForPut} kubernetesCluster The modified Kubernetes cluster.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sPut(k8sClusterId: string, kubernetesCluster: KubernetesClusterForPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<KubernetesCluster>;
    /**
     * Retrieves the current default K8s version to be used by the clusters and node pools.
     * @summary Get Default Kubernetes Version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sVersionsDefaultGet(options?: any): AxiosPromise<string>;
    /**
     * Lists available K8s versions.
     * @summary Get Kubernetes Versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    k8sVersionsGet(options?: any): AxiosPromise<Array<string>>;
};
/**
 * Request parameters for k8sDelete operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sDeleteRequest
 */
export interface KubernetesApiK8sDeleteRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sDelete
     */
    readonly k8sClusterId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sFindByClusterId operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sFindByClusterIdRequest
 */
export interface KubernetesApiK8sFindByClusterIdRequest {
    /**
     * The unique ID of the K8s cluster to be retrieved.
     * @type {string}
     * @memberof KubernetesApiK8sFindByClusterId
     */
    readonly k8sClusterId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sFindByClusterId
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sFindByClusterId
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sFindByClusterId
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sGet operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sGetRequest
 */
export interface KubernetesApiK8sGetRequest {
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof KubernetesApiK8sGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof KubernetesApiK8sGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof KubernetesApiK8sGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for k8sKubeconfigGet operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sKubeconfigGetRequest
 */
export interface KubernetesApiK8sKubeconfigGetRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sKubeconfigGet
     */
    readonly k8sClusterId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sKubeconfigGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sKubeconfigGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sKubeconfigGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof KubernetesApiK8sKubeconfigGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof KubernetesApiK8sKubeconfigGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof KubernetesApiK8sKubeconfigGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for k8sNodepoolsDelete operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsDeleteRequest
 */
export interface KubernetesApiK8sNodepoolsDeleteRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsDelete
     */
    readonly k8sClusterId: string;
    /**
     * The unique ID of the Kubernetes node pool.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsDelete
     */
    readonly nodepoolId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sNodepoolsFindById operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsFindByIdRequest
 */
export interface KubernetesApiK8sNodepoolsFindByIdRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsFindById
     */
    readonly k8sClusterId: string;
    /**
     * The unique ID of the Kubernetes node pool.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsFindById
     */
    readonly nodepoolId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsFindById
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsFindById
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsFindById
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sNodepoolsGet operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsGetRequest
 */
export interface KubernetesApiK8sNodepoolsGetRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsGet
     */
    readonly k8sClusterId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof KubernetesApiK8sNodepoolsGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for k8sNodepoolsNodesDelete operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsNodesDeleteRequest
 */
export interface KubernetesApiK8sNodepoolsNodesDeleteRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesDelete
     */
    readonly k8sClusterId: string;
    /**
     * The unique ID of the Kubernetes node pool.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesDelete
     */
    readonly nodepoolId: string;
    /**
     * The unique ID of the Kubernetes node.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesDelete
     */
    readonly nodeId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsNodesDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sNodepoolsNodesFindById operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsNodesFindByIdRequest
 */
export interface KubernetesApiK8sNodepoolsNodesFindByIdRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesFindById
     */
    readonly k8sClusterId: string;
    /**
     * The unique ID of the Kubernetes node pool.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesFindById
     */
    readonly nodepoolId: string;
    /**
     * The unique ID of the Kubernetes node.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesFindById
     */
    readonly nodeId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsNodesFindById
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesFindById
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesFindById
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sNodepoolsNodesGet operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsNodesGetRequest
 */
export interface KubernetesApiK8sNodepoolsNodesGetRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    readonly k8sClusterId: string;
    /**
     * The unique ID of the Kubernetes node pool.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    readonly nodepoolId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof KubernetesApiK8sNodepoolsNodesGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for k8sNodepoolsNodesReplacePost operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsNodesReplacePostRequest
 */
export interface KubernetesApiK8sNodepoolsNodesReplacePostRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesReplacePost
     */
    readonly k8sClusterId: string;
    /**
     * The unique ID of the Kubernetes node pool.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesReplacePost
     */
    readonly nodepoolId: string;
    /**
     * The unique ID of the Kubernetes node.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsNodesReplacePost
     */
    readonly nodeId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsNodesReplacePost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesReplacePost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsNodesReplacePost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sNodepoolsPost operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsPostRequest
 */
export interface KubernetesApiK8sNodepoolsPostRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsPost
     */
    readonly k8sClusterId: string;
    /**
     * The Kubernetes node pool to create.
     * @type {KubernetesNodePoolForPost}
     * @memberof KubernetesApiK8sNodepoolsPost
     */
    readonly kubernetesNodePool: KubernetesNodePoolForPost;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsPost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsPost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsPost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sNodepoolsPut operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sNodepoolsPutRequest
 */
export interface KubernetesApiK8sNodepoolsPutRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsPut
     */
    readonly k8sClusterId: string;
    /**
     * The unique ID of the Kubernetes node pool.
     * @type {string}
     * @memberof KubernetesApiK8sNodepoolsPut
     */
    readonly nodepoolId: string;
    /**
     * Details of the Kubernetes Node Pool
     * @type {KubernetesNodePoolForPut}
     * @memberof KubernetesApiK8sNodepoolsPut
     */
    readonly kubernetesNodePool: KubernetesNodePoolForPut;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sNodepoolsPut
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsPut
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sNodepoolsPut
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sPost operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sPostRequest
 */
export interface KubernetesApiK8sPostRequest {
    /**
     * The Kubernetes cluster to create.
     * @type {KubernetesClusterForPost}
     * @memberof KubernetesApiK8sPost
     */
    readonly kubernetesCluster: KubernetesClusterForPost;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sPost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sPost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sPost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for k8sPut operation in KubernetesApi.
 * @export
 * @interface KubernetesApiK8sPutRequest
 */
export interface KubernetesApiK8sPutRequest {
    /**
     * The unique ID of the Kubernetes cluster.
     * @type {string}
     * @memberof KubernetesApiK8sPut
     */
    readonly k8sClusterId: string;
    /**
     * The modified Kubernetes cluster.
     * @type {KubernetesClusterForPut}
     * @memberof KubernetesApiK8sPut
     */
    readonly kubernetesCluster: KubernetesClusterForPut;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof KubernetesApiK8sPut
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof KubernetesApiK8sPut
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof KubernetesApiK8sPut
     */
    readonly xContractNumber?: number;
}
/**
 * KubernetesApi - object-oriented interface
 * @export
 * @class KubernetesApi
 * @extends {BaseAPI}
 */
export declare class KubernetesApi extends BaseAPI {
    /**
     * Deletes the K8s cluster specified  by its ID.
     * @summary Delete a Kubernetes Cluster by ID
     * @param {KubernetesApiK8sDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sDelete(requestParameters: KubernetesApiK8sDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves the K8s cluster specified by its ID.
     * @summary Get a Kubernetes Cluster by ID
     * @param {KubernetesApiK8sFindByClusterIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sFindByClusterId(requestParameters: KubernetesApiK8sFindByClusterIdRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesCluster>>;
    /**
     * Retrieves a list of all K8s clusters provisioned under your account.
     * @summary Get Kubernetes Clusters
     * @param {KubernetesApiK8sGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sGet(requestParameters?: KubernetesApiK8sGetRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesClusters>>;
    /**
     * Retrieves the configuration file for the specified K8s cluster. You can define the format (YAML or JSON) of the returned file in the Accept header. By default, \'application/yaml\' is specified.
     * @summary Get Kubernetes Configuration File
     * @param {KubernetesApiK8sKubeconfigGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sKubeconfigGet(requestParameters: KubernetesApiK8sKubeconfigGetRequest, options?: any): Promise<import("axios").AxiosResponse<string>>;
    /**
     * Deletes the K8s node pool specified by its ID.
     * @summary Delete a Kubernetes Node Pool by ID
     * @param {KubernetesApiK8sNodepoolsDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsDelete(requestParameters: KubernetesApiK8sNodepoolsDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves the K8s node pool specified by its ID.
     * @summary Get a Kubernetes Node Pool by ID
     * @param {KubernetesApiK8sNodepoolsFindByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsFindById(requestParameters: KubernetesApiK8sNodepoolsFindByIdRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesNodePool>>;
    /**
     * Retrieves a list of K8s node pools of a cluster specified by its ID.
     * @summary Get Kubernetes Node Pools
     * @param {KubernetesApiK8sNodepoolsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsGet(requestParameters: KubernetesApiK8sNodepoolsGetRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesNodePools>>;
    /**
     * Deletes the K8s node specified by its ID.
     * @summary Delete a Kubernetes Node by ID
     * @param {KubernetesApiK8sNodepoolsNodesDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsNodesDelete(requestParameters: KubernetesApiK8sNodepoolsNodesDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves the K8s node specified by its ID.
     * @summary Get Kubernetes Node by ID
     * @param {KubernetesApiK8sNodepoolsNodesFindByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsNodesFindById(requestParameters: KubernetesApiK8sNodepoolsNodesFindByIdRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesNode>>;
    /**
     * Retrieves the list of all K8s nodes of the specified node pool.
     * @summary Get Kubernetes Nodes
     * @param {KubernetesApiK8sNodepoolsNodesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsNodesGet(requestParameters: KubernetesApiK8sNodepoolsNodesGetRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesNodes>>;
    /**
     * Recreates the K8s node specified by its ID.  If a node becomes unusable, Managed Kubernetes allows you to recreate it with a configuration based on the node pool template. Once the status is \'Active,\' all the pods from the failed node will be migrated to the new node. The node pool has an additional billable \'active\' node during this process.
     * @summary Recreate a Kubernetes Node by ID
     * @param {KubernetesApiK8sNodepoolsNodesReplacePostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsNodesReplacePost(requestParameters: KubernetesApiK8sNodepoolsNodesReplacePostRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Creates a node pool inside the specified K8s cluster.
     * @summary Create a Kubernetes Node Pool
     * @param {KubernetesApiK8sNodepoolsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsPost(requestParameters: KubernetesApiK8sNodepoolsPostRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesNodePool>>;
    /**
     * Modifies the K8s node pool specified by its ID.
     * @summary Modify a Kubernetes Node Pool by ID
     * @param {KubernetesApiK8sNodepoolsPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sNodepoolsPut(requestParameters: KubernetesApiK8sNodepoolsPutRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesNodePool>>;
    /**
     * Creates a K8s cluster provisioned under your account.
     * @summary Create a Kubernetes Cluster
     * @param {KubernetesApiK8sPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sPost(requestParameters: KubernetesApiK8sPostRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesCluster>>;
    /**
     * Modifies the K8s cluster specified by its ID.
     * @summary Modify a Kubernetes Cluster by ID
     * @param {KubernetesApiK8sPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sPut(requestParameters: KubernetesApiK8sPutRequest, options?: any): Promise<import("axios").AxiosResponse<KubernetesCluster>>;
    /**
     * Retrieves the current default K8s version to be used by the clusters and node pools.
     * @summary Get Default Kubernetes Version
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sVersionsDefaultGet(options?: any): Promise<import("axios").AxiosResponse<string>>;
    /**
     * Lists available K8s versions.
     * @summary Get Kubernetes Versions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KubernetesApi
     */
    k8sVersionsGet(options?: any): Promise<import("axios").AxiosResponse<string[]>>;
}
