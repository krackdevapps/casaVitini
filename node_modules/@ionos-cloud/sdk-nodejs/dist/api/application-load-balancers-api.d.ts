/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ApplicationLoadBalancer } from '../model';
import { ApplicationLoadBalancerForwardingRule } from '../model';
import { ApplicationLoadBalancerForwardingRuleProperties } from '../model';
import { ApplicationLoadBalancerForwardingRulePut } from '../model';
import { ApplicationLoadBalancerForwardingRules } from '../model';
import { ApplicationLoadBalancerProperties } from '../model';
import { ApplicationLoadBalancerPut } from '../model';
import { ApplicationLoadBalancers } from '../model';
import { FlowLog } from '../model';
import { FlowLogProperties } from '../model';
import { FlowLogPut } from '../model';
import { FlowLogs } from '../model';
/**
 * ApplicationLoadBalancersApi - axios parameter creator
 * @export
 */
export declare const ApplicationLoadBalancersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Removes the specified Application Load Balancer from the data center.
     * @summary Delete an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersDelete: (datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the properties of the specified Application Load Balancer within the data center.
     * @summary Get an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFindByApplicationLoadBalancerId: (datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Deletes the Application Load Balancer flow log specified by its ID.
     * @summary Delete an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsDelete: (datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the Application Load Balancer flow log specified by its ID.
     * @summary Get an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsFindByFlowLogId: (datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the flow logs for the specified Application Load Balancer.
     * @summary Get ALB Flow Logs
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsGet: (datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Updates the properties of the Application Load Balancer flow log specified by its ID.
     * @summary Partially Modify an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {FlowLogProperties} applicationLoadBalancerFlowLogProperties The properties of the ALB flow log to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPatch: (datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, applicationLoadBalancerFlowLogProperties: FlowLogProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Creates a flow log for the Application Load Balancer specified by ID.
     * @summary Create an ALB Flow Log
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {FlowLog} applicationLoadBalancerFlowLog The flow log to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPost: (datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerFlowLog: FlowLog, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Modifies the Application Load Balancer flow log specified by its ID.
     * @summary Modify an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {FlowLogPut} applicationLoadBalancerFlowLog The modified ALB flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPut: (datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, applicationLoadBalancerFlowLog: FlowLogPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Deletes the Application Load Balancer forwarding rule specified by its ID.
     * @summary Delete an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesDelete: (datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the Application Load Balancer forwarding rule specified by its ID.
     * @summary Get an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId: (datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Lists the forwarding rules of the specified Application Load Balancer.
     * @summary Get ALB Forwarding Rules
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesGet: (datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Updates the properties of the Application Load Balancer forwarding rule specified by its ID.
     * @summary Partially modify an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {ApplicationLoadBalancerForwardingRuleProperties} applicationLoadBalancerForwardingRuleProperties The properties of the forwarding rule to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPatch: (datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, applicationLoadBalancerForwardingRuleProperties: ApplicationLoadBalancerForwardingRuleProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Creates a forwarding rule for the specified Application Load Balancer.
     * @summary Create an ALB Forwarding Rule
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerForwardingRule} applicationLoadBalancerForwardingRule The forwarding rule to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPost: (datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRule, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Modifies the Application Load Balancer forwarding rule specified by its ID.
     * @summary Modify an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {ApplicationLoadBalancerForwardingRulePut} applicationLoadBalancerForwardingRule The modified ALB forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPut: (datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRulePut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Lists all Application Load Balancers within a data center.
     * @summary Get Application Load Balancers
     * @param {string} datacenterId The unique ID of the data center.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersGet: (datacenterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, offset?: number, limit?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Updates the properties of the specified Application Load Balancer within the data center.
     * @summary Partially Modify an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerProperties} applicationLoadBalancerProperties The Application Load Balancer properties to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPatch: (datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerProperties: ApplicationLoadBalancerProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Creates an Application Load Balancer within the data center.
     * @summary Create an Application Load Balancer
     * @param {string} datacenterId The unique ID of the data center.
     * @param {ApplicationLoadBalancer} applicationLoadBalancer The Application Load Balancer to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPost: (datacenterId: string, applicationLoadBalancer: ApplicationLoadBalancer, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Modifies the properties of the specified Application Load Balancer within the data center.
     * @summary Modify an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerPut} applicationLoadBalancer The modified Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPut: (datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancer: ApplicationLoadBalancerPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
};
/**
 * ApplicationLoadBalancersApi - functional programming interface
 * @export
 */
export declare const ApplicationLoadBalancersApiFp: (configuration?: Configuration) => {
    /**
     * Removes the specified Application Load Balancer from the data center.
     * @summary Delete an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersDelete(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieves the properties of the specified Application Load Balancer within the data center.
     * @summary Get an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFindByApplicationLoadBalancerId(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancer>>;
    /**
     * Deletes the Application Load Balancer flow log specified by its ID.
     * @summary Delete an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsDelete(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieves the Application Load Balancer flow log specified by its ID.
     * @summary Get an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsFindByFlowLogId(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlowLog>>;
    /**
     * Retrieves the flow logs for the specified Application Load Balancer.
     * @summary Get ALB Flow Logs
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsGet(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlowLogs>>;
    /**
     * Updates the properties of the Application Load Balancer flow log specified by its ID.
     * @summary Partially Modify an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {FlowLogProperties} applicationLoadBalancerFlowLogProperties The properties of the ALB flow log to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPatch(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, applicationLoadBalancerFlowLogProperties: FlowLogProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlowLog>>;
    /**
     * Creates a flow log for the Application Load Balancer specified by ID.
     * @summary Create an ALB Flow Log
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {FlowLog} applicationLoadBalancerFlowLog The flow log to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPost(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerFlowLog: FlowLog, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlowLog>>;
    /**
     * Modifies the Application Load Balancer flow log specified by its ID.
     * @summary Modify an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {FlowLogPut} applicationLoadBalancerFlowLog The modified ALB flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPut(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, applicationLoadBalancerFlowLog: FlowLogPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FlowLog>>;
    /**
     * Deletes the Application Load Balancer forwarding rule specified by its ID.
     * @summary Delete an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesDelete(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieves the Application Load Balancer forwarding rule specified by its ID.
     * @summary Get an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Lists the forwarding rules of the specified Application Load Balancer.
     * @summary Get ALB Forwarding Rules
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesGet(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancerForwardingRules>>;
    /**
     * Updates the properties of the Application Load Balancer forwarding rule specified by its ID.
     * @summary Partially modify an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {ApplicationLoadBalancerForwardingRuleProperties} applicationLoadBalancerForwardingRuleProperties The properties of the forwarding rule to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPatch(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, applicationLoadBalancerForwardingRuleProperties: ApplicationLoadBalancerForwardingRuleProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Creates a forwarding rule for the specified Application Load Balancer.
     * @summary Create an ALB Forwarding Rule
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerForwardingRule} applicationLoadBalancerForwardingRule The forwarding rule to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPost(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRule, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Modifies the Application Load Balancer forwarding rule specified by its ID.
     * @summary Modify an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {ApplicationLoadBalancerForwardingRulePut} applicationLoadBalancerForwardingRule The modified ALB forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPut(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRulePut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Lists all Application Load Balancers within a data center.
     * @summary Get Application Load Balancers
     * @param {string} datacenterId The unique ID of the data center.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersGet(datacenterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, offset?: number, limit?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancers>>;
    /**
     * Updates the properties of the specified Application Load Balancer within the data center.
     * @summary Partially Modify an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerProperties} applicationLoadBalancerProperties The Application Load Balancer properties to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPatch(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerProperties: ApplicationLoadBalancerProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancer>>;
    /**
     * Creates an Application Load Balancer within the data center.
     * @summary Create an Application Load Balancer
     * @param {string} datacenterId The unique ID of the data center.
     * @param {ApplicationLoadBalancer} applicationLoadBalancer The Application Load Balancer to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPost(datacenterId: string, applicationLoadBalancer: ApplicationLoadBalancer, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancer>>;
    /**
     * Modifies the properties of the specified Application Load Balancer within the data center.
     * @summary Modify an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerPut} applicationLoadBalancer The modified Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPut(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancer: ApplicationLoadBalancerPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ApplicationLoadBalancer>>;
};
/**
 * ApplicationLoadBalancersApi - factory interface
 * @export
 */
export declare const ApplicationLoadBalancersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Removes the specified Application Load Balancer from the data center.
     * @summary Delete an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersDelete(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieves the properties of the specified Application Load Balancer within the data center.
     * @summary Get an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFindByApplicationLoadBalancerId(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancer>;
    /**
     * Deletes the Application Load Balancer flow log specified by its ID.
     * @summary Delete an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsDelete(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieves the Application Load Balancer flow log specified by its ID.
     * @summary Get an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsFindByFlowLogId(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<FlowLog>;
    /**
     * Retrieves the flow logs for the specified Application Load Balancer.
     * @summary Get ALB Flow Logs
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsGet(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<FlowLogs>;
    /**
     * Updates the properties of the Application Load Balancer flow log specified by its ID.
     * @summary Partially Modify an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {FlowLogProperties} applicationLoadBalancerFlowLogProperties The properties of the ALB flow log to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPatch(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, applicationLoadBalancerFlowLogProperties: FlowLogProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<FlowLog>;
    /**
     * Creates a flow log for the Application Load Balancer specified by ID.
     * @summary Create an ALB Flow Log
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {FlowLog} applicationLoadBalancerFlowLog The flow log to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPost(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerFlowLog: FlowLog, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<FlowLog>;
    /**
     * Modifies the Application Load Balancer flow log specified by its ID.
     * @summary Modify an ALB Flow Log by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} flowLogId The unique ID of the flow log.
     * @param {FlowLogPut} applicationLoadBalancerFlowLog The modified ALB flow log.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersFlowlogsPut(datacenterId: string, applicationLoadBalancerId: string, flowLogId: string, applicationLoadBalancerFlowLog: FlowLogPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<FlowLog>;
    /**
     * Deletes the Application Load Balancer forwarding rule specified by its ID.
     * @summary Delete an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesDelete(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieves the Application Load Balancer forwarding rule specified by its ID.
     * @summary Get an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancerForwardingRule>;
    /**
     * Lists the forwarding rules of the specified Application Load Balancer.
     * @summary Get ALB Forwarding Rules
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesGet(datacenterId: string, applicationLoadBalancerId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancerForwardingRules>;
    /**
     * Updates the properties of the Application Load Balancer forwarding rule specified by its ID.
     * @summary Partially modify an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {ApplicationLoadBalancerForwardingRuleProperties} applicationLoadBalancerForwardingRuleProperties The properties of the forwarding rule to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPatch(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, applicationLoadBalancerForwardingRuleProperties: ApplicationLoadBalancerForwardingRuleProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancerForwardingRule>;
    /**
     * Creates a forwarding rule for the specified Application Load Balancer.
     * @summary Create an ALB Forwarding Rule
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerForwardingRule} applicationLoadBalancerForwardingRule The forwarding rule to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPost(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRule, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancerForwardingRule>;
    /**
     * Modifies the Application Load Balancer forwarding rule specified by its ID.
     * @summary Modify an ALB Forwarding Rule by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {string} forwardingRuleId The unique ID of the forwarding rule.
     * @param {ApplicationLoadBalancerForwardingRulePut} applicationLoadBalancerForwardingRule The modified ALB forwarding rule.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersForwardingrulesPut(datacenterId: string, applicationLoadBalancerId: string, forwardingRuleId: string, applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRulePut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancerForwardingRule>;
    /**
     * Lists all Application Load Balancers within a data center.
     * @summary Get Application Load Balancers
     * @param {string} datacenterId The unique ID of the data center.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersGet(datacenterId: string, pretty?: boolean, depth?: number, xContractNumber?: number, offset?: number, limit?: number, options?: any): AxiosPromise<ApplicationLoadBalancers>;
    /**
     * Updates the properties of the specified Application Load Balancer within the data center.
     * @summary Partially Modify an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerProperties} applicationLoadBalancerProperties The Application Load Balancer properties to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPatch(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancerProperties: ApplicationLoadBalancerProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancer>;
    /**
     * Creates an Application Load Balancer within the data center.
     * @summary Create an Application Load Balancer
     * @param {string} datacenterId The unique ID of the data center.
     * @param {ApplicationLoadBalancer} applicationLoadBalancer The Application Load Balancer to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPost(datacenterId: string, applicationLoadBalancer: ApplicationLoadBalancer, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancer>;
    /**
     * Modifies the properties of the specified Application Load Balancer within the data center.
     * @summary Modify an Application Load Balancer by ID
     * @param {string} datacenterId The unique ID of the data center.
     * @param {string} applicationLoadBalancerId The unique ID of the Application Load Balancer.
     * @param {ApplicationLoadBalancerPut} applicationLoadBalancer The modified Application Load Balancer.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    datacentersApplicationloadbalancersPut(datacenterId: string, applicationLoadBalancerId: string, applicationLoadBalancer: ApplicationLoadBalancerPut, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<ApplicationLoadBalancer>;
};
/**
 * Request parameters for datacentersApplicationloadbalancersDelete operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDeleteRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDeleteRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDelete
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDelete
     */
    readonly applicationLoadBalancerId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersFindByApplicationLoadBalancerId operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerIdRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerIdRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerId
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerId
     */
    readonly applicationLoadBalancerId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerId
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerId
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerId
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersFlowlogsDelete operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDeleteRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDeleteRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDelete
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDelete
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the flow log.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDelete
     */
    readonly flowLogId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersFlowlogsFindByFlowLogId operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogIdRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogIdRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogId
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogId
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the flow log.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogId
     */
    readonly flowLogId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogId
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogId
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogId
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersFlowlogsGet operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGetRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGetRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    readonly applicationLoadBalancerId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for datacentersApplicationloadbalancersFlowlogsPatch operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatchRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatchRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatch
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatch
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the flow log.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatch
     */
    readonly flowLogId: string;
    /**
     * The properties of the ALB flow log to be updated.
     * @type {FlowLogProperties}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatch
     */
    readonly applicationLoadBalancerFlowLogProperties: FlowLogProperties;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatch
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatch
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatch
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersFlowlogsPost operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPostRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPostRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPost
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPost
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The flow log to create.
     * @type {FlowLog}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPost
     */
    readonly applicationLoadBalancerFlowLog: FlowLog;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersFlowlogsPut operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPutRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPutRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPut
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPut
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the flow log.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPut
     */
    readonly flowLogId: string;
    /**
     * The modified ALB flow log.
     * @type {FlowLogPut}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPut
     */
    readonly applicationLoadBalancerFlowLog: FlowLogPut;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPut
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPut
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPut
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersForwardingrulesDelete operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDeleteRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDeleteRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDelete
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDelete
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the forwarding rule.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDelete
     */
    readonly forwardingRuleId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleIdRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleIdRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the forwarding rule.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId
     */
    readonly forwardingRuleId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersForwardingrulesGet operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGetRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGetRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    readonly applicationLoadBalancerId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for datacentersApplicationloadbalancersForwardingrulesPatch operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatchRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatchRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatch
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatch
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the forwarding rule.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatch
     */
    readonly forwardingRuleId: string;
    /**
     * The properties of the forwarding rule to be updated.
     * @type {ApplicationLoadBalancerForwardingRuleProperties}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatch
     */
    readonly applicationLoadBalancerForwardingRuleProperties: ApplicationLoadBalancerForwardingRuleProperties;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatch
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatch
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatch
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersForwardingrulesPost operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPostRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPostRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPost
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPost
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The forwarding rule to create.
     * @type {ApplicationLoadBalancerForwardingRule}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPost
     */
    readonly applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRule;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersForwardingrulesPut operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPutRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPutRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPut
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPut
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The unique ID of the forwarding rule.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPut
     */
    readonly forwardingRuleId: string;
    /**
     * The modified ALB forwarding rule.
     * @type {ApplicationLoadBalancerForwardingRulePut}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPut
     */
    readonly applicationLoadBalancerForwardingRule: ApplicationLoadBalancerForwardingRulePut;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPut
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPut
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPut
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersGet operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGetRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGetRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly datacenterId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly xContractNumber?: number;
    /**
     * The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly offset?: number;
    /**
     * The maximum number of elements to return (use together with offset for pagination).
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly limit?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for datacentersApplicationloadbalancersPatch operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatchRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatchRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatch
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatch
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The Application Load Balancer properties to be updated.
     * @type {ApplicationLoadBalancerProperties}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatch
     */
    readonly applicationLoadBalancerProperties: ApplicationLoadBalancerProperties;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatch
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatch
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatch
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersPost operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPostRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPostRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPost
     */
    readonly datacenterId: string;
    /**
     * The Application Load Balancer to create.
     * @type {ApplicationLoadBalancer}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPost
     */
    readonly applicationLoadBalancer: ApplicationLoadBalancer;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for datacentersApplicationloadbalancersPut operation in ApplicationLoadBalancersApi.
 * @export
 * @interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPutRequest
 */
export interface ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPutRequest {
    /**
     * The unique ID of the data center.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPut
     */
    readonly datacenterId: string;
    /**
     * The unique ID of the Application Load Balancer.
     * @type {string}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPut
     */
    readonly applicationLoadBalancerId: string;
    /**
     * The modified Application Load Balancer.
     * @type {ApplicationLoadBalancerPut}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPut
     */
    readonly applicationLoadBalancer: ApplicationLoadBalancerPut;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPut
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPut
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPut
     */
    readonly xContractNumber?: number;
}
/**
 * ApplicationLoadBalancersApi - object-oriented interface
 * @export
 * @class ApplicationLoadBalancersApi
 * @extends {BaseAPI}
 */
export declare class ApplicationLoadBalancersApi extends BaseAPI {
    /**
     * Removes the specified Application Load Balancer from the data center.
     * @summary Delete an Application Load Balancer by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersDelete(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves the properties of the specified Application Load Balancer within the data center.
     * @summary Get an Application Load Balancer by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersFindByApplicationLoadBalancerId(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFindByApplicationLoadBalancerIdRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancer>>;
    /**
     * Deletes the Application Load Balancer flow log specified by its ID.
     * @summary Delete an ALB Flow Log by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersFlowlogsDelete(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves the Application Load Balancer flow log specified by its ID.
     * @summary Get an ALB Flow Log by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersFlowlogsFindByFlowLogId(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsFindByFlowLogIdRequest, options?: any): Promise<import("axios").AxiosResponse<FlowLog>>;
    /**
     * Retrieves the flow logs for the specified Application Load Balancer.
     * @summary Get ALB Flow Logs
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersFlowlogsGet(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsGetRequest, options?: any): Promise<import("axios").AxiosResponse<FlowLogs>>;
    /**
     * Updates the properties of the Application Load Balancer flow log specified by its ID.
     * @summary Partially Modify an ALB Flow Log by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersFlowlogsPatch(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPatchRequest, options?: any): Promise<import("axios").AxiosResponse<FlowLog>>;
    /**
     * Creates a flow log for the Application Load Balancer specified by ID.
     * @summary Create an ALB Flow Log
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersFlowlogsPost(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPostRequest, options?: any): Promise<import("axios").AxiosResponse<FlowLog>>;
    /**
     * Modifies the Application Load Balancer flow log specified by its ID.
     * @summary Modify an ALB Flow Log by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersFlowlogsPut(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersFlowlogsPutRequest, options?: any): Promise<import("axios").AxiosResponse<FlowLog>>;
    /**
     * Deletes the Application Load Balancer forwarding rule specified by its ID.
     * @summary Delete an ALB Forwarding Rule by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersForwardingrulesDelete(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieves the Application Load Balancer forwarding rule specified by its ID.
     * @summary Get an ALB Forwarding Rule by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleId(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesFindByForwardingRuleIdRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Lists the forwarding rules of the specified Application Load Balancer.
     * @summary Get ALB Forwarding Rules
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersForwardingrulesGet(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesGetRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancerForwardingRules>>;
    /**
     * Updates the properties of the Application Load Balancer forwarding rule specified by its ID.
     * @summary Partially modify an ALB Forwarding Rule by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersForwardingrulesPatch(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPatchRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Creates a forwarding rule for the specified Application Load Balancer.
     * @summary Create an ALB Forwarding Rule
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersForwardingrulesPost(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPostRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Modifies the Application Load Balancer forwarding rule specified by its ID.
     * @summary Modify an ALB Forwarding Rule by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersForwardingrulesPut(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersForwardingrulesPutRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancerForwardingRule>>;
    /**
     * Lists all Application Load Balancers within a data center.
     * @summary Get Application Load Balancers
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersGet(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersGetRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancers>>;
    /**
     * Updates the properties of the specified Application Load Balancer within the data center.
     * @summary Partially Modify an Application Load Balancer by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersPatch(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPatchRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancer>>;
    /**
     * Creates an Application Load Balancer within the data center.
     * @summary Create an Application Load Balancer
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersPost(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPostRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancer>>;
    /**
     * Modifies the properties of the specified Application Load Balancer within the data center.
     * @summary Modify an Application Load Balancer by ID
     * @param {ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ApplicationLoadBalancersApi
     */
    datacentersApplicationloadbalancersPut(requestParameters: ApplicationLoadBalancersApiDatacentersApplicationloadbalancersPutRequest, options?: any): Promise<import("axios").AxiosResponse<ApplicationLoadBalancer>>;
}
