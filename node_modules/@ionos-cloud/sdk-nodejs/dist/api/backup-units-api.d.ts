/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { BackupUnit } from '../model';
import { BackupUnitProperties } from '../model';
import { BackupUnitSSO } from '../model';
import { BackupUnits } from '../model';
/**
 * BackupUnitsApi - axios parameter creator
 * @export
 */
export declare const BackupUnitsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Remove the specified backup unit.  This process will delete: 1) The backup plans inside the backup unit 2) All backups, associated with this backup unit 3) The backup user 4) The backup unit itself
     * @summary Delete backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsDelete: (backupunitId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieve the properties of the specified backup unit.
     * @summary Retrieve backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsFindById: (backupunitId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * List all available backup units.
     * @summary List backup units
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsGet: (pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Update the properties of the specified backup unit.
     * @summary Partially modify backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {BackupUnitProperties} backupUnit The properties of the backup unit to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPatch: (backupunitId: string, backupUnit: BackupUnitProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Create a backup unit. Backup units are resources, same as storage volumes or snapshots; they can be shared through groups in User management.
     * @summary Create backup units
     * @param {BackupUnit} backupUnit The backup unit to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPost: (backupUnit: BackupUnit, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Modify the properties of the specified backup unit.
     * @summary Modify backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {BackupUnit} backupUnit The modified backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPut: (backupunitId: string, backupUnit: BackupUnit, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieve a single sign-on URL for the specified backup unit.
     * @summary Retrieve BU single sign-on URLs
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsSsourlGet: (backupunitId: string, pretty?: boolean, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
};
/**
 * BackupUnitsApi - functional programming interface
 * @export
 */
export declare const BackupUnitsApiFp: (configuration?: Configuration) => {
    /**
     * Remove the specified backup unit.  This process will delete: 1) The backup plans inside the backup unit 2) All backups, associated with this backup unit 3) The backup user 4) The backup unit itself
     * @summary Delete backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsDelete(backupunitId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieve the properties of the specified backup unit.
     * @summary Retrieve backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsFindById(backupunitId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BackupUnit>>;
    /**
     * List all available backup units.
     * @summary List backup units
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsGet(pretty?: boolean, depth?: number, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BackupUnits>>;
    /**
     * Update the properties of the specified backup unit.
     * @summary Partially modify backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {BackupUnitProperties} backupUnit The properties of the backup unit to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPatch(backupunitId: string, backupUnit: BackupUnitProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BackupUnit>>;
    /**
     * Create a backup unit. Backup units are resources, same as storage volumes or snapshots; they can be shared through groups in User management.
     * @summary Create backup units
     * @param {BackupUnit} backupUnit The backup unit to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPost(backupUnit: BackupUnit, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BackupUnit>>;
    /**
     * Modify the properties of the specified backup unit.
     * @summary Modify backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {BackupUnit} backupUnit The modified backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPut(backupunitId: string, backupUnit: BackupUnit, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BackupUnit>>;
    /**
     * Retrieve a single sign-on URL for the specified backup unit.
     * @summary Retrieve BU single sign-on URLs
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsSsourlGet(backupunitId: string, pretty?: boolean, xContractNumber?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BackupUnitSSO>>;
};
/**
 * BackupUnitsApi - factory interface
 * @export
 */
export declare const BackupUnitsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Remove the specified backup unit.  This process will delete: 1) The backup plans inside the backup unit 2) All backups, associated with this backup unit 3) The backup user 4) The backup unit itself
     * @summary Delete backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsDelete(backupunitId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieve the properties of the specified backup unit.
     * @summary Retrieve backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsFindById(backupunitId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<BackupUnit>;
    /**
     * List all available backup units.
     * @summary List backup units
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsGet(pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<BackupUnits>;
    /**
     * Update the properties of the specified backup unit.
     * @summary Partially modify backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {BackupUnitProperties} backupUnit The properties of the backup unit to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPatch(backupunitId: string, backupUnit: BackupUnitProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<BackupUnit>;
    /**
     * Create a backup unit. Backup units are resources, same as storage volumes or snapshots; they can be shared through groups in User management.
     * @summary Create backup units
     * @param {BackupUnit} backupUnit The backup unit to create.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPost(backupUnit: BackupUnit, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<BackupUnit>;
    /**
     * Modify the properties of the specified backup unit.
     * @summary Modify backup units
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {BackupUnit} backupUnit The modified backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsPut(backupunitId: string, backupUnit: BackupUnit, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<BackupUnit>;
    /**
     * Retrieve a single sign-on URL for the specified backup unit.
     * @summary Retrieve BU single sign-on URLs
     * @param {string} backupunitId The unique ID of the backup unit.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    backupunitsSsourlGet(backupunitId: string, pretty?: boolean, xContractNumber?: number, options?: any): AxiosPromise<BackupUnitSSO>;
};
/**
 * Request parameters for backupunitsDelete operation in BackupUnitsApi.
 * @export
 * @interface BackupUnitsApiBackupunitsDeleteRequest
 */
export interface BackupUnitsApiBackupunitsDeleteRequest {
    /**
     * The unique ID of the backup unit.
     * @type {string}
     * @memberof BackupUnitsApiBackupunitsDelete
     */
    readonly backupunitId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof BackupUnitsApiBackupunitsDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for backupunitsFindById operation in BackupUnitsApi.
 * @export
 * @interface BackupUnitsApiBackupunitsFindByIdRequest
 */
export interface BackupUnitsApiBackupunitsFindByIdRequest {
    /**
     * The unique ID of the backup unit.
     * @type {string}
     * @memberof BackupUnitsApiBackupunitsFindById
     */
    readonly backupunitId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof BackupUnitsApiBackupunitsFindById
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsFindById
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsFindById
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for backupunitsGet operation in BackupUnitsApi.
 * @export
 * @interface BackupUnitsApiBackupunitsGetRequest
 */
export interface BackupUnitsApiBackupunitsGetRequest {
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof BackupUnitsApiBackupunitsGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof BackupUnitsApiBackupunitsGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof BackupUnitsApiBackupunitsGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for backupunitsPatch operation in BackupUnitsApi.
 * @export
 * @interface BackupUnitsApiBackupunitsPatchRequest
 */
export interface BackupUnitsApiBackupunitsPatchRequest {
    /**
     * The unique ID of the backup unit.
     * @type {string}
     * @memberof BackupUnitsApiBackupunitsPatch
     */
    readonly backupunitId: string;
    /**
     * The properties of the backup unit to be updated.
     * @type {BackupUnitProperties}
     * @memberof BackupUnitsApiBackupunitsPatch
     */
    readonly backupUnit: BackupUnitProperties;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof BackupUnitsApiBackupunitsPatch
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsPatch
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsPatch
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for backupunitsPost operation in BackupUnitsApi.
 * @export
 * @interface BackupUnitsApiBackupunitsPostRequest
 */
export interface BackupUnitsApiBackupunitsPostRequest {
    /**
     * The backup unit to create.
     * @type {BackupUnit}
     * @memberof BackupUnitsApiBackupunitsPost
     */
    readonly backupUnit: BackupUnit;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof BackupUnitsApiBackupunitsPost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsPost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsPost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for backupunitsPut operation in BackupUnitsApi.
 * @export
 * @interface BackupUnitsApiBackupunitsPutRequest
 */
export interface BackupUnitsApiBackupunitsPutRequest {
    /**
     * The unique ID of the backup unit.
     * @type {string}
     * @memberof BackupUnitsApiBackupunitsPut
     */
    readonly backupunitId: string;
    /**
     * The modified backup unit.
     * @type {BackupUnit}
     * @memberof BackupUnitsApiBackupunitsPut
     */
    readonly backupUnit: BackupUnit;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof BackupUnitsApiBackupunitsPut
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsPut
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsPut
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for backupunitsSsourlGet operation in BackupUnitsApi.
 * @export
 * @interface BackupUnitsApiBackupunitsSsourlGetRequest
 */
export interface BackupUnitsApiBackupunitsSsourlGetRequest {
    /**
     * The unique ID of the backup unit.
     * @type {string}
     * @memberof BackupUnitsApiBackupunitsSsourlGet
     */
    readonly backupunitId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof BackupUnitsApiBackupunitsSsourlGet
     */
    readonly pretty?: boolean;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsSsourlGet
     */
    readonly xContractNumber?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof BackupUnitsApiBackupunitsSsourlGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof BackupUnitsApiBackupunitsSsourlGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof BackupUnitsApiBackupunitsSsourlGet
     */
    filters?: Map<string, string>;
}
/**
 * BackupUnitsApi - object-oriented interface
 * @export
 * @class BackupUnitsApi
 * @extends {BaseAPI}
 */
export declare class BackupUnitsApi extends BaseAPI {
    /**
     * Remove the specified backup unit.  This process will delete: 1) The backup plans inside the backup unit 2) All backups, associated with this backup unit 3) The backup user 4) The backup unit itself
     * @summary Delete backup units
     * @param {BackupUnitsApiBackupunitsDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BackupUnitsApi
     */
    backupunitsDelete(requestParameters: BackupUnitsApiBackupunitsDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieve the properties of the specified backup unit.
     * @summary Retrieve backup units
     * @param {BackupUnitsApiBackupunitsFindByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BackupUnitsApi
     */
    backupunitsFindById(requestParameters: BackupUnitsApiBackupunitsFindByIdRequest, options?: any): Promise<import("axios").AxiosResponse<BackupUnit>>;
    /**
     * List all available backup units.
     * @summary List backup units
     * @param {BackupUnitsApiBackupunitsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BackupUnitsApi
     */
    backupunitsGet(requestParameters?: BackupUnitsApiBackupunitsGetRequest, options?: any): Promise<import("axios").AxiosResponse<BackupUnits>>;
    /**
     * Update the properties of the specified backup unit.
     * @summary Partially modify backup units
     * @param {BackupUnitsApiBackupunitsPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BackupUnitsApi
     */
    backupunitsPatch(requestParameters: BackupUnitsApiBackupunitsPatchRequest, options?: any): Promise<import("axios").AxiosResponse<BackupUnit>>;
    /**
     * Create a backup unit. Backup units are resources, same as storage volumes or snapshots; they can be shared through groups in User management.
     * @summary Create backup units
     * @param {BackupUnitsApiBackupunitsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BackupUnitsApi
     */
    backupunitsPost(requestParameters: BackupUnitsApiBackupunitsPostRequest, options?: any): Promise<import("axios").AxiosResponse<BackupUnit>>;
    /**
     * Modify the properties of the specified backup unit.
     * @summary Modify backup units
     * @param {BackupUnitsApiBackupunitsPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BackupUnitsApi
     */
    backupunitsPut(requestParameters: BackupUnitsApiBackupunitsPutRequest, options?: any): Promise<import("axios").AxiosResponse<BackupUnit>>;
    /**
     * Retrieve a single sign-on URL for the specified backup unit.
     * @summary Retrieve BU single sign-on URLs
     * @param {BackupUnitsApiBackupunitsSsourlGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BackupUnitsApi
     */
    backupunitsSsourlGet(requestParameters: BackupUnitsApiBackupunitsSsourlGetRequest, options?: any): Promise<import("axios").AxiosResponse<BackupUnitSSO>>;
}
