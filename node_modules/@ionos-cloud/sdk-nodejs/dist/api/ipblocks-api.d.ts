/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { IpBlock } from '../model';
import { IpBlockProperties } from '../model';
import { IpBlocks } from '../model';
/**
 * IPBlocksApi - axios parameter creator
 * @export
 */
export declare const IPBlocksApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Remove the specified IP block.
     * @summary Delete IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksDelete: (ipblockId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieve the properties of the specified IP block.
     * @summary Retrieve IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksFindById: (ipblockId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * List all reserved IP blocks.
     * @summary List IP blocks
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksGet: (pretty?: boolean, depth?: number, xContractNumber?: number, offset?: number, limit?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any) => Promise<RequestArgs>;
    /**
     * Update the properties of the specified IP block.
     * @summary Partially modify IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {IpBlockProperties} ipblock The properties of the IP block to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPatch: (ipblockId: string, ipblock: IpBlockProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Reserves a new IP block.
     * @summary Reserve a IP Block
     * @param {IpBlock} ipblock The IP block to be reserved.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPost: (ipblock: IpBlock, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
    /**
     * Modifies the properties of the specified IP block.
     * @summary Modify a IP Block by ID
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {IpBlock} ipblock The modified IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPut: (ipblockId: string, ipblock: IpBlock, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any) => Promise<RequestArgs>;
};
/**
 * IPBlocksApi - functional programming interface
 * @export
 */
export declare const IPBlocksApiFp: (configuration?: Configuration) => {
    /**
     * Remove the specified IP block.
     * @summary Delete IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksDelete(ipblockId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Retrieve the properties of the specified IP block.
     * @summary Retrieve IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksFindById(ipblockId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IpBlock>>;
    /**
     * List all reserved IP blocks.
     * @summary List IP blocks
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {string} [orderBy] - Sorts the results alphanumerically in ascending order based on the specified property.
     * @param {number} [maxResults] - Limits the number of results returned.
     * @param {Map<string,string>} [filters] - Filters query parameters limit results to those containing a matching value for a specific property.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksGet(pretty?: boolean, depth?: number, xContractNumber?: number, offset?: number, limit?: number, orderBy?: string, maxResults?: number, filters?: Map<string, string>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IpBlocks>>;
    /**
     * Update the properties of the specified IP block.
     * @summary Partially modify IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {IpBlockProperties} ipblock The properties of the IP block to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPatch(ipblockId: string, ipblock: IpBlockProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IpBlock>>;
    /**
     * Reserves a new IP block.
     * @summary Reserve a IP Block
     * @param {IpBlock} ipblock The IP block to be reserved.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPost(ipblock: IpBlock, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IpBlock>>;
    /**
     * Modifies the properties of the specified IP block.
     * @summary Modify a IP Block by ID
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {IpBlock} ipblock The modified IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPut(ipblockId: string, ipblock: IpBlock, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IpBlock>>;
};
/**
 * IPBlocksApi - factory interface
 * @export
 */
export declare const IPBlocksApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Remove the specified IP block.
     * @summary Delete IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksDelete(ipblockId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<void>;
    /**
     * Retrieve the properties of the specified IP block.
     * @summary Retrieve IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksFindById(ipblockId: string, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<IpBlock>;
    /**
     * List all reserved IP blocks.
     * @summary List IP blocks
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {number} [offset] The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @param {number} [limit] The maximum number of elements to return (use together with offset for pagination).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksGet(pretty?: boolean, depth?: number, xContractNumber?: number, offset?: number, limit?: number, options?: any): AxiosPromise<IpBlocks>;
    /**
     * Update the properties of the specified IP block.
     * @summary Partially modify IP blocks
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {IpBlockProperties} ipblock The properties of the IP block to be updated.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPatch(ipblockId: string, ipblock: IpBlockProperties, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<IpBlock>;
    /**
     * Reserves a new IP block.
     * @summary Reserve a IP Block
     * @param {IpBlock} ipblock The IP block to be reserved.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPost(ipblock: IpBlock, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<IpBlock>;
    /**
     * Modifies the properties of the specified IP block.
     * @summary Modify a IP Block by ID
     * @param {string} ipblockId The unique ID of the IP block.
     * @param {IpBlock} ipblock The modified IP block.
     * @param {boolean} [pretty] Controls whether the response is pretty-printed (with indentations and new lines).
     * @param {number} [depth] Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @param {number} [xContractNumber] Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ipblocksPut(ipblockId: string, ipblock: IpBlock, pretty?: boolean, depth?: number, xContractNumber?: number, options?: any): AxiosPromise<IpBlock>;
};
/**
 * Request parameters for ipblocksDelete operation in IPBlocksApi.
 * @export
 * @interface IPBlocksApiIpblocksDeleteRequest
 */
export interface IPBlocksApiIpblocksDeleteRequest {
    /**
     * The unique ID of the IP block.
     * @type {string}
     * @memberof IPBlocksApiIpblocksDelete
     */
    readonly ipblockId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof IPBlocksApiIpblocksDelete
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof IPBlocksApiIpblocksDelete
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof IPBlocksApiIpblocksDelete
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for ipblocksFindById operation in IPBlocksApi.
 * @export
 * @interface IPBlocksApiIpblocksFindByIdRequest
 */
export interface IPBlocksApiIpblocksFindByIdRequest {
    /**
     * The unique ID of the IP block.
     * @type {string}
     * @memberof IPBlocksApiIpblocksFindById
     */
    readonly ipblockId: string;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof IPBlocksApiIpblocksFindById
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof IPBlocksApiIpblocksFindById
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof IPBlocksApiIpblocksFindById
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for ipblocksGet operation in IPBlocksApi.
 * @export
 * @interface IPBlocksApiIpblocksGetRequest
 */
export interface IPBlocksApiIpblocksGetRequest {
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof IPBlocksApiIpblocksGet
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof IPBlocksApiIpblocksGet
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof IPBlocksApiIpblocksGet
     */
    readonly xContractNumber?: number;
    /**
     * The first element (from the complete list of the elements) to include in the response (used together with &lt;b&gt;&lt;i&gt;limit&lt;/i&gt;&lt;/b&gt; for pagination).
     * @type {number}
     * @memberof IPBlocksApiIpblocksGet
     */
    readonly offset?: number;
    /**
     * The maximum number of elements to return (use together with offset for pagination).
     * @type {number}
     * @memberof IPBlocksApiIpblocksGet
     */
    readonly limit?: number;
    /**
     * sorts the results alphanumerically in ascending order based on the specified property
     * @type {string}
     * @memberof IPBlocksApiIpblocksGet
     */
    readonly orderBy?: string;
    /**
     * limits the number of results returned
     * @type {number}
     * @memberof IPBlocksApiIpblocksGet
     */
    readonly maxResults?: number;
    /**
     * limits results to those containing a matching value for a specific property
     * @type {Map<string,string>}
     * @memberof IPBlocksApiIpblocksGet
     */
    filters?: Map<string, string>;
}
/**
 * Request parameters for ipblocksPatch operation in IPBlocksApi.
 * @export
 * @interface IPBlocksApiIpblocksPatchRequest
 */
export interface IPBlocksApiIpblocksPatchRequest {
    /**
     * The unique ID of the IP block.
     * @type {string}
     * @memberof IPBlocksApiIpblocksPatch
     */
    readonly ipblockId: string;
    /**
     * The properties of the IP block to be updated.
     * @type {IpBlockProperties}
     * @memberof IPBlocksApiIpblocksPatch
     */
    readonly ipblock: IpBlockProperties;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof IPBlocksApiIpblocksPatch
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof IPBlocksApiIpblocksPatch
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof IPBlocksApiIpblocksPatch
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for ipblocksPost operation in IPBlocksApi.
 * @export
 * @interface IPBlocksApiIpblocksPostRequest
 */
export interface IPBlocksApiIpblocksPostRequest {
    /**
     * The IP block to be reserved.
     * @type {IpBlock}
     * @memberof IPBlocksApiIpblocksPost
     */
    readonly ipblock: IpBlock;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof IPBlocksApiIpblocksPost
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof IPBlocksApiIpblocksPost
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof IPBlocksApiIpblocksPost
     */
    readonly xContractNumber?: number;
}
/**
 * Request parameters for ipblocksPut operation in IPBlocksApi.
 * @export
 * @interface IPBlocksApiIpblocksPutRequest
 */
export interface IPBlocksApiIpblocksPutRequest {
    /**
     * The unique ID of the IP block.
     * @type {string}
     * @memberof IPBlocksApiIpblocksPut
     */
    readonly ipblockId: string;
    /**
     * The modified IP block.
     * @type {IpBlock}
     * @memberof IPBlocksApiIpblocksPut
     */
    readonly ipblock: IpBlock;
    /**
     * Controls whether the response is pretty-printed (with indentations and new lines).
     * @type {boolean}
     * @memberof IPBlocksApiIpblocksPut
     */
    readonly pretty?: boolean;
    /**
     * Controls the detail depth of the response objects.  GET /datacenters/[ID]  - depth&#x3D;0: Only direct properties are included; children (servers and other elements) are not included.  - depth&#x3D;1: Direct properties and children references are included.  - depth&#x3D;2: Direct properties and children properties are included.  - depth&#x3D;3: Direct properties and children properties and children\&#39;s children are included.  - depth&#x3D;... and so on
     * @type {number}
     * @memberof IPBlocksApiIpblocksPut
     */
    readonly depth?: number;
    /**
     * Users with multiple contracts must provide the contract number, for which all API requests are to be executed.
     * @type {number}
     * @memberof IPBlocksApiIpblocksPut
     */
    readonly xContractNumber?: number;
}
/**
 * IPBlocksApi - object-oriented interface
 * @export
 * @class IPBlocksApi
 * @extends {BaseAPI}
 */
export declare class IPBlocksApi extends BaseAPI {
    /**
     * Remove the specified IP block.
     * @summary Delete IP blocks
     * @param {IPBlocksApiIpblocksDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IPBlocksApi
     */
    ipblocksDelete(requestParameters: IPBlocksApiIpblocksDeleteRequest, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Retrieve the properties of the specified IP block.
     * @summary Retrieve IP blocks
     * @param {IPBlocksApiIpblocksFindByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IPBlocksApi
     */
    ipblocksFindById(requestParameters: IPBlocksApiIpblocksFindByIdRequest, options?: any): Promise<import("axios").AxiosResponse<IpBlock>>;
    /**
     * List all reserved IP blocks.
     * @summary List IP blocks
     * @param {IPBlocksApiIpblocksGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IPBlocksApi
     */
    ipblocksGet(requestParameters?: IPBlocksApiIpblocksGetRequest, options?: any): Promise<import("axios").AxiosResponse<IpBlocks>>;
    /**
     * Update the properties of the specified IP block.
     * @summary Partially modify IP blocks
     * @param {IPBlocksApiIpblocksPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IPBlocksApi
     */
    ipblocksPatch(requestParameters: IPBlocksApiIpblocksPatchRequest, options?: any): Promise<import("axios").AxiosResponse<IpBlock>>;
    /**
     * Reserves a new IP block.
     * @summary Reserve a IP Block
     * @param {IPBlocksApiIpblocksPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IPBlocksApi
     */
    ipblocksPost(requestParameters: IPBlocksApiIpblocksPostRequest, options?: any): Promise<import("axios").AxiosResponse<IpBlock>>;
    /**
     * Modifies the properties of the specified IP block.
     * @summary Modify a IP Block by ID
     * @param {IPBlocksApiIpblocksPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof IPBlocksApi
     */
    ipblocksPut(requestParameters: IPBlocksApiIpblocksPutRequest, options?: any): Promise<import("axios").AxiosResponse<IpBlock>>;
}
