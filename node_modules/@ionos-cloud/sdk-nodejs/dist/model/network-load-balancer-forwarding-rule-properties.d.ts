/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { NetworkLoadBalancerForwardingRuleHealthCheck } from './network-load-balancer-forwarding-rule-health-check';
import { NetworkLoadBalancerForwardingRuleTarget } from './network-load-balancer-forwarding-rule-target';
/**
 *
 * @export
 * @interface NetworkLoadBalancerForwardingRuleProperties
 */
export interface NetworkLoadBalancerForwardingRuleProperties {
    /**
     * Balancing algorithm
     * @type {string}
     * @memberof NetworkLoadBalancerForwardingRuleProperties
     */
    algorithm: NetworkLoadBalancerForwardingRulePropertiesAlgorithmEnum;
    /**
     *
     * @type {NetworkLoadBalancerForwardingRuleHealthCheck}
     * @memberof NetworkLoadBalancerForwardingRuleProperties
     */
    healthCheck?: NetworkLoadBalancerForwardingRuleHealthCheck;
    /**
     * Listening (inbound) IP.
     * @type {string}
     * @memberof NetworkLoadBalancerForwardingRuleProperties
     */
    listenerIp: string;
    /**
     * Listening (inbound) port number; valid range is 1 to 65535.
     * @type {number}
     * @memberof NetworkLoadBalancerForwardingRuleProperties
     */
    listenerPort: number;
    /**
     * The name of the Network Load Balancer forwarding rule.
     * @type {string}
     * @memberof NetworkLoadBalancerForwardingRuleProperties
     */
    name: string;
    /**
     * Balancing protocol
     * @type {string}
     * @memberof NetworkLoadBalancerForwardingRuleProperties
     */
    protocol: NetworkLoadBalancerForwardingRulePropertiesProtocolEnum;
    /**
     * Array of items in the collection.
     * @type {Array<NetworkLoadBalancerForwardingRuleTarget>}
     * @memberof NetworkLoadBalancerForwardingRuleProperties
     */
    targets: Array<NetworkLoadBalancerForwardingRuleTarget>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NetworkLoadBalancerForwardingRulePropertiesAlgorithmEnum {
    RoundRobin = "ROUND_ROBIN",
    LeastConnection = "LEAST_CONNECTION",
    Random = "RANDOM",
    SourceIp = "SOURCE_IP"
}
/**
    * @export
    * @enum {string}
    */
export declare enum NetworkLoadBalancerForwardingRulePropertiesProtocolEnum {
    Http = "HTTP",
    Tcp = "TCP"
}
