/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ApplicationLoadBalancerHttpRuleCondition } from './application-load-balancer-http-rule-condition';
/**
 *
 * @export
 * @interface ApplicationLoadBalancerHttpRule
 */
export interface ApplicationLoadBalancerHttpRule {
    /**
     * An array of items in the collection. The action will be executed only if each condition is met; the rule will always be applied if no conditions are set.
     * @type {Array<ApplicationLoadBalancerHttpRuleCondition>}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    conditions?: Array<ApplicationLoadBalancerHttpRuleCondition>;
    /**
     * Specifies the content type and is valid only for \'STATIC\' actions.
     * @type {string}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    contentType?: string;
    /**
     * Indicates whether the query part of the URI should be dropped and is valid only for \'REDIRECT\' actions. Default value is \'FALSE\', the redirect URI does not contain any query parameters.
     * @type {boolean}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    dropQuery?: boolean;
    /**
     * The location for the redirection; this parameter is mandatory and valid only for \'REDIRECT\' actions.
     * @type {string}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    location?: string;
    /**
     * The unique name of the Application Load Balancer HTTP rule.
     * @type {string}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    name: string;
    /**
     * The response message of the request; this parameter is mandatory for \'STATIC\' actions.
     * @type {string}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    responseMessage?: string;
    /**
     * The status code is for \'REDIRECT\' and \'STATIC\' actions only.   If the HTTP rule is \'REDIRECT\' the valid values are: 301, 302, 303, 307, 308; default value is \'301\'.  If the HTTP rule is \'STATIC\' the valid values are from the range 200-599; default value is \'503\'.
     * @type {number}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    statusCode?: number;
    /**
     * The ID of the target group; this parameter is mandatory and is valid only for \'FORWARD\' actions.
     * @type {string}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    targetGroup?: string;
    /**
     * The HTTP rule type.
     * @type {string}
     * @memberof ApplicationLoadBalancerHttpRule
     */
    type: ApplicationLoadBalancerHttpRuleTypeEnum;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ApplicationLoadBalancerHttpRuleTypeEnum {
    Forward = "FORWARD",
    Static = "STATIC",
    Redirect = "REDIRECT"
}
