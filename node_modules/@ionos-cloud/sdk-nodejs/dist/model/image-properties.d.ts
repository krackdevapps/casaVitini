/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ImageProperties
 */
export interface ImageProperties {
    /**
     * Cloud init compatibility.
     * @type {string}
     * @memberof ImageProperties
     */
    cloudInit?: ImagePropertiesCloudInitEnum;
    /**
     * Hot-plug capable CPU (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    cpuHotPlug?: boolean;
    /**
     * Hot-unplug capable CPU (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    cpuHotUnplug?: boolean;
    /**
     * Human-readable description.
     * @type {string}
     * @memberof ImageProperties
     */
    description?: string;
    /**
     * Hot-plug capable SCSI drive (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    discScsiHotPlug?: boolean;
    /**
     * Hot-unplug capable SCSI drive (no reboot required). Not supported with Windows VMs.
     * @type {boolean}
     * @memberof ImageProperties
     */
    discScsiHotUnplug?: boolean;
    /**
     * Hot-plug capable Virt-IO drive (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    discVirtioHotPlug?: boolean;
    /**
     * Hot-unplug capable Virt-IO drive (no reboot required). Not supported with Windows VMs.
     * @type {boolean}
     * @memberof ImageProperties
     */
    discVirtioHotUnplug?: boolean;
    /**
     * List of image aliases mapped for this image
     * @type {Array<string>}
     * @memberof ImageProperties
     */
    imageAliases?: Array<string>;
    /**
     * The image type.
     * @type {string}
     * @memberof ImageProperties
     */
    imageType?: ImagePropertiesImageTypeEnum;
    /**
     * The OS type of this image.
     * @type {string}
     * @memberof ImageProperties
     */
    licenceType: ImagePropertiesLicenceTypeEnum;
    /**
     * The location of this image/snapshot.
     * @type {string}
     * @memberof ImageProperties
     */
    location?: string;
    /**
     * The resource name.
     * @type {string}
     * @memberof ImageProperties
     */
    name?: string;
    /**
     * Hot-plug capable NIC (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    nicHotPlug?: boolean;
    /**
     * Hot-unplug capable NIC (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    nicHotUnplug?: boolean;
    /**
     * Indicates whether the image is part of a public repository.
     * @type {boolean}
     * @memberof ImageProperties
     */
    _public?: boolean;
    /**
     * Hot-plug capable RAM (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    ramHotPlug?: boolean;
    /**
     * Hot-unplug capable RAM (no reboot required).
     * @type {boolean}
     * @memberof ImageProperties
     */
    ramHotUnplug?: boolean;
    /**
     * The image size in GB.
     * @type {number}
     * @memberof ImageProperties
     */
    size?: number;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ImagePropertiesCloudInitEnum {
    None = "NONE",
    V1 = "V1"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ImagePropertiesImageTypeEnum {
    Hdd = "HDD",
    Cdrom = "CDROM",
    Unknown = "UNKNOWN"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ImagePropertiesLicenceTypeEnum {
    Unknown = "UNKNOWN",
    Windows = "WINDOWS",
    Windows2016 = "WINDOWS2016",
    Windows2022 = "WINDOWS2022",
    Rhel = "RHEL",
    Linux = "LINUX",
    Other = "OTHER"
}
