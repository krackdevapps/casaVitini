/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { TargetGroupHealthCheck } from './target-group-health-check';
import { TargetGroupHttpHealthCheck } from './target-group-http-health-check';
import { TargetGroupTarget } from './target-group-target';
/**
 *
 * @export
 * @interface TargetGroupProperties
 */
export interface TargetGroupProperties {
    /**
     * The balancing algorithm. A balancing algorithm consists of predefined rules with the logic that a load balancer uses to distribute network traffic between servers.  - **Round Robin**: Targets are served alternately according to their weighting.  - **Least Connection**: The target with the least active connection is served.  - **Random**: The targets are served based on a consistent pseudorandom algorithm.  - **Source IP**: It is ensured that the same client IP address reaches the same target.
     * @type {string}
     * @memberof TargetGroupProperties
     */
    algorithm: TargetGroupPropertiesAlgorithmEnum;
    /**
     *
     * @type {TargetGroupHealthCheck}
     * @memberof TargetGroupProperties
     */
    healthCheck?: TargetGroupHealthCheck;
    /**
     *
     * @type {TargetGroupHttpHealthCheck}
     * @memberof TargetGroupProperties
     */
    httpHealthCheck?: TargetGroupHttpHealthCheck;
    /**
     * The target group name.
     * @type {string}
     * @memberof TargetGroupProperties
     */
    name: string;
    /**
     * The forwarding protocol. Only the value \'HTTP\' is allowed.
     * @type {string}
     * @memberof TargetGroupProperties
     */
    protocol: TargetGroupPropertiesProtocolEnum;
    /**
     * Array of items in the collection.
     * @type {Array<TargetGroupTarget>}
     * @memberof TargetGroupProperties
     */
    targets?: Array<TargetGroupTarget>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum TargetGroupPropertiesAlgorithmEnum {
    RoundRobin = "ROUND_ROBIN",
    LeastConnection = "LEAST_CONNECTION",
    Random = "RANDOM",
    SourceIp = "SOURCE_IP"
}
/**
    * @export
    * @enum {string}
    */
export declare enum TargetGroupPropertiesProtocolEnum {
    Http = "HTTP"
}
