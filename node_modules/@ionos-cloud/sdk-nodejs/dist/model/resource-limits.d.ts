/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ResourceLimits
 */
export interface ResourceLimits {
    /**
     * The maximum number of CPU cores per contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    coresPerContract: number;
    /**
     * The maximum number of CPU cores per server.
     * @type {number}
     * @memberof ResourceLimits
     */
    coresPerServer: number;
    /**
     * The number of CPU cores provisioned.
     * @type {number}
     * @memberof ResourceLimits
     */
    coresProvisioned: number;
    /**
     * The amount of DAS disk space (in MB) in a Cube server that is currently provisioned.
     * @type {number}
     * @memberof ResourceLimits
     */
    dasVolumeProvisioned: number;
    /**
     * The maximum amount of disk space (in MB) that can be provided under this contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    hddLimitPerContract: number;
    /**
     * The maximum size (in MB) of an idividual hard disk volume.
     * @type {number}
     * @memberof ResourceLimits
     */
    hddLimitPerVolume: number;
    /**
     * The amount of hard disk space (in MB) that is currently provisioned.
     * @type {number}
     * @memberof ResourceLimits
     */
    hddVolumeProvisioned: number;
    /**
     * The maximum number of Kubernetes clusters that can be created under this contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    k8sClusterLimitTotal: number;
    /**
     * The amount of Kubernetes clusters that is currently provisioned.
     * @type {number}
     * @memberof ResourceLimits
     */
    k8sClustersProvisioned: number;
    /**
     * The NAT Gateway total limit.
     * @type {number}
     * @memberof ResourceLimits
     */
    natGatewayLimitTotal: number;
    /**
     * The NAT Gateways provisioned.
     * @type {number}
     * @memberof ResourceLimits
     */
    natGatewayProvisioned: number;
    /**
     * The NLB total limit.
     * @type {number}
     * @memberof ResourceLimits
     */
    nlbLimitTotal: number;
    /**
     * The NLBs provisioned.
     * @type {number}
     * @memberof ResourceLimits
     */
    nlbProvisioned: number;
    /**
     * The maximum amount of RAM (in MB) that can be provisioned under this contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    ramPerContract: number;
    /**
     * The maximum amount of RAM (in MB) that can be provisioned for a particular server under this contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    ramPerServer: number;
    /**
     * The amount of RAM (in MB) provisioned under this contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    ramProvisioned: number;
    /**
     * The maximum number of static public IP addresses that can be reserved by this customer across contracts.
     * @type {number}
     * @memberof ResourceLimits
     */
    reservableIps: number;
    /**
     * The number of static public IP addresses in use.
     * @type {number}
     * @memberof ResourceLimits
     */
    reservedIpsInUse: number;
    /**
     * The maximum number of static public IP addresses that can be reserved for this contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    reservedIpsOnContract: number;
    /**
     * The maximum amount of solid state disk space (in MB) that can be provisioned under this contract.
     * @type {number}
     * @memberof ResourceLimits
     */
    ssdLimitPerContract: number;
    /**
     * The maximum size (in MB) of an individual solid state disk volume.
     * @type {number}
     * @memberof ResourceLimits
     */
    ssdLimitPerVolume: number;
    /**
     * The amount of solid state disk space (in MB) that is currently provisioned.
     * @type {number}
     * @memberof ResourceLimits
     */
    ssdVolumeProvisioned: number;
}
