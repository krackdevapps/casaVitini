/**
 * CLOUD API
 * IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * The version of the OpenAPI document: 6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { IPFailover } from './ipfailover';
/**
 *
 * @export
 * @interface LanPropertiesPost
 */
export interface LanPropertiesPost {
    /**
     * IP failover configurations for lan
     * @type {Array<IPFailover>}
     * @memberof LanPropertiesPost
     */
    ipFailover?: Array<IPFailover>;
    /**
     * For a GET request, this value is either \'null\' or contains the LAN\'s /64 IPv6 CIDR block if this LAN is IPv6-enabled. For POST/PUT/PATCH requests, \'AUTO\' will result in enabling this LAN for IPv6 and automatically assign a /64 IPv6 CIDR block to this LAN. If you choose the IPv6 CIDR block on your own, then you must provide a /64 block, which is inside the IPv6 CIDR block of the virtual datacenter and unique inside all LANs from this virtual datacenter. If you enable IPv6 on a LAN with NICs, those NICs will get a /80 IPv6 CIDR block and one IPv6 address assigned to each automatically, unless you specify them explicitly on the NICs. A virtual data center is limited to a maximum of 256 IPv6-enabled LANs.
     * @type {string}
     * @memberof LanPropertiesPost
     */
    ipv6CidrBlock?: string | null;
    /**
     * The name of the  resource.
     * @type {string}
     * @memberof LanPropertiesPost
     */
    name?: string;
    /**
     * The unique identifier of the private Cross-Connect the LAN is connected to, if any.
     * @type {string}
     * @memberof LanPropertiesPost
     */
    pcc?: string;
    /**
     * This LAN faces the public Internet.
     * @type {boolean}
     * @memberof LanPropertiesPost
     */
    _public?: boolean;
}
